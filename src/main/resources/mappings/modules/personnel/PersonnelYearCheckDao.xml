<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.personnel.dao.PersonnelYearCheckDao">
    
	<sql id="personnelYearCheckColumns">
		a.id AS "id",
		a.id_number AS "idNumber",
		a.year AS "year",
		a.conclusion AS "conclusion",
		a.date AS "date",
		a.unit AS "unit",
		a.unit_code AS "unitCode",
		a.should_num AS "shouldNum",
		a.real_num AS "realNum",
		a.yx_vote_num AS "yxVoteNum",
		a.cz_vote_num AS "czVoteNum",
		a.jbcz_vote_num AS "jbczVoteNum",
		a.bcz_vote_num AS "bczVoteNum",
		a.qq_vote_num AS "qqVoteNum",
		a.member AS "member",
		a.remark AS "remark",
		a.create_by AS "createBy.id",
		a.create_org_id AS "createOrgId",
		a.create_id_no AS "createIdNo",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_org_id AS "updateOrgId",
		a.update_id_no AS "updateIdNo",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.unit_id AS "unitId",
		a.person_name  AS "personName"
	</sql>
	
	<sql id="personnelYearCheckJoins">
		LEFT JOIN sys_office o ON o.id = a.create_org_id
		LEFT JOIN sys_user u ON u.id = a.create_by
	</sql>
    
	<select id="get" resultType="com.thinkgem.jeesite.modules.personnel.entity.PersonnelYearCheck">
		SELECT 
			<include refid="personnelYearCheckColumns"/>
		FROM personnel_year_check a
		<include refid="personnelYearCheckJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="com.thinkgem.jeesite.modules.personnel.entity.PersonnelYearCheck">
		SELECT 
			<include refid="personnelYearCheckColumns"/>
		FROM personnel_year_check a
		<include refid="personnelYearCheckJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="year != null and year != ''">
				AND a.year LIKE '%'||#{year}||'%'
			</if>
			<if test="conclusion != null and conclusion != ''">
				AND a.conclusion LIKE '%'||#{conclusion}||'%'
			</if>
			<choose>
				<when test="startDate != null and startDate != '' and endDate != null and endDate != ''">
					AND a.date between #{startDate} and #{endDate}
				</when>
				<when test="startDate != null and startDate != ''">
					AND a.date >= #{startDate}
				</when>
				<when test="endDate != null and endDate != ''">
					AND  #{endDate} >= a.date
				</when>
				<otherwise>
				</otherwise>
			</choose>
			<if test="idNumber != null and idNumber != ''">
				AND a.id_number = #{idNumber}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.year asc
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="com.thinkgem.jeesite.modules.personnel.entity.PersonnelYearCheck">
		SELECT 
			<include refid="personnelYearCheckColumns"/>
		FROM personnel_year_check a
		<include refid="personnelYearCheckJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO personnel_year_check(
			id,
			id_number,
			year,
			conclusion,
			date,
			unit,
			unit_code,
			should_num,
			real_num,
			yx_vote_num,
			cz_vote_num,
			jbcz_vote_num,
			bcz_vote_num,
			qq_vote_num,
			member,
			remark,
			create_by,
			create_org_id,
			create_id_no,
			create_date,
			update_by,
			update_org_id,
			update_id_no,
			update_date,
			del_flag,
			unit_id,
			person_name
		) VALUES (
			#{id},
			#{idNumber},
			#{year},
			#{conclusion},
			#{date},
			#{unit},
			#{unitCode},
			#{shouldNum},
			#{realNum},
			#{yxVoteNum},
			#{czVoteNum},
			#{jbczVoteNum},
			#{bczVoteNum},
			#{qqVoteNum},
			#{member},
			#{remark},
			#{createBy.id},
			#{createBy.office.id},
			#{createIdNo},
			#{createDate},
			#{updateBy.id},
			#{updateBy.office.id},
			#{updateIdNo},
			#{updateDate},
			#{delFlag},
			#{unitId},
			#{personName}
		)
	</insert>
	
	<update id="update">
		UPDATE personnel_year_check SET 	
			id_number = #{idNumber},
			year = #{year},
			conclusion = #{conclusion},
			date = #{date},
			unit = #{unit},
			unit_code = #{unitCode},
			should_num = #{shouldNum},
			real_num = #{realNum},
			yx_vote_num = #{yxVoteNum},
			cz_vote_num = #{czVoteNum},
			jbcz_vote_num = #{jbczVoteNum},
			bcz_vote_num = #{bczVoteNum},
			qq_vote_num = #{qqVoteNum},
			member = #{member},
			remark = #{remark},
			update_by = #{updateBy.id},
			update_org_id = #{updateBy.office.id},
			update_id_no = #{updateIdNo},
			update_date = #{updateDate},
			unit_id = #{unitId},
			person_name = #{personName}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE personnel_year_check SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	<update id="deleteByIds">
		UPDATE personnel_year_check SET
		del_flag = '1'
		WHERE id in <foreach collection="ids" item="item" index="index"
							 open="(" separator="," close=")">#{item}</foreach>
	</update>

	<update id="deleteByIdNumbers">
	    UPDATE personnel_year_check SET
		del_flag = '1'
		WHERE id_number in <foreach collection="idNumbers" item="item" index="index"
							 open="(" separator="," close=")">#{item}</foreach>

    </update>
</mapper>