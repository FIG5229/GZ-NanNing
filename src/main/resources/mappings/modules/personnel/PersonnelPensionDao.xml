<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.personnel.dao.PersonnelPensionDao">
    
	<sql id="personnelPensionColumns">
		a.id AS "id",
		a.id_number AS "idNumber",
		a.type AS "type",
		a.date AS "date",
		a.money AS "money",
		a.identification AS "identification",
		a.unit_name AS "unitName",
		a.unit_code AS "unitCode",
		a.certificate_no AS "certificateNo",
		a.reason AS "reason",
		a.remark AS "remark",
		a.relative_name AS "relativeName",
		a.relative_sex AS "relativeSex",
		a.relationship AS "relationship",
		a.address AS "address",
		a.relative_contact AS "relativeContact",
		a.create_by AS "createBy.id",
		a.create_org_id AS "createOrgId",
		a.create_id_no AS "createIdNo",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_org_id AS "updateOrgId",
		a.update_id_no AS "updateIdNo",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.personnel_name AS "personnelName"
	</sql>
	
	<sql id="personnelPensionJoins">
		LEFT JOIN sys_office o ON o.id = a.create_org_id
		LEFT JOIN sys_user u ON u.id = a.create_by
	</sql>
    
	<select id="get" resultType="com.thinkgem.jeesite.modules.personnel.entity.PersonnelPension">
		SELECT 
			<include refid="personnelPensionColumns"/>
		FROM personnel_pension a
		<include refid="personnelPensionJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="com.thinkgem.jeesite.modules.personnel.entity.PersonnelPension">
		SELECT 
			<include refid="personnelPensionColumns"/>
		FROM personnel_pension a
		<include refid="personnelPensionJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="type != null and type != ''">
				AND a.type = #{type}
			</if>
			<choose>
				<when test="startDate != null and startDate != '' and endDate != null and endDate != ''">
					AND a.date between #{startDate} and #{endDate}
				</when>
				<when test="startDate != null and startDate != ''">
					AND a.date >= #{startDate}
				</when>
				<when test="endDate != null and endDate != ''">
					AND  #{endDate} >= a.date
				</when>
				<otherwise>
				</otherwise>
			</choose>
			<if test="idNumber != null and idNumber != ''">
				AND a.id_number = #{idNumber}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.date asc
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="com.thinkgem.jeesite.modules.personnel.entity.PersonnelPension">
		SELECT 
			<include refid="personnelPensionColumns"/>
		FROM personnel_pension a
		<include refid="personnelPensionJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO personnel_pension(
			id,
			id_number,
			type,
			date,
			money,
			identification,
			unit_name,
			unit_code,
			certificate_no,
			reason,
			remark,
			relative_name,
			relative_sex,
			relationship,
			address,
			relative_contact,
			create_by,
			create_org_id,
			create_id_no,
			create_date,
			update_by,
			update_org_id,
			update_id_no,
			update_date,
			del_flag,
			personnel_name
		) VALUES (
			#{id},
			#{idNumber},
			#{type},
			#{date},
			#{money},
			#{identification},
			#{unitName},
			#{unitCode},
			#{certificateNo},
			#{reason},
			#{remark},
			#{relativeName},
			#{relativeSex},
			#{relationship},
			#{address},
			#{relativeContact},
			#{createBy.id},
			#{createBy.office.id},
			#{createIdNo},
			#{createDate},
			#{updateBy.id},
			#{updateBy.office.id},
			#{updateIdNo},
			#{updateDate},
			#{delFlag},
			#{personnelName}
		)
	</insert>
	
	<update id="update">
		UPDATE personnel_pension SET 	
			id_number = #{idNumber},
			type = #{type},
			date = #{date},
			money = #{money},
			identification = #{identification},
			unit_name = #{unitName},
			unit_code = #{unitCode},
			certificate_no = #{certificateNo},
			reason = #{reason},
			remark = #{remark},
			relative_name = #{relativeName},
			relative_sex = #{relativeSex},
			relationship = #{relationship},
			address = #{address},
			relative_contact = #{relativeContact},
			update_by = #{updateBy.id},
			update_org_id = #{updateBy.office.id},
			update_id_no = #{updateIdNo},
			update_date = #{updateDate},
			personnel_name = #{personnelName}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE personnel_pension SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	<update id="deleteByIds">
		UPDATE personnel_pension SET
		del_flag = '1'
		WHERE id in <foreach collection="ids" item="item" index="index"
							 open="(" separator="," close=")">#{item}</foreach>
	</update>

	<update id="deleteByIdNumbers">
		UPDATE personnel_pension SET
		del_flag = '1'
		WHERE id_number in <foreach collection="idNumbers" item="idNumber" index="index"
									open="(" separator="," close=")">#{idNumber}</foreach>
	</update>

</mapper>