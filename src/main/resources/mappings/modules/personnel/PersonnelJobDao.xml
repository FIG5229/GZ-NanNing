<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.personnel.dao.PersonnelJobDao">
    
	<sql id="personnelJobColumns">
		a.id AS "id",
		a.id_number AS "idNumber",
		a.job_level AS "jobLevel",
		a.status AS "status",
		a.start_date AS "startDate",
		a.is_high AS "isHigh",
		a.reason AS "reason",
		a.file_no AS "fileNo",
		a.approval_org_name AS "approvalOrgName",
		a.approval_org_code AS "approvalOrgCode",
		a.approval_date AS "approvalDate",
		a.end_date AS "endDate",
		a.remark AS "remark",
		a.enjoy_job AS "enjoyJob",
		a.enjoy_date AS "enjoyDate",
		a.create_by AS "createBy.id",
		a.create_org_id AS "createOrgId",
		a.create_id_no AS "createIdNo",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_org_id AS "updateOrgId",
		a.update_id_no AS "updateIdNo",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.approval_org_name_id AS "approvalOrgNameId",
		a.person_name AS "personName"
	</sql>
	
	<sql id="personnelJobJoins">
		LEFT JOIN sys_office o ON o.id = a.create_org_id
		LEFT JOIN sys_user u ON u.id = a.create_by
	</sql>
    
	<select id="get" resultType="com.thinkgem.jeesite.modules.personnel.entity.PersonnelJob">
		SELECT 
			<include refid="personnelJobColumns"/>
		FROM personnel_job a
		<include refid="personnelJobJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="com.thinkgem.jeesite.modules.personnel.entity.PersonnelJob">
		SELECT 
			<include refid="personnelJobColumns"/>
		FROM personnel_job a
		<include refid="personnelJobJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="idNumber != null and idNumber != ''">
				AND a.id_number = #{idNumber}
			</if>
			<if test="jobLevel != null and jobLevel != ''">
				AND a.job_level = #{jobLevel}
			</if>
			<if test="approvalOrgName != null and approvalOrgName != ''">
				AND a.approval_org_name LIKE '%'||#{approvalOrgName}||'%'
			</if>
			<choose>
				<when test="beginDate != null and beginDate != '' and finishDate != null and finishDate != ''">
					AND a.approval_date between #{beginDate} and #{finishDate}
				</when>
				<when test="beginDate != null and beginDate != ''">
					AND a.approval_date >= #{beginDate}
				</when>
				<when test="finishDate != null and finishDate != ''">
					AND  #{finishDate} >= a.approval_date
				</when>
				<otherwise>
				</otherwise>
			</choose>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.start_date asc
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="com.thinkgem.jeesite.modules.personnel.entity.PersonnelJob">
		SELECT 
			<include refid="personnelJobColumns"/>
		FROM personnel_job a
		<include refid="personnelJobJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<insert id="insert">
		INSERT INTO personnel_job(
			id,
			id_number,
			job_level,
			status,
			start_date,
			is_high,
			reason,
			file_no,
			approval_org_name,
			approval_org_code,
			approval_date,
			end_date,
			remark,
			enjoy_job,
			enjoy_date,
			create_by,
			create_org_id,
			create_id_no,
			create_date,
			update_by,
			update_org_id,
			update_id_no,
			update_date,
			del_flag,
			approval_org_name_id,
			person_name
		) VALUES (
			#{id},
			#{idNumber},
			#{jobLevel},
			#{status},
			#{startDate},
			#{isHigh},
			#{reason},
			#{fileNo},
			#{approvalOrgName},
			#{approvalOrgCode},
			#{approvalDate},
			#{endDate},
			#{remark},
			#{enjoyJob},
			#{enjoyDate},
			#{createBy.id},
			#{createBy.office.id},
			#{createIdNo},
			#{createDate},
			#{updateBy.id},
			#{updateBy.office.id},
			#{updateIdNo},
			#{updateDate},
			#{delFlag},
			#{approvalOrgNameId},
			#{personName}
		)
	</insert>
	
	<update id="update">
		UPDATE personnel_job SET 	
			id_number = #{idNumber},
			job_level = #{jobLevel},
			status = #{status},
			start_date = #{startDate},
			is_high = #{isHigh},
			reason = #{reason},
			file_no = #{fileNo},
			approval_org_name = #{approvalOrgName},
			approval_org_code = #{approvalOrgCode},
			approval_date = #{approvalDate},
			end_date = #{endDate},
			remark = #{remark},
			enjoy_job = #{enjoyJob},
			enjoy_date = #{enjoyDate},
			update_by = #{updateBy.id},
			update_org_id = #{updateBy.office.id},
			update_id_no = #{updateIdNo},
			update_date = #{updateDate},
			approval_org_name_id = #{approvalOrgNameId},
			person_name = #{personName}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE personnel_job SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>

	<update id="deleteByIds">
		UPDATE personnel_job SET
		del_flag = '1'
		WHERE id in <foreach collection="ids" item="item" index="index"
							 open="(" separator="," close=")">#{item}</foreach>
	</update>
	<select id="findNewJobByIdNumber" resultType="com.thinkgem.jeesite.modules.personnel.entity.PersonnelJob">
		SELECT
		<include refid="personnelJobColumns"/>
		FROM personnel_job a
		where del_flag = '0'
		and a.id_number = #{idNumber}
		and a.status = '1'
		order by a.start_date desc,a.update_date desc
		limit 1
	</select>

	<select id="getNewestJobList" resultType="java.util.Map">
		select a.name AS "name",
		a.id_number AS "idNumber",
		a.police_id_number AS "policeIdNumber",
		a.workunit_id AS "workunitId",
		a.workunit_name AS "workunitName",
		a.unit_code AS "unitCode",
		b.job_level AS "jobLevel",
		b.start_date AS "startDate",
		o.parent_ids AS "parentIds"
		from personnel_base a
		LEFT JOIN personnel_job b ON a.id_number = b.id_number
		LEFT JOIN sys_office o ON o.id = a.workunit_id
		where a.del_flag = '0'
		and b.del_flag = '0'
		and a.status in ('1','19','2','3','4','5','6')--'10',  调出
		and b.status = '1'
	</select>

	<select id="countPersonnelJob" resultType="map">
		select sd.label ,count(sd.label) from personnel_job a
		left join sys_dict sd on a.job_level = sd."value"
		left join personnel_base u on a.id_number = u."id_number"
		left join sys_office o on u."workunit_id" = o."id"
		where a.del_flag = '0' and a.approval_date = (
			select max(approval_date) from personnel_job where a.id_number = id_number
		)

		AND u.status in ('1','19','2','3','4','5','6')
		<if test="id != null and id != ''">
			and ( o.parent_ids like '%${id}%' or o.id = #{id})
		</if>
		<!--<choose>
			<when test="month != null and month !=''">
				AND TO_CHAR(a.create_date, 'yyyy-mm') = #{month}
			</when>
			<when test="year != null and year !=''">
				AND extract(year from a.create_date) = #{year}
			</when>
			<when test="startDate != null and startDate != null">
				AND a.create_date between  #{startDate,jdbcType=DATE} and #{endDate,jdbcType=DATE}
			</when>
			<when test="endDate != null">
				AND a.create_date >= #{startDate,jdbcType=DATE}
			</when>
			<when test="endDate != null">
				AND  #{endDate,jdbcType=DATE} >= a.create_date
			</when>
			<otherwise>
			</otherwise>
		</choose>-->
		and sd."type" = 'personnel_zwcc'
		GROUP BY sd.label
	</select>

	<select id="findChartsPersonnelJobList" resultType="com.thinkgem.jeesite.modules.personnel.entity.PersonnelJob">
		select a.id AS "id",
		a.id_number AS "idNumber",
		a.job_level AS "jobLevel",
		a.status AS "status",
		a.start_date AS "startDate",
		a.is_high AS "isHigh",
		a.reason AS "reason",
		a.file_no AS "fileNo",
		a.approval_org_name AS "approvalOrgName",
		a.approval_org_code AS "approvalOrgCode",
		a.approval_date AS "approvalDate",
		a.end_date AS "endDate",
		a.remark AS "remark",
		a.enjoy_job AS "enjoyJob",
		a.enjoy_date AS "enjoyDate",
		a.create_by AS "createBy.id",
		a.create_org_id AS "createOrgId",
		a.create_id_no AS "createIdNo",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_org_id AS "updateOrgId",
		a.update_id_no AS "updateIdNo",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.approval_org_name_id AS "approvalOrgNameId",
		u.name AS "personName"
		from personnel_job a
		left join sys_dict sd on a.job_level = sd."value"
		left join personnel_base u on a.id_number = u."id_number"
		left join sys_office o on u."workunit_id" = o."id"
		where a.del_flag = '0' and a.approval_date = (
		select max(approval_date) from personnel_job where a.id_number = id_number
		)
		AND u.status in ('1','19','2','3','4','5','6')
		<if test="unitId != null and unitId != ''">
			and ( o.parent_ids like '%${unitId}%' or o.id = #{unitId})
		</if>
		<if test="label != null and label != ''">
			and sd.label = #{label}
		</if>
	</select>

	<update id="deleteByIdNumbers">
	    UPDATE personnel_job SET
		del_flag = '1'
		WHERE id_number in <foreach collection="idNumbers" item="item" index="index"
							 open="(" separator="," close=")">#{item}</foreach>
    </update>

</mapper>