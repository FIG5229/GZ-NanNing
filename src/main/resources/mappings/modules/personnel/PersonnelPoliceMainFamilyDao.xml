<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.personnel.dao.PersonnelPoliceMainFamilyDao">
    
	<sql id="personnelPoliceMainFamilyColumns">
		a.id AS "id",
		a.name AS "name",
		a.unit AS "unit",
		a.unit_id AS "unitId",
		a.id_number AS "idNumber",
		a.police_num AS "policeNum",
		a.marital_status AS "maritalStatus",
		a.brother AS "brother",
		a.child AS "child",
		a.child_marital_status AS "childMaritalStatus",
		a.create_by AS "createBy.id",
		a.create_org_id AS "createOrgId",
		a.create_id_no AS "createIdNo",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_org_id AS "updateOrgId",
		a.update_id_no AS "updateIdNo",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.status AS "status",
		a.has_married AS "hasMarried",
		a.has_brother AS "hasBrother",
		a.has_child AS "hasChild",
		a.has_child_in_low AS "hasChildInLow",
		a.ju_chu_check_man AS "juChuCheckMan",
		a.unit_check_man AS "unitCheckMan",
		a.submit_man AS "submitMan",
		a.check_type AS checkType,
		a.ju_chu_check_id AS "juChuCheckId",
		a.unit_check_id AS "unitCheckId",
		a.submit_id AS "submitId",
		a.opinion AS "opinion"
	</sql>
	
	<sql id="personnelPoliceMainFamilyJoins">
		LEFT JOIN affair_labor_office o ON o.id = a.create_org_id
		LEFT JOIN sys_user u ON u.id = a.create_by
	</sql>
    
	<select id="get" resultType="PersonnelPoliceMainFamily">
		SELECT 
			<include refid="personnelPoliceMainFamilyColumns"/>
		FROM personnel_police_main_family a
		<include refid="personnelPoliceMainFamilyJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="PersonnelPoliceMainFamily">
		SELECT 
			<include refid="personnelPoliceMainFamilyColumns"/>
		FROM personnel_police_main_family a
		<include refid="personnelPoliceMainFamilyJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="name != null and name != ''">
				AND a.name LIKE 
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{name},'%')</if>
					<if test="dbName == 'postgre'">'%'||#{name}||'%'</if>
			</if>
			<!--根据officeID-->
			<choose>
				<when test="officeId != null">
					AND (
					(a.create_by = #{userId,jdbcType=VARCHAR} or a.submit_id = #{userId,jdbcType=VARCHAR} or o.ID = #{officeId} OR o.parent_ids LIKE'%,'||#{officeId}||',%' OR u.ID = #{officeId})
					OR
					((a.check_type = '2' or a.check_type = '3') and (a.ju_chu_check_id = #{userId,jdbcType=VARCHAR} or a.unit_check_id = #{userId,jdbcType=VARCHAR} or o.ID = #{officeId} OR o.parent_ids LIKE'%,'||#{officeId}||',%' OR u.ID = #{officeId}))
					OR
					((a.check_type = '4' or a.check_type = '6') and (a.ju_chu_check_id = #{userId,jdbcType=VARCHAR} or a.unit_check_id = #{userId,jdbcType=VARCHAR} or o.ID = #{officeId} OR o.parent_ids LIKE'%,'||#{officeId}||',%' OR u.ID = #{officeId}))
					)
				</when>
				<otherwise>
					AND (a.create_by = #{userId,jdbcType=VARCHAR} or a.submit_id = #{userId,jdbcType=VARCHAR} or a.id_number = #{idNumber,jdbcType = VARCHAR})
				</otherwise>
			</choose>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="PersonnelPoliceMainFamily">
		SELECT 
			<include refid="personnelPoliceMainFamilyColumns"/>
		FROM personnel_police_main_family a
		<include refid="personnelPoliceMainFamilyJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO personnel_police_main_family(
			id,
			name,
			unit,
			unit_id,
			id_number,
			police_num,
			marital_status,
			brother,
			child,
			child_marital_status,
			create_by,
			create_org_id,
			create_id_no,
			create_date,
			update_by,
			update_org_id,
			update_id_no,
			update_date,
			del_flag,
			status,
			has_married,
			has_brother,
			has_child,
			has_child_in_low,
			ju_chu_check_man,
			unit_check_man,
			submit_man,
			check_type,
			ju_chu_check_id,
			unit_check_id,
			submit_id,
			opinion
		) VALUES (
			#{id},
			#{name},
			#{unit},
			#{unitId},
			#{idNumber},
			#{policeNum},
			#{maritalStatus},
			#{brother},
			#{child},
			#{childMaritalStatus},
			#{createBy.id},
			#{createBy.office.id},
			#{createIdNo},
			#{createDate},
			#{updateBy.id},
			#{updateBy.office.id},
			#{updateIdNo},
			#{updateDate},
			#{delFlag},
			#{status},
			#{hasMarried},
			#{hasBrother},
			#{hasChild},
			#{hasChildInLow},
			#{juChuCheckMan},
			#{unitCheckMan},
			#{submitMan},
			#{checkType},
			#{juChuCheckId},
			#{unitCheckId},
			#{submitId},
			#{opinion}
		)
	</insert>
	
	<update id="update">
		UPDATE personnel_police_main_family SET 	
			name = #{name},
			unit = #{unit},
			unit_id = #{unitId},
			id_number = #{idNumber},
			police_num = #{policeNum},
			marital_status = #{maritalStatus},
			brother = #{brother},
			child = #{child},
			child_marital_status = #{childMaritalStatus},
			status = #{status},
			update_by = #{updateBy.id},
			update_org_id = #{updateBy.office.id},
			update_id_no = #{updateIdNo},
			update_date = #{updateDate},
			has_married = #{hasMarried},
			has_brother = #{hasBrother},
			has_child = #{hasChild},
			has_child_in_low = #{hasChildInLow},
			ju_chu_check_man = #{juChuCheckMan},
			unit_check_man = #{unitCheckMan},
			submit_man = #{submitMan},
			check_type = #{checkType},
			ju_chu_check_id = #{juChuCheckId},
			unit_check_id = #{unitCheckId},
			submit_id = #{submitId},
			opinion = #{opinion}
		WHERE id = #{id}
	</update>

	<update id="saveInfo">
		UPDATE personnel_police_main_family SET
			name = #{name},
			unit = #{unit},
			unit_id = #{unitId},
			id_number = #{idNumber},
			police_num = #{policeNum},
			marital_status = #{maritalStatus},
			brother = #{brother},
			child = #{child},
			child_marital_status = #{childMaritalStatus},
			status = #{status},
			update_by = #{updateBy.id},
			update_org_id = #{updateBy.office.id},
			update_id_no = #{updateIdNo},
			update_date = #{updateDate},
			has_married = #{hasMarried},
			has_brother = #{hasBrother},
			has_child = #{hasChild},
			has_child_in_low = #{hasChildInLow}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE personnel_police_main_family SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>

	<update id="deleteByIds">
		UPDATE personnel_police_main_family SET
		del_flag = '1'
		WHERE id in <foreach collection="ids" item="item" index="index"
							 open="(" separator="," close=")">#{item}</foreach>
	</update>

	<select id="findUserIsNull" resultType="String">
		select id_number from personnel_base where id_number = #{id} AND del_flag = '0'
	</select>

	<select id="findByIds" resultType="com.thinkgem.jeesite.modules.personnel.entity.PersonnelPoliceMainFamily">
		select <include refid="personnelPoliceMainFamilyColumns"/>
		from personnel_police_main_family a where id in <foreach collection="ids" item="item" index="index"
																open="(" separator="," close=")">#{item}</foreach>

	</select>

	<select id="findCheckType" resultType="String">
		select check_type from personnel_police_main_family where id = #{id}
	</select>

	<select id="getSonTable" resultType="com.thinkgem.jeesite.modules.personnel.entity.PersonnelPoliceFamilyInfo">
		select * from personnel_police_family_info where pf_id = #{id} AND del_flag = '0'
	</select>

	<select id="findIsPersonel" resultType="com.thinkgem.jeesite.modules.personnel.entity.PersonnelFamily">
		SELECT
			*
		FROM
			personnel_family
		WHERE
			id_number = #{idNumber}
			AND del_flag = '0'
	</select>

	<update id="revocation">
		UPDATE personnel_police_main_family SET
			check_type = #{checkType}
		WHERE id = #{id}
	</update>



</mapper>