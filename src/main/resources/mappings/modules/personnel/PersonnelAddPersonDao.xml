<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.personnel.dao.PersonnelAddPersonDao">
    
	<sql id="personnelAddPersonColumns">
		a.id AS "id",
		a.id_number AS "idNumber",
		a.start_date AS "startDate",
		a.add_type AS "addType",
		a.reason AS "reason",
		a.unit_area_type AS "unitAreaType",
		a.revise_grade AS "reviseGrade",
		a.revise_date AS "reviseDate",
		a.start_salary_date AS "startSalaryDate",
		a.unit_name AS "unitName",
		a.unit_code AS "unitCode",
		a.unit_name_type AS "unitNameType",
		a.unit_area AS "unitArea",
		a.unit_relationship AS "unitRelationship",
		a.unit_level AS "unitLevel",
		a.unit_character_type AS "unitCharacterType",
		a.unit_industry AS "unitIndustry",
		a.area_type AS "areaType",
		a.identity AS "identity",
		a.old_job AS "oldJob",
		a.old_level AS "oldLevel",
		a.create_by AS "createBy.id",
		a.create_org_id AS "createOrgId",
		a.create_id_no AS "createIdNo",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_org_id AS "updateOrgId",
		a.update_id_no AS "updateIdNo",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.personnel_name AS "personnelName"
	</sql>
	
	<sql id="personnelAddPersonJoins">
		LEFT JOIN sys_office o ON o.id = a.create_org_id
		LEFT JOIN sys_user u ON u.id = a.create_by
	</sql>
    
	<select id="get" resultType="com.thinkgem.jeesite.modules.personnel.entity.PersonnelAddPerson">
		SELECT 
			<include refid="personnelAddPersonColumns"/>
		FROM personnel_add_person a
		<include refid="personnelAddPersonJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="com.thinkgem.jeesite.modules.personnel.entity.PersonnelAddPerson">
		SELECT 
			<include refid="personnelAddPersonColumns"/>
		FROM personnel_add_person a
		<include refid="personnelAddPersonJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<choose>
				<when test="beginDate != null and beginDate != '' and finishDate != null and finishDate != ''">
					AND a.start_date between #{beginDate} and #{finishDate}
				</when>
				<when test="beginDate != null and beginDate != ''">
					AND a.start_date >= #{beginDate}
				</when>
				<when test="finishDate != null and finishDate != ''">
					AND  #{finishDate} >= a.start_date
				</when>
				<otherwise>
				</otherwise>
			</choose>
			<if test="unitName != null and unitName != ''">
				AND a.unit_name LIKE '%'||#{unitName}||'%'
			</if>
			<if test="identity != null and identity != ''">
				AND a.identity = #{identity}
			</if>
			<if test="idNumber != null and idNumber != ''">
				AND a.id_number = #{idNumber}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.start_date asc
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="com.thinkgem.jeesite.modules.personnel.entity.PersonnelAddPerson">
		SELECT 
			<include refid="personnelAddPersonColumns"/>
		FROM personnel_add_person a
		<include refid="personnelAddPersonJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO personnel_add_person(
			id,
			id_number,
			start_date,
			add_type,
			reason,
			unit_area_type,
			revise_grade,
			revise_date,
			start_salary_date,
			unit_name,
			unit_code,
			unit_name_type,
			unit_area,
			unit_relationship,
			unit_level,
			unit_character_type,
			unit_industry,
			area_type,
			identity,
			old_job,
			old_level,
			create_by,
			create_org_id,
			create_id_no,
			create_date,
			update_by,
			update_org_id,
			update_id_no,
			update_date,
			del_flag,
			personnel_name
		) VALUES (
			#{id},
			#{idNumber},
			#{startDate},
			#{addType},
			#{reason},
			#{unitAreaType},
			#{reviseGrade},
			#{reviseDate},
			#{startSalaryDate},
			#{unitName},
			#{unitCode},
			#{unitNameType},
			#{unitArea},
			#{unitRelationship},
			#{unitLevel},
			#{unitCharacterType},
			#{unitIndustry},
			#{areaType},
			#{identity},
			#{oldJob},
			#{oldLevel},
			#{createBy.id},
			#{createBy.office.id},
			#{createIdNo},
			#{createDate},
			#{updateBy.id},
			#{updateBy.office.id},
			#{updateIdNo},
			#{updateDate},
			#{delFlag},
			#{personnelName}
		)
	</insert>
	
	<update id="update">
		UPDATE personnel_add_person SET 	
			id_number = #{idNumber},
			start_date = #{startDate},
			add_type = #{addType},
			reason = #{reason},
			unit_area_type = #{unitAreaType},
			revise_grade = #{reviseGrade},
			revise_date = #{reviseDate},
			start_salary_date = #{startSalaryDate},
			unit_name = #{unitName},
			unit_code = #{unitCode},
			unit_name_type = #{unitNameType},
			unit_area = #{unitArea},
			unit_relationship = #{unitRelationship},
			unit_level = #{unitLevel},
			unit_character_type = #{unitCharacterType},
			unit_industry = #{unitIndustry},
			area_type = #{areaType},
			identity = #{identity},
			old_job = #{oldJob},
			old_level = #{oldLevel},
			update_by = #{updateBy.id},
			update_org_id = #{updateBy.office.id},
			update_id_no = #{updateIdNo},
			update_date = #{updateDate},
			personnel_name = #{personnelName}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE personnel_add_person SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>

	<update id="deleteByIds">
		UPDATE personnel_add_person SET
		del_flag = '1'
		WHERE id in <foreach collection="ids" item="item" index="index"
							 open="(" separator="," close=")">#{item}</foreach>
	</update>

	<update id="deleteByIdNumbers">
	    UPDATE personnel_add_person SET
		del_flag = '1'
		WHERE id_number in <foreach collection="idNumbers" item="item" index="index"
							 open="(" separator="," close=")">#{item}</foreach>
    </update>
</mapper>