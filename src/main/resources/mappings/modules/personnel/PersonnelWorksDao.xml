<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.personnel.dao.PersonnelWorksDao">
    
	<sql id="personnelWorksColumns">
		a.id AS "id",
		a.id_number AS "idNumber",
		a.name AS "name",
		a.field AS "field",
		a.complete_date AS "completeDate",
		a.publish_date AS "publishDate",
		a.work_publish_office AS "workPublishOffice",
		a.publish_office_level AS "publishOfficeLevel",
		a.publish_office_type AS "publishOfficeType",
		a.author_identity AS "authorIdentity",
		a.author_sort AS "authorSort",
		a.pub_date AS "pubDate",
		a.newspaper_name AS "newspaperName",
		a.periodical_no AS "periodicalNo",
		a.secret_grade AS "secretGrade",
		a.material AS "material",
		a.index AS "index",
		a.language AS "language",
		a.author_name AS "authorName",
		a.create_by AS "createBy.id",
		a.create_org_id AS "createOrgId",
		a.create_id_no AS "createIdNo",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_org_id AS "updateOrgId",
		a.update_id_no AS "updateIdNo",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.personnel_name AS "personnelName"
	</sql>
	
	<sql id="personnelWorksJoins">
		LEFT JOIN sys_office o ON o.id = a.create_org_id
		LEFT JOIN sys_user u ON u.id = a.create_by
	</sql>
    
	<select id="get" resultType="com.thinkgem.jeesite.modules.personnel.entity.PersonnelWorks">
		SELECT 
			<include refid="personnelWorksColumns"/>
		FROM personnel_works a
		<include refid="personnelWorksJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="com.thinkgem.jeesite.modules.personnel.entity.PersonnelWorks">
		SELECT 
			<include refid="personnelWorksColumns"/>
		FROM personnel_works a
		<include refid="personnelWorksJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="name != null and name != ''">
				AND a.name LIKE '%'||#{name}||'%'
			</if>
			<choose>
				<when test="startDate != null and startDate != '' and endDate != null and endDate != ''">
					AND a.pub_date between #{startDate} and #{endDate}
				</when>
				<when test="startDate != null and startDate != ''">
					AND a.pub_date >= #{startDate}
				</when>
				<when test="endDate != null and endDate != ''">
					AND  #{endDate} >= a.pub_date
				</when>
				<otherwise>
				</otherwise>
			</choose>
			<if test="authorName != null and authorName != ''">
				AND a.author_name LIKE '%'||#{authorName}||'%'
			</if>
			<if test="idNumber != null and idNumber != ''">
				AND a.id_number = #{idNumber}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.complete_date asc
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="com.thinkgem.jeesite.modules.personnel.entity.PersonnelWorks">
		SELECT 
			<include refid="personnelWorksColumns"/>
		FROM personnel_works a
		<include refid="personnelWorksJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO personnel_works(
			id,
			id_number,
			name,
			field,
			complete_date,
			publish_date,
			work_publish_office,
			publish_office_level,
			publish_office_type,
			author_identity,
			author_sort,
			pub_date,
			newspaper_name,
			periodical_no,
			secret_grade,
			material,
			index,
			language,
			author_name,
			create_by,
			create_org_id,
			create_id_no,
			create_date,
			update_by,
			update_org_id,
			update_id_no,
			update_date,
			del_flag,
			personnel_name
		) VALUES (
			#{id},
			#{idNumber},
			#{name},
			#{field},
			#{completeDate},
			#{publishDate},
			#{workPublishOffice},
			#{publishOfficeLevel},
			#{publishOfficeType},
			#{authorIdentity},
			#{authorSort},
			#{pubDate},
			#{newspaperName},
			#{periodicalNo},
			#{secretGrade},
			#{material},
			#{index},
			#{language},
			#{authorName},
			#{createBy.id},
			#{createBy.office.id},
			#{createIdNo},
			#{createDate},
			#{updateBy.id},
			#{updateBy.office.id},
			#{updateIdNo},
			#{updateDate},
			#{delFlag},
			#{personnelName}
		)
	</insert>
	
	<update id="update">
		UPDATE personnel_works SET 	
			id_number = #{idNumber},
			name = #{name},
			field = #{field},
			complete_date = #{completeDate},
			publish_date = #{publishDate},
			work_publish_office = #{workPublishOffice},
			publish_office_level = #{publishOfficeLevel},
			publish_office_type = #{publishOfficeType},
			author_identity = #{authorIdentity},
			author_sort = #{authorSort},
			pub_date = #{pubDate},
			newspaper_name = #{newspaperName},
			periodical_no = #{periodicalNo},
			secret_grade = #{secretGrade},
			material = #{material},
			index = #{index},
			language = #{language},
			author_name = #{authorName},
			update_by = #{updateBy.id},
			update_org_id = #{updateBy.office.id},
			update_id_no = #{updateIdNo},
			update_date = #{updateDate},
			personnel_name = #{personnelName}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE personnel_works SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	<update id="deleteByIds">
		UPDATE personnel_works SET
		del_flag = '1'
		WHERE id in <foreach collection="ids" item="item" index="index"
							 open="(" separator="," close=")">#{item}</foreach>
	</update>

	<update id="deleteByIdNumbers">
		UPDATE personnel_works SET
		del_flag = '1'
		WHERE id_number in <foreach collection="idNumbers" item="idNumber" index="index"
									open="(" separator="," close=")">#{idNumber}</foreach>
	</update>
</mapper>