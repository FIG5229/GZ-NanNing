<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.personnel.dao.PersonnelExpertDao">
    
	<sql id="personnelExpertColumns">
		a.id AS "id",
		a.id_number AS "idNumber",
		a.level AS "level",
		a.series AS "series",
		a.job AS "job",
		a.year AS "year",
		a.unit AS "unit",
		a.name AS "name",
		a.create_by AS "createBy.id",
		a.create_org_id AS "createOrgId",
		a.create_id_no AS "createIdNo",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_org_id AS "updateOrgId",
		a.update_id_no AS "updateIdNo",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.unit_id AS "unitId",
		a.personnel_name AS "personnelName"
	</sql>
	
	<sql id="personnelExpertJoins">
		LEFT JOIN sys_office o ON o.id = a.create_org_id
		LEFT JOIN sys_user u ON u.id = a.create_by
	</sql>
    
	<select id="get" resultType="com.thinkgem.jeesite.modules.personnel.entity.PersonnelExpert">
		SELECT 
			<include refid="personnelExpertColumns"/>
		FROM personnel_expert a
		<include refid="personnelExpertJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="com.thinkgem.jeesite.modules.personnel.entity.PersonnelExpert">
		SELECT 
			<include refid="personnelExpertColumns"/>
		FROM personnel_expert a
		<include refid="personnelExpertJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="level != null and level != ''">
				AND a.level LIKE '%'||#{level}||'%'
			</if>
			<if test="year != null and year != ''">
				AND a.year = #{year}
			</if>
			<if test="name != null and name != ''">
				AND a.name LIKE '%'||#{name}||'%'
			</if>
			<if test="idNumber != null and idNumber != ''">
				AND a.id_number = #{idNumber}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.year ASC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="com.thinkgem.jeesite.modules.personnel.entity.PersonnelExpert">
		SELECT 
			<include refid="personnelExpertColumns"/>
		FROM personnel_expert a
		<include refid="personnelExpertJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO personnel_expert(
			id,
			id_number,
			level,
			series,
			job,
			year,
			unit,
			name,
			create_by,
			create_org_id,
			create_id_no,
			create_date,
			update_by,
			update_org_id,
			update_id_no,
			update_date,
			del_flag,
			unit_id,
			personnel_name
		) VALUES (
			#{id},
			#{idNumber},
			#{level},
			#{series},
			#{job},
			#{year},
			#{unit},
			#{name},
			#{createBy.id},
			#{createBy.office.id},
			#{createIdNo},
			#{createDate},
			#{updateBy.id},
			#{updateBy.office.id},
			#{updateIdNo},
			#{updateDate},
			#{delFlag},
			#{unitId},
			#{personnelName}
		)
	</insert>
	
	<update id="update">
		UPDATE personnel_expert SET 	
			id_number = #{idNumber},
			level = #{level},
			series = #{series},
			job = #{job},
			year = #{year},
			unit = #{unit},
			name = #{name},
			update_by = #{updateBy.id},
			update_org_id = #{updateBy.office.id},
			update_id_no = #{updateIdNo},
			update_date = #{updateDate},
			unit_id = #{unitId},
			personnel_name  = #{personnelName}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE personnel_expert SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	<update id="deleteByIds">
		UPDATE personnel_expert SET
		del_flag = '1'
		WHERE id in <foreach collection="ids" item="item" index="index"
							 open="(" separator="," close=")">#{item}</foreach>
	</update>
	<update id="deleteByIdNumbers">
		UPDATE personnel_expert SET
		del_flag = '1'
		WHERE id_number in <foreach collection="idNumbers" item="item" index="index"
									open="(" separator="," close=")">#{item}</foreach>
	</update>
</mapper>