<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.personnel.dao.PersonnelPoliceFamilyDao">
    
	<sql id="personnelPoliceFamilyColumns">
		a.id AS "id",
		a.id_number AS "idNumber",
		a.name AS "name",
		a.relationship AS "relationship",
		a.sex AS "sex",
		a.birthday AS "birthday",
		a.politics_face AS "politicsFace",
		a.status AS "status",
		a.unit_name_job AS "unitNameJob",
		a.unit_area AS "unitArea",
		a.nationality AS "nationality",
		a.nation AS "nation",
		a.education AS "education",
		a.identity AS "identity",
		a.identity_job AS "identityJob",
		a.job_level AS "jobLevel",
		a.contact_method AS "contactMethod",
		a.address AS "address",
		a.remark AS "remark",
		a.create_by AS "createBy.id",
		a.create_org_id AS "createOrgId",
		a.create_id_no AS "createIdNo",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_org_id AS "updateOrgId",
		a.update_id_no AS "updateIdNo",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.police_name AS "policeName"
	</sql>
	
	<sql id="personnelPoliceFamilyJoins">
		LEFT JOIN sys_office o ON o.id = a.create_org_id
		LEFT JOIN sys_user u ON u.id = a.create_by
	</sql>
    
	<select id="get" resultType="PersonnelPoliceFamily">
		SELECT 
			<include refid="personnelPoliceFamilyColumns"/>
		FROM personnel_police_family a
		<include refid="personnelPoliceFamilyJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="PersonnelPoliceFamily">
		SELECT 
			<include refid="personnelPoliceFamilyColumns"/>
		FROM personnel_police_family a
		<include refid="personnelPoliceFamilyJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="name != null and name != ''">
				AND a.name LIKE 
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{name},'%')</if>
					<if test="dbName == 'postgre'">'%'||#{name}||'%'</if>
			</if>
			<if test="sex != null and sex != ''">
				AND a.sex = #{sex}
			</if>
			<choose>
				<when test="startDate != null and startDate != '' and endDate != null and endDate != ''">
					AND a.birthday between #{startDate} and #{endDate}
				</when>
				<when test="startDate != null and startDate != ''">
					AND a.birthday >= #{startDate}
				</when>
				<when test="endDate != null and endDate != ''">
					AND  #{endDate} >= a.birthday
				</when>
				<otherwise>
				</otherwise>
			</choose>
			<if test="politicsFace != null and politicsFace != ''">
				AND a.politics_face = #{politicsFace}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="PersonnelPoliceFamily">
		SELECT 
			<include refid="personnelPoliceFamilyColumns"/>
		FROM personnel_police_family a
		<include refid="personnelPoliceFamilyJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO personnel_police_family(
			id,
			id_number,
			name,
			relationship,
			sex,
			birthday,
			politics_face,
			status,
			unit_name_job,
			unit_area,
			nationality,
			nation,
			education,
			identity,
			identity_job,
			job_level,
			contact_method,
			address,
			remark,
			create_by,
			create_org_id,
			create_id_no,
			create_date,
			update_by,
			update_org_id,
			update_id_no,
			update_date,
			del_flag,
			police_name
		) VALUES (
			#{id},
			#{idNumber},
			#{name},
			#{relationship},
			#{sex},
			#{birthday},
			#{politicsFace},
			#{status},
			#{unitNameJob},
			#{unitArea},
			#{nationality},
			#{nation},
			#{education},
			#{identity},
			#{identityJob},
			#{jobLevel},
			#{contactMethod},
			#{address},
			#{remark},
			#{createBy.id},
			#{createBy.office.id},
			#{createIdNo},
			#{createDate},
			#{updateBy.id},
			#{updateBy.office.id},
			#{updateIdNo},
			#{updateDate},
			#{delFlag},
			#{policeName}
		)
	</insert>
	
	<update id="update">
		UPDATE personnel_police_family SET 	
			id_number = #{idNumber},
			name = #{name},
			relationship = #{relationship},
			sex = #{sex},
			birthday = #{birthday},
			politics_face = #{politicsFace},
			status = #{status},
			unit_name_job = #{unitNameJob},
			unit_area = #{unitArea},
			nationality = #{nationality},
			nation = #{nation},
			education = #{education},
			identity = #{identity},
			identity_job = #{identityJob},
			job_level = #{jobLevel},
			contact_method = #{contactMethod},
			address = #{address},
			remark = #{remark},
			update_by = #{updateBy.id},
			update_org_id = #{updateBy.office.id},
			update_id_no = #{updateIdNo},
			update_date = #{updateDate},
			police_name = #{policeName}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE personnel_police_family SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>

	<update id="deleteByIds">
		UPDATE personnel_police_family SET
		del_flag = '1'
		WHERE id in <foreach collection="ids" item="item" index="index"
							 open="(" separator="," close=")">#{item}</foreach>
	</update>

	<select id="findUserMessage" resultType="PersonnelPoliceFamily">
		select pb.* from sys_user u,personnel_base pb where u.login_name = #{loginName} and u.name = pb.name and u.del_flag = '0'
	</select>

</mapper>