<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.personnel.dao.PersonnelAcademicDegreeDao">
    
	<sql id="personnelAcademicDegreeColumns">
		a.id AS "id",
		a.id_number AS "idNumber",
		a.name AS "name",
		a.date AS "date",
		a.unit AS "unit",
		a.country AS "country",
		a.explain AS "explain",
		a.sequence_no AS "sequenceNo",
		a.certificate_no AS "certificateNo",
		a.status AS "status",
		a.code AS "code",
		a.create_by AS "createBy.id",
		a.create_org_id AS "createOrgId",
		a.create_id_no AS "createIdNo",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_org_id AS "updateOrgId",
		a.update_id_no AS "updateIdNo",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.level AS "level",
		a.type AS "type",
		a.person_name AS "personName"
	</sql>
	
	<sql id="personnelAcademicDegreeJoins">
		LEFT JOIN sys_office o ON o.id = a.create_org_id
		LEFT JOIN sys_user u ON u.id = a.create_by
	</sql>
    
	<select id="get" resultType="com.thinkgem.jeesite.modules.personnel.entity.PersonnelAcademicDegree">
		SELECT 
			<include refid="personnelAcademicDegreeColumns"/>
		FROM personnel_academic_degree a
		<include refid="personnelAcademicDegreeJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="com.thinkgem.jeesite.modules.personnel.entity.PersonnelAcademicDegree">
		SELECT 
			<include refid="personnelAcademicDegreeColumns"/>
		FROM personnel_academic_degree a
		<include refid="personnelAcademicDegreeJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="name != null and name != ''">
				AND a.name LIKE '%'||#{name}||'%'
			</if>
			<choose>
				<when test="startDate != null and startDate != '' and endDate != null and endDate != ''">
					AND a.date between #{startDate} and #{endDate}
				</when>
				<when test="startDate != null and startDate != ''">
					AND a.date >= #{startDate}
				</when>
				<when test="endDate != null and endDate != ''">
					AND  #{endDate} >= a.date
				</when>
				<otherwise>
				</otherwise>
			</choose>
			<if test="country != null and country != ''">
				AND a.country = #{country}
			</if>
			<if test="idNumber != null and idNumber != ''">
				AND a.id_number = #{idNumber}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.date asc
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="com.thinkgem.jeesite.modules.personnel.entity.PersonnelAcademicDegree">
		SELECT 
			<include refid="personnelAcademicDegreeColumns"/>
		FROM personnel_academic_degree a
		<include refid="personnelAcademicDegreeJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO personnel_academic_degree(
			id,
			id_number,
			name,
			date,
			unit,
			country,
			explain,
			sequence_no,
			certificate_no,
			status,
			code,
			create_by,
			create_org_id,
			create_id_no,
			create_date,
			update_by,
			update_org_id,
			update_id_no,
			update_date,
			del_flag,
			level,
			type,
			person_name
		) VALUES (
			#{id},
			#{idNumber},
			#{name},
			#{date},
			#{unit},
			#{country},
			#{explain},
			#{sequenceNo},
			#{certificateNo},
			#{status},
			#{code},
			#{createBy.id},
			#{createBy.office.id},
			#{createIdNo},
			#{createDate},
			#{updateBy.id},
			#{updateBy.office.id},
			#{updateIdNo},
			#{updateDate},
			#{delFlag},
			#{level},
			#{type},
			#{personName}
		)
	</insert>
	
	<update id="update">
		UPDATE personnel_academic_degree SET 	
			id_number = #{idNumber},
			name = #{name},
			date = #{date},
			unit = #{unit},
			country = #{country},
			explain = #{explain},
			sequence_no = #{sequenceNo},
			certificate_no = #{certificateNo},
			status = #{status},
			code = #{code},
			create_org_id = #{createOrgId},
			create_id_no = #{createIdNo},
			update_by = #{updateBy.id},
			update_org_id = #{updateBy.office.id},
			update_id_no = #{updateIdNo},
			update_date = #{updateDate},
			level = #{level},
			type = #{type},
			person_name = #{personName}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE personnel_academic_degree SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>

	<update id="deleteByIds">
		UPDATE personnel_academic_degree SET
		del_flag = '1'
		WHERE id in <foreach collection="ids" item="item" index="index"
							 open="(" separator="," close=")">#{item}</foreach>
	</update>

	<update id="deleteByIdNumbers">
	    UPDATE personnel_academic_degree SET
		del_flag = '1'
		WHERE id_number in <foreach collection="idNumbers" item="item" index="index"
							 open="(" separator="," close=")">#{item}</foreach>
	</update>
</mapper>