<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.personnel.dao.PersonnelSalaryDao">
    
	<sql id="personnelSalaryColumns">
		a.id AS "id",
		a.id_number AS "idNumber",
		a.job_salary AS "jobSalary",
		a.level_salary AS "levelSalary",
		a.bonus AS "bonus",
		a.change_date AS "changeDate",
		a.allowance1 AS "allowance1",
		a.allowance2 AS "allowance2",
		a.allowance3 AS "allowance3",
		a.allowance4 AS "allowance4",
		a.allowance5 AS "allowance5",
		a.allowance6 AS "allowance6",
		a.allowance7 AS "allowance7",
		a.allowance8 AS "allowance8",
		a.create_by AS "createBy.id",
		a.create_org_id AS "createOrgId",
		a.create_id_no AS "createIdNo",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_org_id AS "updateOrgId",
		a.update_id_no AS "updateIdNo",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.name AS "name"
	</sql>
	
	<sql id="personnelSalaryJoins">
		LEFT JOIN sys_office o ON o.id = a.create_org_id
		LEFT JOIN sys_user u ON u.id = a.create_by
	</sql>
    
	<select id="get" resultType="com.thinkgem.jeesite.modules.personnel.entity.PersonnelSalary">
		SELECT 
			<include refid="personnelSalaryColumns"/>
		FROM personnel_salary a
		<include refid="personnelSalaryJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="com.thinkgem.jeesite.modules.personnel.entity.PersonnelSalary">
		SELECT 
			<include refid="personnelSalaryColumns"/>
		FROM personnel_salary a
		<include refid="personnelSalaryJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<choose>
				<when test="startDate != null and startDate != '' and endDate != null and endDate != ''">
					AND a.change_date between #{startDate} and #{endDate}
				</when>
				<when test="startDate != null and startDate != ''">
					AND a.change_date >= #{startDate}
				</when>
				<when test="endDate != null and endDate != ''">
					AND  #{endDate} >= a.change_date
				</when>
				<otherwise>
				</otherwise>
			</choose>
			<if test="name != null and name != ''">
				AND a.name LIKE '%'||#{name}||'%'
			</if>
			<if test="idNumber != null and idNumber != ''">
				AND a.id_number = #{idNumber}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.change_date ASC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="com.thinkgem.jeesite.modules.personnel.entity.PersonnelSalary">
		SELECT 
			<include refid="personnelSalaryColumns"/>
		FROM personnel_salary a
		<include refid="personnelSalaryJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO personnel_salary(
			id,
			id_number,
			job_salary,
			level_salary,
			bonus,
			change_date,
			allowance1,
			allowance2,
			allowance3,
			allowance4,
			allowance5,
			allowance6,
			allowance7,
			allowance8,
			create_by,
			create_org_id,
			create_id_no,
			create_date,
			update_by,
			update_org_id,
			update_id_no,
			update_date,
			del_flag,
			name
		) VALUES (
			#{id},
			#{idNumber},
			#{jobSalary},
			#{levelSalary},
			#{bonus},
			#{changeDate},
			#{allowance1},
			#{allowance2},
			#{allowance3},
			#{allowance4},
			#{allowance5},
			#{allowance6},
			#{allowance7},
			#{allowance8},
			#{createBy.id},
			#{createBy.office.id},
			#{createIdNo},
			#{createDate},
			#{updateBy.id},
			#{updateBy.office.id},
			#{updateIdNo},
			#{updateDate},
			#{delFlag},
			#{name}
		)
	</insert>
	
	<update id="update">
		UPDATE personnel_salary SET 	
			id_number = #{idNumber},
			job_salary = #{jobSalary},
			level_salary = #{levelSalary},
			bonus = #{bonus},
			change_date = #{changeDate},
			allowance1 = #{allowance1},
			allowance2 = #{allowance2},
			allowance3 = #{allowance3},
			allowance4 = #{allowance4},
			allowance5 = #{allowance5},
			allowance6 = #{allowance6},
			allowance7 = #{allowance7},
			allowance8 = #{allowance8},
			update_by = #{updateBy.id},
			update_org_id = #{updateBy.office.id},
			update_id_no = #{updateIdNo},
			update_date = #{updateDate},
			name = #{name}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE personnel_salary SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>

	<update id="deleteByIds">
		UPDATE personnel_salary SET
		del_flag = '1'
		WHERE id in <foreach collection="ids" item="item" index="index"
							 open="(" separator="," close=")">#{item}</foreach>
	</update>

	<update id="deleteByIdNumbers">
		UPDATE personnel_salary SET
		del_flag = '1'
		WHERE id_number in <foreach collection="idNumbers" item="item" index="index"
									open="(" separator="," close=")">#{item}</foreach>
	</update>

</mapper>