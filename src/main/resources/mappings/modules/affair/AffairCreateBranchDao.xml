<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.affair.dao.AffairCreateBranchDao">
    
	<sql id="affairCreateBranchColumns">
		a.id AS "id",
		a.name AS "name",
		a.start_time AS "startTime",
		a.end_time AS "endTime",
		a.party_branch AS "partyBranch",
		a.party_branch_id AS "partyBranchId",
		a.hold_unit AS "holdUnit",
		a.hold_unit_id AS "holdUnitId",
		a.is_named AS "isNamed",
		a.place AS "place",
		a.join_person AS "joinPerson",
		a.scheme AS "scheme",
		a.brief_report AS "briefReport",
		a.material_path AS "materialPath",
		a.create_by AS "createBy.id",
		a.create_org_id AS "createOrgId",
		a.create_id_no AS "createIdNo",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_org_id AS "updateOrgId",
		a.update_id_no AS "updateIdNo",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.examine_status AS "examineStatus",
		a.opinion AS "opinion",
		a.join_person_id AS "joinPersonId"
	</sql>
	
	<sql id="affairCreateBranchJoins">
		LEFT JOIN sys_office o ON o.id = a.create_org_id
		LEFT JOIN sys_user u ON u.id = a.create_by
	</sql>
    
	<select id="get" resultType="AffairCreateBranch">
		SELECT 
			<include refid="affairCreateBranchColumns"/>
		FROM affair_create_branch a
		<include refid="affairCreateBranchJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="AffairCreateBranch">
		SELECT 
			<include refid="affairCreateBranchColumns"/>
		FROM affair_create_branch a
		<include refid="affairCreateBranchJoins"/>
		LEFT JOIN affair_general_situation s
		ON s.id = a.party_branch_id
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="name != null and name != ''">
				AND a.name LIKE concat('%',#{name},'%')
			</if>
			<choose>
				<when test="startTime != null and startTime != '' and endTime != null and endTime != ''">
					AND ( #{startTime} between a.start_time  and a.end_time OR #{endTime} between  a.start_time  and a.end_time )
				</when>
				<when test="startTime != null and startTime != ''">
					AND #{startTime} between a.start_time and a.end_time
				</when>
				<when test="endTime != null and endTime != ''">
					AND #{endTime} between a.start_time and a.end_time
				</when>
				<otherwise>
				</otherwise>
			</choose>
			<if test="partyBranchId != null and partyBranchId != ''">
				AND a.party_branch_id = #{partyBranchId}
			</if>
			<if test="holdUnitId != null and holdUnitId != ''">
				AND a.hold_unit_id = #{holdUnitId}
			</if>
			<if test="examineStatus != null and examineStatus != ''">
				and a.examine_status = #{examineStatus}
			</if>
			<if test="joinPerson != null and joinPerson != ''">
				AND a.join_person LIKE concat('%',#{joinPerson},'%')
			</if>
			<if test="treeId != null and treeId != ''">
				AND (a.party_branch_id = #{treeId} OR s.parent_ids LIKE CONCAT('%,', #{treeId}, ',%'))
			</if>
			<!-- 数据范围过滤 -->
			${sqlMap.dsf}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="AffairCreateBranch">
		SELECT 
			<include refid="affairCreateBranchColumns"/>
		FROM affair_create_branch a
		<include refid="affairCreateBranchJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO affair_create_branch(
			id,
			name,
			start_time,
			end_time,
			party_branch,
			party_branch_id,
			hold_unit,
			hold_unit_id,
			is_named,
			place,
			join_person,
			scheme,
			brief_report,
			material_path,
			create_by,
			create_org_id,
			create_id_no,
			create_date,
			update_by,
			update_org_id,
			update_id_no,
			update_date,
			del_flag,
			examine_status ,
			opinion,
			join_person_id
		) VALUES (
			#{id},
			#{name},
			#{startTime},
			#{endTime},
			#{partyBranch},
			#{partyBranchId},
			#{holdUnit},
			#{holdUnitId},
			#{isNamed},
			#{place},
			#{joinPerson},
			#{scheme},
			#{briefReport},
			#{materialPath},
			#{createBy.id},
			#{createBy.office.id},
			#{createIdNo},
			#{createDate},
			#{updateBy.id},
			#{updateBy.office.id},
			#{updateIdNo},
			#{updateDate},
			#{delFlag},
			#{examineStatus},
			#{opinion},
			#{joinPersonId}
		)
	</insert>
	
	<update id="update">
		UPDATE affair_create_branch SET 	
			name = #{name},
			start_time = #{startTime},
			end_time = #{endTime},
			party_branch = #{partyBranch},
			party_branch_id = #{partyBranchId},
			hold_unit = #{holdUnit},
			hold_unit_id = #{holdUnitId},
			is_named = #{isNamed},
			place = #{place},
			join_person = #{joinPerson},
			scheme = #{scheme},
			brief_report = #{briefReport},
			material_path = #{materialPath},
			update_by = #{updateBy.id},
			update_org_id = #{updateBy.office.id},
			update_id_no = #{updateIdNo},
			update_date = #{updateDate},
			examine_status = #{examineStatus},
			opinion = #{opinion},
			join_person_id = #{joinPersonId}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE affair_create_branch SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>

	<update id="deleteByIds">
		UPDATE affair_create_branch SET
		del_flag = '1'
		WHERE id in <foreach collection="ids" item="item" index="index"
			 open="(" separator="," close=")">#{item}</foreach>
	</update>
</mapper>