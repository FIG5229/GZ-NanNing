<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.affair.dao.AffairAssessDao">
    
	<sql id="affairAssessColumns">
		a.id AS "id",
		a.shuji AS "shuji",
		a.shuji_id_no AS "shujiIdNo",
		a.party_organization AS "partyOrganization",
		a.party_organization_id AS "partyOrganizationId",
		a.date AS "date",
		a.person_num AS "personNum",
		a.grade AS "grade",
		a.year AS "year",
		a.file_path AS "filePath",
		a.create_by AS "createBy.id",
		a.create_org_id AS "createOrgId",
		a.create_id_no AS "createIdNo",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_org_id AS "updateOrgId",
		a.update_id_no AS "updateIdNo",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.status AS "status",
		a.opinion AS "opinion"
	</sql>
	
	<sql id="affairAssessJoins">
		LEFT JOIN sys_office o ON o.id = a.create_org_id
		LEFT JOIN sys_user u ON u.id = a.create_by
	</sql>
    
	<select id="get" resultType="AffairAssess">
		SELECT 
			<include refid="affairAssessColumns"/>
		FROM affair_assess a
		<include refid="affairAssessJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="AffairAssess">
		SELECT 
			<include refid="affairAssessColumns"/>
		FROM affair_assess a
		<include refid="affairAssessJoins"/>
		LEFT JOIN affair_general_situation s
		ON s.id = a.party_organization_id
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="shuji != null and shuji != ''">
				AND a.shuji LIKE concat('%',#{shuji},'%')
			</if>
			<if test="partyOrganizationId != null and partyOrganizationId != ''">
				AND a.party_organization_id = #{partyOrganizationId}
			</if>
			<if test="grade != null and grade != ''">
				AND a.grade = #{grade}
			</if>
			<if test="year != null and year != ''">
				AND a.year = #{year}
			</if>
			<if test="treeId != null and treeId != ''">
				<!--AND (a.party_organization_id = #{treeId} OR s.parent_ids LIKE CONCAT('%,', #{treeId}, ',%'))-->
				AND a.party_organization_id = #{treeId}
			</if>
			<!-- 数据范围过滤 -->
			<!-- 8.21注释掉不确定会不会影响其他功能 -->
			${sqlMap.dsf}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="AffairAssess">
		SELECT 
			<include refid="affairAssessColumns"/>
		FROM affair_assess a
		<include refid="affairAssessJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

    <insert id="insert">
		INSERT INTO affair_assess(
			id,
			shuji,
			shuji_id_no,
			party_organization,
			party_organization_id,
			date,
			person_num,
			grade,
			year,
			file_path,
			create_by,
			create_org_id,
			create_id_no,
			create_date,
			update_by,
			update_org_id,
			update_id_no,
			update_date,
			del_flag,
			status,
			opinion
		) VALUES (
			#{id},
			#{shuji},
			#{shujiIdNo},
			#{partyOrganization},
			#{partyOrganizationId},
			#{date},
			#{personNum},
			#{grade},
			#{year},
			#{filePath},
			#{createBy.id},
			#{createBy.office.id},
			#{createIdNo},
			#{createDate},
			#{updateBy.id},
			#{updateBy.office.id},
			#{updateIdNo},
			#{updateDate},
			#{delFlag},
			'1',
			#{opinion}
		)
	</insert>
	
	<update id="update">
		UPDATE affair_assess SET 	
			shuji = #{shuji},
			shuji_id_no = #{shujiIdNo},
			party_organization = #{partyOrganization},
			party_organization_id = #{partyOrganizationId},
			date = #{date},
			person_num = #{personNum},
			grade = #{grade},
			year = #{year},
			file_path = #{filePath},
			update_by = #{updateBy.id},
			update_org_id = #{updateBy.office.id},
			update_id_no = #{updateIdNo},
			update_date = #{updateDate},
			status = #{status},
			opinion = #{opinion}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE affair_assess SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>

	<update id="deleteByIds">
		UPDATE affair_assess SET
		del_flag = '1'
		WHERE id in <foreach collection="ids" item="item" index="index"
			 open="(" separator="," close=")">#{item}</foreach>
	</update>

<!--去掉组织树 不再使用这种方式
<select id="findFinishSumByPId" resultType="java.lang.Integer">
		SELECT count(DISTINCT a.party_organization_id )
		FROM
		affair_assess a
		WHERE a.del_flag = '0'
		<if test="id != null and id != ''">
			AND a.party_organization_id = #{id}
		</if>
		<choose>
			<when test="month != null and month !=''">
				AND TO_CHAR(a.date, 'yyyy-mm') = #{month}
			</when>
			<when test="year != null and year !=''">
				AND extract(year from a.date) = #{year}
			</when>
			<when test="startDate != null and endDate != null">
				AND a.date between  #{startDate,jdbcType=DATE} and #{endDate,jdbcType=DATE}
			</when>
			<when test="startDate != null">
				AND a.date >= #{startDate,jdbcType=DATE}
			</when>
			<when test="endDate != null">
				AND  #{endDate,jdbcType=DATE} >= a.date
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>-->
	<select id="findFinishSumByPId" resultType="map">
		SELECT COUNT( 1 ) AS num,
			(
			 SELECT COUNT ( 1 ) AS "sum"
			 FROM affair_general_situation
			 WHERE del_flag = '0' AND parent_ids &lt;&gt; '1,' )
		FROM
		affair_assess A
		LEFT JOIN affair_general_situation b ON A.party_organization_id = b.ID
		WHERE
		a.del_flag = '0'
		<choose>
			<when test="month != null and month !=''">
				AND TO_CHAR(a.date, 'yyyy-mm') = #{month}
			</when>
			<when test="year != null and year !=''">
				AND extract(year from a.date) = #{year}
			</when>
			<when test="startDate != null and endDate != null">
				AND a.date between  #{startDate,jdbcType=DATE} and #{endDate,jdbcType=DATE}
			</when>
			<when test="startDate != null">
				AND a.date >= #{startDate,jdbcType=DATE}
			</when>
			<when test="endDate != null">
				AND  #{endDate,jdbcType=DATE} >= a.date
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>

	<select id="findFinishSumByPIds" resultType="java.lang.Integer">
		SELECT count(DISTINCT a.party_organization_id )
		FROM
		affair_assess a
		WHERE a.del_flag = '0'
		<if test="ids != null and ids != ''">
			AND a.party_organization_id in <foreach collection="ids" item="item" index="index"
				open="(" separator="," close=")">#{item}</foreach>
		</if>
		<choose>
			<when test="month != null and month !=''">
				AND TO_CHAR(a.date, 'yyyy-mm') = #{month}
			</when>
			<when test="year != null and year !=''">
				AND extract(year from a.date) = #{year}
			</when>
			<when test="startDate != null and endDate != null">
				AND a.date between  #{startDate,jdbcType=DATE} and #{endDate,jdbcType=DATE}
			</when>
			<when test="startDate != null">
				AND a.date >= #{startDate,jdbcType=DATE}
			</when>
			<when test="endDate != null">
				AND  #{endDate,jdbcType=DATE} >= a.date
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>

	<select id="findPieInfoByPBId" resultType="map">
		SELECT
		d.label AS label,
		count( a.party_organization_id ) as num
		FROM
		affair_assess a LEFT JOIN sys_dict d on a.grade = d.value
		WHERE
		a.del_flag = '0' and d.type = 'affair_assess_grade' and d.del_flag = '0'
		<if test="id != null and id != ''">
			AND a.party_organization_id = #{id}
		</if>
		<choose>
			<when test="year != null and year !=''">
				AND extract(year from a.date) = #{year}
			</when>
			<when test="startDate != null and endDate != null">
				AND a.date between  #{startDate,jdbcType=DATE} and #{endDate,jdbcType=DATE}
			</when>
			<when test="startDate != null">
				AND a.date >= #{startDate,jdbcType=DATE}
			</when>
			<when test="endDate != null">
				AND  #{endDate,jdbcType=DATE} >= a.date
			</when>
			<otherwise>
			</otherwise>
		</choose>
		GROUP BY
		d.label
	</select>

	<select id="findPieInfoByPBIds" resultType="map">
		SELECT
		d.label AS label,
		count( a.party_organization_id ) as num
		FROM
		affair_assess a LEFT JOIN sys_dict d on a.grade = d.value
		WHERE
		a.del_flag = '0' and d.type = 'affair_assess_grade' and d.del_flag = '0'
		<if test="ids != null and ids != ''">
			AND a.party_organization_id in <foreach collection="ids" item="item" index="index"
				open="(" separator="," close=")">#{item}</foreach>
		</if>
		<choose>
			<when test="year != null and year !=''">
				AND extract(year from a.date) = #{year}
			</when>
			<when test="startDate != null and endDate != null">
				AND a.date between  #{startDate,jdbcType=DATE} and #{endDate,jdbcType=DATE}
			</when>
			<when test="startDate != null">
				AND a.date >= #{startDate,jdbcType=DATE}
			</when>
			<when test="endDate != null">
				AND  #{endDate,jdbcType=DATE} >= a.date
			</when>
			<otherwise>
			</otherwise>
		</choose>
		GROUP BY
		d.label
	</select>

	<select id="findAssessLevelList" resultType="AffairAssess">
		select <include refid="affairAssessColumns"/>
		from affair_assess a
		left join sys_dict sd on a."grade"=sd."value"
		where a.del_flag = '0' and
		sd."type" = 'affair_assess_grade'
		and sd.label = #{label}
		<choose>
			<when test="month != null and month !=''">
				AND TO_CHAR(a.date, 'yyyy-mm') = #{month}
			</when>
			<when test="years != null and years !=''">
				AND extract(year from a.date) = #{years}
			</when>
			<when test="beginDate != null and endDate != null">
				AND a.date between  #{startDate,jdbcType=DATE} and #{endDate,jdbcType=DATE}
			</when>
			<when test="beginDate != null">
				AND a.date >= #{startDate,jdbcType=DATE}
			</when>
			<when test="endDate != null">
				AND  #{endDate,jdbcType=DATE} >= a.date
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>

	<update id="shenHeSave">
		UPDATE affair_assess SET
			status = #{affairAssess.status},
			opinion = #{affairAssess.opinion},
			update_date = #{affairAssess.updateDate},
			grade = #{affairAssess.grade}
		WHERE id = #{affairAssess.id}
	</update>

	<!--绩效自动考评-->
	<select id="findAllPartyOrg" resultType="AffairGeneralSituation">
		select
		a.id AS "id",
		a.party_organization AS "partyOrganization",
		a.parent_id AS "parentId",
		a.parent_ids AS "parentIds",
		a.of_party_organization AS "ofPartyOrganization",
		a.of_party_org_id AS "ofPartyOrgId",
		a.found_date AS "foundDate",
		a.unit AS "unit",
		a.unit_id AS "unitId",
		a.type1 AS "type1",
		a.shuji AS "shuji",
		a.contactor AS "contactor",
		a.contactor_id_number AS "contactorIdNumber",
		a.shuji_id_number AS "shujiIdNumber",
		a.telephone AS "telephone",
		a.type2 AS "type2",
		a.num AS "num",
		a.introduction AS "introduction",
		a.is_szwh AS "isSzwh",
		a.hj_date AS "hjDate",
		a.zz_situation AS "zzSituation",
		a.zg_num AS "zgNum",
		a.area AS "area",
		a.is_gtly AS "isGtly",
		a.create_by AS "createBy.id",
		a.create_org_id AS "createOrgId",
		a.create_id_no AS "createIdNo",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_org_id AS "updateOrgId",
		a.update_id_no AS "updateIdNo",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.full_name AS "fullName"
		FROM affair_general_situation a
		WHERE a.del_flag = '0'
	</select>
	<select id="findCount" resultType="java.lang.Integer">
		select
		count(1)
		from affair_assess a
		where a.del_flag = '0'
		<if test="startYear != null and startYear != '' and endYear != '' and endYear != null">
			AND to_char ( a.date, 'yyyy-mm-dd' ) BETWEEN #{startYear} AND #{endYear}
		</if>
		<!--AND a.year = #{year}-->
		AND a.party_organization = #{partyOrganization}
		AND a.party_organization_id = #{partyOrganizationId}
	</select>
	<select id="findPeopleInfo" resultType="java.util.HashMap">
		select
		a.name,
		a.card_num
		from
		affair_party_member a
		where a.del_flag = '0'
		AND a.party_branch = #{org}
		AND a.party_branch_id = #{orgId}
	</select>
	<select id="peopleJob" resultType="java.lang.String">
		select
		a.job_abbreviation
		from personnel_base a
		where a.del_flag = '0'
		AND a.name = #{name}
		AND a.id_number = #{idNumber}
	</select>

</mapper>