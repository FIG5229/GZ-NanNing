<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.affair.dao.PersonnelGoAbroadDao">
    
	<sql id="personnelGoAbroadColumns">
		a.id AS "id",
		a.id_number AS "idNumber",
		a.name AS "name",
		a.unit_job AS "unitJob",
		a.identity AS "identity",
		a.character AS "character",
		a.reason AS "reason",
		a.handin_date AS "handinDate",
		a.receive_date AS "receiveDate",
		a.go_abroad_date AS "goAbroadDate",
		a.return_date AS "returnDate",
		a.to_place AS "toPlace",
		a.group_name AS "groupName",
		a.approval_unit_name AS "approvalUnitName",
		a.approval_unit_code AS "approvalUnitCode",
		a.approval_file_no AS "approvalFileNo",
		a.assign_unit AS "assignUnit",
		a.assign_unit_code AS "assignUnitCode",
		a.to_unit AS "toUnit",
		a.funds_source AS "fundsSource",
		a.passport_no AS "passportNo",
		a.annex AS "annex",
		a.suggestion AS "suggestion",
		a.beizhu AS "beizhu",
		a.create_by AS "createBy.id",
		a.create_org_id AS "createOrgId",
		a.create_id_no AS "createIdNo",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_org_id AS "updateOrgId",
		a.update_id_no AS "updateIdNo",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="personnelGoAbroadJoins">
		LEFT JOIN sys_office o ON o.id = a.create_org_id
		LEFT JOIN sys_user u ON u.id = a.create_by
	</sql>
    
	<select id="get" resultType="PersonnelGoAbroad">
		SELECT 
			<include refid="personnelGoAbroadColumns"/>
		FROM personnel_go_abroad a
		<include refid="personnelGoAbroadJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="PersonnelGoAbroad">
		SELECT 
			<include refid="personnelGoAbroadColumns"/>
		FROM personnel_go_abroad a
		<include refid="personnelGoAbroadJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="idNumber != null and idNumber != ''">
				AND a.id_number = #{idNumber}
			</if>
			<if test="name != null and name != ''">
				AND a.name LIKE '%'||#{name}||'%'
			</if>
			<choose>
				<when test="beginGoAbroadDate != null and beginGoAbroadDate != '' and endGoAbroadDate != null and endGoAbroadDate != ''">
					AND a.go_abroad_date between #{beginGoAbroadDate} and #{endGoAbroadDate}
				</when>
				<when test="beginGoAbroadDate != null and beginGoAbroadDate != ''">
					AND a.go_abroad_date >= #{beginGoAbroadDate}
				</when>
				<when test="endGoAbroadDate != null and endGoAbroadDate != ''">
					AND  #{endGoAbroadDate} >= a.go_abroad_date
				</when>
				<otherwise>
				</otherwise>
			</choose>
			<choose>
				<when test="beginReturnDate != null and beginReturnDate != '' and endReturnDate != null and endReturnDate != ''">
					AND a.return_date between #{beginReturnDate} and #{endReturnDate}
				</when>
				<when test="beginReturnDate != null and beginReturnDate != ''">
					AND a.return_date >= #{beginReturnDate}
				</when>
				<when test="endReturnDate != null and endReturnDate != ''">
					AND  #{endReturnDate} >= a.return_date
				</when>
				<otherwise>
				</otherwise>
			</choose>
			<if test="assignUnit != null and assignUnit != ''">
				AND a.assign_unit = #{assignUnit}
			</if>
			<if test="toUnit != null and toUnit != ''">
				AND a.to_unit = #{toUnit}
			</if>
			<!--<if test="fundsSource != null and fundsSource != ''">
				AND a.funds_source = #{fundsSource}
			</if>-->
			<if test="fundsSource != null and fundsSource != ''">
				AND a.fundsSource LIKE '%'||#{fundsSource}||'%'
			</if>
			<!--${sqlMap.dsf}-->
			<choose>
				<when test="userId != null and userId != ''and loginName == true ">
					AND ( o.ID = #{userId} OR o.parent_ids LIKE'%,'||#{userId}||',%' OR u.ID = #{createBy.id}  )
					and a.id_number=#{cardNum}
				</when>
				<otherwise>
					AND ( o.ID = #{userId} OR o.parent_ids LIKE'%,'||#{userId}||',%' OR u.ID = #{createBy.id} )
				</otherwise>
			</choose>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date ASC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="PersonnelGoAbroad">
		SELECT 
			<include refid="personnelGoAbroadColumns"/>
		FROM personnel_go_abroad a
		<include refid="personnelGoAbroadJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<insert id="insert">
		INSERT INTO personnel_go_abroad(
			id,
			id_number,
			name,
			unit_job,
			identity,
			character,
			reason,
			handin_date,
			receive_date,
			go_abroad_date,
			return_date,
			to_place,
			group_name,
			approval_unit_name,
			approval_unit_code,
			approval_file_no,
			assign_unit,
			assign_unit_code,
			to_unit,
			funds_source,
			passport_no,
			annex,
			suggestion,
			beizhu,
			create_by,
			create_org_id,
			create_id_no,
			create_date,
			update_by,
			update_org_id,
			update_id_no,
			update_date,
			del_flag
		) VALUES (
			#{id},
			#{idNumber},
			#{name},
			#{unitJob},
			#{identity},
			#{character},
			#{reason},
			#{handinDate},
			#{receiveDate},
			#{goAbroadDate},
			#{returnDate},
			#{toPlace},
			#{groupName},
			#{approvalUnitName},
			#{approvalUnitCode},
			#{approvalFileNo},
			#{assignUnit},
			#{assignUnitCode},
			#{toUnit},
			#{fundsSource},
			#{passportNo},
			#{annex},
			#{suggestion},
			#{beizhu},
			#{createBy.id},
			#{createBy.office.id},
			#{createIdNo},
			#{createDate},
			#{updateBy.id},
			#{updateBy.office.id},
			#{updateIdNo},
			#{updateDate},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE personnel_go_abroad SET 	
			id_number = #{idNumber},
			name = #{name},
			unit_job = #{unitJob},
			identity = #{identity},
			character = #{character},
			reason = #{reason},
			handin_date = #{handinDate},
			receive_date = #{receiveDate},
			go_abroad_date = #{goAbroadDate},
			return_date = #{returnDate},
			to_place = #{toPlace},
			group_name = #{groupName},
			approval_unit_name = #{approvalUnitName},
			approval_unit_code = #{approvalUnitCode},
			approval_file_no = #{approvalFileNo},
			assign_unit = #{assignUnit},
			assign_unit_code = #{assignUnitCode},
			to_unit = #{toUnit},
			funds_source = #{fundsSource},
			passport_no = #{passportNo},
			annex = #{annex},
			suggestion = #{suggestion},
			beizhu = #{beizhu},
			update_by = #{updateBy.id},
			update_org_id = #{updateBy.office.id},
			update_id_no = #{updateIdNo},
			update_date = #{updateDate}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE personnel_go_abroad SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	<update id="deleteByIds">
		UPDATE personnel_go_abroad SET
		del_flag = '1'
		WHERE id in <foreach collection="ids" item="item" index="index"
							 open="(" separator="," close=")">#{item}</foreach>
	</update>

	<select id="getTodayList" resultType="com.thinkgem.jeesite.modules.affair.entity.PersonnelGoAbroad">
		SELECT
		<include refid="personnelGoAbroadColumns"/>
		FROM personnel_go_abroad a
		where a.del_flag = '0'
		and to_char(a.return_date,'YYYY-MM-DD') = #{returnDate}
	</select>

	<update id="deleteByIdNumbers">
		UPDATE personnel_go_abroad SET
		del_flag = '1'
		WHERE id_number in <foreach collection="idNumbers" item="idNumber" index="index"
									open="(" separator="," close=")">#{idNumber}</foreach>
	</update>
</mapper>