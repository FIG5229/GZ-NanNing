<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.affair.dao.AffairChildSubsidyDao">
    
	<sql id="affairChildSubsidyColumns">
		a.id AS "id",
		a.date AS "date",
		a.unit AS "unit",
		a.unit_id AS "unitId",
		a.name AS "name",
		a.id_number AS "idNumber",
		a.sex AS "sex",
		a.money AS "money",
		a.job AS "job",
		a.opinion AS "opinion",
		a.child_name AS "childName",
		a.child_sex	AS "childSex",
		a.child_birthday AS "childBirthDay",
		a.create_by AS "createBy.id",
		a.create_org_id AS "createOrgId",
		a.create_id_no AS "createIdNo",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_org_id AS "updateOrgId",
		a.update_id_no AS "updateIdNo",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.child_now AS "childNow"
	</sql>
	
	<sql id="affairChildSubsidyJoins">
		LEFT JOIN sys_office o ON o.id = a.create_org_id
		LEFT JOIN sys_user u ON u.id = a.create_by
	</sql>
    
	<select id="get" resultType="com.thinkgem.jeesite.modules.affair.entity.AffairChildSubsidy">
		SELECT 
			<include refid="affairChildSubsidyColumns"/>
		FROM affair_child_subsidy a
		<include refid="affairChildSubsidyJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="com.thinkgem.jeesite.modules.affair.entity.AffairChildSubsidy">
		SELECT 
			<include refid="affairChildSubsidyColumns"/>
		FROM affair_child_subsidy a
		<include refid="affairChildSubsidyJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<choose>
				<when test="beginDate != null and beginDate != '' and endDate != null and endDate != ''">
					AND a.date between #{beginDate} and #{endDate}
				</when>
				<when test="beginDate != null and beginDate != ''">
					AND a.date >= #{beginDate}
				</when>
				<when test="endDate != null and endDate != ''">
					AND  #{endDate} >= a.date
				</when>
				<otherwise>
				</otherwise>
			</choose>
			<if test="unitId != null and unitId != ''">
				AND a.unit_id = #{unitId}
			</if>
			<if test="unit != null and unit != ''">
				AND a.unit  LIKE '%'||#{unit}||'%'
			</if>
			<if test="name != null and name != ''">
				AND a.name LIKE '%'||#{name}||'%'
			</if>
			<if test="sex != null and sex != ''">
				AND a.sex = #{sex}
			</if>
			<choose>
				<when test="beginMoney != null and beginMoney != '' and endMoney != null and endMoney != ''">
					AND a.money between #{beginMoney} and #{endMoney}
				</when>
				<when test="beginMoney != null and beginMoney != ''">
					AND a.money >= #{beginMoney}
				</when>
				<when test="endMoney != null and endMoney != ''">
					AND  #{endMoney} >= a.money
				</when>
				<otherwise>
				</otherwise>
			</choose>
			<if test="job != null and job != ''">
				AND a.job = #{job}
			</if>
			<!-- 数据范围过滤 -->
		<!--	${sqlMap.dsf}
			&lt;!&ndash; 在service层将该sql拼接到 sqlMap.dsf&ndash;&gt;
			<if test="userId != null and userId != ''">
				or (a.unit_id = #{userId} AND a.del_flag = #{DEL_FLAG_NORMAL})
			</if>-->
			<if test="userId != null and userId != ''">
				AND ( o.ID = #{userId} OR o.parent_ids LIKE'%,'||#{userId}||',%' OR u.ID = #{userId} or a.unit_id=#{userId})
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="com.thinkgem.jeesite.modules.affair.entity.AffairChildSubsidy">
		SELECT 
			<include refid="affairChildSubsidyColumns"/>
		FROM affair_child_subsidy a
		<include refid="affairChildSubsidyJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO affair_child_subsidy(
			id,
			date,
			unit,
			unit_id,
			name,
			id_number,
			sex,
			money,
			job,
			opinion,
			child_name,
		    child_sex,
		    child_birthday,
			create_by,
			create_org_id,
			create_id_no,
			create_date,
			update_by,
			update_org_id,
			update_id_no,
			update_date,
			del_flag,
			child_now
		) VALUES (
			#{id},
			#{date},
			#{unit},
			#{unitId},
			#{name},
			#{idNumber},
			#{sex},
			#{money},
			#{job},
			#{opinion},
			 #{childName},
		    #{childSex},
		    #{childBirthDay},
			#{createBy.id},
			#{createBy.office.id},
			#{createIdNo},
			#{createDate},
			#{updateBy.id},
			#{updateBy.office.id},
			#{updateIdNo},
			#{updateDate},
			#{delFlag},
			#{childNow}
		)
	</insert>
	
	<update id="update">
		UPDATE affair_child_subsidy SET 	
			date = #{date},
			unit = #{unit},
			unit_id = #{unitId},
			name = #{name},
			id_number = #{idNumber},
			sex = #{sex},
			money = #{money},
			job = #{job},
			opinion = #{opinion},
			child_name = #{childName},
		    child_sex	= #{childSex},
		    child_birthday = #{childBirthDay},
			update_by = #{updateBy.id},
			update_org_id = #{updateBy.office.id},
			update_id_no = #{updateIdNo},
			update_date = #{updateDate},
			child_now = #{childNow}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE affair_child_subsidy SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>

	<update id="deleteByIds">
		UPDATE affair_child_subsidy SET
		del_flag = '1'
		WHERE id in <foreach collection="ids" item="item" index="index"
							 open="(" separator="," close=")">#{item}</foreach>
	</update>

	<select id="findInfoByCreateOrgId" resultType="java.util.HashMap">
		SELECT
		acs.unit "label",
		SUM(acs.money),
		count( acs.unit )
		FROM
		affair_child_subsidy acs
		WHERE
		acs.del_flag = '0'
		<if test="id != null and id != ''">
			AND acs.create_org_id = #{id}
		</if>
		<choose>
			<when test="year != null and year !=''">
				AND extract(year from acs.date) = #{year}
			</when>
			<when test="mStartDate != null and mEndDate != null">
				AND acs.date between  #{mStartDate,jdbcType=DATE} and #{mEndDate,jdbcType=DATE}
			</when>
			<when test="mStartDate != null">
				AND acs.date >= #{mStartDate,jdbcType=DATE}
			</when>
			<when test="mEndDate != null">
				AND  #{mEndDate,jdbcType=DATE} >= acs.date
			</when>
			<otherwise>
			</otherwise>
		</choose>
		GROUP BY
		acs.unit
	</select>

	<select id="findInfoByCreateOrgIds" resultType="java.util.HashMap">

		SELECT
		acs.unit "label",
		SUM(acs.money),
		count( acs.unit )
		FROM
		affair_child_subsidy acs
		WHERE
		acs.del_flag = '0'
		AND acs.create_org_id in (
		<foreach collection="ids" item="id" index="index" separator=",">
			#{id}
		</foreach>
		)
		<choose>
			<when test="year != null and year !=''">
				AND extract(year from acs.date) = #{year}
			</when>
			<when test="mStartDate != null and mEndDate != null">
				AND acs.date between  #{mStartDate,jdbcType=DATE} and #{mEndDate,jdbcType=DATE}
			</when>
			<when test="mStartDate != null">
				AND acs.date >= #{mStartDate,jdbcType=DATE}
			</when>
			<when test="mEndDate != null">
				AND  #{mEndDate,jdbcType=DATE} >= acs.date
			</when>
			<otherwise>
			</otherwise>
		</choose>
		GROUP BY
		acs.unit
	</select>
	
</mapper>