<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.affair.dao.AffairYjBuildDao">
    
	<sql id="affairYjBuildColumns">
		a.id AS "id",
		a.date AS "date",
		a.content AS "content",
		a.pro_name AS "proName",
		a.build_unit AS "buildUnit",
		a.appendfile AS "appendfile",
		a.one_check_man AS "oneCheckMan",
		a.two_check_man AS "twoCheckMan",
		a.submit_man AS "submitMan",
		a.check_type AS "checkType",
		a.one_check_id AS "oneCheckId",
		a.two_check_id AS "twoCheckId",
		a.submit_id AS "submitId",
		a.opinion AS "opinion",
		a.create_by AS "createBy.id",
		a.create_org_id AS "createOrgId",
		a.create_id_no AS "createIdNo",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_org_id AS "updateOrgId",
		a.update_id_no AS "updateIdNo",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="affairYjBuildJoins">
	</sql>
    
	<select id="get" resultType="AffairYjBuild">
		SELECT 
			<include refid="affairYjBuildColumns"/>
		FROM affair_yj_build a
		<include refid="affairYjBuildJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="AffairYjBuild">
		SELECT 
			<include refid="affairYjBuildColumns"/>
		FROM affair_yj_build a
		<include refid="affairYjBuildJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="beginDate != null and endDate != null and beginDate != '' and endDate != ''">
				AND a.date BETWEEN #{beginDate} AND #{endDate}
			</if>
			<if test="proName != null and proName != ''">
				AND a.pro_name = #{proName}
			</if>
			<if test="buildUnit != null and buildUnit != ''">
				AND a.build_unit = #{buildUnit}
			</if>
			<!--审核特殊查询页面-->
			<!--根据officeID-->
			<choose>
				<when test="officeId != null and (officeId == 5 or officeId == 144 or officeId == 265 or officeId == 29)">
					AND (
					(a.create_by = #{userId} or a.submit_id = #{userId})
					OR
					((a.check_type = '2' or a.check_type = '4') and (a.two_check_id = #{userId} or a.one_check_id = #{userId}))
					OR
					(a.check_type = '3' and (a.two_check_id = #{userId}))
					)
				</when>
				<otherwise>
					AND (a.create_by = #{userId} or a.submit_id = #{userId})
				</otherwise>
			</choose>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="AffairYjBuild">
		SELECT 
			<include refid="affairYjBuildColumns"/>
		FROM affair_yj_build a
		<include refid="affairYjBuildJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	<select id="findByIds" resultType="com.thinkgem.jeesite.modules.affair.entity.AffairYjBuild">
		SELECT <include refid="affairYjBuildColumns"/>
		FROM affair_yj_build a
		WHERE a.id
		in <foreach collection="ids" item="item" index="index" open="(" separator="," close=")">
		#{item}
		</foreach>
	</select>

	<insert id="insert">
		INSERT INTO affair_yj_build(
			id,
			date,
			content,
			pro_name,
			build_unit,
			appendfile,
			one_check_man,
			two_check_man,
			submit_man,
			check_type,
			one_check_id,
			two_check_id,
			submit_id,
			opinion,
			create_by,
			create_org_id,
			create_id_no,
			create_date,
			update_by,
			update_org_id,
			update_id_no,
			update_date,
			del_flag
		) VALUES (
			#{id},
			#{date},
			#{content},
			#{proName},
			#{buildUnit},
			#{appendfile},
			#{oneCheckMan},
			#{twoCheckMan},
			#{submitMan},
			#{checkType},
			#{oneCheckId},
			#{twoCheckId},
			#{submitId},
			#{opinion},
			#{createBy.id},
			#{createBy.office.id},
			#{createIdNo},
			#{createDate},
			#{updateBy.id},
			#{updateBy.office.id},
			#{updateIdNo},
			#{updateDate},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE affair_yj_build SET 	
			date = #{date},
			content = #{content},
			pro_name = #{proName},
			build_unit = #{buildUnit},
			appendfile = #{appendfile},
			one_check_man = #{oneCheckMan},
			two_check_man = #{twoCheckMan},
			submit_man = #{submitMan},
			check_type = #{checkType},
			one_check_id = #{oneCheckId},
			two_check_id = #{twoCheckId},
			submit_id = #{submitId},
			opinion = #{opinion},
			update_by = #{updateBy.id},
			update_org_id = #{updateBy.office.id},
			update_id_no = #{updateIdNo},
			update_date = #{updateDate}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE affair_yj_build SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>

	<update id="deleteByIds" >
		UPDATE affair_yj_build
		SET del_flag = '1'
		where id in <foreach collection="ids" item="item" index="index" open="(" separator="," close=")">#{item}</foreach>
	</update>
	
</mapper>