<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.affair.dao.AffairHomeVisitDao">
    
	<sql id="affairHomeVisitColumns">
		a.id AS "id",
		a.time AS "time",
		a.home_visitors AS "homeVisitors",
		a.visit_object AS "visitObject",
		a.content AS "content",
		a.filepath AS "filepath",
		a.create_by AS "createBy.id",
		a.create_org_id AS "createOrgId",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_org_id AS "updateOrgId",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.unit AS "unit",
		a.unit_id AS "unitId",
		a.mode AS "mode",
		a.evaluate as "evaluate"
	</sql>
	
	<sql id="affairHomeVisitJoins">
		LEFT JOIN sys_office o ON o.id = a.create_org_id
		LEFT JOIN sys_user u ON u.id = a.create_by
	</sql>
    
	<select id="get" resultType="AffairHomeVisit">
		SELECT 
			<include refid="affairHomeVisitColumns"/>
		FROM affair_home_visit a
		<include refid="affairHomeVisitJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="AffairHomeVisit">
		SELECT 
			<include refid="affairHomeVisitColumns"/>
		FROM affair_home_visit a
		<include refid="affairHomeVisitJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<choose>
				<when test="beginTime != null and beginTime != '' and endTime != null and endTime != ''">
					AND a.time between #{beginTime} and #{endTime}
				</when>
				<when test="beginTime != null and beginTime != ''">
					AND a.time >= #{beginTime}
				</when>
				<when test="endTime != null and endTime != ''">
					AND  #{endTime} >= a.time
				</when>
				<otherwise>
				</otherwise>
			</choose>
			<if test="unit != null and unit != ''">
				AND a.unit = #{unit}
			</if>
			<if test="mode != null and mode != ''">
				AND a.mode = #{mode}
			</if>
			<if test="homeVisitors != null and homeVisitors != ''">
				AND a.home_visitors LIKE 
					<if test="dbName == 'oracle'">'%'||#{homeVisitors}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{homeVisitors}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{homeVisitors},'%')</if>
					<if test="dbName == 'postgre'">'%'||#{homeVisitors}||'%'</if>
			</if>
			<if test="visitObject != null and visitObject != ''">
				AND a.visit_object LIKE 
					<if test="dbName == 'oracle'">'%'||#{visitObject}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{visitObject}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{visitObject},'%')</if>
					<if test="dbName == 'postgre'">'%'||#{visitObject}||'%'</if>
			</if>
			<if test="evaluate != null and evaluate != ''">
				and a.evaluate = #{evaluate}
			</if>
			<if test="year != null and year != ''">
				and extract (year from a.time) = ${year}
			</if>
			<if test="month != null and month != ''">
				and to_char(a.time,'yyyy-MM') = #{month}
			</if>
			${sqlMap.dsf}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY evaluate asc,a.time DESC , a.id
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="AffairHomeVisit">
		SELECT 
			<include refid="affairHomeVisitColumns"/>
		FROM affair_home_visit a
		<include refid="affairHomeVisitJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO affair_home_visit(
			id,
			time,
			home_visitors,
			visit_object,
			content,
			filepath,
			create_by,
			create_org_id,
			create_date,
			update_by,
			update_org_id,
			update_date,
			del_flag,
			unit,
			unit_id,
			mode,
			evaluate
		) VALUES (
			#{id},
			#{time},
			#{homeVisitors},
			#{visitObject},
			#{content},
			#{filepath},
			#{createBy.id},
			#{createBy.office.id},
			#{createDate},
			#{updateBy.id},
			#{updateBy.office.id},
			#{updateDate},
			#{delFlag},
			#{unit},
			#{unitId},
			#{mode},
			#{evaluate}
		)
	</insert>
	
	<update id="update">
		UPDATE affair_home_visit SET 	
			time = #{time},
			home_visitors = #{homeVisitors},
			visit_object = #{visitObject},
			content = #{content},
			filepath = #{filepath},
			update_by = #{updateBy.id},
			update_org_id = #{updateBy.office.id},
			update_date = #{updateDate},
			unit=#{unit},
			unit_id=#{unitId},
			mode=#{mode},
			evaluate = #{evaluate}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE affair_home_visit SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>

	<update id="deleteByIds">
		UPDATE affair_home_visit SET
		del_flag = '1'
		WHERE id in <foreach collection="ids" item="item" index="index"
							 open="(" separator="," close=")">#{item}</foreach>
	</update>
</mapper>