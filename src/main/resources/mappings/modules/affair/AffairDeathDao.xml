<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.affair.dao.AffairDeathDao">
    
	<sql id="affairDeathColumns">
		a.id AS "id",
		a.name AS "name",
		a.id_number AS "idNumber",
		a.unit AS "unit",
		a.unit_id AS "unitId",
		a.job AS "job",
		a.level AS "level",
		a.z_num AS "zNum",
		a.f_num2 AS "fNum",
		a.archive_no AS "archiveNo",
		a.out_date AS "outDate",
		a.remark AS "remark",
		a.reason AS "reason",
		a.create_by AS "createBy.id",
		a.create_org_id AS "createOrgId",
		a.create_id_no AS "createIdNo",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_org_id AS "updateOrgId",
		a.update_id_no AS "updateIdNo",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.file_unit AS "fileUnit"
	</sql>
	
	<sql id="affairDeathJoins">
		  LEFT JOIN sys_office o ON o.id = a.create_org_id
		LEFT JOIN sys_user u ON u.id = a.create_by
	</sql>
    
	<select id="get" resultType="AffairDeath">
		SELECT
		A."name" AS NAME,
		A.department AS unit,
		A."date" AS outDate,
		A.id_number AS idNumber,
		b.job AS job,
		C.z_num AS zNum,
		C.f_num2 AS fNum,
		C.record_no AS archiveNo,
		d.job_level AS LEVEL,
		a.unit AS "fileUnit"
		FROM personnel_casualty AS A
		<include refid="affairDeathJoins"/>
		LEFT JOIN personnel_base AS b ON A.id_number = b.id_number
		LEFT JOIN personnel_hr_record AS C ON A.id_number = C.id_number
		LEFT JOIN personnel_job AS d ON A.id_number = d.id_number
		WHERE a.id = #{id}
	</select><!--<select id="get" resultType="AffairDeath">
		SELECT
			<include refid="affairDeathColumns"/>
		FROM affair_death a
		<include refid="affairDeathJoins"/>
		WHERE a.id = #{id}
	</select>-->
	<!--更改数据来源为 人员信息管理-->
	<!--<select id="findList" resultType="AffairDeath">
		SELECT 
			<include refid="affairDeathColumns"/>
		FROM affair_death a
		<include refid="affairDeathJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="name != null and name != ''">
				AND a.name LIKE '%'||#{name}||'%'
			</if>
			<if test="idNumber != null and idNumber != ''">
				AND a.id_number LIKE '%'||#{idNumber}||'%'
			</if>
			<if test="unitId != null and unitId != ''">
				AND a.unit_id = #{unitId}
			</if>
			<if test="job != null and job != ''">
				AND a.job = #{job}
			</if>
			<if test="level != null and level != ''">
				AND a.level = #{level}
			</if>
			<if test="archiveNo != null and archiveNo != ''">
				AND a.archive_no LIKE '%'||#{archiveNo}||'%'
			</if>

			<choose>
				<when test="beginOutDate != null and endOutDate != null and beginOutDate != '' and endOutDate != ''">
					AND a.out_date BETWEEN #{beginOutDate} AND #{endOutDate}
				</when>
				<when test="beginOutDate != null and beginOutDate != ''">
					AND a.out_date &gt;= #{beginOutDate}
				</when>
				<when test="endOutDate != null and endOutDate != ''">
					AND a.out_date &lt;= #{endOutDate}
				</when>
				<otherwise></otherwise>
			</choose>
			${sqlMap.dsf}

		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>-->
	<select id="findList" resultType="AffairDeath">
		SELECT
		A.id AS id,
		a.unit AS fileUnit,
		A."name" AS NAME,
		A.id_number AS idNumber,
		b.workunit_name AS unit,
		a.duty AS job,
		a.level AS level,
		c."date" AS outDate,
		a.z_num AS zNum,
		a.f_num2 AS fNum2,
		a.record_no as archiveNo,
		a.remark AS remark
		FROM personnel_hr_record AS A
		<include refid="affairDeathJoins"/>
		LEFT JOIN personnel_base AS b ON A.id_number = b.id_number
		LEFT JOIN personnel_casualty AS c ON A.id_number = c.id_number
		<where>
			a.del_flag = '0'
			and b.status in ('15','16','17','18')
			<if test="name != null and name != ''">
				AND a.name LIKE '%'||#{name}||'%'
			</if>
			<if test="fileUnit != null and fileUnit != ''">
				AND a.unit = #{fileUnit}
			</if>
			<if test="archiveNo != null and archiveNo != ''">
				AND a.record_no LIKE '%'||#{archiveNo}||'%'
			</if>

			<choose>
				<when test="beginOutDate != null and endOutDate != null and beginOutDate != '' and endOutDate != ''">
					AND c."date" BETWEEN #{beginOutDate} AND #{endOutDate}
				</when>
				<when test="beginOutDate != null and beginOutDate != ''">
					AND c."date" &gt;= #{beginOutDate}
				</when>
				<when test="endOutDate != null and endOutDate != ''">
					AND c."date" &lt;= #{endOutDate}
				</when>
				<otherwise></otherwise>
			</choose>
			${sqlMap.dsf}

		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="AffairDeath">
		SELECT 
			<include refid="affairDeathColumns"/>
		FROM affair_death a
		<include refid="affairDeathJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO affair_death(
			id,
			name,
			id_number,
			unit,
			unit_id,
			job,
			level,
			z_num,
			f_num,
			archive_no,
			out_date,
			remark,
			reason,
			create_by,
			create_org_id,
			create_id_no,
			create_date,
			update_by,
			update_org_id,
			update_id_no,
			update_date,
			del_flag,
			file_unit
		) VALUES (
			#{id},
			#{name},
			#{idNumber},
			#{unit},
			#{unitId},
			#{job},
			#{level},
			#{zNum},
			#{fNum},
			#{archiveNo},
			#{outDate},
			#{remark},
			#{reason},
			#{createBy.id},
			#{createBy.office.id},
			#{createIdNo},
			#{createDate},
			#{updateBy.id},
			#{updateBy.office.id},
			#{updateIdNo},
			#{updateDate},
			#{delFlag},
			#{fileUnit}
		)
	</insert>
	
	<update id="update">
		UPDATE affair_death SET 	
			name = #{name},
			id_number = #{idNumber},
			unit = #{unit},
			unit_id = #{unitId},
			job = #{job},
			level = #{level},
			z_num = #{zNum},
			f_num = #{fNum},
			archive_no = #{archiveNo},
			out_date = #{outDate},
			remark = #{remark},
			update_by = #{updateBy.id},
			update_org_id = #{updateBy.office.id},
			update_id_no = #{updateIdNo},
			update_date = #{updateDate},
			file_unit = #{fileUnit}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE affair_death SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>

	<update id="deleteByIds">
		UPDATE affair_death SET
		del_flag = '1'
		WHERE id in <foreach collection="ids" item="item" index="index"
							 open="(" separator="," close=")">#{item}</foreach>
	</update>
</mapper>