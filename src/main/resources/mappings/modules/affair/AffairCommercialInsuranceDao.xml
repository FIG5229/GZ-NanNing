<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.affair.dao.AffairCommercialInsuranceDao">
    
	<sql id="affairCommercialInsuranceColumns">
		a.id AS "id",
		a.year AS "year",
		a.kind AS "kind",
		a.name AS "name",
		a.account_number AS "accountNumber",
		a.id_number AS "idNumber",
		a.pass AS "pass",
		a.materials AS "materials",
		a.result AS "result",
		a.compensate AS "compensate",
		a.adjunct AS "adjunct",
		a.create_by AS "createBy.id",
		a.create_org_id AS "createOrgId",
		a.create_id_no AS "createIdNo",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_org_id AS "updateOrgId",
		a.update_id_no AS "updateIdNo",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="affairCommercialInsuranceJoins">
		LEFT JOIN affair_labor_office o ON o.id = a.create_org_id
		LEFT JOIN affair_labor_user u ON u.id = a.create_by
	</sql>
    
	<select id="get" resultType="AffairCommercialInsurance">
		SELECT 
			<include refid="affairCommercialInsuranceColumns"/>
		FROM affair_commercial_insurance a
		<include refid="affairCommercialInsuranceJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="AffairCommercialInsurance">
		SELECT 
			<include refid="affairCommercialInsuranceColumns"/>
		FROM affair_commercial_insurance a
		<include refid="affairCommercialInsuranceJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="year != null and year != ''">
				AND a.year like
					<if test="dbName == 'oracle'">'%'||#{year}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{year}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{year},'%')</if>
					<if test="dbName == 'postgre'">'%'||#{year}||'%'</if>
			</if>
			<if test="name != null and name != ''">
				AND a.name LIKE
				<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{name},'%')</if>
				<if test="dbName == 'postgre'">'%'||#{name}||'%'</if>
			</if>
			<if test="userId != null and userId != ''">
				AND ( o.ID = #{userId} OR o.parent_ids LIKE'%,'||#{userId}||',%' OR u.ID = #{userId} )
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="AffairCommercialInsurance">
		SELECT 
			<include refid="affairCommercialInsuranceColumns"/>
		FROM affair_commercial_insurance a
		<include refid="affairCommercialInsuranceJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}a
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO affair_commercial_insurance(
			id,
			year,
			kind,
			name,
			account_number,
			id_number,
			pass,
			materials,
			result,
			compensate,
			adjunct,
			create_by,
			create_org_id,
			create_id_no,
			create_date,
			update_by,
			update_org_id,
			update_id_no,
			update_date,
			del_flag
		) VALUES (
			#{id},
			#{year},
			#{kind},
			#{name},
			#{accountNumber},
			#{idNumber},
			#{pass},
			#{materials},
			#{result},
			#{compensate},
			#{adjunct},
			#{createBy.id},
			#{createBy.office.id},
			#{createIdNo},
			#{createDate},
			#{updateBy.id},
			#{updateBy.office.id},
			#{updateIdNo},
			#{updateDate},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE affair_commercial_insurance SET 	
			year = #{year},
			kind = #{kind},
			name = #{name},
			account_number = #{accountNumber},
			id_number = #{idNumber},
			pass = #{pass},
			materials = #{materials},
			result = #{result},
			compensate = #{compensate},
			adjunct = #{adjunct},
			update_by = #{updateBy.id},
			update_org_id = #{updateBy.office.id},
			update_id_no = #{updateIdNo},
			update_date = #{updateDate}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE affair_commercial_insurance SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>


	<update id="deleteByIds">
		UPDATE affair_commercial_insurance SET
		del_flag = '1'
		WHERE id in <foreach collection="ids" item="item" index="index"
							 open="(" separator="," close=")">#{item}</foreach>
	</update>
</mapper>