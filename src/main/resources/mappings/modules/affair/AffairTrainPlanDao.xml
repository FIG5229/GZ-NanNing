<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.affair.dao.AffairTrainPlanDao">
    
	<sql id="affairTrainPlanColumns">
		a.id AS "id",
		a.unit AS "unit",
		a.unit_id AS "unitId",
		a.name AS "name",
		a.goal AS "goal",
		a.target AS "target",
		a.content AS "content",
		a.year AS "year",
		a.time AS "time",
		a.day AS "day",
		a.place AS "place",
		a.number AS "number",
		a.train_expense AS "trainExpense",
		a.teacher_expense AS "teacherExpense",
		a.trench AS "trench",
		a.organ AS "organ",
		a.organ_id AS "organId",
		a.state AS "state",
		a.create_by AS "createBy.id",
		a.create_org_id AS "createOrgId",
		a.create_id_no AS "createIdNo",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_org_id AS "updateOrgId",
		a.update_id_no AS "updateIdNo",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="affairTrainPlanJoins">
		LEFT JOIN sys_office o ON o.id = a.create_org_id
		LEFT JOIN sys_user u ON u.id = a.create_by
	</sql>
    
	<select id="get" resultType="AffairTrainPlan">
		SELECT 
			<include refid="affairTrainPlanColumns"/>
		FROM affair_train_plan a
		<include refid="affairTrainPlanJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="AffairTrainPlan">
		SELECT 
			<include refid="affairTrainPlanColumns"/>
		FROM affair_train_plan a
		<include refid="affairTrainPlanJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="year != null and year != ''">
				AND a.year LIKE
					<if test="dbName == 'oracle'">'%'||#{year}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{year}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{year},'%')</if>
					<if test="dbName == 'postgre'">'%'||#{year}||'%'</if>
			</if>
			<if test="organ != null and organ != ''">
				AND a.organ LIKE
					<if test="dbName == 'oracle'">'%'||#{organ}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{organ}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{organ},'%')</if>
					<if test="dbName == 'postgre'">'%'||#{organ}||'%'</if>
			</if>
			${sqlMap.dsf}
			<!--AND (o.id = '34' OR o.parent_ids LIKE '0,1,34,%' OR u.id = 'a1fb3139ecfe4f2bb4e61abb18eae828' OR u.office_id = '28')
			<if test="userId != '' and userId != null and officeId != '' and officeId != null ">
				AND ( o.ID = #{userId} OR o.parent_ids LIKE'%,'||#{userId}||',%' OR u.ID = #{officeId}  or u.office_id = #{userId})
			</if>-->
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="AffairTrainPlan">
		SELECT 
			<include refid="affairTrainPlanColumns"/>
		FROM affair_train_plan a
		<include refid="affairTrainPlanJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO affair_train_plan(
			id,
			unit,
			unit_id,
			name,
			goal,
			target,
			content,
			year,
			time,
			day,
			place,
			number,
			train_expense,
			teacher_expense,
			trench,
			organ,
			organ_id,
			state,
			create_by,
			create_org_id,
			create_id_no,
			create_date,
			update_by,
			update_org_id,
			update_id_no,
			update_date,
			del_flag
		) VALUES (
			#{id},
			#{unit},
			#{unitId},
			#{name},
			#{goal},
			#{target},
			#{content},
			#{year},
			#{time},
			#{day},
			#{place},
			#{number},
			#{trainExpense},
			#{teacherExpense},
			#{trench},
			#{organ},
			#{organId},
			#{state},
			#{createBy.id},
			#{createBy.office.id},
			#{createIdNo},
			#{createDate},
			#{updateBy.id},
			#{updateBy.office.id},
			#{updateIdNo},
			#{updateDate},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE affair_train_plan SET 	
			unit = #{unit},
			unit_id = #{unitId},
			name = #{name},
			goal = #{goal},
			target = #{target},
			content = #{content},
			year = #{year},
			time = #{time},
			day = #{day},
			place = #{place},
			number = #{number},
			train_expense = #{trainExpense},
			teacher_expense = #{teacherExpense},
			trench = #{trench},
			organ = #{organ},
			organ_id = #{organId},
			state = #{state},
			update_by = #{updateBy.id},
			update_org_id = #{updateBy.office.id},
			update_id_no = #{updateIdNo},
			update_date = #{updateDate}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE affair_train_plan SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>


	<update id="deleteByIds">
		UPDATE affair_train_plan SET
		del_flag = '1'
		WHERE id in <foreach collection="ids" item="item" index="index"
							 open="(" separator="," close=")">#{item}</foreach>
	</update>
</mapper>