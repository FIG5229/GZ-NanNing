<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.affair.dao.AffairCommentDao">
    
	<sql id="affairCommentColumns">
		a.id AS "id",
		a.name AS "name",
		a.sex AS "sex",
		a.police_no AS "policeNo",
		a.id_number AS "idNumber",
		a.year AS "year",
		a.date AS "date",
		a.person_num AS "personNum",
		a.grade AS "grade",
		a.result AS "result",
		a.create_by AS "createBy.id",
		a.create_org_id AS "createOrgId",
		a.create_id_no AS "createIdNo",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_org_id AS "updateOrgId",
		a.update_id_no AS "updateIdNo",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.party_organization AS "partyOrganization",
		a.party_organization_id AS "partyOrganizationId",
		a.status AS "status",
		a.opinion AS "opinion"
	</sql>
	
	<sql id="affairCommentJoins">
		LEFT JOIN sys_office o ON o.id = a.create_org_id
		LEFT JOIN sys_user u ON u.id = a.create_by
	</sql>
    
	<select id="get" resultType="AffairComment">
		SELECT 
			<include refid="affairCommentColumns"/>
		FROM affair_comment a
		<include refid="affairCommentJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="AffairComment">
		SELECT 
			<include refid="affairCommentColumns"/>
		FROM affair_comment a
		<include refid="affairCommentJoins"/>
        LEFT JOIN affair_general_situation s
        ON s.id = a.party_organization_id
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="name != null and name != ''">
				AND a.name LIKE concat('%',#{name},'%')
			</if>
			<if test="policeNo != null and policeNo != ''">
				AND a.police_no LIKE concat('%',#{policeNo},'%')
			</if>
			<if test="idNumber != null and idNumber != ''">
				AND a.id_number LIKE concat('%',#{idNumber},'%')
			</if>
			<if test="year != null and year != ''">
				AND a.year = #{year}
			</if>
			<if test="partyOrganizationId != null and partyOrganizationId != ''">
				and a.party_organization_id = #{partyOrganizationId}
			</if>
			<choose>
				<when test="startDate != null and startDate != '' and endDate != null and endDate != ''">
					AND a.date between #{startDate} and #{endDate}
				</when>
				<otherwise>
					<if test="startDate != null and startDate != ''">
						AND a.date >= #{startDate}
					</if>
					<if test="endDate != null and endDate != ''">
						AND  #{endDate} >= a.date
					</if>
				</otherwise>
			</choose>
			<if test="grade != null and grade != ''">
				AND a.grade = #{grade}
			</if>
            <if test="treeId != null and treeId != ''">
                AND (a.party_organization_id = #{treeId} OR s.parent_ids LIKE CONCAT('%,', #{treeId}, ',%'))
            </if>
			<!-- 数据范围过滤 -->
			<!-- 8.21注释掉不确定会不会影响其他功能 -->
			/*${sqlMap.dsf}*/
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="AffairComment">
		SELECT 
			<include refid="affairCommentColumns"/>
		FROM affair_comment a
		<include refid="affairCommentJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

    <insert id="insert">
		INSERT INTO affair_comment(
			id,
			name,
			sex,
			police_no,
			id_number,
			year,
			date,
			person_num,
			grade,
			result,
			create_by,
			create_org_id,
			create_id_no,
			create_date,
			update_by,
			update_org_id,
			update_id_no,
			update_date,
			del_flag,
			party_organization,
			party_organization_id,
			status,
			opinion
		) VALUES (
			#{id},
			#{name},
			#{sex},
			#{policeNo},
			#{idNumber},
			#{year},
			#{date},
			#{personNum},
			#{grade},
			#{result},
			#{createBy.id},
			#{createBy.office.id},
			#{createIdNo},
			#{createDate},
			#{updateBy.id},
			#{updateBy.office.id},
			#{updateIdNo},
			#{updateDate},
			#{delFlag},
			#{partyOrganization},
			#{partyOrganizationId},
			'1',
			#{opinion}
		)
	</insert>
	
	<update id="update">
		UPDATE affair_comment SET 	
			name = #{name},
			sex = #{sex},
			police_no = #{policeNo},
			id_number = #{idNumber},
			year = #{year},
			date = #{date},
			person_num = #{personNum},
			grade = #{grade},
			result = #{result},
			update_by = #{updateBy.id},
			update_org_id = #{updateBy.office.id},
			update_id_no = #{updateIdNo},
			update_date = #{updateDate},
			party_organization = #{partyOrganization},
			party_organization_id = #{partyOrganizationId},
			status = #{status},
			opinion = #{opinion}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE affair_comment SET
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>

	<update id="deleteByIds">
		UPDATE affair_comment SET
		del_flag = '1'
		WHERE id in <foreach collection="ids" item="item" index="index"
			 open="(" separator="," close=")">#{item}</foreach>
	</update>

	<select id="findGradeInfoById" resultType="java.util.Map">
		SELECT
		sd.label  AS "label",
		count( DISTINCT a.id_number) AS "num"
		FROM affair_comment a left join sys_dict sd on a.grade = sd.value
		WHERE a.del_flag = '0'  AND sd.del_flag = '0' AND sd.type = 'affair_comment_grade'
		<if test="id != null and id != ''">
			AND a.party_branch_id = #{id}
		</if>
		<choose>
			<when test="month != null and month !=''">
				AND TO_CHAR(a.date, 'yyyy-mm')  = #{month}
			</when>
			<when test="year != null and year !=''">
				<!--AND cast(a.year as NUMERIC) = #{year}-->
				AND a.year = '${year}'
			</when>
			<when test="startDate != null and endDate != null">assignDatasave
				AND a.date between  #{startDate,jdbcType=DATE} and #{endDate,jdbcType=DATE}
			</when>
			<when test="startDate != null">
				AND a.date >= #{startDate,jdbcType=DATE}
			</when>
			<when test="endDate != null">
				AND  #{endDate,jdbcType=DATE} >= a.date
			</when>
			<otherwise>
			</otherwise>
		</choose>
		GROUP BY sd.label
	</select>

	<select id="findGradeInfoByIds" resultType="java.util.Map">
		SELECT
		sd.label  AS "label",
		count( DISTINCT a.id_number) AS "num"
		FROM affair_comment a left join sys_dict sd on a.grade = sd.value
		WHERE a.del_flag = '0'  AND sd.del_flag = '0' AND sd.type = 'affair_comment_grade'
		AND a.party_organization_id in (
		<foreach collection="ids" item="id" index="index" separator=",">
			#{id}
		</foreach>
		)
		<choose>
			<when test="month != null and month !=''">
				AND TO_CHAR(a.date, 'yyyy-mm')  = #{month}
			</when>
			<when test="year != null and year !=''">
				AND cast(a.year as NUMERIC) = #{year}
			</when>
			<when test="startDate != null and endDate != null">
				AND a.date between  #{startDate,jdbcType=DATE} and #{endDate,jdbcType=DATE}
			</when>
			<when test="startDate != null">
				AND a.date >= #{startDate,jdbcType=DATE}
			</when>
			<when test="endDate != null">
				AND  #{endDate,jdbcType=DATE} >= a.date
			</when>
			<otherwise>
			</otherwise>
		</choose>
		GROUP BY sd.label
	</select>

	<select id="echartSexFindPageByPbId" resultType="com.thinkgem.jeesite.modules.affair.entity.AffairComment">
		SELECT
		<include refid="affairCommentColumns"/>
		FROM affair_comment a left join sys_dict sd on a.grade = sd.value
		WHERE a.del_flag = '0'  AND sd.del_flag = '0' AND sd.type = 'affair_comment_grade' AND sd.label = #{flag}
		<if test="pbId != null and pbId != ''">
			AND a.party_branch_id = #{pbId}
		</if>
		<choose>
			<when test="month != null and month !=''">
				AND TO_CHAR(a.date, 'yyyy-mm')  = #{month}
			</when>
			<when test="echartYear != null ">
				<!--AND cast(a.year as NUMERIC) = #{echartYear}-->
				and a.year = '${echartYear}'
			</when>
			<when test="echartStartDate != null and echartEndDate != ''">
				AND a.date between  #{echartStartDate,jdbcType=DATE} and #{echartEndDate,jdbcType=DATE}
			</when>
			<when test="echartStartDate != null and echartStartDate != ''">
				AND a.date >= #{echartStartDate,jdbcType=DATE}
			</when>
			<when test="echartEndDate != null and echartEndDate != ''">
				AND  #{echartEndDate,jdbcType=DATE} >= a.date
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>

	<select id="echartSexFindPageByPbIds"
			resultType="com.thinkgem.jeesite.modules.affair.entity.AffairComment">
		SELECT
		<include refid="affairCommentColumns"/>
		FROM affair_comment a left join sys_dict sd on a.grade = sd.value
		WHERE a.del_flag = '0'  AND sd.del_flag = '0' AND sd.type = 'affair_comment_grade' AND sd.label = #{flag}
		AND a.party_organization_id in (
		<foreach collection="pbIds" item="id" index="index" separator=",">
			#{id}
		</foreach>
		)
		<choose>
			<when test="month != null and month !=''">
				AND TO_CHAR(a.date, 'yyyy-mm')  = #{month}
			</when>
			<when test="echartYear != null and echartYear !=''">
				AND cast(a.year as NUMERIC) = #{echartYear}
			</when>
			<when test="echartStartDate != null and echartEndDate != null">
				AND a.date between  #{echartStartDate,jdbcType=DATE} and #{echartEndDate,jdbcType=DATE}
			</when>
			<when test="echartStartDate != null">
				AND a.date >= #{echartStartDate,jdbcType=DATE}
			</when>
			<when test="echartEndDate != null">
				AND  #{echartEndDate,jdbcType=DATE} >= a.date
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>

    <select id="selectNumber" resultType="java.lang.Integer">
		select
			count(a.id)
		from affair_comment a
			where
			a.del_flag = '0'
			AND to_char ( "create_date", 'yyyy-mm-dd' ) BETWEEN #{yearL} AND #{yearT}
			AND a.party_organization_id = #{id}
	</select>

    <update id="shenHeSave">
		UPDATE affair_comment SET
			status = #{affairComment.status},
			opinion = #{affairComment.opinion},
			update_date = #{affairComment.updateDate}
		WHERE id = #{affairComment.id}
	</update>

	<update id="updateComment">
		UPDATE affair_comment SET
			date = #{affairComment.date},
			person_num = #{affairComment.personNum},
			grade = #{affairComment.grade},
			result = #{affairComment.result}
		WHERE party_organization_id = #{affairComment.treeId}
		and year = #{affairComment.year}
	</update>
</mapper>