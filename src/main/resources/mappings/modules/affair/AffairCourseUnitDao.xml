<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.affair.dao.AffairCourseUnitDao">
    
	<sql id="affairCourseUnitColumns">
		a.id AS "id",
		a.unit AS "unit",
		a.unit_id AS "unitId",
		a.class_id AS "classId"
		a.create_by AS "createBy.id",
		a.create_org_id AS "createOrgId",
		a.create_id_no AS "createIdNo",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_org_id AS "updateOrgId",
		a.update_id_no AS "updateIdNo",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
	</sql>
	
	<sql id="affairCourseUnitJoins">
	</sql>

	<select id="get" resultType="AffairCourseUnit">
		SELECT 
			<include refid="affairCourseUnitColumns"/>
		FROM affair_course_unit a
		<include refid="affairCourseUnitJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="AffairCourseUnit">
		SELECT 
			<include refid="affairCourseUnitColumns"/>
		FROM affair_course_unit a
		<include refid="affairCourseUnitJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="code != null and code != ''">
				AND a.code LIKE
					<if test="dbName == 'oracle'">'%'||#{code}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{code}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{code},'%')</if>
					<if test="dbName == 'postgre'">'%'||#{code}||'%'</if>
			</if>
			<if test="name != null and name != ''">
				AND a.name LIKE
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{name},'%')</if>
					<if test="dbName == 'postgre'">'%'||#{name}||'%'</if>
			</if>
			<if test="label != null and label != ''">
				AND a.label LIKE
					<if test="dbName == 'oracle'">'%'||#{label}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{label}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{label},'%')</if>
					<if test="dbName == 'postgre'">'%'||#{label}||'%'</if>
			</if>
			<if test="type != null and type != ''">
				AND a.type LIKE
					<if test="dbName == 'oracle'">'%'||#{type}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{type}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{type},'%')</if>
					<if test="dbName == 'postgre'">'%'||#{type}||'%'</if>
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="AffairCourseUnit">
		SELECT 
			<include refid="affairCourseUnitColumns"/>
		FROM affair_course_unit a
		<include refid="affairCourseUnitJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO affair_course_unit(
			id,
			unit,
			unit_id,
			create_by,
			create_org_id,
			create_id_no,
			create_date,
			update_by,
			update_org_id,
			update_id_no,
			update_date,
			del_flag,
			class_id
		) VALUES (
			#{id},
			#{unit},
			#{unitId},
			#{createBy.id},
			#{createOrgId},
			#{createIdNo},
			#{createDate},
			#{updateBy.id},
			#{updateOrgId},
			#{updateIdNo},
			#{updateDate},
			#{delFlag},
			#{classId}


		)
	</insert>
	
	<update id="update">
		UPDATE affair_course_unit SET
			unit = #{unit},
			unit_id = #{unitId},
			create_org_id = #{createOrgId},
			create_id_no = #{createIdNo},
			update_by = #{updateBy.id},
			update_org_id = #{updateOrgId},
			update_id_no = #{updateIdNo},
			update_date = #{updateDate},
			class_id = #{classId}

		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE affair_course_unit SET
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>

	<update id="deleteByIds">
		UPDATE affair_course_unit SET
		del_flag = '1'
		WHERE id in <foreach collection="ids" item="item" index="index"
							 open="(" separator="," close=")">#{item}</foreach>
	</update>
</mapper>