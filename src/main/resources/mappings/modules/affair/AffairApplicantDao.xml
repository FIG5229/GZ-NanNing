<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.affair.dao.AffairApplicantDao">

    <sql id="affairApplicantColumns">
		a.id AS "id",
		a.name AS "name",
		a.id_number AS "idNumber",
		a.sex AS "sex",
		a.party_branch AS "partyBranch",
		a.party_branch_id AS "partyBranchId",
		a.job AS "job",
		a.nation AS "nation",
		a.education_degree AS "educationDegree",
		a.birthday AS "birthday",
		a.enter_date AS "enterDate",
		a.create_by AS "createBy.id",
		a.create_org_id AS "createOrgId",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_org_id AS "updateOrgId",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.police_num AS "policeNum",
		a.status AS "status"
	</sql>

    <sql id="affairApplicantJoins">
		LEFT JOIN sys_office o ON o.id = a.create_org_id
		LEFT JOIN sys_user u ON u.id = a.create_by
	</sql>

    <select id="get" resultType="AffairApplicant">
        SELECT
        <include refid="affairApplicantColumns"/>
        FROM affair_applicant a
        <include refid="affairApplicantJoins"/>
        WHERE a.id = #{id}
    </select>

    <select id="findList" resultType="AffairApplicant">
        SELECT
        <include refid="affairApplicantColumns"/>
        FROM affair_applicant a
        <include refid="affairApplicantJoins"/>
        LEFT JOIN affair_general_situation s
        ON s.id = a.party_branch_id
        <where>
            a.del_flag = #{DEL_FLAG_NORMAL}
            <if test="name != null and name != ''">
                AND a.name LIKE '%'||#{name}||'%'
            </if>
            <if test="idNumber != null and idNumber != ''">
                AND a.id_number LIKE #{idNumber}
            </if>
            <if test="sex != null and sex != ''">
                AND a.sex = #{sex}
            </if>
            <if test="partyBranchId != null and partyBranchId != ''">
                AND a.party_branch_id = #{partyBranchId}
            </if>
            <choose>
                <when test="birthdayStart != null and birthdayStart != '' and birthdayEnd != null and birthdayEnd != ''">
                    AND a.birthday between #{birthdayStart} and #{birthdayEnd}
                </when>
                <otherwise>
                    <if test="birthdayStart != null and birthdayStart != ''">
                        AND a.birthday >= #{birthdayStart}
                    </if>
                    <if test="birthdayEnd != null and birthdayEnd != ''">
                        AND #{birthdayEnd} >= a.birthday
                    </if>
                    AND a.status != '1'
                </otherwise>
            </choose>
            <choose>
                <when test="enterDateStart != null and enterDateStart != '' and enterDateEnd != null and enterDateEnd != ''">
                    AND a.enter_date between #{enterDateStart} and #{enterDateEnd}
                </when>
                <otherwise>
                    <if test="enterDateStart != null and enterDateStart != ''">
                        AND a.enter_date >= #{enterDateStart}
                    </if>
                    <if test="enterDateEnd != null and enterDateEnd != ''">
                        AND #{enterDateEnd} >= a.enter_date
                    </if>
                </otherwise>
            </choose>
            <if test="treeId != null and treeId != ''">
                AND (a.party_branch_id = #{treeId} OR s.parent_ids LIKE CONCAT('%,', #{treeId}, ',%'))
            </if>
            <!-- 数据范围过滤 -->
            ${sqlMap.dsf}
        </where>
        <choose>
            <when test="page !=null and page.orderBy != null and page.orderBy != ''">
                ORDER BY ${page.orderBy}
            </when>
            <otherwise>
            </otherwise>
        </choose>
    </select>

    <select id="findAllList" resultType="AffairApplicant">
        SELECT
        <include refid="affairApplicantColumns"/>
        FROM affair_applicant a
        <include refid="affairApplicantJoins"/>
        <where>
            a.del_flag = #{DEL_FLAG_NORMAL}
        </where>
        <choose>
            <when test="page !=null and page.orderBy != null and page.orderBy != ''">
                ORDER BY ${page.orderBy}
            </when>
            <otherwise>
            </otherwise>
        </choose>
    </select>

    <insert id="insert">
		INSERT INTO affair_applicant(
			id,
			name,
			id_number,
			sex,
			party_branch,
			party_branch_id,
			job,
			nation,
			education_degree,
			birthday,
			enter_date,
			create_by,
			create_org_id,
			create_date,
			update_by,
			update_org_id,
			update_date,
			del_flag,
			police_num,
			status
		) VALUES (
			#{id},
			#{name},
			#{idNumber},
			#{sex},
			#{partyBranch},
			#{partyBranchId},
			#{job},
			#{nation},
			#{educationDegree},
			#{birthday},
			#{enterDate},
			#{createBy.id},
			#{createBy.office.id},
			#{createDate},
			#{updateBy.id},
			#{updateBy.office.id},
			#{updateDate},
			#{delFlag},
			#{policeNum},
			'0'
		)
	</insert>

    <update id="update">
		UPDATE affair_applicant SET 	
			name = #{name},
			id_number = #{idNumber},
			sex = #{sex},
			party_branch = #{partyBranch},
			party_branch_id = #{partyBranchId},
			job = #{job},
			nation = #{nation},
			education_degree = #{educationDegree},
			birthday = #{birthday},
			enter_date = #{enterDate},
			update_by = #{updateBy.id},
			update_org_id = #{updateBy.office.id},
			update_date = #{updateDate},
			police_num = #{policeNum},
			status = #{status}
		WHERE id = #{id}
	</update>

    <update id="delete">
		UPDATE affair_applicant SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>

    <update id="deleteByIds">
        UPDATE affair_applicant SET
        del_flag = '1'
        WHERE id in
        <foreach collection="ids" item="item" index="index"
                 open="(" separator="," close=")">#{item}
        </foreach>
    </update>

</mapper>