<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.affair.dao.AffairReportComplaintsDao">
    
	<sql id="affairReportComplaintsColumns">
		a.id AS "id",
		a.date AS "date",
		a.title AS "title",
		a.unit AS "unit",
		a.main_content AS "mainContent",
		a.annex AS "annex",
		a.create_by AS "createBy.id",
		a.create_org_id AS "createOrgId",
		a.create_id_no AS "createIdNo",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_org_id AS "updateOrgId",
		a.update_id_no AS "updateIdNo",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.range AS "range",
		a.responsible_unit AS "responsibleUnit",
		a.responsible_unit_id AS "responsibleUnitId",
		a.is_true AS "isTrue"
	</sql>
	
	<sql id="affairReportComplaintsJoins">
		LEFT JOIN sys_office o ON o.id = a.create_org_id
		LEFT JOIN sys_user u ON u.id = a.create_by
	</sql>
    
	<select id="get" resultType="AffairReportComplaints">
		SELECT 
			<include refid="affairReportComplaintsColumns"/>
		FROM affair_report_complaints a
		<include refid="affairReportComplaintsJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="AffairReportComplaints">
		SELECT 
			<include refid="affairReportComplaintsColumns"/>
		FROM affair_report_complaints a
		<include refid="affairReportComplaintsJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<choose>
				<when test="beginDate != null and beginDate != '' and endDate != null and endDate != ''">
					AND a.date between #{beginDate} and #{endDate}
				</when>
				<when test="beginDate != null and beginDate != ''">
					AND a.date >= #{beginDate}
				</when>
				<when test="endDate != null and endDate != ''">
					AND  #{endDate} >= a.date
				</when>
				<otherwise>
				</otherwise>
			</choose>
			<if test="title != null and title != ''">
				AND a.title LIKE 
					<if test="dbName == 'oracle'">'%'||#{title}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{title}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{title},'%')</if>
					<if test="dbName == 'postgre'">'%'||#{title}||'%'</if>
			</if>
			<if test="responsibleUnitId != null and responsibleUnitId != ''">
				AND ( o.ID = #{responsibleUnitId} OR o.parent_ids LIKE'%,'||#{responsibleUnitId}||',%' OR u.ID = #{createBy.id} or a.responsible_unit_id=#{responsibleUnitId} or a.range LIKE '%'||#{range}||'%')
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="AffairReportComplaints">
		SELECT 
			<include refid="affairReportComplaintsColumns"/>
		FROM affair_report_complaints a
		<include refid="affairReportComplaintsJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO affair_report_complaints(
			id,
			date,
			title,
			unit,
			main_content,
			annex,
			create_by,
			create_org_id,
			create_id_no,
			create_date,
			update_by,
			update_org_id,
			update_id_no,
			update_date,
			del_flag,
			range,
			responsible_unit,
			responsible_unit_id,
			is_true
		) VALUES (
			#{id},
			#{date},
			#{title},
			#{unit},
			#{mainContent},
			#{annex},
			#{createBy.id},
			#{createBy.office.id},
			#{createIdNo},
			#{createDate},
			#{updateBy.id},
			#{updateBy.office.id},
			#{updateIdNo},
			#{updateDate},
			#{delFlag},
			#{range},
			#{responsibleUnit},
			#{responsibleUnitId},
			#{isTrue}
		)
	</insert>
	
	<update id="update">
		UPDATE affair_report_complaints SET 	
			date = #{date},
			title = #{title},
			unit = #{unit},
			main_content = #{mainContent},
			annex = #{annex},
			create_id_no = #{createIdNo},
			range = #{range},
			responsible_unit = #{responsibleUnit},
			responsible_unit_id = #{responsibleUnitId},
			is_true = #{isTrue}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE affair_report_complaints SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
</mapper>