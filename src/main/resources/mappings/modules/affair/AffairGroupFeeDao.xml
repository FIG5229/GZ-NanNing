<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.affair.dao.AffairGroupFeeDao">
    
	<sql id="affairGroupFeeColumns">
		a.id AS "id",
		a.expenditure_category AS "expenditureCategory",
		a.payout_amount AS "payoutAmount",
		a.expenditure_content AS "expenditureContent",
		a.expenditure_date AS "expenditureDate",
		a.group_org AS "groupOrg",
		a.group_org_id AS "groupOrgId",
		a.manager AS "manager",
		a.manager_num AS "managerNum",
		a.payee AS "payee",
		a.payee_num AS "payeeNum",
		a.create_by AS "createBy.id",
		a.create_org_id AS "createOrgId",
		a.create_id_no AS "createIdNo",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_org_id AS "updateOrgId",
		a.update_id_no AS "updateIdNo",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="affairGroupFeeJoins">
		LEFT JOIN sys_office o ON o.id = a.create_org_id
		LEFT JOIN sys_user u ON u.id = a.create_by
	</sql>
    
	<select id="get" resultType="com.thinkgem.jeesite.modules.affair.entity.AffairGroupFee">
		SELECT 
			<include refid="affairGroupFeeColumns"/>
		FROM affair_group_fee a
		<include refid="affairGroupFeeJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="com.thinkgem.jeesite.modules.affair.entity.AffairGroupFee">
		SELECT 
			<include refid="affairGroupFeeColumns"/>
		FROM affair_group_fee a
		<include refid="affairGroupFeeJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="expenditureCategory != null and expenditureCategory != ''">
				AND a.expenditure_category = #{expenditureCategory}
			</if>
			<choose>
				<when test="minMoney != null and minMoney != '' and maxMoney != null and maxMoney != ''">
					AND a.payout_amount between #{minMoney} and #{maxMoney}
				</when>
				<when test="minMoney != null and minMoney != ''">
					AND a.payout_amount >= #{minMoney}
				</when>
				<when test="maxMoney != null and maxMoney != ''">
					AND  #{maxMoney} >= a.payout_amount
				</when>
				<otherwise>
				</otherwise>
			</choose>
			<choose>
				<when test="startDate != null and startDate != '' and endDate != null and endDate != ''">
					AND a.expenditure_date between #{startDate} and #{endDate}
				</when>
				<when test="startDate != null and startDate != ''">
					AND a.expenditure_date >= #{startDate}
				</when>
				<when test="endDate != null and endDate != ''">
					AND  #{endDate} >= a.expenditure_date
				</when>
				<otherwise>
				</otherwise>
			</choose>
			<if test="groupOrgId != null and groupOrgId != ''">
				AND a.group_org_id = #{groupOrgId}
			</if>
			<if test="manager != null and manager != ''">
				AND a.manager LIKE '%'||#{manager}||'%'
			</if>
			${sqlMap.dsf}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.expenditure_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="com.thinkgem.jeesite.modules.affair.entity.AffairGroupFee">
		SELECT 
			<include refid="affairGroupFeeColumns"/>
		FROM affair_group_fee a
		<include refid="affairGroupFeeJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO affair_group_fee(
			id,
			expenditure_category,
			payout_amount,
			expenditure_content,
			expenditure_date,
			group_org,
			group_org_id,
			manager,
			manager_num,
			payee,
			payee_num,
			create_by,
			create_org_id,
			create_id_no,
			create_date,
			update_by,
			update_org_id,
			update_id_no,
			update_date,
			del_flag
		) VALUES (
			#{id},
			#{expenditureCategory},
			#{payoutAmount},
			#{expenditureContent},
			#{expenditureDate},
			#{groupOrg},
			#{groupOrgId},
			#{manager},
			#{managerNum},
			#{payee},
			#{payeeNum},
			#{createBy.id},
			#{createBy.office.id},
			#{createIdNo},
			#{createDate},
			#{updateBy.id},
			#{updateBy.office.id},
			#{updateIdNo},
			#{updateDate},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE affair_group_fee SET 	
			expenditure_category = #{expenditureCategory},
			payout_amount = #{payoutAmount},
			expenditure_content = #{expenditureContent},
			expenditure_date = #{expenditureDate},
			group_org = #{groupOrg},
			group_org_id = #{groupOrgId},
			manager = #{manager},
			manager_num = #{managerNum},
			payee = #{payee},
			payee_num = #{payeeNum},
			update_by = #{updateBy.id},
			update_org_id = #{updateBy.office.id},
			update_id_no = #{updateIdNo},
			update_date = #{updateDate}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE affair_group_fee SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>

	<update id="deleteByIds">
		UPDATE affair_group_fee SET
		del_flag = '1'
		WHERE id in <foreach collection="ids" item="item" index="index"
							 open="(" separator="," close=")">#{item}</foreach>
	</update>
</mapper>