<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.affair.dao.AffairWorkRecordDao">
    
	<sql id="affairWorkRecordColumns">
		a.id AS "id",
		a.years AS "years",
		a.weeks AS "weeks",
		a.begin_date AS "beginDate",
		a.over_date AS "overDate",
		a.job_completion_condition AS "jobCompletionCondition",
		a.unit_principal_opinion AS "unitPrincipalOpinion",
		a.create_by AS "createBy.id",
		a.create_org_id AS "createOrgId",
		a.create_id_no AS "createIdNo",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_org_id AS "updateOrgId",
		a.update_id_no AS "updateIdNo",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.appendfile AS "appendfile",
		a.name AS "name",
		a.unit AS "unit",
		a.unit_id AS "unitId",
		a.post_nape AS "postNape",
		a.ju_check_man AS "juCheckMan",
		a.chu_check_man AS "chuCheckMan",
		a.submit_man AS "submitMan",
		a.check_type AS "checkType",
		a.ju_check_id AS "juCheckId",
		a.chu_check_id AS "chuCheckId",
		a.submit_id AS "submitId",
		a.opinion AS "opinion",
		a.evaluate AS "evaluate"
	</sql>
	
	<sql id="affairWorkRecordJoins">
	LEFT JOIN sys_office o ON o.id = a.create_org_id
		LEFT JOIN sys_user u ON u.id = a.create_by
	</sql>
    
	<select id="get" resultType="AffairWorkRecord">
		SELECT 
			<include refid="affairWorkRecordColumns"/>
		FROM affair_work_record a
		<include refid="affairWorkRecordJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="AffairWorkRecord">
		SELECT 
			<include refid="affairWorkRecordColumns"/>
		FROM affair_work_record a
		<include refid="affairWorkRecordJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="years != null and years != ''">
				AND a.years = #{years}
			</if>
			<if test="weeks != null and weeks != ''">
				AND a.weeks = #{weeks}
			</if>
			<if test="beginDate != null and beginDate != ''">
				AND a.begin_date = #{beginDate}
			</if>
			<if test="overDate != null and overDate != ''">
				AND a.over_date = #{overDate}
			</if>
			<if test="name != null and name != ''">
				AND a.name = #{name}
			</if>
			<if test="unitId != null and unitId != ''">
				AND a.unit_id = #{unitId}
			</if>
			<choose>
				<when test="isPersonnel != null and isPersonnel">
					AND (u.id = #{userId} or a.chu_check_id = #{userId})
				</when>
				<otherwise>
					${sqlMap.dsf}
				</otherwise>
			</choose>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="AffairWorkRecord">
		SELECT 
			<include refid="affairWorkRecordColumns"/>
		FROM affair_work_record a
		<include refid="affairWorkRecordJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	<select id="findByIds" resultType="com.thinkgem.jeesite.modules.affair.entity.AffairWorkRecord">
		select <include refid="affairWorkRecordColumns"/>
		from affair_work_record a
		where a.del_flag = '0'
		and a.id in <foreach collection="idList" item="id" open="(" separator="," close=")">
		#{id}
	</foreach>
	</select>

	<insert id="insert">
		INSERT INTO affair_work_record(
			id,
			years,
			weeks,
			begin_date,
			over_date,
			job_completion_condition,
			unit_principal_opinion,
			create_by,
			create_org_id,
			create_id_no,
			create_date,
			update_by,
			update_org_id,
			update_id_no,
			update_date,
			del_flag,
			appendfile,
			name,
			unit,
			unit_id,
			post_nape,
			ju_check_man,
			chu_check_man,
			submit_man,
			check_type,
			ju_check_id,
			chu_check_id,
			submit_id,
			opinion,
			evaluate
		) VALUES (
			#{id},
			#{years},
			#{weeks},
			#{beginDate},
			#{overDate},
			#{jobCompletionCondition},
			#{unitPrincipalOpinion},
			#{createBy.id},
			#{createBy.office.id},
			#{createIdNo},
			#{createDate},
			#{updateBy.id},
			#{updateBy.office.id},
			#{updateIdNo},
			#{updateDate},
			#{delFlag},
			#{appendfile},
			#{name},
			#{unit},
			#{unitId},
			#{postNape},
			#{juCheckMan},
			#{chuCheckMan},
			#{submitMan},
			#{checkType},
			#{juCheckId},
			#{chuCheckId},
			#{submitId},
			#{opinion},
			#{evaluate}
		)
	</insert>
	
	<update id="update">
		UPDATE affair_work_record SET 	
			years = #{years},
			weeks = #{weeks},
			begin_date = #{beginDate},
			over_date = #{overDate},
			job_completion_condition = #{jobCompletionCondition},
			unit_principal_opinion = #{unitPrincipalOpinion},
			create_org_id = #{createOrgId},
			create_id_no = #{createIdNo},
			update_by = #{updateBy.id},
			update_org_id = #{updateBy.office.id},
			update_id_no = #{updateIdNo},
			update_date = #{updateDate},
			appendfile = #{appendfile},
			name = #{name},
			unit = #{unit},
			unit_id = #{unitId},
			post_nape = #{postNape},
			ju_check_man = #{juCheckMan},
			chu_check_man = #{chuCheckMan},
			submit_man = #{submitMan},
			check_type = #{checkType},
			ju_check_id = #{juCheckId},
			chu_check_id = #{chuCheckId},
			submit_id = #{submitId},
			opinion = #{opinion},
			evaluate = #{evaluate}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE affair_work_record SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>

	<update id="deleteByIds">
		UPDATE affair_work_record SET
		del_flag = '1'
		WHERE id in <foreach collection="ids" item="item" index="index"
							 open="(" separator="," close=")">#{item}</foreach>
	</update>



</mapper>