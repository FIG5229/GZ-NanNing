<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.affair.dao.PersonnelPassportDao">
    
	<sql id="personnelPassportColumns">
		a.id AS "id",
		a.id_number AS "idNumber",
		a.name AS "name",
		a.person_name AS "personName",
		a.place AS "place",
		a.issue_date AS "issueDate",
		a.to_date AS "toDate",
		a.certificate_no AS "certificateNo",
		a.reason AS "reason",
		a.status AS "status",
		a.receive_date AS "receiveDate",
		a.return_date AS "returnDate",
		a.file_no AS "fileNo",
		a.cancel_date AS "cancelDate",
		a.media AS "media",
		a.issue_org AS "issueOrg",
		a.save_org_per AS "saveOrgPer",
		a.create_by AS "createBy.id",
		a.create_org_id AS "createOrgId",
		a.create_id_no AS "createIdNo",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_org_id AS "updateOrgId",
		a.update_id_no AS "updateIdNo",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="personnelPassportJoins">
	</sql>
    
	<select id="get" resultType="PersonnelPassport">
		SELECT 
			<include refid="personnelPassportColumns"/>
		FROM personnel_passport a
		<include refid="personnelPassportJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="PersonnelPassport">
		SELECT 
			<include refid="personnelPassportColumns"/>
		FROM personnel_passport a
		<include refid="personnelPassportJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="idNumber != null and idNumber != ''">
				AND a.id_number = #{idNumber}
			</if>
			<if test="name != null and name != ''">
				AND a.name LIKE '%'||#{name}||'%'
			</if>
			<if test="personName != null and personName != ''">
				AND a.person_name LIKE '%'||#{personName}||'%'
			</if>
			<choose>
				<when test="beginIssueDate != null and beginIssueDate != '' and endIssueDate != null and endIssueDate != ''">
					AND a.issue_date between #{beginIssueDate} and #{endIssueDate}
				</when>
				<when test="beginIssueDate != null and beginIssueDate != ''">
					AND a.issue_date >= #{beginIssueDate}
				</when>
				<when test="endIssueDate != null and endIssueDate != ''">
					AND  #{endIssueDate} >= a.issue_date
				</when>
				<otherwise>
				</otherwise>
			</choose>
			<choose>
				<when test="beginReceiveDate != null and beginReceiveDate != '' and endReceiveDate != null and endReceiveDate != ''">
					AND a.receive_date between #{beginReceiveDate} and #{endReceiveDate}
				</when>
				<when test="beginReceiveDate != null and beginReceiveDate != ''">
					AND a.receive_date >= #{beginReceiveDate}
				</when>
				<when test="endReceiveDate != null and endReceiveDate != ''">
					AND  #{endReceiveDate} >= a.receive_date
				</when>
				<otherwise>
				</otherwise>
			</choose>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date ASC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="PersonnelPassport">
		SELECT 
			<include refid="personnelPassportColumns"/>
		FROM personnel_passport a
		<include refid="personnelPassportJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO personnel_passport(
			id,
			id_number,
			name,
			person_name,
			place,
			issue_date,
			to_date,
			certificate_no,
			reason,
			status,
			receive_date,
			return_date,
			file_no,
			cancel_date,
			media,
			issue_org,
			save_org_per,
			create_by,
			create_org_id,
			create_id_no,
			create_date,
			update_by,
			update_org_id,
			update_id_no,
			update_date,
			del_flag
		) VALUES (
			#{id},
			#{idNumber},
			#{name},
			#{personName},
			#{place},
			#{issueDate},
			#{toDate},
			#{certificateNo},
			#{reason},
			#{status},
			#{receiveDate},
			#{returnDate},
			#{fileNo},
			#{cancelDate},
			#{media},
			#{issueOrg},
			#{saveOrgPer},
			#{createBy.id},
			#{createBy.office.id},
			#{createIdNo},
			#{createDate},
			#{updateBy.id},
			#{updateBy.office.id},
			#{updateIdNo},
			#{updateDate},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE personnel_passport SET 	
			id_number = #{idNumber},
			name = #{name},
			person_name = #{personName},
			place = #{place},
			issue_date = #{issueDate},
			to_date = #{toDate},
			certificate_no = #{certificateNo},
			reason = #{reason},
			status = #{status},
			receive_date = #{receiveDate},
			return_date = #{returnDate},
			file_no = #{fileNo},
			cancel_date = #{cancelDate},
			media = #{media},
			issue_org = #{issueOrg},
			save_org_per = #{saveOrgPer},
			update_by = #{updateBy.id},
			update_org_id = #{updateBy.office.id},
			update_id_no = #{updateIdNo},
			update_date = #{updateDate}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE personnel_passport SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>

	<update id="deleteByIds">
		UPDATE personnel_passport SET
		del_flag = '1'
		WHERE id in <foreach collection="ids" item="item" index="index"
							 open="(" separator="," close=")">#{item}</foreach>
	</update>

	<update id="deleteByIdNumbers">
	    UPDATE personnel_passport SET
		del_flag = '1'
		WHERE id_number in <foreach collection="idNumbers" item="item" index="index"
							 open="(" separator="," close=")">#{item}</foreach>
    </update>

</mapper>