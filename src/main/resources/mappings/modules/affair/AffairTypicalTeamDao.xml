<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.affair.dao.AffairTypicalTeamDao">
    
	<sql id="affairTypicalTeamColumns">
		a.id AS "id",
		a.unit AS "unit",
		a.unit_id AS "unitId",
		a.time AS "time",
		a.level AS "level",
		a.won_honor AS "wonHonor",
		a.target AS "target",
		a.programme AS "programme",
		a.ps_department AS "psDepartment",
		a.ps_department_id AS "psDepartmentId",
		a.contact_person AS "contactPerson",
		a.visit_record AS "visitRecord",
		a.publicity AS "publicity",
		a.push_organization AS "pushOrganization",
		a.push_organization_id AS "pushOrganizationId",
		a.file_path AS "filePath",
		a.create_by AS "createBy.id",
		a.create_org_id AS "createOrgId",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_org_id AS "updateOrgId",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.materials AS "materials"
	</sql>
	
	<sql id="affairTypicalTeamJoins">
		LEFT JOIN sys_office o ON o.id = a.create_org_id
		LEFT JOIN sys_user u ON u.id = a.create_by
	</sql>
    
	<select id="get" resultType="AffairTypicalTeam">
		SELECT 
			<include refid="affairTypicalTeamColumns"/>
		FROM affair_typical_team a
		<include refid="affairTypicalTeamJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="AffairTypicalTeam">
		SELECT 
			<include refid="affairTypicalTeamColumns"/>
		FROM affair_typical_team a
		<include refid="affairTypicalTeamJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="unit != null and unit != ''">
				AND a.unit = #{unit}
			</if>
			<choose>
				<when test="beginTime != null and endTime != null and beginTime != '' and endTime != ''">
					AND a.time BETWEEN #{beginTime} AND #{endTime}
				</when>
				<when test="beginTime != null and beginTime !=''">
					AND a.time &gt;= #{beginTime}
				</when>
				<when test="endTime != null and endTime != ''">
					AND a.time &lt; = #{endTime}
				</when>
				<otherwise></otherwise>
			</choose>
			<if test="level != null and level != ''">
				AND a.level = #{level}
			</if>
			<if test="target != null and target != ''">
				AND a.target LIKE 
					<if test="dbName == 'oracle'">'%'||#{target}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{target}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{target},'%')</if>
					<if test="dbName == 'postgre'">'%'||#{target}||'%'</if>
			</if>
			<if test="psDepartment != null and psDepartment != ''">
				AND a.ps_department = #{psDepartment}
			</if>
			<if test="contactPerson != null and contactPerson != ''">
				AND a.contact_person LIKE 
					<if test="dbName == 'oracle'">'%'||#{contactPerson}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{contactPerson}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{contactPerson},'%')</if>
					<if test="dbName == 'postgre'">'%'||#{contactPerson}||'%'</if>
			</if>
			/*${sqlMap.dsf}*/
			<if test="userId != '' and userId != null">
				AND ( o.ID = #{userId} OR o.parent_ids LIKE'%,'||#{userId}||',%' OR u.ID = #{createBy.id} or a.unit_id = #{userId} or u.office_id = #{userId})
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="AffairTypicalTeam">
		SELECT 
			<include refid="affairTypicalTeamColumns"/>
		FROM affair_typical_team a
		<include refid="affairTypicalTeamJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO affair_typical_team(
			id,
			unit,
			unit_id,
			time,
			level,
			won_honor,
			target,
			programme,
			ps_department,
			ps_department_id,
			contact_person,
			visit_record,
			publicity,
			push_organization,
			push_organization_id,
			file_path,
			create_by,
			create_org_id,
			create_date,
			update_by,
			update_org_id,
			update_date,
			del_flag,
			materials
		) VALUES (
			#{id},
			#{unit},
			#{unitId},
			#{time},
			#{level},
			#{wonHonor},
			#{target},
			#{programme},
			#{psDepartment},
			#{psDepartmentId},
			#{contactPerson},
			#{visitRecord},
			#{publicity},
			#{pushOrganization},
			#{pushOrganizationId},
			#{filePath},
			#{createBy.id},
			#{createBy.office.id},
			#{createDate},
			#{updateBy.id},
			#{updateBy.office.id},
			#{updateDate},
			#{delFlag},
			#{materials}
		)
	</insert>
	
	<update id="update">
		UPDATE affair_typical_team SET 	
			unit = #{unit},
			unit_id = #{unitId},
			time = #{time},
			level = #{level},
			won_honor = #{wonHonor},
			target = #{target},
			programme = #{programme},
			ps_department = #{psDepartment},
			ps_department_id = #{psDepartmentId},
			contact_person = #{contactPerson},
			visit_record = #{visitRecord},
			publicity = #{publicity},
			push_organization = #{pushOrganization},
			push_organization_id = #{pushOrganizationId},
			file_path = #{filePath},
			update_by = #{updateBy.id},
			update_org_id = #{updateOrgId},
			update_date = #{updateDate},
			materials = #{materials}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE affair_typical_team SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>

	<update id="deleteByIds">
		update affair_typical_team set
		del_flag = '1'
		where id in
		<foreach collection="ids" item="item" index="index" open="(" separator="," close=")">#{item}</foreach>
	</update>

	<select id="countTypicalTeam" resultType="map">
		select count(a."id") as num,sd.label as label
		from  affair_typical_team a
		left join sys_dict sd on a."level" = sd."value"
		left join sys_office o on o.id=a.unit_id
		where  a.del_flag = '0' and sd."type" = 'affair_approval_unitLevel'
		and ( o."id" = #{officeId} or o."parent_id" =#{officeId} or o.parent_ids like '%${officeId}%')
		<choose>
			<when test="month != null and month !=''">
				AND TO_CHAR(a.time, 'yyyy-mm') = #{month}
			</when>
			<when test="year != null and year !=''">
				AND extract(year from a.time) = #{year}
			</when>
			<when test="beginTime != null and endTime != null">
				AND a.time between  #{beginTime,jdbcType=DATE} and #{endTime,jdbcType=DATE}
			</when>
			<when test="beginTime != null">
				AND a.time >= #{beginTime,jdbcType=DATE}
			</when>
			<when test="endTime != null">
				AND  #{endTime,jdbcType=DATE} >= a.time
			</when>
			<otherwise>
			</otherwise>
		</choose>
		GROUP BY sd.label;
	</select>

	<select id="findTypicalList" resultType="AffairTypicalTeam">
		select <include refid="affairTypicalTeamColumns"/>
		FROM affair_typical_team a
		left join sys_dict sd on a."level" = sd."value"
		left join sys_office o on o.id=a.unit_id
		where a.del_flag = '0' and sd."type" = 'affair_approval_unitLevel'
		and ( o."id" = #{unitId} or o."parent_id" =#{unitId} or o.parent_ids like '%${unitId}%')
		and sd.label = #{label}
		<choose>
			<when test="month != null and month !=''">
				AND TO_CHAR(a.time, 'yyyy-mm') = #{month}
			</when>
			<when test="year != null and year !=''">
				AND extract(year from a.time) = #{year}
			</when>
			<when test="beginTime != null and endTime != null">
				AND a.time between  #{beginTime,jdbcType=DATE} and #{endTime,jdbcType=DATE}
			</when>
			<when test="beginTime != null">
				AND a.time >= #{beginTime,jdbcType=DATE}
			</when>
			<when test="endTime != null">
				AND  #{endTime,jdbcType=DATE} >= a.time
			</when>
			<otherwise>
			</otherwise>
		</choose>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>


</mapper>