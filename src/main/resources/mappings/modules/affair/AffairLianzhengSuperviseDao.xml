<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.affair.dao.AffairLianzhengSuperviseDao">
    
	<sql id="affairLianzhengSuperviseColumns">
		a.id AS "id",
		a.title AS "title",
		a.unit AS "unit",
		a.unit_id AS "unitId",
		a.found_date AS "foundDate",
		a.main_content AS "mainContent",
		a.annex AS "annex",
		a.reviewer AS "reviewer",
		a.audit_opinion AS "auditOpinion",
		a.approval_status AS "approvalStatus",
		a.create_by AS "createBy.id",
		a.create_org_id AS "createOrgId",
		a.create_id_no AS "createIdNo",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_org_id AS "updateOrgId",
		a.update_id_no AS "updateIdNo",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.join_people AS "joinPeople",
		a.zb_unit AS "zbUnit",
		a,money AS "money",
		a.jd_unit AS "jdUnit",
		a.zb_unit_id AS zbUnitId
	</sql>
	
	<sql id="affairLianzhengSuperviseJoins">
		LEFT JOIN sys_office o ON o.id = a.create_org_id
		LEFT JOIN sys_user u ON u.id = a.create_by
	</sql>
    
	<select id="get" resultType="com.thinkgem.jeesite.modules.affair.entity.AffairLianzhengSupervise">
		SELECT 
			<include refid="affairLianzhengSuperviseColumns"/>
		FROM affair_lianzheng_supervise a
		<include refid="affairLianzhengSuperviseJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="com.thinkgem.jeesite.modules.affair.entity.AffairLianzhengSupervise">
		SELECT 
			<include refid="affairLianzhengSuperviseColumns"/>
		FROM affair_lianzheng_supervise a
		<include refid="affairLianzhengSuperviseJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="title != null and title != ''">
				AND a.title LIKE '%'||#{title}||'%'
			</if>
			<if test="jdUnit != null and jdUnit != ''">
				AND a.jd_unit = #{jdUnit}
			</if>
			<if test="zbUnitId != null and zbUnitId != ''">
				AND a.zb_unit_id = #{zbUnitId}
			</if>
			<if test="startYear != null and  startYear != ''">
				AND a.found_date >= #{startYear}
			</if>
			<if test="otherYear != null and  otherYear != ''">
				AND TO_CHAR(a.found_date, 'yyyy') = #{otherYear}
			</if>
			<choose>
				<when test="startDate != null and startDate != '' and endDate != null and endDate != ''">
					AND a.found_date between #{startDate} and #{endDate}
				</when>
				<when test="startDate != null and startDate != ''">
					AND a.found_date >= #{startDate}
				</when>
				<when test="endDate != null and endDate != ''">
					AND  #{endDate} >= a.found_date
				</when>
				<otherwise>
				</otherwise>
			</choose>
			<choose>
				<when test="unitId != null and unitId != '' ">
					AND ( o.ID = #{unitId} OR o.parent_ids LIKE'%,'||#{unitId}||',%' OR u.ID = #{createBy.id} or a.unit_id=#{unitId})
				</when>
				<otherwise>
					AND ( o.ID = #{unitId} OR u.ID = #{createBy.id} or a.unit_id=#{unitId})
				</otherwise>
			</choose>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.found_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="com.thinkgem.jeesite.modules.affair.entity.AffairLianzhengSupervise">
		SELECT 
			<include refid="affairLianzhengSuperviseColumns"/>
		FROM affair_lianzheng_supervise a
		<include refid="affairLianzhengSuperviseJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO affair_lianzheng_supervise(
			id,
			title,
			unit,
			unit_id,
			found_date,
			main_content,
			annex,
			reviewer,
			audit_opinion,
			approval_status,
			create_by,
			create_org_id,
			create_id_no,
			create_date,
			update_by,
			update_org_id,
			update_id_no,
			update_date,
			del_flag,
			join_people,
			zb_unit,
			money,
			jd_unit,
			zb_unit_id
		) VALUES (
			#{id},
			#{title},
			#{unit},
			#{zbUnitId},
			#{foundDate},
			#{mainContent},
			#{annex},
			#{reviewer},
			#{auditOpinion},
			#{approvalStatus},
			#{createBy.id},
			#{createBy.office.id},
			#{createIdNo},
			#{createDate},
			#{updateBy.id},
			#{updateBy.office.id},
			#{updateIdNo},
			#{updateDate},
			#{delFlag},
			#{joinPeople},
			#{zbUnit},
			#{money},
			#{jdUnit},
			#{zbUnitId}
		)
	</insert>
	
	<update id="update">
		UPDATE affair_lianzheng_supervise SET 	
			title = #{title},
			unit = #{unit},
			unit_id = #{zbUnitId},
			found_date = #{foundDate},
			main_content = #{mainContent},
			annex = #{annex},
			reviewer = #{reviewer},
			audit_opinion = #{auditOpinion},
			approval_status = #{approvalStatus},
			update_by = #{updateBy.id},
			update_org_id = #{updateBy.office.id},
			update_id_no = #{updateIdNo},
			update_date = #{updateDate},
			join_people = #{joinPeople},
			zb_unit = #{zbUnit},
			money = #{money},
			jd_unit = #{jdUnit},
			zb_unit_id = #{zbUnitId}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE affair_lianzheng_supervise SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>

	<update id="deleteByIds">
		UPDATE affair_lianzheng_supervise SET
		del_flag = '1'
		WHERE id in <foreach collection="ids" item="item" index="index"
							 open="(" separator="," close=")">#{item}</foreach>
	</update>
	
	<select id="findInfoByJdUnit" resultType="java.util.HashMap">
		SELECT
		sd.label,
		COUNT(a.jd_unit)
		FROM
		affair_lianzheng_supervise a
		<include refid="affairLianzhengSuperviseJoins"/>
		LEFT JOIN sys_dict sd ON a.jd_unit = sd.value
		WHERE
		a.del_flag  = '0'
		AND sd.type = 'affair_xfjb_unit' AND sd.del_flag = '0'
		<!--<if test="id != null and id != ''">
			AND a.unit_id = #{id}
		</if>-->
		<choose>
			<when test="year != null and year !=''">
				AND extract(year from a.found_date) = #{year}
			</when>
			<when test="month != null and month !=''">
				AND TO_CHAR(a.found_date, 'yyyy-mm') = #{month}
			</when>
			<when test="startDate != null and endDate != null">
				AND date_trunc('day', a.found_date) between  #{startDate,jdbcType=DATE} and #{endDate,jdbcType=DATE}
			</when>
			<when test="startDate != null">
				AND a.found_date >= #{startDate,jdbcType=DATE}
			</when>
			<when test="endDate != null">
				AND  #{endDate,jdbcType=DATE} >= date_trunc('day', a.found_date)
			</when>
			<otherwise>
			</otherwise>
		</choose>
		${id}
		GROUP BY
		a.jd_unit,
		sd.label
	</select>

	<select id="findDetailInfo" resultType="AffairLianzhengSupervise">
		SELECT
			<include refid="affairLianzhengSuperviseColumns"/>
		FROM
		affair_lianzheng_supervise a
		LEFT JOIN sys_dict sd ON a.jd_unit = sd.value
		WHERE
		a.del_flag  = '0'
		AND sd.type = 'affair_xfjb_unit' AND sd.del_flag = '0'
		<if test="type != null and type != ''">
			AND a.jd_unit = #{type}
		</if>
		<if test="id != null and id != ''">
			AND a.unit_id = #{id}
		</if>
		<choose>
			<when test="year != null and year !=''">
				AND extract(year from a.found_date) = #{year}
			</when>
			<when test="month != null and month !=''">
				AND TO_CHAR(a.found_date, 'yyyy-mm') = #{month}
			</when>
			<when test="startDate != null and endDate != null">
				AND date_trunc('day', a.found_date) between  #{startDate,jdbcType=DATE} and #{endDate,jdbcType=DATE}
			</when>
			<when test="startDate != null">
				AND a.found_date >= #{startDate,jdbcType=DATE}
			</when>
			<when test="endDate != null">
				AND  #{endDate,jdbcType=DATE} >= date_trunc('day', a.found_date)
			</when>
			<otherwise>
			</otherwise>
		</choose>
		ORDER BY
		a.found_date
	</select>
	
</mapper>