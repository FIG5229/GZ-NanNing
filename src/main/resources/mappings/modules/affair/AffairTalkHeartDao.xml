<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.affair.dao.AffairTalkHeartDao">
    
	<sql id="affairTalkHeartColumns">
		a.id AS "id",
		a.time AS "time",
		a.politic_countenance AS "politicCountenance",
		a.unit AS "unit",
		a.unit_id AS "unitId",
		a.heart_talker AS "heartTalker",
		a.heart_to AS "heartTo",
		a.mode AS "mode",
		a.content AS "content",
		a.file_path AS "filePath",
		a.create_by AS "createBy.id",
		a.create_org_id AS "createOrgId",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_org_id AS "updateOrgId",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.evaluate as "evaluate"
	</sql>
	
	<sql id="affairTalkHeartJoins">
		LEFT JOIN sys_office o ON o.id = a.create_org_id
		LEFT JOIN sys_user u ON u.id = a.create_by
	</sql>
    
	<select id="get" resultType="AffairTalkHeart">
		SELECT 
			<include refid="affairTalkHeartColumns"/>
		FROM affair_talk_heart a
		<include refid="affairTalkHeartJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="AffairTalkHeart">
		SELECT 
			<include refid="affairTalkHeartColumns"/>
		FROM affair_talk_heart a
		<include refid="affairTalkHeartJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<choose>
				<when test="beginTime != null and endTime != null and beginTime != '' and endTime != ''">
					AND a.time BETWEEN #{beginTime} AND #{endTime}
				</when>
				<when test="beginTime != null and beginTime != ''">
					AND a.time &gt;= #{beginTime}
				</when>
				<when test="endTime != null and endTime != ''">
					AND a.time &lt;= #{endTime}
				</when>
				<otherwise></otherwise>
			</choose>
			<if test="politicCountenance != null and politicCountenance != ''">
				AND a.politic_countenance = #{politicCountenance}
			</if>
			<if test="unit != null and unit != ''">
				AND a.unit = #{unit}
			</if>
			<if test="heartTalker != null and heartTalker != ''">
				AND a.heart_talker = #{heartTalker}
			</if>
			<if test="heartTo != null and heartTo != ''">
				AND a.heart_to = #{heartTo}
			</if>
			<if test="mode != null and mode != ''">
				AND a.mode = #{mode}
			</if>
			<if test="year != null and year != ''">
				and extract (year from a.time) = ${year}
			</if>
			<if test="month != null and month != ''">
				and to_char(a.time ,'yyyy-mm') = #{month}
			</if>
			<if test="evaluate != null and evaluate != ''">
				and a.evaluate = #{evaluate}
			</if>
			${sqlMap.dsf}
			<!--<if test="officeId != null and officeId != '' and userId != null and  userId != ''">
				AND (o.ID = #{officeId} OR o.parent_ids LIKE'%,'||#{officeId}||',%' OR u.ID = #{officeId} or a.unit_id=#{officeId} or a.create_by = #{userId})
			</if>-->
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY NULLIF(evaluate, '') ASC ,a.time DESC , a.id
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="AffairTalkHeart">
		SELECT 
			<include refid="affairTalkHeartColumns"/>
		FROM affair_talk_heart a
		<include refid="affairTalkHeartJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

    <select id="selectAllYear" resultType="java.lang.String">
		select
			DISTINCT	( to_char( time, 'yyyy' ) )
		from
			affair_talk_heart
		where
		 	del_flag = '0'
	</select>
    <select id="selectAllMonth" resultType="java.lang.String">
		select
			DISTINCT	( to_char( time, 'MM' ) )
		from
			affair_talk_heart
		where
		 	del_flag = '0'
	</select>

    <select id="selectNumber" resultType="java.lang.Integer">
		SELECT COUNT
			( ID )
		FROM
			affair_talk_heart
		WHERE
			del_flag = '0'
			AND unit_id = #{idNumber}
			AND  to_char ( "time", 'yyyy-mm-dd HH24:mi:ss:ff' ) = #{time}
	</select>

    <select id="selectAllName" resultType="java.lang.String">
		SELECT
			unit
		FROM
			affair_talk_heart
		WHERE
			del_flag = '0'
	</select>

    <insert id="insert">
		INSERT INTO affair_talk_heart(
			id,
			time,
			politic_countenance,
			unit,
			unit_id,
			heart_talker,
			heart_to,
			mode,
			content,
			file_path,
			create_by,
			create_org_id,
			create_date,
			update_by,
			update_org_id,
			update_date,
			del_flag,
			evaluate
		) VALUES (
			#{id},
			#{time},
			#{politicCountenance},
			#{unit},
			#{unitId},
			#{heartTalker},
			#{heartTo},
			#{mode},
			#{content},
			#{filePath},
			#{createBy.id},
			#{createBy.office.id},
			#{createDate},
			#{updateBy.id},
			#{updateBy.office.id},
			#{updateDate},
			#{delFlag},
			#{evaluate}
		)
	</insert>
	
	<update id="update">
		UPDATE affair_talk_heart SET 	
			time = #{time},
			politic_countenance = #{politicCountenance},
			unit = #{unit},
			unit_id = #{unitId},
			heart_talker = #{heartTalker},
			heart_to = #{heartTo},
			mode = #{mode},
			content = #{content},
			file_path = #{filePath},
			update_by = #{updateBy.id},
			update_org_id = #{updateBy.office.id},
			update_date = #{updateDate},
			evaluate = #{evaluate}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE affair_talk_heart SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>

	<update id="deleteByIds">
		UPDATE affair_talk_heart SET
		del_flag = '1'
		WHERE id in <foreach collection="ids" item="item" index="index"
							 open="(" separator="," close=")">#{item}</foreach>
	</update>

</mapper>