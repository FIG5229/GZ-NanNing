<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.exam.dao.ExamCheckDao1">
    
	<sql id="examCheckColumns">
		a.id AS "id",
		a.check_date AS "checkDate",
		a.check_unit AS "checkUnit",
		a.check_unit_id AS "checkUnitId",
		a.check_person AS "checkPerson",
		a.duty_unit AS "dutyUnit",
		a.duty_unit_id AS "dutyUnitId",
		a.use_model AS "useModel",
		a.choose_options AS "chooseOptions",
		a.test_standart AS "testStandart",
		a.scort_situation AS "scortSituation",
		a.remark AS "remark",
		a.duty_leader AS "dutyLeader",
		a.duty_person AS "dutyPerson",
		a.review_type AS "reviewType",
		a.opinion AS "opinion",
		a.create_by AS "createBy.id",
		a.create_org_id AS "createOrgId",
		a.create_id_no AS "createIdNo",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_org_id AS "updateOrgId",
		a.update_id_no AS "updateIdNo",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.status AS "status",
		a.add_status AS "addStatus",
		a.explan AS "explan",
		a.use_model_name AS "useModelName",
		a.check_person_id AS "checkPersonId",
		a.duty_leader_id AS "dutyLeaderId",
		a.duty_person_id AS "dutyPersonId"
	</sql>
	
	<sql id="examCheckJoins">
		LEFT JOIN sys_office o ON o.id = a.create_org_id
		LEFT JOIN sys_user u ON u.id = a.create_by
	</sql>

	<sql id="examCheckJoins1">
		LEFT JOIN sys_office o3 ON o3.id = a.check_unit
		LEFT JOIN sys_office o6 ON o6.id = a.duty_unit
	</sql>
    
	<select id="get" resultType="ExamCheck1">
		SELECT 
			<include refid="examCheckColumns"/>
		FROM exam_check a
		<include refid="examCheckJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="ExamCheck1">
		<choose>
			<when test="hasAuth == true">/*审核人*/
				SELECT
				<include refid="examCheckColumns"/>
				FROM exam_check a
				<include refid="examCheckJoins"/>
				where a.del_flag = #{DEL_FLAG_NORMAL}
			</when>
			<otherwise>/*非审核人*/
				SELECT
				<include refid="examCheckColumns"/>
				FROM exam_check a
				<include refid="examCheckJoins"/>
				where a.del_flag = #{DEL_FLAG_NORMAL}
			</otherwise>
		</choose>
			${sqlMap.dsf}
			<choose>
				<when test="beginCheckDate != null and beginCheckDate != '' and endCheckDate != null and endCheckDate != ''">
					AND a.check_date between #{beginCheckDate} and #{endCheckDate}
				</when>
				<when test="beginCheckDate != null and beginCheckDate != ''">
					AND a.check_date >= #{beginCheckDate}
				</when>
				<when test="endCheckDate != null and endCheckDate != ''">
					AND  #{endCheckDate} >= a.check_date
				</when>
				<otherwise>
				</otherwise>
			</choose>
			<if test="checkUnitId != null and checkUnitId != ''">
				AND a.check_unit_id = #{checkUnitId}
			</if>
			<if test="checkPersonId != null and checkPersonId != ''">
				AND a.check_person_id = #{checkPersonId}
			</if>
			<if test="dutyUnitId != null and dutyUnitId != ''">
				AND a.duty_unit_id = #{dutyUnitId}
			</if>
			<if test="useModel != null and useModel != ''">
				AND a.use_model = #{useModel}
			</if>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="ExamCheck1">
		SELECT 
			<include refid="examCheckColumns"/>
		FROM exam_check a
		<include refid="examCheckJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO exam_check(
			id,
			check_date,
			check_unit,
			check_unit_id,
			check_person,
			duty_unit,
			duty_unit_id,
			use_model,
			choose_options,
			test_standart,
			scort_situation,
			remark,
			duty_leader,
			duty_person,
			review_type,
			opinion,
			create_by,
			create_org_id,
			create_id_no,
			create_date,
			update_by,
			update_org_id,
			update_id_no,
			update_date,
			del_flag,
			status,
			add_status,
			explan,
			use_model_name,
			check_person_id,
			duty_leader_id,
			duty_person_id
		) VALUES (
			#{id},
			#{checkDate},
			#{checkUnit},
			#{checkUnitId},
			#{checkPerson},
			#{dutyUnit},
			#{dutyUnitId},
			#{useModel},
			#{chooseOptions},
			#{testStandart},
			#{scortSituation},
			#{remark},
			#{dutyLeader},
			#{dutyPerson},
			#{reviewType},
			#{opinion},
			#{createBy.id},
			#{createBy.office.id},
			#{createIdNo},
			#{createDate},
			#{updateBy.id},
			#{updateBy.office.id},
			#{updateIdNo},
			#{updateDate},
			#{delFlag},
			#{status},
			#{addStatus},
			#{explan},
			#{useModelName},
			#{checkPersonId},
			#{dutyLeaderId},
			#{dutyPersonId}
		)
	</insert>
	
	<update id="update">
		UPDATE exam_check SET 	
			check_date = #{checkDate},
			check_unit = #{checkUnit},
			check_person = #{checkPerson},
			duty_unit = #{dutyUnit},
			use_model = #{useModel},
			choose_options = #{chooseOptions},
			test_standart = #{testStandart},
			scort_situation = #{scortSituation},
			remark = #{remark},
			duty_leader = #{dutyLeader},
			duty_person = #{dutyPerson},
			review_type = #{reviewType},
			opinion = #{opinion},
			update_by = #{updateBy.id},
			update_org_id = #{updateBy.office.id},
			update_id_no = #{updateIdNo},
			update_date = #{updateDate},
			status = #{status},
			add_status = #{addStatus},
			explan = #{explan},
			use_model_name = #{useModelName},
			check_person_id = #{checkPersonId},
			duty_leader_id = #{dutyLeaderId},
			duty_person_id = #{dutyPersonId}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE exam_check SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>

	<update id="deleteByIds">
		UPDATE exam_check SET
		del_flag = '1'
		WHERE id in <foreach collection="ids" item="item" index="index"
							 open="(" separator="," close=")">#{item}</foreach>
	</update>

	<update id="shenHeSave">
		UPDATE exam_check SET
			status = #{examCheck1.status},
			opinion = #{examCheck1.opinion},
			update_date = #{examCheck1.updateDate}
		WHERE id = #{examCheck1.id}
	</update>
</mapper>