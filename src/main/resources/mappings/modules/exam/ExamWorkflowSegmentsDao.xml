<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.exam.dao.ExamWorkflowSegmentsDao">
    
	<sql id="examWorflowSegmentsColumns">
		a.id AS "id",
		a.flow_id AS "flowId",
		a.segment_id AS "segmentId",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.end_time AS "endTime",
		a.comment AS "comment"
	</sql>
	
	<sql id="examWorflowSegmentsJoins">
	</sql>
    
	<select id="get" resultType="ExamWorflowSegments">
		SELECT 
			<include refid="examWorflowSegmentsColumns"/>
		FROM exam_workflow_segments a
		<include refid="examWorflowSegmentsJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="ExamWorflowSegments">
		SELECT 
			<include refid="examWorflowSegmentsColumns"/>
		FROM exam_workflow_segments a
		<include refid="examWorflowSegmentsJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="id != null and id != ''">
				AND a.id = #{id}
			</if>
			<if test="updateDate != null and updateDate != ''">
				AND a.update_date = #{updateDate}
			</if>
			<if test="flowId != null and flowId != ''">
				AND a.flow_id = #{flowId}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<select id="findSegmentsList" resultType="Map" parameterType="Map">
		SELECT d."name" as "name",d."sort" AS "sort",d."is_must" AS "isMust",a."end_time" AS "endTime",comment,
		<include refid="examWorflowSegmentsColumns"/>
		FROM exam_workflow_segments a,exam_workflow_segments_define d
		<include refid="examWorflowSegmentsJoins"/>
		<where>
			a.segment_id=d.id
			AND a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="id != null and id != ''">
				AND a.id = #{id}
			</if>
			<if test="updateDate != null and updateDate != ''">
				AND a.update_date = #{updateDate}
			</if>
			<if test="flowId != null and flowId != ''">
				AND a.flow_id = #{flowId}
			</if>
			<if test="sort != null and sort != ''">
				AND d."sort" = #{sort}
			</if>
		</where>
		ORDER BY d.sort
	</select>
	
	<select id="findAllList" resultType="ExamWorflowSegments">
		SELECT 
			<include refid="examWorflowSegmentsColumns"/>
		FROM exam_workflow_segments a
		<include refid="examWorflowSegmentsJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO exam_workflow_segments(
			id,
			flow_id,
			segment_id,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag,
			end_time,
			comment
		) VALUES (
			#{id},
			#{flowId},
			#{segmentId},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag},
			#{endTime},
			#{comment}
		)
	</insert>
	
	<update id="update">
		UPDATE exam_workflow_segments SET
			flow_id = #{flowId},
			segment_id = #{segmentId},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			end_time = #{endTime},
			comment = #{comment}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE exam_workflow_segments SET
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	<update id="deleteByFlowId">
		UPDATE exam_workflow_segments SET
			del_flag = #{DEL_FLAG_DELETE}
		WHERE flow_id = #{flowId}
	</update>

	<!--绩效自动考评-->
	<select id="findInfoList" resultType="ExamWorflowSegments">
		SELECT
		<include refid="examWorflowSegmentsColumns"/>
		FROM exam_workflow_segments a
		where a.del_flag = '0'
		AND a.flow_id = #{id}
	</select>

	<select id="findDate" resultType="java.lang.String">
		select
		a.end_time
		from  exam_workflow_segments a
		where
		a.segment_id = #{id}
	</select>
    <select id="findExamWorkflowIdEndTime" resultType="java.util.Map">
		SELECT
		flow_id AS "flowId",
		end_time AS "endTime"
		FROM "exam_workflow_segments" a
		where a.segment_id = #{segmentId}
		and a.flow_id = #{workFlowId}
		and TO_CHAR(a.end_time, 'yyyy-MM-dd') = #{oneDayAfterDate}
	</select>

</mapper>