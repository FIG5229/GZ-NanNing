<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.exam.dao.ExamUnitAllPublicDao">
    
	<sql id="examUnitAllPublicColumns">
		a.id AS "id",
		a.unit_name AS "unitName",
		a.unit_id AS "unitId",
		a.work_name AS "workName",
		a.hundred AS "hundred",
		a.zsqzh_score AS "zsqzhScore",
		a.public_score AS "publicScore",
		a.analysis AS "analysis",
		a.workflow_id AS "workflowId",
		a.value_type AS "valueType",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.weight AS  "weight"
	</sql>
	
	<sql id="examUnitAllPublicJoins">
	</sql>
    
	<select id="get" resultType="ExamUnitAllPublic">
		SELECT 
			<include refid="examUnitAllPublicColumns"/>
		FROM exam_unit_all_public a
		<include refid="examUnitAllPublicJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="ExamUnitAllPublic">
		SELECT 
			<include refid="examUnitAllPublicColumns"/>
		FROM exam_unit_all_public a
		<include refid="examUnitAllPublicJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="unitName != null and unitName != ''">
				AND a.unit_name = #{unitName}
			</if>
			<if test="unitId != null and unitId != ''">
				AND a.unit_id = #{unitId}
			</if>
			<if test="createDate != null and createDate != ''">
				AND a.create_date = #{createDate}
			</if>
			<if test="updateDate != null and updateDate != ''">
				AND a.update_date = #{updateDate}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="ExamUnitAllPublic">
		SELECT 
			<include refid="examUnitAllPublicColumns"/>
		FROM exam_unit_all_public a
		<include refid="examUnitAllPublicJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<insert id="insert">
		INSERT INTO exam_unit_all_public(
			id,
			unit_name,
			unit_id,
			work_name,
			hundred,
			zsqzh_score,
			public_score,
			analysis,
			workflow_id,
			value_type,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag,
			weight
		) VALUES (
			#{id},
			#{unitName},
			#{unitId},
			#{workName},
			#{hundred},
			#{zsqzhScore},
			#{publicScore},
			#{analysis},
			#{workflowId},
			#{valueType},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag},
			#{weight}
		)
	</insert>
	
	<update id="update">
		UPDATE exam_unit_all_public SET 	
			unit_name = #{unitName},
			unit_id = #{unitId},
			work_name = #{workName},
			hundred = #{hundred},
			zsqzh_score = #{zsqzhScore},
			public_score = #{publicScore},
			analysis = #{analysis},
			workflow_id = #{workflowId},
			value_type = #{valueType},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			weight = #{weight}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE exam_unit_all_public SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>

	<select id="getMapByWorkflowIdAndUnitId" resultType="java.util.Map">
 		SELECT w.weights as weight,
 		SUM(case p.work_name
 			  when '32' then p.hundred
 			  when '33' then p.hundred
 			  else (ROUND(CAST((100+p.hundred) as numeric), 2)) end ) as "hundredSum" ,
		SUM(case p.work_name
			when '32' then  p.zsqzh_score
			when '33' then   p.zsqzh_score
			else (ROUND(CAST((w.weights + p.zsqzh_score) as numeric ),2))  end ) as "zsqzhScore"
		 FROM exam_unit_all_public p LEFT JOIN exam_weights_main w on p.work_name = w.work_name
		 WHERE p.workflow_id = #{workflowId} and p.unit_id = #{unitId}  and p.work_name = #{workName} and p.del_flag = '0'
		 GROUP BY w.weights
	</select>

	<select id="getMapByWorkflowIdAndUnitId2" resultType="java.util.Map">
 		SELECT w.weights as "weight",
 		SUM(p.hundred) as "hundredSum" ,
		SUM(p.zsqzh_score ) as "zsqzhScore"
		 FROM exam_unit_all_public p
		 LEFT JOIN exam_weights_main w on p.work_name = w.work_name
		 LEFT JOIN exam_weights ew on ew.id = w.ew_id
		 WHERE p.workflow_id = #{workflowId}
		 and p.unit_id = #{unitId}
		  and p.work_name = #{workName}
		  and p.del_flag = '0'
		  and w.del_flag = '0'
		  and ew.kp_type = '1'
		  and ew.del_flag = '0'
		 GROUP BY w.weights,w.work_name_type
	</select>

	<select id="getSumByWorkflowIdAndUnitId" resultType="java.lang.Double">
		select sum (p.zsqzh_score)
       	from  exam_unit_all_public p
       	where p.workflow_id = #{workflowId} and p.unit_id =#{unitId} and p.del_flag = '0'
	</select>

	<select id="getCommonByWorkflowIdAndUnitId" resultType="java.util.Map">
		 SELECT p.zsqzh_score as "zsqzhScore"
		 FROM exam_unit_all_public p
		 WHERE p.workflow_id = #{workflowId} and p.unit_id = #{unitId} and p.work_name = '32' and p.del_flag = '0'
	</select>

	<select id="getDepByWorkflowIdAndUnitId" resultType="java.util.Map">
		SELECT p.unit_id as "depId",p.unit_name as "depName",cast( abs( sum(zsqzh_score) ) as varchar ) as "sum"
		 FROM exam_unit_all_public p
		 WHERE p.workflow_id = #{workflowId} and p.unit_id = #{unitId}
		 <if test="valueType!=null and valueType != ''">
			 and p.value_type = #{valueType}
		 </if>
		 and p.del_flag = '0'
		 group by p.unit_id,p.unit_name
		 limit 1
	</select>

	<select id="getJGDepByWorkflowIdAndUnitId" resultType="java.util.Map">
		SELECT p.unit_id as "depId",p.unit_name as "depName",cast( abs( sum(hundred) ) as varchar ) as "sum"
		 FROM exam_unit_all_public p
		 WHERE p.workflow_id = #{workflowId} and p.unit_id = #{unitId} and p.value_type = #{valueType}
		 and p.del_flag = '0'  group by p.unit_id,p.unit_name
	</select>

    <select id="getUnitIdsByWorkflowId" resultType="java.util.Map">
        select  p.unit_name as "unitName" ,p.unit_id as "unitId"
		<if test='isJKC != null and isJKC != "" and isJKC == "0"'>
        ,u.office_id as officeId
		</if>
        from exam_unit_all_public p
        <if test='isJKC != null and isJKC != "" and isJKC == "0"'>
			left join sys_user u on u.id = p.unit_id
		</if>
        where p.workflow_id = #{workflowId} and p.del_flag = '0'
		<if test='isJKC != null and isJKC != "" and isJKC == "0"'>
			and u.del_flag = '0'
		</if>
        group by p.unit_name,p.unit_id
		<if test='isJKC != null and isJKC != "" and isJKC == "0"'>
			,u.office_id
		</if>
        <choose>
			<when test='isJKC != null and isJKC != "" and isJKC == "1"'>
				order by cast(p.unit_id as INTEGER) ASC
			</when>
			<when test='isJKC != null and isJKC != "" and isJKC == "0"'>
				order by cast(u.office_id as INTEGER) ASC
			</when>
			<otherwise>
			</otherwise>
		</choose>
    </select>

    <select id="getWeightScore" resultType="java.lang.Double">
         SELECT  ROUND(cast (sum(p.zsqzh_score)  as numeric),2)
         FROM exam_unit_all_public p
         WHERE p.workflow_id = #{workflowId} and p.unit_id = #{unitId} and p.del_flag = '0'
         <if test="isYW!='' and isYW != null and isYW == 'isYW'">
			 and p.work_name != '32'
		 </if>
    </select>
    <select id="findWorkNameList" resultType="java.util.Map">
        SELECT
			DISTINCT t.label,t.value,T.weights as weight,t.sort
		FROM exam_unit_all_public p LEFT JOIN ( SELECT
			d.label,d.value,w.weights,sort
		    FROM exam_weights_main w LEFT JOIN sys_dict d on w.work_name = d.value
		    WHERE d.type = 'exam_weigths' and d.del_flag = '0' and w.del_flag = '0'
        ) T on p.work_name = t.value
		 WHERE p.workflow_id = #{workflowId} and p.del_flag = '0' order by T.sort asc;
    </select>

	<select id="findUnitYearScores" resultType="Map">
		SELECT
			A.unit_id AS "unitId",
			A.unit_name AS "unitName",
			A.work_name AS "workName",
			A.weight AS "weight",
			A.hundred AS "hundred",
			A.zsqzh_score AS "zsqzhScore",
			A.public_score AS "publicScore",
			A.value_type AS "valueType",
			b.TIME AS "time"
		FROM
		exam_unit_all_public
		A LEFT JOIN exam_workflow b ON A.workflow_id = b.
		ID LEFT JOIN exam_workflow_define C ON b.flow_template_id = C.ID
		<where>
			<if test="null != examCycle">
				AND C.exam_cycle = #{examCycle}
			</if>
			<if test="null != examObjectType">
				AND C.exam_object_type = #{examObjectType}
			</if>
			<if test="null != examType">
				AND C.exam_type = #{examType}
			</if>
			<if test="null != examCycle">
				AND C.exam_cycle = #{examCycle}
			</if>
			<if test="null != year">
				AND SUBSTRING ( b.TIME, 1, 4 ) = #{year}
			</if>
			<if test="null != workflowId">
				AND A.workflow_id = #{workflowId}
			</if>
		</where>
		ORDER BY b.TIME,A.work_name
	</select>

    <select id="findWorkflowId" resultType="java.lang.String">
		select w.id
		from exam_workflow w LEFT JOIN exam_workflow_define d on w.flow_template_id = d.id
		where d.exam_type = '1' and d.exam_cycle = '1' and w.del_flag = '0' and  w.status >=8 and cast(w.time as int) &lt;= #{nowDate}
		order by cast(w.time as int) desc
		LIMIT 1
	</select>
	<!--    局考处-->
	<select id="findInfoByUnitId"  resultType="java.util.HashMap">
		SELECT
		w.unit_name AS "unit",
		w.unit_id as "unitId",
		w.workflow_id as "workflowId",
		cast(SUM(w.zsqzh_score) as  decimal(10,2)) AS sum
		FROM exam_unit_all_public w
		LEFT JOIN exam_workflow ew ON w.workflow_id = ew.id
		left join exam_workflow_define ewd on ew.flow_template_id = ewd.id
		WHERE w.del_flag = '0'
		and ew.del_flag = '0'
		<if test="id != null and id != ''">
			AND w.unit_id = #{id}
		</if>
		<if test='workName != null and workName != "" and workName != "0" '>
			AND w.work_name = #{workName}
		</if>
		/*AND w.workflow_id = ew.id
		AND ew.flow_template_id = ewd.id*/
		AND ewd.exam_type = '1'
		<choose>
			<when test="month != null and month !=''">
				AND ew.time = #{month}
				<!--
					AND TO_CHAR(w.create_date, 'yyyy-mm') &lt;= #{month} &lt;= #{month}
				-->
			</when>
			<otherwise>
			</otherwise>
		</choose>
		GROUP BY w.unit_name,w.unit_id,w.workflow_id
		ORDER BY CAST(w.unit_id AS INTEGER)
	</select>


	<select id="findInfoByUnitIds" resultType="java.util.HashMap">
		SELECT
		w.unit_name AS "unit",
		w.unit_id as "unitId",
		w.workflow_id as "workflowId",
		cast(SUM(w.zsqzh_score) as  decimal(10,2)) AS sum
		FROM exam_unit_all_public w
		LEFT JOIN exam_workflow ew ON w.workflow_id = ew.id
		left join exam_workflow_define ewd on ew.flow_template_id = ewd.id
		WHERE w.del_flag = '0'
		and ew.del_flag = '0'
		 AND  w.unit_id in (
		<foreach collection="ids" item="id" index="index" separator=",">
			#{id}
		</foreach>
		)
-- 		AND w.workflow_id = ew.id
-- 		AND ew.flow_template_id = ewd.id
		AND ewd.exam_type = '1'
		<if test='workName != null and workName != "" and workName != "0" '>
			AND w.work_name = #{workName}
		</if>
		<choose>
			<when test="month != null and month !=''">
				AND ew.time = #{month}
				<!--
                    AND TO_CHAR(w.create_date, 'yyyy-mm') &lt;= #{month} &lt;= #{month}
                    -->
			</when>
			<otherwise>
			</otherwise>
		</choose>
		GROUP BY w.unit_name,w.unit_id,w.workflow_id
		ORDER BY CAST(w.unit_id AS INTEGER)
	</select>
<!--    局考局-->
	<select id="findJkjInfoByUnitId"  resultType="java.util.HashMap">
		SELECT
		w.unit_name as "unit",
		<choose>
		    <when test="isWeight">
		        cast(SUM(w.zsqzh_score)  as  decimal(10,3)) AS sum
            </when>
			<when test="baseSum!=null">
				cast(SUM(w.hundred) +${baseSum}  as  decimal(10,3)) AS sum
			</when>
			<otherwise>
				cast(SUM(w.hundred) +100  as  decimal(10,3)) AS sum
			</otherwise>
		</choose>
		FROM exam_unit_all_public w
		LEFT JOIN exam_workflow ew ON w.workflow_id = ew.id
		left join exam_workflow_define ewd on ew.flow_template_id = ewd.id
		WHERE w.del_flag = '0' and ew.del_flag = '0' and ewd.del_flag = '0'
		<if test="id!=null and id != ''">
			AND w.unit_id = #{id}
		</if>
		/*AND w.workflow_id = ew.id
		AND ew.flow_template_id = ewd.id*/
		AND ewd.exam_type = '2'
		<choose>
			<when test="month != null and month !=''">
				AND ew.time = #{month}
			</when>
			<otherwise>
			</otherwise>
		</choose>
		GROUP BY w.unit_name
	</select>

    <select id="findJkjInfoByUnitIds" resultType="java.util.HashMap">
		SELECT
		w.unit_name "unit",
		<choose>
		    <when test="isWeight">
		        cast(SUM(w.zsqzh_score)  as  decimal(10,3)) AS sum
            </when>
			<when test="baseSum!=null">
				cast(SUM(w.hundred) +${baseSum}  as  decimal(10,3)) AS sum
			</when>
			<otherwise>
				cast(SUM(w.hundred) +100  as  decimal(10,3)) AS sum
			</otherwise>
		</choose>
		FROM exam_unit_all_public w
		LEFT JOIN exam_workflow ew ON w.workflow_id = ew.id
		left join exam_workflow_define ewd on ew.flow_template_id = ewd.id
		WHERE w.del_flag = '0' and ew.del_flag = '0'
		AND (
		w.unit_id in (
		<foreach collection="ids" item="id" index="index" separator=",">#{id}</foreach>)
		or w.unit_id in
		<foreach collection="userIds" item="userId" open="(" separator="," close=")">
			#{userId}
		</foreach>
		)
       /* AND w.workflow_id = ew.id
        AND ew.flow_template_id = ewd.id*/
        AND ewd.exam_type = '2'
        <choose>
            <when test="month != null and month !=''">
				AND ew.time = #{month}
            </when>
            <otherwise>
            </otherwise>
        </choose>
        GROUP BY w.unit_name
    </select>

<!--	处考队所-->
	<select id="findCkdsInfoByUnitId"  resultType="java.util.HashMap">
		SELECT
		w.unit_name "unit",
		cast(SUM(w.zsqzh_score)  as  decimal(10,2)) AS sum
		--cast(SUM(w.zsqzh_score) + 100  as  decimal(10,2)) AS sum
		<!--<choose>
			<when test='workName != null and workName != "" and workName != "0" '>
				cast(SUM(w.zsqzh_score)  as  decimal(10,2)) AS sum
			</when>
			<otherwise>
				cast(SUM(w.zsqzh_score) +100  as  decimal(10,2)) AS sum
			</otherwise>
		</choose>-->
		FROM exam_unit_all_public w
		LEFT JOIN exam_workflow ew ON w.workflow_id = ew.id
		left join exam_workflow_define ewd on ew.flow_template_id = ewd.id
		WHERE w.del_flag = '0' and ew.del_flag = '0'
		<if test="id != null and id != ''">
			AND w.unit_id = #{id}
		</if>
		/*AND w.workflow_id = ew.id
		AND ew.flow_template_id = ewd.id*/
		AND ewd.exam_type = '3'
		<if test='workName != null and workName != "" and workName != "0" '>
			AND w.work_name = #{workName}
		</if>
		<choose>
			<when test="month != null and month !=''">
				AND ew.time = #{month}
			</when>
			<otherwise>
			</otherwise>
		</choose>
		GROUP BY w.unit_name
	</select>

	<select id="findCkdsInfoByUnitIds" resultType="java.util.HashMap">
		SELECT
		w.unit_name "unit",
		cast(SUM(w.zsqzh_score)  as  decimal(10,2)) AS sum
		--cast(SUM(w.zsqzh_score) +100  as  decimal(10,2)) AS sum
		<!--<choose>
			<when test='workName != null and workName != "" and workName != "0" '>
				cast(SUM(w.zsqzh_score)  as  decimal(10,2)) AS sum
			</when>
			<otherwise>
				cast(SUM(w.zsqzh_score) +100  as  decimal(10,2)) AS sum
			</otherwise>
		</choose>-->
		FROM exam_unit_all_public w
		LEFT JOIN exam_workflow ew ON w.workflow_id = ew.id
		left join exam_workflow_define ewd on ew.flow_template_id = ewd.id
		WHERE w.del_flag = '0' and ew.del_flag = '0'
		AND ( w.unit_id in (
		<foreach collection="ids" item="id" index="index" separator=",">
			#{id}
		</foreach>
		)
		or w.unit_id in
		<foreach collection="userIds" item="userId" open="(" separator="," close=")">
			#{userId}
		</foreach>
		)
		/*AND w.workflow_id = ew.id
		AND ew.flow_template_id = ewd.id*/
		AND ewd.exam_type = '3'
		<if test='workName != null and workName != "" and workName != "0" '>
			AND w.work_name = #{workName}
		</if>
		<choose>
			<when test="month != null and month !=''">
				AND ew.time = #{month}
			</when>
			<otherwise>
			</otherwise>
		</choose>
		GROUP BY w.unit_name
	</select>

<!--	处考处机关-->
	<select id="findCkcjgInfoByUnitId"  resultType="java.util.HashMap">
		SELECT
		w.unit_name "unit",
		<choose>
		    <when test="isWeight">
		        cast(SUM(w.zsqzh_score)  as  decimal(10,3)) AS sum
            </when>
			<when test="baseSum!=null">
				cast(SUM(w.hundred) +${baseSum}  as  decimal(10,3)) AS sum
			</when>
			<otherwise>
				cast(SUM(w.hundred) +100  as  decimal(10,3)) AS sum
			</otherwise>
		</choose>
		FROM exam_unit_all_public w
		LEFT JOIN exam_workflow ew ON w.workflow_id = ew.id
		left join exam_workflow_define ewd on ew.flow_template_id = ewd.id
		WHERE w.del_flag = '0' and ew.del_flag = '0'
		<if test="id != null and id != ''">
			AND (w.unit_id = #{id}
			<if test="userIds.size()>0">
			or w.unit_id in<foreach collection="userIds" item="userId" open="(" separator="," close=")">
				#{userId}
				</foreach>
			</if>
			)
		</if>
		/*AND w.workflow_id = ew.id
		AND ew.flow_template_id = ewd.id*/
		AND ewd.exam_type = '4'
		<choose>
			<when test="month != null and month !=''">
				AND ew.time = #{month}
			</when>
			<otherwise>
			</otherwise>
		</choose>
		GROUP BY w.unit_name
	</select>


	<select id="findCkcjgInfoByUnitIds" resultType="java.util.HashMap">
		SELECT
		w.unit_name "unit",
		<choose>
		<when test="isWeight">
		        cast(SUM(w.zsqzh_score)  as  decimal(10,3)) AS sum
            </when>
			<when test="baseSum!=null">
				cast(SUM(w.hundred) +${baseSum}  as  decimal(10,3)) AS sum
			</when>
			<otherwise>
				cast(SUM(w.hundred) +100  as  decimal(10,3)) AS sum
			</otherwise>
		</choose>
		FROM exam_unit_all_public w
		LEFT JOIN exam_workflow ew ON w.workflow_id = ew.id
		left join exam_workflow_define ewd on ew.flow_template_id = ewd.id
		WHERE w.del_flag = '0' and ew.del_flag = '0'
		AND  (
		w.unit_id in (
		<foreach collection="ids" item="id" index="index" separator=",">
			#{id}
		</foreach>
		)
		or w.unit_id in
		<foreach collection="userIds" item="userId" open="(" separator="," close=")">
			#{userId}
		</foreach>
		)
		/*AND w.workflow_id = ew.id
		AND ew.flow_template_id = ewd.id*/
		AND ewd.exam_type = '4'
		<choose>
			<when test="month != null and month !=''">
				AND ew.time = #{month}
			</when>
			<otherwise>
			</otherwise>
		</choose>
		GROUP BY w.unit_name
	</select>

	<select id="findUnitYear" resultType="java.util.Map">
		SELECT
		w.unit_id AS "unitId",
		w.unit_name AS "unitName",
		SUM(w.hundred)+100 AS "sum",
		ewd.exam_cycle AS "examCycle",
		ew.time AS "time"
		FROM exam_unit_all_public w
		LEFT JOIN exam_workflow ew ON w.workflow_id = ew.id
		LEFT JOIN exam_workflow_define ewd on ew.flow_template_id = ewd.id
		where ewd.exam_type in ('1','2','3','4')
		and w.unit_id =#{unitId}
		and w.del_flag = '0'
		GROUP BY w.unit_name ,ew.time,w.unit_id,ewd.exam_cycle
	</select>
	<select id="selItemByWFIDObjId" resultType="java.lang.String">
		 select items
		 from exam_workflow_datas
		 where workflow_id = #{workflowId}
		 and obj_id = #{objId}
		 and is_selected = '1'
		 and value_type = #{valueType}
	</select>

	<select id="getJGDepByWorkflowIdAndUnitIdWeight" resultType="java.util.Map">
	SELECT p.unit_id as "depId",p.unit_name as "depName",cast( abs( sum(zsqzh_score) ) as varchar ) as "sum"
		 FROM exam_unit_all_public p
		 WHERE p.workflow_id = #{workflowId} and p.unit_id = #{unitId}
		<if test="valueType != null">
		  and p.value_type = #{valueType}
        </if>
		and p.del_flag = '0'  group by p.unit_id,p.unit_name
    </select>

    <select id="getWeightIsNull" resultType="java.lang.Integer">
        select count(*)
        from exam_unit_all_public p
		WHERE p.workflow_id = #{workflowId}
		and (p.work_name = '99' or p.work_name is null or p.weight is null or p.value_type = -1 or p.value_type is null)
		and p.del_flag = '0'
    </select>

    <select id="getWeightIsNullByUserIdMonth" resultType="java.lang.Integer">
    SELECT
	    count(*)
		FROM exam_unit_all_public w
		LEFT JOIN exam_workflow ew ON w.workflow_id = ew.id
		left join exam_workflow_define ewd on ew.flow_template_id = ewd.id
		WHERE w.del_flag = '0' and ew.del_flag = '0' and ewd.del_flag = '0'
		<if test="userId!=null and userId != ''">
			AND w.unit_id = #{userId}
		</if>
		AND ewd.exam_type = #{examType}
		and (w.work_name = '99' or w.work_name is null or w.weight is null or w.value_type = -1 or w.value_type is null)
		<choose>
			<when test="month != null and month !=''">
				AND ew.time = #{month}
			</when>
			<otherwise>
			</otherwise>
		</choose>
    </select>

    <update id="deleteByWorkflowId">
        UPDATE exam_unit_all_public SET
			del_flag = '1'
		WHERE workflow_id = #{workflowId}
    </update>
</mapper>