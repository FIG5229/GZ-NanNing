<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.exam.dao.ExamWorkflowDao">
    
	<sql id="examWorkflowColumns">
		a.id AS "id",
		a.flow_template_id AS "flowTemplateId",
		a.status AS "status",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.name AS "name",
		a.start_date AS "startDate",
		a.end_date AS "endDate",
		a.time AS "time"
	</sql>
	
	<sql id="examWorkflowJoins">
		LEFT JOIN sys_office o ON o.id = a.create_org_id
		LEFT JOIN sys_user u ON u.id = a.create_by
	</sql>
    
	<select id="get" resultType="ExamWorkflow">
		SELECT
		i.exam_type AS "examType",
		i.exam_cycle AS "examCycle",
		i.exam_object_type AS "examObjectType",
		i.flow_type AS "flowType",
		<include refid="examWorkflowColumns"/>
		FROM exam_workflow a,
		exam_workflow_define i
		WHERE a.flow_template_id= i.id and  a.id = #{id}
	</select>

	<!--<select id="findList" resultType="ExamWorkflow">-->
	<select id="findList" resultType="Map">
		SELECT 
			<include refid="examWorkflowColumns"/>,
			b.exam_cycle,
			b.exam_type,
			b.exam_object_type,
			b.flow_type
		FROM exam_workflow a left join exam_workflow_define b on A.flow_template_id = b.ID
		<include refid="examWorkflowJoins"/>
		<where>
			 a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="name != null and name != ''">
				AND a.name LIKE 
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{name},'%')</if>
					<if test="dbName == 'postgre'">'%'||#{name}||'%'</if>
			</if>
			<if test="startDate != null and startDate != ''">
				AND a.start_date = #{startDate}
			</if>
			<if test="endDate != null and endDate != ''">
				AND a.end_date = #{endDate}
			</if>
			<if test="examCycle != null and examCycle != ''">
				AND b.exam_cycle = #{examCycle}
			</if>
			<if test="examType != null and examType != ''">
				AND exam_type = #{examType}
			</if>
			<if test="examObjectType != null and examObjectType != ''">
				AND b.exam_object_type = #{examObjectType}
			</if>
			<if test="flowType != null and flowType != ''">
				AND b.flow_type = #{flowType}
			</if>
		</where>
		<!--
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
		-->
		<!-- 数据范围过滤 -->
		${sqlMap.dsf}
		order by a.update_date DESC
	</select>

	<select id="selectByPerson" parameterType="Map" resultType="Map">
		SELECT
		<!--	A.*,-->
		a.id,
		d.fill_person_id,
		d.exam_person_id,
		d.depart_sign_id,
		d.adjust_person_id,
		d.main_bureaus_sign_id,
		d.part_bureaus_sign_id
		FROM
			exam_workflow
			A LEFT JOIN exam_workflow_datas d ON A.ID = d.workflow_id
			<where>
				<if test="null != personId">
				 AND  (
					d.fill_person_id = #{personId}
					OR d.exam_person_id = #{personId}
					OR d.depart_sign_id = #{personId}
					OR d.adjust_person_id = #{personId}
					OR d.main_bureaus_sign_id = #{personId}
					OR d.part_bureaus_sign_id = #{personId}
					)
				</if>
				<if test="null != id">
					AND a.id = #{id}
				</if>
				GROUP BY a.id,
				d.fill_person_id,
				d.exam_person_id,
				d.depart_sign_id,
				d.adjust_person_id,
				d.main_bureaus_sign_id,
				d.part_bureaus_sign_id
			</where>
	</select>
	<select id="selectFlowList" parameterType="Map" resultType="Map">
		SELECT A.*,
			b.exam_cycle,
			b.exam_type,
			b.exam_object_type,
			b.flow_type
		FROM
			exam_workflow A,
			exam_workflow_define b
			<where>
				A.flow_template_id = b.ID
				AND A.del_flag = #{DEL_FLAG_NORMAL}
				<if test="null != id and ''!= id">
					AND A.ID = #{id}
				</if>
				<if test="null != status and ''!= status">
					AND A.status = #{status}
				</if>
				<if test="null == history or ''== history">
					AND A.status &lt;&gt; -1 AND A.status &lt;&gt; 99 AND A.status &lt;&gt; 8
				</if>
				<if test="null != history or ''!= history">
					AND A.status &gt;= 1
				</if>
				<if test="examType != status and ''!= examType">
					AND B.exam_type = #{examType}
				</if>
			</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<select id="findAllList" resultType="ExamWorkflow">
		SELECT 
			<include refid="examWorkflowColumns"/>
		FROM exam_workflow a
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO exam_workflow(
			id,
			flow_template_id,
			status,
			create_by,
			create_org_id,
			create_date,
			update_by,
			update_org_id,
			update_date,
			del_flag,
			name,
			start_date,
			end_date,
			time
		) VALUES (
			#{id},
			#{flowTemplateId},
			#{status},
			#{createBy.id},
			#{createBy.office.id},
			#{createDate},
			#{updateBy.id},
			#{updateBy.office.id},
			#{updateDate},
			#{delFlag},
			#{name},
			#{startDate},
			#{endDate},
			#{time}
		)
	</insert>
	
	<update id="update">
		UPDATE exam_workflow SET 	
			name = #{name},
			start_date = #{startDate},
			end_date = #{endDate},
			update_by = #{updateBy.id},
			update_org_id = #{updateBy.office.id},
			update_date = #{updateDate},
			time = #{time}
		WHERE id = #{id}
	</update>
	<!--批量退回 结束当前环节考核 实际上只修改一条数据-->
	<update id="saveExamBeta">
		UPDATE exam_workflow SET
			status = #{status}
		WHERE id = #{id}
	</update>

	<update id="updateStatus" parameterType="Map">
		UPDATE exam_workflow SET
		<choose>
			<when test="null != status and null != operationStatus">
				status = #{status},operation_status=#{operationStatus}
			</when>
			<when test="null == status and null != operationStatus">
				operation_status=#{operationStatus}
			</when>
			<otherwise>
				status = #{status}
			</otherwise>
		</choose>

		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE exam_workflow SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>

	<!--绩效自动考评-->
	<select id="findAllInfo" resultType="ExamWorkflow">
		SELECT
		<include refid="examWorkflowColumns"/>
		from exam_workflow a
		where a.del_flag = '0'
		AND A.flow_template_id = #{id}
	</select>
    <select id="findInfosByIds" resultType="com.thinkgem.jeesite.modules.exam.entity.ExamWorkflow">
		SELECT
		<include refid="examWorkflowColumns"/>,
		b.exam_cycle,
		b.exam_type,
		b.exam_object_type,
		b.flow_type
		FROM exam_workflow a
		left join exam_workflow_define b on a.flow_template_id = b.ID
		where a.del_flag = '0'
		AND a.id in <foreach collection="workflowIds" item="item" open="(" separator="," close=")" index="index">
			#{item}
		</foreach>
		order by a.create_date ASC
	</select>


	<select id="findListByYear" resultType="com.thinkgem.jeesite.modules.exam.entity.ExamWorkflow">
		SELECT
		<include refid="examWorkflowColumns"/>
		from exam_workflow a
		where a.del_flag = '0'
		and cast(substr(a.time,1,4) as INTEGER) = #{yearNum}
		and a.status in (8,99)
	</select>

	<select id="findYearInfosByIds" resultType="com.thinkgem.jeesite.modules.exam.entity.ExamWorkflow">
		SELECT
		<include refid="examWorkflowColumns"/>
		from exam_workflow a
		left join exam_workflow_define d on a.flow_template_id = d.id
		where a.del_flag = '0'
		and d.exam_cycle = '2'
		and d.del_flag = '0'
		and substr(a.time,1,4) = #{yearNum}
		AND a.id in <foreach collection="workflowIds" item="item" open="(" separator="," close=")" index="index">
			#{item}
		</foreach>
	</select>

    <select id="getNoEndExamList" resultType="com.thinkgem.jeesite.modules.exam.entity.ExamWorkflow">
		select <include refid="examWorkflowColumns"/>,
		d.exam_type AS "examType",
		d.exam_cycle AS "examCycle",
		d.exam_object_type AS "examObjectType",
		d.flow_type AS "flowType"
		from exam_workflow a
		left join exam_workflow_define d on a.flow_template_id = d.id
		where a.del_flag = '0'
		and a.status not in (-1,8,99)
	</select>

</mapper>