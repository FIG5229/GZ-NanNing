/**
 * Copyright &copy; 2012-2016 <a href="https://github.com/thinkgem/jeesite">JeeSite</a> All rights reserved.
 */
package com.thinkgem.jeesite.modules.exam.service;

import com.thinkgem.jeesite.common.persistence.Page;
import com.thinkgem.jeesite.common.service.CrudService;
import com.thinkgem.jeesite.common.utils.DateUtils;
import com.thinkgem.jeesite.common.utils.IdGen;
import com.thinkgem.jeesite.common.utils.StringUtils;
import com.thinkgem.jeesite.common.utils.TimeUtils;
import com.thinkgem.jeesite.modules.affair.dao.*;
import com.thinkgem.jeesite.modules.affair.entity.*;
import com.thinkgem.jeesite.modules.affair.service.*;
import com.thinkgem.jeesite.modules.cms.service.ArticleService;
import com.thinkgem.jeesite.modules.cms.service.CategoryService;
import com.thinkgem.jeesite.modules.exam.dao.ExamAutoEvaluationDao;
import com.thinkgem.jeesite.modules.exam.dao.ExamStandardTemplateDataDao;
import com.thinkgem.jeesite.modules.exam.entity.*;
import com.thinkgem.jeesite.modules.personnel.dao.PersonnelBaseDao;
import com.thinkgem.jeesite.modules.personnel.entity.PersonnelBase;
import com.thinkgem.jeesite.modules.sys.dao.OfficeDao;
import com.thinkgem.jeesite.modules.sys.dao.UserDao;
import com.thinkgem.jeesite.modules.sys.entity.Office;
import com.thinkgem.jeesite.modules.sys.entity.SysOffices;
import com.thinkgem.jeesite.modules.sys.entity.User;
import com.thinkgem.jeesite.modules.sys.service.OfficeService;
import com.thinkgem.jeesite.modules.sys.utils.DictUtils;
import com.thinkgem.jeesite.modules.sys.utils.UserUtils;
import com.thinkgem.jeesite.modules.tw.entity.*;
import com.thinkgem.jeesite.modules.tw.service.*;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.io.ByteArrayOutputStream;
import java.io.PrintStream;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.*;

/**
 * 自动考评Service
 *
 * @author alan.wu
 * @version 2020-08-24
 */
@Service
@Transactional(readOnly = false)
public class ExamAutoEvaluationService extends CrudService<ExamAutoEvaluationDao, ExamAutoEvaluation> {

    @Autowired
    IdGen idGen;

    @Autowired
    private ExamWorkflowSegmentsDefineService examWorkflowSegmentsDefineService;

    @Autowired
    private ExamAutoEvaluationDao examAutoEvaluationDao;

    @Autowired
    private AffairGeneralSituationDao affairGeneralSituationDao;

    @Autowired
    private AffairThreeOneDao affairThreeOneDao;

    @Autowired
    private AffairPartyMemberService affairPartyMemberService;

    //考勤记录表
    @Autowired
    private AffairAttendanceService affairAttendanceService;

    //志愿服务
    @Autowired
    private AffairVolunteerServiceService affairVolunteerServiceService;

    //党信息
    @Autowired
    private AffairGeneralSituationService affairGeneralSituationService;

    //考勤记录子表
    @Autowired
    private AffairAttendanceChildService affairAttendanceChildService;

    @Autowired
    private AffairElectionService affairElectionService;

    @Autowired
    private AffairPartyDayActivitiesService affairPartyDayActivitiesService;

    @Autowired
    private AffairAssessService affairAssessService;

    @Autowired
    private AffairIdeaAnalysisService affairIdeaAnalysisService;

    @Autowired
    private UserDao userDao;

    @Autowired
    private AffairYearThreeOneService affairYearThreeOneService;

    @Autowired
    private AffairTwoOneService affairTwoOneService;

    @Autowired
    private AffairEducationCommentService affairEducationCommentService;

    @Autowired
    private AffairThreeOneService affairThreeOneService;

    @Autowired
    private AffairGroupStudyService affairGroupStudyService;

    @Autowired
    private AffairLearnDailyService affairLearnDailyService;

    @Autowired
    private AffairLearnPowerService affairLearnPowerService;

    @Autowired
    private AffairTalkHeartService affairTalkHeartService;

    @Autowired
    private AffairPoliceThoughtAnalysisService affairPoliceThoughtAnalysisService;

    @Autowired
    private AffairXcUnitRewardService affairXcUnitRewardService;

    @Autowired
    private AffairActiveService affairActiveService;

    @Autowired
    private AffairTwBaseService affairTwBaseService;

    @Autowired
    private AffairTwBaseSignService affairTwBaseSignService;

    @Autowired
    private AffairPushPartyService affairPushPartyService;

    @Autowired
    private AffairTnActivityRecordService affairTnActivityRecordService;

    @Autowired
    private AffairLzxxjyActivitiesService affairLzxxjyActivitiesService;

    @Autowired
    private ArticleService articleService;

    @Autowired
    private CategoryService categoryService;

    @Autowired
    private AffairPersonalRewardService affairPersonalRewardService;

    @Autowired
    private AffairIdeologyService affairIdeologyService;

    @Autowired
    private AffairOrgRewardPunishService affairOrgRewardPunishService;

    @Autowired
    private TFeedbackService tFeedbackService;

    @Autowired
    private TPoliceMessageService tPoliceMessageService;

    @Autowired
    private ClockexceptioninforService clockexceptioninforService;

    @Autowired
    private DutywarningService dutywarningService;

    @Autowired
    private AcMobileDataService acMobileDataService;

    @Autowired
    private PunchingpointinforService punchingpointinforService;

    @Autowired
    private UserPViewService userPViewService;

    @Autowired
    private AcReportService acReportService;

    @Autowired
    private PatrolrecordService patrolrecordService;

    @Autowired
    private AcSaftyAuditService acSaftyAuditService;

    @Autowired
    private Ren001Service ren001Service;

    @Autowired
    private RenKz016Service renKz016Service;

    @Autowired
    private TAcVisitLinkRenService tAcVisitLinkRenService;

    @Autowired
    private ExamStandardTemplateDataService examStandardTemplateDataService;

    @Autowired
    private ExamStandardTemplateDataDao examStandardTemplateDataDao;

    @Autowired
    private PersonnelBaseDao personnelBaseDao;

    @Autowired
    private AffairApplicantService affairApplicantService;

    @Autowired
    private AffairThoughtAnalysisService affairThoughtAnalysisService;

    @Autowired
    private OfficeDao officeDao;

    @Autowired
    private AffairHealthCheckupService affairHealthCheckupService;

    @Autowired
    private AffairWorkInfoService affairWorkInfoService;

    @Autowired
    private AffairWorkSummaryService affairWorkSummaryService;

    @Autowired
    private AffairOneHelpOneService affairOneHelpOneService;
    @Autowired
    private AffairGhActivityRecordService affairGhActivityRecordService;

    @Autowired
    private AffairWelfareCondolencesService affairWelfareCondolencesService;

    @Autowired
    private AffairConsolationWorkInfoService affairConsolationWorkInfoService;

    @Autowired
    private OfficeService officeService;
    @Autowired
    private AffairNewsDao affairNewsDao;

    @Autowired
    private AffairLzxxjyActivitiesDao affairLzxxjyActivitiesDao;

    @Autowired
    private AffairPartyRewardPunishService affairPartyRewardPunishService;

    @Autowired
    private AffairTalkManagementService affairTalkManagementService;

    @Autowired
    private AffairDisciplinaryActionService affairDisciplinaryActionService;

    @Autowired
    private AffairPartyRewardPunishDao affairPartyRewardPunishDao;
    @Autowired
    private ExamWorkflowDefineService examWorkflowDefineService;
    @Autowired
    private ExamWorkflowService examWorkflowService;
    @Autowired
    private ExamWorkflowSegmentsService examWorkflowSegmentsService;
    @Autowired
    private ExamWorkflowDatasService examWorkflowDatasService;
    @Autowired
    private ExamStandardBaseInfoService examStandardBaseInfoService;
    @Autowired
    private ExamStandardTemplateDefineService examStandardTemplateDefineService;
    @Autowired
    private ExamStandardTemplateItemDefineService examStandardTemplateItemDefineService;

    @Autowired
    private AffairBasicKnowledgeService affairBasicKnowledgeService;

    @Autowired
    private AffairLedgerEntryTimesService affairLedgerEntryTimesService;

    @Autowired
    private ExamAutoConfigService examAutoConfigService;

    @Autowired
    private AffairLifeMeetDao affairLifeMeetDao;

    @Autowired
    private AffairCommentDao affairCommentDao;

    @Autowired
    private ExamAutoStandardRelevanceService examAutoStandardRelevanceService;//自动考评标准关联表

    //获取考评单位及人员信息
    @Autowired
    private ExamAutoEvaluationUnitService examAutoEvaluationUnitService;



    @Override
    public ExamAutoEvaluation get(String id) {
        return super.get(id);
    }

    @Override
    public List<ExamAutoEvaluation> findList(ExamAutoEvaluation examAutoEvaluation) {
        return super.findList(examAutoEvaluation);
    }

    @Override
    public Page<ExamAutoEvaluation> findPage(Page<ExamAutoEvaluation> page, ExamAutoEvaluation examAutoEvaluation) {
        return super.findPage(page, examAutoEvaluation);
    }

    @Transactional(readOnly = false)
    public void save(ExamAutoEvaluation examAutoEvaluation) {
        // FIXME: 2020/9/18 有的可能会在一条记录上面累加分数，这里有点问题
		/*if (examAutoEvaluationDao.findCountById(examAutoEvaluation.getId()) == 0){
			super.save(examAutoEvaluation);
		}else {
			int yearPartyDayCount = examAutoEvaluationDao.findYearPartyDayCount(examAutoEvaluation.getYear(), examAutoEvaluation.getType(), examAutoEvaluation.getEvalType(), examAutoEvaluation.getPeriod(), examAutoEvaluation.getUnit(), examAutoEvaluation.getUnitId(), examAutoEvaluation.getModelId(), examAutoEvaluation.getOptionId());
			examAutoEvaluation.setScore(String.valueOf(yearPartyDayCount * (-2)));
			examAutoEvaluationDao.update(examAutoEvaluation);
		}*/
        /*所有的自动考评保存的时候 保存行号*/
        ExamStandardTemplateData standardTemplateData = examStandardTemplateDataService.get(examAutoEvaluation.getOptionId());
        if (standardTemplateData != null && standardTemplateData.getRowNum() != null) {
            examAutoEvaluation.setRowNum(String.valueOf(standardTemplateData.getRowNum()));
        }
        if (StringUtils.isNotBlank(examAutoEvaluation.getOptionId())) {

            String row = this.selectRow(examAutoEvaluation.getOptionId());
            examAutoEvaluation.setRowNum(row);
        }

     /*月份使用两位数 MM   (之前用到的地方都使用的 MM)
     String month = examAutoEvaluation.getMonth();
        if (StringUtils.isNotBlank(month)) {
            int m = Integer.valueOf(month);
            String newMonth = String.valueOf(m);
            examAutoEvaluation.setMonth(newMonth);
        }*/


        super.save(examAutoEvaluation);
    }

    /**
     * 月度
     * 周期改变  提前五天
     * 25号以后为下个月
     * 12月25号以后为下年的一月份
     * @param examAutoEvaluation
     */
    @Transactional(readOnly = false)
    public void saveBetaMonth(ExamAutoEvaluation examAutoEvaluation) {
        Calendar calendar = Calendar.getInstance();
        int year = calendar.get(Calendar.YEAR);
        int month = calendar.get(Calendar.MONTH)+1;
        int day = calendar.get(Calendar.DAY_OF_MONTH);
        if (month == 12 && day > 25){
            examAutoEvaluation.setYear(String.valueOf(year+1));
            examAutoEvaluation.setMonth("1");
        }else if (day>25){
            examAutoEvaluation.setMonth(String.valueOf(month+1));
        }
        this.save(examAutoEvaluation);
    }

    /**
     * 年度
     * 周期改变  提前五天
     * 25号以后为下个月
     * 12月25号以后为下年的一月份
     * @param examAutoEvaluation
     */
    @Transactional(readOnly = false)
    public void saveBetaYear(ExamAutoEvaluation examAutoEvaluation) {

        Calendar calendar = Calendar.getInstance();
        int year = calendar.get(Calendar.YEAR);
        int month = calendar.get(Calendar.MONTH)+1;
        int day = calendar.get(Calendar.DAY_OF_MONTH);
        if (month == 12 && day > 1){
            examAutoEvaluation.setYear(String.valueOf(year+1));
            examAutoEvaluation.setMonth("1");
        }else if (day>25){
            examAutoEvaluation.setMonth(String.valueOf(month+1));
        }
        this.save(examAutoEvaluation);
    }

    @Override
    @Transactional(readOnly = false)
    public void delete(ExamAutoEvaluation examAutoEvaluation) {
        super.delete(examAutoEvaluation);
    }

    public int findYearPartyDayCount(String year, String type, String evalType, String period, String partyOrganizationName, String partyOrganizationId, String modelId, String optionId) {
        return examAutoEvaluationDao.findYearPartyDayCount(year, type, evalType, period, partyOrganizationName, partyOrganizationId, modelId, optionId);
    }

    public String findEvaluationId(String name, String idNumber) {
        return examAutoEvaluationDao.findEvaluationId(name, idNumber);
    }

    public String selectRow(String optionId) {
        return examStandardTemplateDataDao.selectRowById(optionId);
    }

    /**
     * 高铁入网 - 局考处  - 年度
     * 发生高铁线路网内进人案事件，每发生1起，扣0.5分
     * 警综平台 - 治安
     *
     * @param year yyyy
     */
    @Transactional(readOnly = false)
    public void gtrwJKCByYear(String year) {
        try {
            Map<String,Object> yearMap = this.getTimeQuantumByYear(year);
            Date nowYearDate = (Date) yearMap.get("nowYear");
            Date lastYearDate = (Date) yearMap.get("lastYear");
            year = (String) yearMap.get("year");
            Boolean isBhc = false;
            Boolean isNnc = false;
            Boolean isLzc = false;
            Double nncScore = 0.0;
            StringBuffer nncDetail = null;
            Double lzcScore = 0.0;
            StringBuffer lzcDetail = null;
            Double bhcScore = 0.0;
            StringBuffer bhcDetail = null;
//            List<Map<String, Object>> mapList = examAutoEvaluationDao.selListByYear(year);
            List<Map<String, Object>> mapList = examAutoEvaluationDao.selListByNowLastTime(nowYearDate,lastYearDate);
            if (mapList != null && mapList.size() > 0) {
                for (Map<String, Object> tempMap : mapList) {
                    String fasj = ((String) tempMap.get("fasj"));//发生时间
                    String detail = (String) tempMap.get("ajlb");//details 详情
                    String detail2 = (String) tempMap.get("jyaq");//details 详情
                    String parentId = (String) tempMap.get("parentId");
                    String parentIds = (String) tempMap.get("parentIds");
                    String unitId = (String) tempMap.get("unitId");
                    String unitName = (String) tempMap.get("unitName");
                    if ("34".equals(parentId) || "34".equals(unitId) || parentIds.contains(",34,")) {
                        //南宁处
                        isNnc = true;
                        nncScore += 0.5;
                        if(nncDetail==null){
                            nncDetail = new StringBuffer();
                            if (StringUtils.isNotBlank(detail2)) {
                                nncDetail.append(detail2);
                            } else {
                                nncDetail.append(detail);
                            }
                        }else{
                            if (StringUtils.isNotBlank(detail2)) {
                                nncDetail.append(","+detail2);
                            } else {
                                nncDetail.append(","+detail);
                            }
                        }
                    }
                    if ("95".equals(parentId) || "95".equals(unitId) || parentIds.contains(",95,")) {
                        //柳州处
                        isLzc = true;
                        lzcScore += 0.5;
                        if(lzcDetail==null){
                            lzcDetail = new StringBuffer();
                            if (StringUtils.isNotBlank(detail2)) {
                                lzcDetail.append(detail2);
                            } else {
                                lzcDetail.append(detail);
                            }
                        }else{
                            if (StringUtils.isNotBlank(detail2)) {
                                lzcDetail.append(","+detail2);
                            } else {
                                lzcDetail.append(","+detail);
                            }
                        }
                       }
                    if ("156".equals(parentId) || "156".equals(unitId) || parentIds.contains(",156,")) {
                        //北海处
                        isBhc = true;
                        bhcScore += 0.5;
                        if(bhcDetail==null){
                            bhcDetail = new StringBuffer();
                            if (StringUtils.isNotBlank(detail2)) {
                                bhcDetail.append(detail2);
                            } else {
                                bhcDetail.append(detail);
                            }
                        }else{
                            if (StringUtils.isNotBlank(detail2)) {
                                bhcDetail.append(","+detail2);
                            } else {
                                bhcDetail.append(","+detail);
                            }
                        }
                    }
                }
            }
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");//考评对象 1 单位  2民警
            examAutoEvaluation.setEvalType("1");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
            examAutoEvaluation.setPeriod("2");//考评周期  1 月  2 年
            examAutoEvaluation.setYear(year);//年份
            examAutoEvaluation.setAssess("南宁局治安管理处");//考核部门
            examAutoEvaluation.setAssessId("8dffef78d8d2407fa0e787799efe04ac");//考核部门id
            examAutoEvaluation.setModel("2020年南宁铁路公安局对公安处年度绩效标准减分（重点工作-高铁）");//使用模板
            examAutoEvaluation.setModelId("ba79cb0eaa4a4cd88cb0896e74e445ac");//使用模板id
            examAutoEvaluation.setOption("发生高铁线路网内进人案事件，每发生1起");//选择项
            examAutoEvaluation.setOptionId("c4e3aadc21d841b9b8e85569ea0eaca5");//选择项id
            examAutoEvaluation.setFromSys("警综平台");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"高铁入网");
            if(isNnc){
                examAutoEvaluation.setScore(String.valueOf(nncScore));
                examAutoEvaluation.setDetails(nncDetail.toString());
                examAutoEvaluation.setUnit("南宁处治安支队");
                examAutoEvaluation.setUnitId("45");
                examAutoEvaluation.setEvaluationId("aab30465f28547a4bdc69fd652ff8a4c");
                examAutoEvaluation.setId("");
                examAutoEvaluation.setIsNewRecord(false);
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if(isLzc){
                examAutoEvaluation.setScore(String.valueOf(lzcScore));
                examAutoEvaluation.setDetails(lzcDetail.toString());
                examAutoEvaluation.setUnit("柳州处治安支队");
                examAutoEvaluation.setUnitId("160");
                examAutoEvaluation.setEvaluationId("f6461092f65243f9837b4a7fd3e46210");
                examAutoEvaluation.setId("");
                examAutoEvaluation.setIsNewRecord(false);
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if(isBhc){
                examAutoEvaluation.setScore(String.valueOf(bhcScore));
                examAutoEvaluation.setDetails(bhcDetail.toString());
                examAutoEvaluation.setUnit("北海处治安支队");
                examAutoEvaluation.setUnitId("272");
                examAutoEvaluation.setEvaluationId("b309552b4eb64c78b2540c52daa91b7f");
                examAutoEvaluation.setId("");
                examAutoEvaluation.setIsNewRecord(false);
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    /**
     * 高铁入网 - 局考处  - 月度
     * 发生高铁线路网内进人案事件，每发生1起，扣3分
     * 警综平台 - 治安
     *
     * @param year yyyy
     * @Param month  MM
     */
    @Transactional(readOnly = false)
    public void gtrwJKCByMonth(String year, String month) {
        try {
            Boolean isBhc = false;
            Boolean isNnc = false;
            Boolean isLzc = false;
            Double nncScore = 0.0;
            StringBuffer nncDetail = null;
            Double lzcScore = 0.0;
            StringBuffer lzcDetail = null;
            Double bhcScore = 0.0;
            StringBuffer bhcDetail = null;
            Map<String,Object> monthMap = this.getTimeQuantumByMonth(year,month,"外部");
            Date nowMonthDate = (Date) monthMap.get("nowTime");
            Date lastMonthDate = (Date) monthMap.get("lastTime");
            year = (String) monthMap.get("year");
            month = (String) monthMap.get("month");
//            List<Map<String, Object>> mapList = examAutoEvaluationDao.selListByMonth(year, month);
            List<Map<String, Object>> mapList = examAutoEvaluationDao.selListByNowLastTime(nowMonthDate, lastMonthDate);
            if (mapList != null && mapList.size() > 0) {
                for (Map<String, Object> tempMap : mapList) {
                    String fasj = ((String) tempMap.get("fasj"));//发生时间
                    String detail = (String) tempMap.get("ajlb");//details 详情
                    String detail2 = (String) tempMap.get("jyaq");//details 详情
                    String parentId = (String) tempMap.get("parentId");
                    String parentIds = (String) tempMap.get("parentIds");
                    String unitId = (String) tempMap.get("unitId");
                    String unitName = (String) tempMap.get("unitName");
                    if ("34".equals(parentId) || "34".equals(unitId) || parentIds.contains(",34,")) {
                        //南宁处
                        isNnc = true;
                        nncScore += 3;
                        if(nncDetail==null){
                            nncDetail = new StringBuffer();
                            if (StringUtils.isNotBlank(detail2)) {
                                nncDetail.append(detail2);
                            } else {
                                nncDetail.append(detail);
                            }
                        }else{
                            if (StringUtils.isNotBlank(detail2)) {
                                nncDetail.append(","+detail2);
                            } else {
                                nncDetail.append(","+detail);
                            }
                        }
                    }
                    if ("95".equals(parentId) || "95".equals(unitId) || parentIds.contains(",95,")) {
                        //柳州处
                        isLzc = true;
                        lzcScore += 3;
                        if(lzcDetail==null){
                            lzcDetail = new StringBuffer();
                            if (StringUtils.isNotBlank(detail2)) {
                                lzcDetail.append(detail2);
                            } else {
                                lzcDetail.append(detail);
                            }
                        }else{
                            if (StringUtils.isNotBlank(detail2)) {
                                lzcDetail.append(","+detail2);
                            } else {
                                lzcDetail.append(","+detail);
                            }
                        }
                    }
                    if ("156".equals(parentId) || "156".equals(unitId) || parentIds.contains(",156,")) {
                        //北海处
                        isBhc = true;
                        bhcScore += 3;
                        if(bhcDetail==null){
                            bhcDetail = new StringBuffer();
                            if (StringUtils.isNotBlank(detail2)) {
                                bhcDetail.append(detail2);
                            } else {
                                bhcDetail.append(detail);
                            }
                        }else{
                            if (StringUtils.isNotBlank(detail2)) {
                                bhcDetail.append(","+detail2);
                            } else {
                                bhcDetail.append(","+detail);
                            }
                        }
                    }
                }
            }
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");//考评对象 1 单位  2民警
            examAutoEvaluation.setEvalType("1");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
            examAutoEvaluation.setPeriod("1");//考评周期  1 月  2 年
            examAutoEvaluation.setYear(year);//年份
            examAutoEvaluation.setMonth(month);//年份
            examAutoEvaluation.setAssess("南宁局治安管理处");//考核部门
            examAutoEvaluation.setAssessId("8dffef78d8d2407fa0e787799efe04ac");//考核部门id
            examAutoEvaluation.setModel("2020年南宁铁路公安局对公安处月度绩效标准扣分（重点工作-高铁）");//使用模板
            examAutoEvaluation.setModelId("f249419e5d3f4561aad08457ef68fab4");//使用模板id
            examAutoEvaluation.setOption("发生高铁线路网内进人案事件，每发生1起");//选择项
            examAutoEvaluation.setOptionId("3dcc085ee2a648089a401995d054dc55");//选择项id
            examAutoEvaluation.setFromSys("警综平台");
            examAutoEvaluation.setRowNum("17");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"高铁入网");
            if(isNnc){
                examAutoEvaluation.setScore(String.valueOf(nncScore));
                examAutoEvaluation.setDetails(nncDetail.toString());
                examAutoEvaluation.setUnit("南宁处治安支队");
                examAutoEvaluation.setUnitId("45");
                examAutoEvaluation.setEvaluationId("aab30465f28547a4bdc69fd652ff8a4c");
                examAutoEvaluation.setId("");
                examAutoEvaluation.setIsNewRecord(false);
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if(isLzc){
                examAutoEvaluation.setScore(String.valueOf(lzcScore));
                examAutoEvaluation.setDetails(lzcDetail.toString());
                examAutoEvaluation.setUnit("柳州处治安支队");
                examAutoEvaluation.setUnitId("160");
                examAutoEvaluation.setEvaluationId("f6461092f65243f9837b4a7fd3e46210");
                examAutoEvaluation.setId("");
                examAutoEvaluation.setIsNewRecord(false);
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if(isBhc){
                examAutoEvaluation.setScore(String.valueOf(bhcScore));
                examAutoEvaluation.setDetails(bhcDetail.toString());
                examAutoEvaluation.setUnit("北海处治安支队");
                examAutoEvaluation.setUnitId("272");
                examAutoEvaluation.setEvaluationId("b309552b4eb64c78b2540c52daa91b7f");
                examAutoEvaluation.setId("");
                examAutoEvaluation.setIsNewRecord(false);
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * 高铁入网 - 处考派出所  - 月度
     * 根据处置快慢程度和影响列车运行情况相应扣分：每发生1起，扣3分，
     * 派出所接报1小时内未将入网人员清出网外或控制的，每起加扣1分，
     * 造成列车临停的，每起加扣2分；
     * 30日内未查清的每起扣6分。
     * 查清入网后，有证据证明实施行为人通过在普速铁路扒车进入高铁的或者属于未列控（含流浪）的精神病人的，每起扣3分；(已有)
     * 警综平台 - 治安
     *
     * @param year yyyy
     * @Param month  MM
     */
    @Transactional(readOnly = false)
    public void gtrwCkdsByMonth(String year, String month) {
        try {
            Map<String,Object> monthMap = this.getTimeQuantumByMonth(year,month,"外部");
            Date nowMonthDate = (Date) monthMap.get("nowTime");
            Date lastMonthDate = (Date) monthMap.get("lastTime");
            year = (String) monthMap.get("year");
            month = (String) monthMap.get("month");
            Map<String,ExamAutoEvaluation> pcsExamAutoMap;
//            List<Map<String, Object>> mapList = examAutoEvaluationDao.ckpcsByMonth(year, month);
            List<Map<String, Object>> mapList = examAutoEvaluationDao.ckpcsByNowLastTime(nowMonthDate, lastMonthDate);
            if (mapList != null && mapList.size() > 0) {
                pcsExamAutoMap = new HashMap<>();
                for (Map<String, Object> tempMap : mapList) {
                    String fasj = ((String) tempMap.get("fasj"));//发生时间
                    String cpsj = ((String) tempMap.get("cpsj"));//查破时间
                    String detail = (String) tempMap.get("ajlb");//details 详情
                    String detail2 = (String) tempMap.get("jyaq");//details 详情
                    String parentId = (String) tempMap.get("parentId");
                    String parentIds = (String) tempMap.get("parentIds");
                    String unitId = (String) tempMap.get("unitId");
                    String unitName = (String) tempMap.get("unitName");
                    String userId = (String) tempMap.get("userId");
                    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSSS");
                    Date fasj_date = DateUtils.parseDate(fasj);//发案时间
                    Date cpsj_date = DateUtils.parseDate(cpsj);//查破时间
                    try {
                        if (fasj_date == null && StringUtils.isNotBlank(fasj)) {
                            fasj_date = sdf.parse(fasj);
                        }
                        if (cpsj_date == null && StringUtils.isNotBlank(cpsj)) {
                            cpsj_date = sdf.parse(cpsj);
                        }
                    } catch (ParseException e) {
                        e.printStackTrace();
                    }
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");//考评对象 1 单位  2民警
                    examAutoEvaluation.setEvalType("3");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
                    examAutoEvaluation.setPeriod("1");//考评周期  1 月  2 年
                    examAutoEvaluation.setYear(year);//年份
                    examAutoEvaluation.setMonth(month);//年份
                    //详情
                    if (StringUtils.isNotBlank(detail2)) {
                        examAutoEvaluation.setDetails(detail2);
                    } else {
                        examAutoEvaluation.setDetails(detail);
                    }
                    examAutoEvaluation.setUnit(unitName);//单位名称
                    examAutoEvaluation.setUnitId(unitId);//单位id
                    examAutoEvaluation.setEvaluationId(userId);//被考评对象id
                    examAutoEvaluation.setFromSys("警综平台");
                    Calendar faCalendar = Calendar.getInstance();
                    Calendar cpCalendar = Calendar.getInstance();
                    if (fasj_date != null && cpsj_date != null) {
                        faCalendar.setTime(fasj_date);
                        cpCalendar.setTime(cpsj_date);
                    }
                    //根据发案时间和查破时间判断
                    if (fasj_date != null && cpsj_date != null && (cpCalendar.getTimeInMillis() - faCalendar.getTimeInMillis() > 60 * 60 * 1000)) {
                        //一小时
                        if(pcsExamAutoMap.get("hour"+unitName)!=null){
                            ExamAutoEvaluation examAutoEvaluationTemp = pcsExamAutoMap.get("hour"+unitName);
                            String detailMap = examAutoEvaluationTemp.getDetails();
                            String scoreMap = examAutoEvaluationTemp.getScore();
                            if (StringUtils.isNotBlank(detail2)) {
                                examAutoEvaluationTemp.setDetails(detailMap+detail2);
                            } else {
                                examAutoEvaluationTemp.setDetails(detailMap+detail);
                            }
                            Double score = Double.valueOf(scoreMap)+4.0;
                            examAutoEvaluationTemp.setScore(String.valueOf(score));
                        }else{
                            if ("34".equals(parentId) || "34".equals(unitId) || parentIds.contains(",34,")) {
                                //南宁处
                                examAutoEvaluation.setAssess("南宁处治安支队");//考核部门
                                examAutoEvaluation.setAssessId("aab30465f28547a4bdc69fd652ff8a4c");//考核部门id
                                examAutoEvaluation.setModel("2020年月度南宁公安处对高铁派出所绩效标准（重点工作-高铁）");//使用模板
                                examAutoEvaluation.setModelId("4790cc51c0694e7b81bd176869d84be2");//使用模板id
                                //examAutoEvaluation.setOption("发生高铁线路网内进人案事件，每发生1起");//选择项
                                //examAutoEvaluation.setOptionId("fa843465e1524a90a85e497ba6bee599");//选择项id
                                examAutoEvaluation.setFromSys("警综平台");
                                examAutoEvaluation.setRowNum("17");

                                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","高铁入网1小时");
                                Double score = 3.0;
                                //根据发案时间及查破时间判断
                                //派出所接报1小时内未将入网人员清出网外或控制的，每起加扣1
                                examAutoEvaluation.setOption("");//选择项
                                examAutoEvaluation.setOptionId("");//选择项id
                                score += 1.0;
                                //造成列车临停的，每起加扣2分；
                                //查清入网后，有证据证明实施行为人通过在普速铁路扒车进入高铁的或者属于未列控（含流浪）的精神病人的，每起扣3分；(已有)
                                examAutoEvaluation.setScore("4.0");//分值
                            }
                            if ("95".equals(parentId) || "95".equals(unitId) || parentIds.contains(",95,")) {
                                //柳州处
                                examAutoEvaluation.setAssess("柳州处治安支队");//考核部门
                                examAutoEvaluation.setAssessId("f6461092f65243f9837b4a7fd3e46210");//考核部门id
                                examAutoEvaluation.setModel("柳州处对派出所2020年月度重点工作绩效考核扣分标准（高铁）");//使用模板
                                examAutoEvaluation.setModelId("d8bc20da733f4b3faa143a2cb9c88a20");//使用模板id
                                //examAutoEvaluation.setOption("发生高铁线路网内进人案事件，每发生1起");//选择项
                                //examAutoEvaluation.setOptionId("c9d51a483cfc472fb785f013ec56b6f5");//选择项id
                                //派出所接报1小时内未将入网人员清出网外或控制的，每起加扣1
                                examAutoEvaluation.setOption("发生高铁线路网内进人案事件，派出所接报1小时内未将入网人员清出网外或控制的");//选择项
                                examAutoEvaluation.setOptionId("19259420358a422f8ae4252f254733a2");//选择项id
                                examAutoEvaluation.setScore("4.0");//分值

                                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","高铁入网1小时");
                                //19259420358a422f8ae4252f254733a2 发生高铁线路网内进人案事件，派出所接报1小时内未将入网人员清出网外或控制的
                                //c23ccffa7cd54885b0e0569945d5ed16 发生高铁线路网内进人案事件，30日内未查清的
                                // 未处理
                                //0e12be4a209d47f0ac51a17a3ef789f1 发生高铁线路网内进人案事件，造成列车临时停车的
                                //查清入网后，有证据证明实施行为人通过在普速铁路扒车进入高铁的或者属于未列控（含流浪）的精神病人的，每起扣3分；(已有)

                            }
                            if ("156".equals(parentId) || "156".equals(unitId) || parentIds.contains(",156,")) {
                                //北海处
                                examAutoEvaluation.setModel("2020年北海处对派出所月度绩效标准（重点-高铁）");//使用模板
                                examAutoEvaluation.setModelId("db3a2ba82f714c589e9b91754ae8ba89");//使用模板id
                                //examAutoEvaluation.setOption("发生高铁线路网内进人案事件，每发生1起");//选择项
                                //examAutoEvaluation.setOptionId("d78c0762d60c4ceb9ffabb57fd6d2a5c");//选择项id
                                examAutoEvaluation.setAssess("北海处治安支队");//考核部门
                                examAutoEvaluation.setAssessId("b309552b4eb64c78b2540c52daa91b7f");//考核部门id
                                //派出所接报1小时内未将入网人员清出网外或控制的，每起加扣1
                                examAutoEvaluation.setOption("发生高铁线路网内进人案事件，派出所接报1小时内未将入网人员清出网外或控制的");//选择项
                                examAutoEvaluation.setOptionId("31e428514ee44028a1e84254e1671138");//选择项id
                                examAutoEvaluation.setScore("4.0");//分值
                                 examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","高铁入网1小时");
                                // 未处理
                                //ce5a862878ea4537a6cb8261527cfb07 发生高铁线路网内进人案事件，造成列车临时停车的
                                //查清入网后，有证据证明实施行为人通过在普速铁路扒车进入高铁的或者属于未列控（含流浪）的精神病人的，每起扣3分；(已有)
                            }
                            pcsExamAutoMap.put("hour"+unitName,examAutoEvaluation);
                        }
                    }
                    else if(fasj_date != null && cpsj_date != null && (cpCalendar.get(Calendar.DATE) - faCalendar.get(Calendar.DATE) >30)){
                        //30日内
                        if(pcsExamAutoMap.get("day"+unitName)!=null){
                            ExamAutoEvaluation examAutoEvaluationTemp = pcsExamAutoMap.get("day"+unitName);
                            String detailMap = examAutoEvaluationTemp.getDetails();
                            String scoreMap = examAutoEvaluationTemp.getScore();
                            if (StringUtils.isNotBlank(detail2)) {
                                examAutoEvaluationTemp.setDetails(detailMap+detail2);
                            } else {
                                examAutoEvaluationTemp.setDetails(detailMap+detail);
                            }
                            Double score = Double.valueOf(scoreMap)+6.0;
                            examAutoEvaluationTemp.setScore(String.valueOf(score));
                        }else{
                            if ("34".equals(parentId) || "34".equals(unitId) || parentIds.contains(",34,")) {
                                //南宁处
                                examAutoEvaluation.setAssess("南宁处治安支队");//考核部门
                                examAutoEvaluation.setAssessId("aab30465f28547a4bdc69fd652ff8a4c");//考核部门id
                                examAutoEvaluation.setModel("2020年月度南宁公安处对高铁派出所绩效标准（重点工作-高铁）");//使用模板
                                examAutoEvaluation.setModelId("4790cc51c0694e7b81bd176869d84be2");//使用模板id
                                //examAutoEvaluation.setOption("发生高铁线路网内进人案事件，每发生1起");//选择项
                                //examAutoEvaluation.setOptionId("3dcc085ee2a648089a401995d054dc55");//选择项id
                                examAutoEvaluation.setFromSys("警综平台");
                                examAutoEvaluation.setRowNum("17");
                                //30日内未查清的每起扣6分。
                                examAutoEvaluation.setOption("发生高铁线路网内进人案事件，30日内未查清的");//选择项
                                examAutoEvaluation.setOptionId("2030dcc15600406885fb5bbf13994e19");//选择项id
                                examAutoEvaluation.setScore("9.0");//分值

                                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","高铁入网30日");
                                //造成列车临停的，每起加扣2分；
                                //查清入网后，有证据证明实施行为人通过在普速铁路扒车进入高铁的或者属于未列控（含流浪）的精神病人的，每起扣3分；(已有)
                            }
                            if ("95".equals(parentId) || "95".equals(unitId) || parentIds.contains(",95,")) {
                                //柳州处
                                examAutoEvaluation.setAssess("柳州处治安支队");//考核部门
                                examAutoEvaluation.setAssessId("f6461092f65243f9837b4a7fd3e46210");//考核部门id
                                examAutoEvaluation.setModel("柳州处对派出所2020年月度重点工作绩效考核扣分标准（高铁）");//使用模板
                                examAutoEvaluation.setModelId("d8bc20da733f4b3faa143a2cb9c88a20");//使用模板id
                                //examAutoEvaluation.setOption("发生高铁线路网内进人案事件，每发生1起");//选择项
                                //examAutoEvaluation.setOptionId("c9d51a483cfc472fb785f013ec56b6f5");//选择项id
                                //30日内未查清的每起扣6分。
                                examAutoEvaluation.setOption("发生高铁线路网内进人案事件，30日内未查清的");//选择项
                                examAutoEvaluation.setOptionId("c23ccffa7cd54885b0e0569945d5ed16");//选择项id
                                examAutoEvaluation.setScore("9.0");//分值

                                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","高铁入网30日");
                                //19259420358a422f8ae4252f254733a2 发生高铁线路网内进人案事件，派出所接报1小时内未将入网人员清出网外或控制的
                                //c23ccffa7cd54885b0e0569945d5ed16 发生高铁线路网内进人案事件，30日内未查清的
                                // 未处理
                                //0e12be4a209d47f0ac51a17a3ef789f1 发生高铁线路网内进人案事件，造成列车临时停车的
                                // 查清入网后，有证据证明实施行为人通过在普速铁路扒车进入高铁的或者属于未列控（含流浪）的精神病人的，每起扣3分；(已有)
                            }
                            if ("156".equals(parentId) || "156".equals(unitId) || parentIds.contains(",156,")) {
                                //北海处
                                examAutoEvaluation.setModel("2020年北海处对派出所月度绩效标准（重点-高铁）");//使用模板
                                examAutoEvaluation.setModelId("db3a2ba82f714c589e9b91754ae8ba89");//使用模板id
                                //examAutoEvaluation.setOption("发生高铁线路网内进人案事件，每发生1起");//选择项
                                //examAutoEvaluation.setOptionId("d78c0762d60c4ceb9ffabb57fd6d2a5c");//选择项id
                                examAutoEvaluation.setAssess("北海处治安支队");//考核部门
                                examAutoEvaluation.setAssessId("b309552b4eb64c78b2540c52daa91b7f");//考核部门id
                                examAutoEvaluation.setOption("发生高铁线路网内进人案事件，30日内未查清的");//选择项
                                examAutoEvaluation.setOptionId("74d4976607e14f1e8c940d96d3d00b49");//选择项id
                                examAutoEvaluation.setScore("9.0");//分值

                                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","高铁入网30日");
                                // 未处理
                                //ce5a862878ea4537a6cb8261527cfb07 发生高铁线路网内进人案事件，造成列车临时停车的
                                //查清入网后，有证据证明实施行为人通过在普速铁路扒车进入高铁的或者属于未列控（含流浪）的精神病人的，每起扣3分；(已有)
                            }
                            pcsExamAutoMap.put("day"+unitName,examAutoEvaluation);
                        }
                    }else{
                        //每发生一起扣3分
                        if(pcsExamAutoMap.get(unitName)!=null){
                            ExamAutoEvaluation examAutoEvaluationTemp = pcsExamAutoMap.get(unitName);
                            String detailMap = examAutoEvaluationTemp.getDetails();
                            String scoreMap = examAutoEvaluationTemp.getScore();
                            if (StringUtils.isNotBlank(detail2)) {
                                examAutoEvaluationTemp.setDetails(detailMap+detail2);
                            } else {
                                examAutoEvaluationTemp.setDetails(detailMap+detail);
                            }
                            Double score = Double.valueOf(scoreMap)+3.0;
                            examAutoEvaluationTemp.setScore(String.valueOf(score));
                        }
                        else{
                            if ("34".equals(parentId) || "34".equals(unitId) || parentIds.contains(",34,")) {
                                //南宁处
                                examAutoEvaluation.setAssess("南宁处治安支队");//考核部门
                                examAutoEvaluation.setAssessId("aab30465f28547a4bdc69fd652ff8a4c");//考核部门id
                                examAutoEvaluation.setModel("2020年月度南宁公安处对高铁派出所绩效标准（重点工作-高铁）");//使用模板
                                examAutoEvaluation.setModelId("4790cc51c0694e7b81bd176869d84be2");//使用模板id
                                examAutoEvaluation.setOption("发生高铁线路网内进人案事件，每发生1起");//选择项
                                examAutoEvaluation.setOptionId("3dcc085ee2a648089a401995d054dc55");//选择项id
                                examAutoEvaluation.setScore("3.0");//分值

                                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","高铁入网每发生一起");
                                //造成列车临停的，每起加扣2分；
                                //查清入网后，有证据证明实施行为人通过在普速铁路扒车进入高铁的或者属于未列控（含流浪）的精神病人的，每起扣3分；(已有)
                            }
                            if ("95".equals(parentId) || "95".equals(unitId) || parentIds.contains(",95,")) {
                                //柳州处
                                examAutoEvaluation.setAssess("柳州处治安支队");//考核部门
                                examAutoEvaluation.setAssessId("f6461092f65243f9837b4a7fd3e46210");//考核部门id
                                examAutoEvaluation.setModel("柳州处对派出所2020年月度重点工作绩效考核扣分标准（高铁）");//使用模板
                                examAutoEvaluation.setModelId("d8bc20da733f4b3faa143a2cb9c88a20");//使用模板id
                                examAutoEvaluation.setOption("发生高铁线路网内进人案事件，每发生1起");//选择项
                                examAutoEvaluation.setOptionId("c9d51a483cfc472fb785f013ec56b6f5");//选择项id
                                examAutoEvaluation.setScore("3.0");//分值

                                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","高铁入网每发生一起");
                                //19259420358a422f8ae4252f254733a2 发生高铁线路网内进人案事件，派出所接报1小时内未将入网人员清出网外或控制的
                                //c23ccffa7cd54885b0e0569945d5ed16 发生高铁线路网内进人案事件，30日内未查清的
                                // 未处理
                                //0e12be4a209d47f0ac51a17a3ef789f1 发生高铁线路网内进人案事件，造成列车临时停车的
                                // 查清入网后，有证据证明实施行为人通过在普速铁路扒车进入高铁的或者属于未列控（含流浪）的精神病人的，每起扣3分；(已有)
                            }
                            if ("156".equals(parentId) || "156".equals(unitId) || parentIds.contains(",156,")) {
                                //北海处
                                examAutoEvaluation.setModel("2020年北海处对派出所月度绩效标准（重点-高铁）");//使用模板
                                examAutoEvaluation.setModelId("db3a2ba82f714c589e9b91754ae8ba89");//使用模板id
                                examAutoEvaluation.setOption("发生高铁线路网内进人案事件，每发生1起");//选择项
                                examAutoEvaluation.setOptionId("d78c0762d60c4ceb9ffabb57fd6d2a5c");//选择项id
                                examAutoEvaluation.setAssess("北海处治安支队");//考核部门
                                examAutoEvaluation.setAssessId("b309552b4eb64c78b2540c52daa91b7f");//考核部门id
                                examAutoEvaluation.setScore("3.0");//分值

                                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","高铁入网每发生一起");
                                // 未处理
                                //ce5a862878ea4537a6cb8261527cfb07 发生高铁线路网内进人案事件，造成列车临时停车的
                                //查清入网后，有证据证明实施行为人通过在普速铁路扒车进入高铁的或者属于未列控（含流浪）的精神病人的，每起扣3分；(已有)
                            }
                            pcsExamAutoMap.put(unitName,examAutoEvaluation);
                        }
                    }
                }
                for(String key : pcsExamAutoMap.keySet()){
                    ExamAutoEvaluation examAutoEvaluation = pcsExamAutoMap.get(key);
                    examAutoEvaluation.setId("");
                    examAutoEvaluation.setIsNewRecord(false);
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }


     /**
      * 局考处 - 月度 - 治安 -警综平台 -路外伤亡
      * 高铁线路发生铁路交通事故、撞大牲畜的，每起扣3分（已有）
      * @param year  yyyy
      * @param month MM
      */
    public void jkcLWSWByMonth(String year, String month){
        Map<String,Object> monthMap = this.getTimeQuantumByMonth(year,month,"外部");
        Date nowMonthDate = (Date) monthMap.get("nowTime");
        Date lastMonthDate = (Date) monthMap.get("lastTime");
        year = (String) monthMap.get("year");
        month = (String) monthMap.get("month");
        StringBuffer nncDetail1 = null;
        Boolean nncIs0 = false;
        int nncNum = 0;
        StringBuffer lzcDetail1 = null;
        Boolean lzcIs0 = false;
        int lzcNum = 0;
        StringBuffer bhcDetail1 = null;
        Boolean bhcIs0 = false;
        int bhcNum = 0;
        int i = 0;
        //List<Map<String, Object>> mapList = examAutoEvaluationDao.ckpcsLWSWByMonth(year, month);//获取相关信息
        List<Map<String, Object>> mapList = examAutoEvaluationDao.jkcLWSWByNowLastMonth(nowMonthDate, lastMonthDate);//获取相关信息
        if (mapList != null && mapList.size() > 0) {
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");//考评对象 1 单位  2民警
            examAutoEvaluation.setEvalType("1");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
            examAutoEvaluation.setPeriod("1");//考评周期  1 月  2 年
            examAutoEvaluation.setYear(year);//年份
            examAutoEvaluation.setMonth(month);//年份
            examAutoEvaluation.setFromSys("警综平台");
            examAutoEvaluation.setModel("2020年南宁铁路公安局对公安处月度绩效标准扣分（重点工作-高铁）");
            examAutoEvaluation.setModelId("f249419e5d3f4561aad08457ef68fab4");
            examAutoEvaluation.setOption("高铁发生铁路交通事故的");
            examAutoEvaluation.setOptionId("b5de650736b04cb0ad9fb5d082ad882a");
            for (Map<String, Object> tempMap : mapList) {
                i++;
                String parentId = (String) tempMap.get("parentId");
                String parentIds = (String) tempMap.get("parentIds");
                String unitId = (String) tempMap.get("unitId");
                String unitName = (String) tempMap.get("unitName");
                String userId = (String) tempMap.get("userId");
                String unitCode = (String) tempMap.get("unitCode");
                String sglb = (String) tempMap.get("sglb");//事故类别
                String sgyy = (String) tempMap.get("sgyy");//事故原因
                String sgjyqk = (String) tempMap.get("sgjyqk");//事故简要情况
                if ("34".equals(parentId) || "34".equals(unitId) || parentIds.contains(",34,")) {
                    nncIs0 = true;
                    if(nncDetail1==null){
                        nncDetail1=new StringBuffer(i+"."+unitName+sgjyqk);
                    }else{
                        nncDetail1.append(i+"."+unitName+sgjyqk);
                    }
                    nncNum++;
                }
                if ("95".equals(parentId) || "95".equals(unitId) || parentIds.contains(",95,")) {
                    lzcIs0 = true;
                    if(nncDetail1==null){
                        lzcDetail1=new StringBuffer(i+"."+unitName+sgjyqk);
                    }else{
                        lzcDetail1.append(i+"."+unitName+sgjyqk);
                    }
                    lzcNum++;
                }
                if ("156".equals(parentId) || "156".equals(unitId) || parentIds.contains(",156,")) {
                    bhcIs0 = true;
                    if(bhcDetail1==null){
                        bhcDetail1=new StringBuffer(i+"."+unitName+sgjyqk);
                    }else{
                        bhcDetail1.append(i+"."+unitName+sgjyqk);
                    }
                    bhcNum++;
                }
            }
            if(nncNum>0){
                examAutoEvaluation.setUnit("南宁处治安支队");
                examAutoEvaluation.setUnitId("45");
                examAutoEvaluation.setEvaluationId("aab30465f28547a4bdc69fd652ff8a4c");
                examAutoEvaluation.setScore(String.valueOf(10.0*nncNum));
                examAutoEvaluation.setDetails(nncDetail1.toString());
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"路外伤亡");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if(lzcNum>0){
                examAutoEvaluation.setUnit("柳州处治安支队");
                examAutoEvaluation.setUnitId("160");
                examAutoEvaluation.setEvaluationId("f6461092f65243f9837b4a7fd3e46210");
                examAutoEvaluation.setScore(String.valueOf(10.0*lzcNum));
                examAutoEvaluation.setDetails(lzcDetail1.toString());
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"路外伤亡");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if(bhcNum>0){
                examAutoEvaluation.setUnit("北海处治安支队");
                examAutoEvaluation.setUnitId("272");
                examAutoEvaluation.setEvaluationId("b309552b4eb64c78b2540c52daa91b7f");
                examAutoEvaluation.setScore(String.valueOf(10.0*bhcNum));
                examAutoEvaluation.setDetails(bhcDetail1.toString());
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"路外伤亡");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
        }
    }

     /**
      * 局考处 - 年度 - 治安 -警综平台 -路外伤亡
      */
    public void jkcLWSWByYear(String year){
        Map<String,Object> monthMap = this.getTimeQuantumByYear(year);
        Date nowMonthDate = (Date) monthMap.get("nowTime");
        Date lastMonthDate = (Date) monthMap.get("lastTime");
        /*Date nowMonthDate = DateUtils.parseDate("2020-12-01");
        Date lastMonthDate = DateUtils.parseDate("2019-12-02");*/
        year = (String) monthMap.get("year");
        StringBuffer nncDetail1 = null;
        Boolean nncIs0 = false;
        int nncNum = 0;
        StringBuffer lzcDetail1 = null;
        Boolean lzcIs0 = false;
        int lzcNum = 0;
        StringBuffer bhcDetail1 = null;
        Boolean bhcIs0 = false;
        int bhcNum = 0;
        int i = 0;
        //List<Map<String, Object>> mapList = examAutoEvaluationDao.ckpcsLWSWByMonth(year, month);//获取相关信息
        List<Map<String, Object>> mapList = examAutoEvaluationDao.jkcLWSWByNowLastMonth(nowMonthDate, lastMonthDate);//获取相关信息
        if (mapList != null && mapList.size() > 0) {
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");//考评对象 1 单位  2民警
            examAutoEvaluation.setEvalType("1");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
            examAutoEvaluation.setPeriod("1");//考评周期  1 月  2 年
            examAutoEvaluation.setYear(year);//年份
            examAutoEvaluation.setFromSys("警综平台");
            examAutoEvaluation.setModel("2020年南宁铁路公安局对公安处月度绩效标准扣分（重点工作-高铁）");
            examAutoEvaluation.setModelId("f249419e5d3f4561aad08457ef68fab4");
            examAutoEvaluation.setOption("高铁发生铁路交通事故的");
            examAutoEvaluation.setOptionId("b5de650736b04cb0ad9fb5d082ad882a");
            for (Map<String, Object> tempMap : mapList) {
                i++;
                String parentId = (String) tempMap.get("parentId");
                String parentIds = (String) tempMap.get("parentIds");
                String unitId = (String) tempMap.get("unitId");
                String unitName = (String) tempMap.get("unitName");
                String userId = (String) tempMap.get("userId");
                String unitCode = (String) tempMap.get("unitCode");
                String sglb = (String) tempMap.get("sglb");//事故类别
                String sgyy = (String) tempMap.get("sgyy");//事故原因
                String sgjyqk = (String) tempMap.get("sgjyqk");//事故简要情况
                if ("34".equals(parentId) || "34".equals(unitId) || parentIds.contains(",34,")) {
                    nncIs0 = true;
                    if(nncDetail1==null){
                        nncDetail1=new StringBuffer(i+"."+unitName+sgjyqk);
                    }else{
                        nncDetail1.append(i+"."+unitName+sgjyqk);
                    }
                    nncNum++;
                }
                if ("95".equals(parentId) || "95".equals(unitId) || parentIds.contains(",95,")) {
                    lzcIs0 = true;
                    if(nncDetail1==null){
                        lzcDetail1=new StringBuffer(i+"."+unitName+sgjyqk);
                    }else{
                        lzcDetail1.append(i+"."+unitName+sgjyqk);
                    }
                    lzcNum++;
                }
                if ("156".equals(parentId) || "156".equals(unitId) || parentIds.contains(",156,")) {
                    bhcIs0 = true;
                    if(bhcDetail1==null){
                        bhcDetail1=new StringBuffer(i+"."+unitName+sgjyqk);
                    }else{
                        bhcDetail1.append(i+"."+unitName+sgjyqk);
                    }
                    bhcNum++;
                }
            }
            if(nncNum>0){
                examAutoEvaluation.setUnit("南宁处治安支队");
                examAutoEvaluation.setUnitId("45");
                examAutoEvaluation.setEvaluationId("aab30465f28547a4bdc69fd652ff8a4c");
                examAutoEvaluation.setScore(String.valueOf(10.0*nncNum));
                examAutoEvaluation.setDetails(nncDetail1.toString());
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"路外伤亡");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if(lzcNum>0){
                examAutoEvaluation.setUnit("柳州处治安支队");
                examAutoEvaluation.setUnitId("160");
                examAutoEvaluation.setEvaluationId("f6461092f65243f9837b4a7fd3e46210");
                examAutoEvaluation.setScore(String.valueOf(10.0*lzcNum));
                examAutoEvaluation.setDetails(lzcDetail1.toString());
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"路外伤亡");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if(bhcNum>0){
                examAutoEvaluation.setUnit("北海处治安支队");
                examAutoEvaluation.setUnitId("272");
                examAutoEvaluation.setEvaluationId("b309552b4eb64c78b2540c52daa91b7f");
                examAutoEvaluation.setScore(String.valueOf(10.0*bhcNum));
                examAutoEvaluation.setDetails(bhcDetail1.toString());
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"路外伤亡");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
        }
    }
    /**
     * 处考处机关 - 月度 - 治安 -警综平台 -路外伤亡
     * 高铁线路发生铁路交通事故、撞大牲畜的，每起扣3分（已有）
     *
     * @param year  yyyy
     * @param month MM
     */
    @Transactional(readOnly = false)
    public void ckcjgLWSWByMonth(String year, String month) {
        Map<String,Object> monthMap = this.getTimeQuantumByMonth(year,month,"外部");
        Date nowMonthDate = (Date) monthMap.get("nowTime");
        Date lastMonthDate = (Date) monthMap.get("lastTime");
        year = (String) monthMap.get("year");
        month = (String) monthMap.get("month");
        Map<String,ExamAutoEvaluation> cjgExamAutoMap;
//        List<Map<String, Object>> mapList = examAutoEvaluationDao.ckcjgLWSWByMonth(year, month);
        List<Map<String, Object>> mapList = examAutoEvaluationDao.ckcjgLWSWByNowLastTime(nowMonthDate, lastMonthDate);
        if (mapList != null && mapList.size() > 0) {
            cjgExamAutoMap = new HashMap<>();
            for (Map<String, Object> tempMap : mapList) {
                String fssj = ((String) tempMap.get("fssj"));//发生时间
                String sglb = (String) tempMap.get("sglb");//details 详情  事故类别
                String sgyy = (String) tempMap.get("sgyy");//details 详情  事故原因
                String parentId = (String) tempMap.get("parentId");
                String parentIds = (String) tempMap.get("parentIds");
                String unitId = (String) tempMap.get("unitId");
                String unitName = (String) tempMap.get("unitName");
                String userId = (String) tempMap.get("userId");
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSSS");
                Date fssj_date = DateUtils.parseDate(fssj);//发生时间
                try {
                    if (fssj_date == null && StringUtils.isNotBlank(fssj)) {
                        fssj_date = sdf.parse(fssj);
                    }
                } catch (ParseException e) {
                    e.printStackTrace();
                }
                if(cjgExamAutoMap.get(unitName)!=null){
                    ExamAutoEvaluation examAutoEvaluation = cjgExamAutoMap.get(unitName);
                    String detailMap = examAutoEvaluation.getDetails();
                    String scoreMap = examAutoEvaluation.getScore();
                    if (StringUtils.isNotBlank(sgyy)) {
                        examAutoEvaluation.setDetails(detailMap+sgyy);
                    } else {
                        examAutoEvaluation.setDetails(detailMap+sglb);
                    }
                    Double score = Double.valueOf(scoreMap)+3.0;
                    examAutoEvaluation.setScore(String.valueOf(score));
                }else{
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");//考评对象 1 单位  2民警
                    examAutoEvaluation.setEvalType("4");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
                    examAutoEvaluation.setPeriod("1");//考评周期  1 月  2 年
                    examAutoEvaluation.setYear(year);//年份
                    examAutoEvaluation.setMonth(month);//年份
                    //详情
                    if (StringUtils.isNotBlank(sgyy)) {
                        examAutoEvaluation.setDetails(sgyy);
                    } else {
                        examAutoEvaluation.setDetails(sglb);
                    }
                    examAutoEvaluation.setHappenTime(fssj_date);
                    examAutoEvaluation.setUnit(unitName);//单位名称
                    examAutoEvaluation.setUnitId(unitId);//单位id
                    examAutoEvaluation.setEvaluationId(userId);//被考评对象id
                    examAutoEvaluation.setScore("3");//分值
                    examAutoEvaluation.setFromSys("警综平台");
                    if ("34".equals(parentId) || "34".equals(unitId) || parentIds.contains(",34,")) {
                        //南宁处
                        examAutoEvaluation.setAssess("南宁处绩效办");//考核部门
                        examAutoEvaluation.setAssessId("978958003ea44a4bba3eed8ee6ceff3c");//考核部门id
                        examAutoEvaluation.setModel("2020年月度南宁处对治安支队扣分标准");//使用模板
                        examAutoEvaluation.setModelId("88d4451451464a78ab2f4c059a496cfb");//使用模板id
                        examAutoEvaluation.setOption("既有线发生列车撞大牲畜事故的");//选择项
                        examAutoEvaluation.setOptionId("77f40342bb0642b8b806da9e972d4a02");//选择项id
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","路外伤亡");
                    }
                    if ("95".equals(parentId) || "95".equals(unitId) || parentIds.contains(",95,")) {
                        //柳州处
                        examAutoEvaluation.setAssess("柳州处绩效办");//考核部门
                        examAutoEvaluation.setAssessId("6af0e615e9b0477da82eff06ff532c8b");//考核部门id
                        examAutoEvaluation.setModel("柳州处对单位（部门）2020年月度重点工作绩效考核评分标准（高铁）");//使用模板
                        examAutoEvaluation.setModelId("82cf1b0917864ef58cf700b7502d6cf4");//使用模板id
                        examAutoEvaluation.setOption("高铁发生铁路交通事故的");//选择项
                        examAutoEvaluation.setOptionId("ba9dbedb828f45d180b032b24060d014");//选择项id
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","路外伤亡");
                    }
                    if ("156".equals(parentId) || "156".equals(unitId) || parentIds.contains(",156,")) {
                        //北海处
                        examAutoEvaluation.setAssess("北海处绩效办");//考核部门
                        examAutoEvaluation.setAssessId("46c521bf67e24db28772b3eac52dc454");//考核部门id
                        examAutoEvaluation.setModel("2020年月度北海处对治安支队扣分标准");//使用模板
                        examAutoEvaluation.setModelId("e1cb1b5a0c9044d697f75035cd365cf3");//使用模板id
                        examAutoEvaluation.setOption("既有线发生列车撞大牲畜事故的");//选择项
                        examAutoEvaluation.setOptionId("d66f6b4885ed4407ac156b20e5d0ba5d");//选择项id
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","路外伤亡");
                    }
                    cjgExamAutoMap.put(unitName,examAutoEvaluation);
                }

              /*  this.save(examAutoEvaluation);*/
            }
            for(String key : cjgExamAutoMap.keySet()){
                ExamAutoEvaluation examAutoEvaluation = cjgExamAutoMap.get(key);
                examAutoEvaluation.setId("");
                examAutoEvaluation.setIsNewRecord(false);
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
        }
    }


    /**
     * 处考处机关 - 年度 - 治安 -警综平台 -路外伤亡
     * 既有线铁路交通事故、死亡人数超过全年控制数的，每项扣3分；另在控制数基础上，每超过10%以上的加扣0.5分）（已有）
     *
     * @param year yyyy
     */
    @Transactional(readOnly = false)
    public void ckcjgLWSWByYear(String year) {
        int baseSwrs = 0;// 全年控制数的 设置为0
        Map<String,Object> yearMap = this.getTimeQuantumByYear(year);
        Date nowYearDate = (Date) yearMap.get("nowYear");
        Date lastYearDate = (Date) yearMap.get("lastYear");
        year = (String) yearMap.get("year");
//        List<Map<String, Object>> mapList = examAutoEvaluationDao.ckcjgLWSWCountByYear(year);//获取死亡人数
        List<Map<String, Object>> mapList = examAutoEvaluationDao.ckcjgLWSWCountByNowLast(nowYearDate,lastYearDate);//获取死亡人数
        if (mapList != null && mapList.size() > 0) {
            for (Map<String, Object> tempMap : mapList) {
                Integer swrsSum = Integer.parseInt(tempMap.get("swrsSUM").toString());
                if (swrsSum > baseSwrs) {//既有线铁路交通事故、死亡人数超过全年控制数的，每项扣3分
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    String parentId = (String) tempMap.get("parentId");
                    String parentIds = (String) tempMap.get("parentIds");
                    String unitId = (String) tempMap.get("unitId");
                    String unitName = (String) tempMap.get("unitName");
                    String userId = (String) tempMap.get("userId");
                    String unitCode = (String) tempMap.get("unitCode");
                    String sglb = (String) tempMap.get("sglb");//事故类别
                    examAutoEvaluation.setType("1");//考评对象 1 单位  2民警
                    examAutoEvaluation.setEvalType("4");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
                    examAutoEvaluation.setPeriod("2");//考评周期  1 月  2 年
                    examAutoEvaluation.setYear(year);//年份
                    examAutoEvaluation.setUnit(unitName);//单位名称
                    examAutoEvaluation.setUnitId(unitId);//单位id
                    examAutoEvaluation.setEvaluationId(userId);//被考评对象id
                    Date fsYear = DateUtils.parseDate(year + "-01-01");//发生年度
                    examAutoEvaluation.setHappenTime(fsYear);
                    Double score = 3.0;
                    //每超过10%以上的加扣0.5分
                    int needAdd = (swrsSum - baseSwrs) % 100;
                    score = score + (0.5 * needAdd);
                    examAutoEvaluation.setScore(score.toString());
                    StringBuffer sgyybuff = new StringBuffer(sglb);
                    List<String> sgyyList = examAutoEvaluationDao.lwswItemByYearCode(year, unitCode);
                    if (sgyyList != null && sgyyList.size() > 0) {
                        sgyybuff = new StringBuffer();
                        int i = 1;
                        for (String detail : sgyyList) {
                            if (StringUtils.isNotBlank(detail)) {
                                sgyybuff.append(i + "." + detail);
                                i++;
                            }
                        }
                    }
                    examAutoEvaluation.setDetails(sgyybuff.toString()+"死亡人数：" + swrsSum);
                    examAutoEvaluation.setRemark("死亡人数：" + swrsSum);
                    examAutoEvaluation.setFromSys("警综平台");
                    if ("34".equals(parentId) || "34".equals(unitId) || parentIds.contains(",34,")) {
                        //南宁处
                        examAutoEvaluation.setAssess("南宁处治安支队");//考核部门
                        examAutoEvaluation.setAssessId("aab30465f28547a4bdc69fd652ff8a4c");//考核部门id
                        examAutoEvaluation.setModel("2020年年度南宁处对治安支队绩效考核扣分标准");//使用模板
                        examAutoEvaluation.setModelId("4caab695a676450ab04177aca9c68897");//使用模板id
                        examAutoEvaluation.setOption("铁路交通事故、死亡人数、危行案件、撞扎大牲畜超过全年控制数的，每项扣3分；另在控制数基础上，每超过10%以上的加扣0.5分）");//选择项
                        examAutoEvaluation.setOptionId("862f48c441944c2b9c7b85b1114c5e22");//选择项id
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","路外伤亡");
                    }
                    if ("95".equals(parentId) || "95".equals(unitId) || parentIds.contains(",95,")) {
                        //柳州处
                        examAutoEvaluation.setAssess("柳州处治安支队");//考核部门
                        examAutoEvaluation.setAssessId("f6461092f65243f9837b4a7fd3e46210");//考核部门id
                        examAutoEvaluation.setModel("柳州处对治安支队年度绩效考核评分标准（业务部分）");//使用模板
                        examAutoEvaluation.setModelId("6100628538624818969a63191dc9de47");//使用模板id
                        examAutoEvaluation.setOption("铁路交通事故、死亡人数、危行案件、撞扎大牲畜超过全年控制数的，每项扣3分；另在控制数基础上，每超过10%以上的加扣0.5分）");//选择项
                        examAutoEvaluation.setOptionId("a2de14e9f43c416c885970bd3228c196");//选择项id
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","路外伤亡");
                    }
                    if ("156".equals(parentId) || "156".equals(unitId) || parentIds.contains(",156,")) {
                        //北海处
                        examAutoEvaluation.setAssess("北海处治安支队");//考核部门
                        examAutoEvaluation.setAssessId("b309552b4eb64c78b2540c52daa91b7f");//考核部门id
                        examAutoEvaluation.setModel("2020年年度北海处对治安支队扣分标准");//使用模板
                        examAutoEvaluation.setModelId("7ea6730b5a5a425e8cc2e230f8ef4052");//使用模板id
                        examAutoEvaluation.setOption("铁路交通事故、死亡人数、危行案件、撞扎大牲畜超过全年控制数的，每项扣3分；另在控制数基础上，每超过10%以上的加扣0.5分）");//选择项
                        examAutoEvaluation.setOptionId("fd1a7757375e438483626dfa6a06ea2b");//选择项id
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","路外伤亡");
                    }
                    this.summaryStandard(examAutoEvaluation,score,sgyybuff.toString()+"死亡人数：" + swrsSum);
                    this.save(examAutoEvaluation);
                }
            }
        }
    }

    /**
     * 处考派出所- 月度 - 治安 -警综平台 -路外伤亡
     * 发生高铁路外伤亡事故的，每起扣10分
     *
     * @param year  yyyy
     * @param month MM
     */
    @Transactional(readOnly = false)
    public void ckpcsLWSWByMonth(String year, String month) {
        Map<String,Object> monthMap = this.getTimeQuantumByMonth(year,month,"外部");
        Date nowMonthDate = (Date) monthMap.get("nowTime");
        Date lastMonthDate = (Date) monthMap.get("lastTime");
        year = (String) monthMap.get("year");
        month = (String) monthMap.get("month");
        //List<Map<String, Object>> mapList = examAutoEvaluationDao.ckpcsLWSWByMonth(year, month);//获取相关信息
        List<Map<String, Object>> mapList = examAutoEvaluationDao.ckpcsLWSWByNowLastMonth(nowMonthDate, lastMonthDate);//获取相关信息
        if (mapList != null && mapList.size() > 0) {
            Map<String,ExamAutoEvaluation> pcsExamAutoMap = new HashMap<>();
            for (Map<String, Object> tempMap : mapList) {
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                String parentId = (String) tempMap.get("parentId");
                String parentIds = (String) tempMap.get("parentIds");
                String unitId = (String) tempMap.get("unitId");
                String unitName = (String) tempMap.get("unitName");
                String userId = (String) tempMap.get("userId");
                String unitCode = (String) tempMap.get("unitCode");
                String sglb = (String) tempMap.get("sglb");//事故类别
                String sgyy = (String) tempMap.get("sgyy");//事故原因
                String sgjyqk = (String) tempMap.get("sgjyqk");//事故简要情况
                examAutoEvaluation.setType("1");//考评对象 1 单位  2民警
                examAutoEvaluation.setEvalType("3");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
                examAutoEvaluation.setPeriod("1");//考评周期  1 月  2 年
                examAutoEvaluation.setYear(year);//年份
                examAutoEvaluation.setMonth(month);//年份
                examAutoEvaluation.setUnit(unitName);//单位名称
                examAutoEvaluation.setUnitId(unitId);//单位id
                examAutoEvaluation.setEvaluationId(userId);//被考评对象id
                examAutoEvaluation.setFromSys("警综平台");
                examAutoEvaluation.setDetails(sgjyqk);
                if(sgyy!=null && sgyy.contains("自杀")){
                    if(pcsExamAutoMap.get("zs"+unitName)!=null){
                        ExamAutoEvaluation examAutoEvaluationTemp = pcsExamAutoMap.get(unitName);
                        String detailMap = examAutoEvaluationTemp.getDetails();
                        String scoreMap = examAutoEvaluationTemp.getScore();
                        examAutoEvaluationTemp.setDetails(detailMap+sgjyqk);
                        Double score = Double.valueOf(scoreMap)+5.0;
                        examAutoEvaluationTemp.setScore(String.valueOf(score));
                    }else{
                        if ("34".equals(parentId) || "34".equals(unitId) || parentIds.contains(",34,")) {
                            examAutoEvaluation.setAssess("南宁处治安支队");//考核部门
                            examAutoEvaluation.setAssessId("aab30465f28547a4bdc69fd652ff8a4c");//考核部门id
                            examAutoEvaluation.setModel("2020年月度南宁公安处对高铁派出所绩效标准（重点工作-高铁）");//使用模板
                            examAutoEvaluation.setModelId("4790cc51c0694e7b81bd176869d84be2");//使用模板id
                            examAutoEvaluation.setOption("高铁发生铁路交通事故，经调查认定为自杀的");//选择项
                            examAutoEvaluation.setOptionId("95ddbf10b7bc46349ddabd6c96584bc4");//选择项id
                            examAutoEvaluation.setScore("5.0");

                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","路外伤亡_自杀");
                        }
                        if ("95".equals(parentId) || "95".equals(unitId) || parentIds.contains(",95,")) {
                            examAutoEvaluation.setAssess("柳州处治安支队");//考核部门
                            examAutoEvaluation.setAssessId("f6461092f65243f9837b4a7fd3e46210");//考核部门id
                            examAutoEvaluation.setModel("柳州处对派出所2020年年度重点工作绩效考核扣分标准（高铁）");//使用模板
                            examAutoEvaluation.setModelId("d8bc20da733f4b3faa143a2cb9c88a20");//使用模板id
                            examAutoEvaluation.setOption("高铁发生铁路交通事故，经调查认定为自杀的");//选择项
                            examAutoEvaluation.setOptionId("3baab9470e614d2aae7fdbb8e43b525e");//选择项id
                            examAutoEvaluation.setScore("5.0");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","路外伤亡_自杀");
                        }
                        if ("156".equals(parentId) || "156".equals(unitId) || parentIds.contains(",156,")) {
                            examAutoEvaluation.setAssess("北海处治安支队");//考核部门
                            examAutoEvaluation.setAssessId("b309552b4eb64c78b2540c52daa91b7f");//考核部门id
                            examAutoEvaluation.setModel("2020年北海处对派出所月度绩效标准（重点-高铁）");//使用模板
                            examAutoEvaluation.setModelId("db3a2ba82f714c589e9b91754ae8ba89");//使用模板id
                            examAutoEvaluation.setOption("高铁发生铁路交通事故，经调查认定为自杀的");//选择项
                            examAutoEvaluation.setOptionId("5db999875b4e485eb49a54ffaf584dfa");//选择项id
                            examAutoEvaluation.setScore("5.0");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","路外伤亡_自杀");
                        }
                        pcsExamAutoMap.put("zs"+unitName,examAutoEvaluation);
                    }
                }else{
                    if(pcsExamAutoMap.get(unitName)!=null){
                        ExamAutoEvaluation examAutoEvaluationTemp = pcsExamAutoMap.get(unitName);
                        String detailMap = examAutoEvaluationTemp.getDetails();
                        String scoreMap = examAutoEvaluationTemp.getScore();
                        examAutoEvaluationTemp.setDetails(detailMap+sgyy);
                        Double score = Double.valueOf(scoreMap)+10.0;
                        examAutoEvaluationTemp.setScore(String.valueOf(score));
                    }else{
                        if ("34".equals(parentId) || "34".equals(unitId) || parentIds.contains(",34,")) {
                            examAutoEvaluation.setAssess("南宁处治安支队");//考核部门
                            examAutoEvaluation.setAssessId("aab30465f28547a4bdc69fd652ff8a4c");//考核部门id
                            examAutoEvaluation.setModel("2020年月度南宁公安处对高铁派出所绩效标准（重点工作-高铁）");//使用模板
                            examAutoEvaluation.setModelId("4790cc51c0694e7b81bd176869d84be2");//使用模板id
                            examAutoEvaluation.setOption("高铁发生铁路交通事故的");//选择项
                            examAutoEvaluation.setOptionId("827024a0ec72400b91aa974f908c52eb");//选择项id
                            examAutoEvaluation.setScore("10.0");

                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","路外伤亡");
                        }
                        if ("95".equals(parentId) || "95".equals(unitId) || parentIds.contains(",95,")) {
                            examAutoEvaluation.setAssess("柳州处治安支队");//考核部门
                            examAutoEvaluation.setAssessId("f6461092f65243f9837b4a7fd3e46210");//考核部门id
                            examAutoEvaluation.setModel("柳州处对派出所2020年年度重点工作绩效考核扣分标准（高铁）");//使用模板
                            examAutoEvaluation.setModelId("3feb794f59ee4965abcffe78be9f3b2a");//使用模板id
                            examAutoEvaluation.setOption("高铁发生铁路交通事故的");//选择项
                            examAutoEvaluation.setOptionId("234b492c9e844e3caf96edc9e865b29f");//选择项id
                            examAutoEvaluation.setScore("10.0");

                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","路外伤亡");
                        }
                        if ("156".equals(parentId) || "156".equals(unitId) || parentIds.contains(",156,")) {
                            examAutoEvaluation.setAssess("北海处治安支队");//考核部门
                            examAutoEvaluation.setAssessId("b309552b4eb64c78b2540c52daa91b7f");//考核部门id
                            examAutoEvaluation.setModel("2020年北海处对派出所月度绩效标准（重点-高铁）");//使用模板
                            examAutoEvaluation.setModelId("db3a2ba82f714c589e9b91754ae8ba89");//使用模板id
                            examAutoEvaluation.setOption("高铁发生铁路交通事故的");//选择项
                            examAutoEvaluation.setOptionId("53c7c325a6ff4024ade8011f4135f01d");//选择项id
                            examAutoEvaluation.setScore("10.0");

                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","路外伤亡");
                        }
                        pcsExamAutoMap.put(unitName,examAutoEvaluation);
                    }

                }
            }
            for(String key : pcsExamAutoMap.keySet()){
                ExamAutoEvaluation examAutoEvaluation = pcsExamAutoMap.get(key);
                examAutoEvaluation.setId("");
                examAutoEvaluation.setIsNewRecord(false);
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
        }
    }


    /**
     * 处考派出所- 年度 - 治安 -警综平台 -路外伤亡
     * 铁路交通事故、死亡人数超过全年控制数的，每项扣3分；另在控制数基础上，每超过10%以上的加扣0.5分）
     *
     * @param year yyyy
     */
    @Transactional(readOnly = false)
    public void ckpcsLWSWByYear(String year) {
        int baseSwrs = 0;// 全年控制数 不确定
        Map<String,Object> yearMap = this.getTimeQuantumByYear(year);
        Date nowYearDate = (Date) yearMap.get("nowYear");
        Date lastYearDate = (Date) yearMap.get("lastYear");
        year = (String) yearMap.get("year");
//        List<Map<String, Object>> mapList = examAutoEvaluationDao.ckpcsLWSWCountByYear(year);//获取死亡人数
        List<Map<String, Object>> mapList = examAutoEvaluationDao.ckpcsLWSWCountByNowLastYear(nowYearDate,lastYearDate);//获取死亡人数
        if (mapList != null && mapList.size() > 0) {
            for (Map<String, Object> tempMap : mapList) {
                Integer swrsSum = Integer.parseInt(tempMap.get("swrsSUM").toString());
                if (swrsSum > baseSwrs) {//既有线铁路交通事故、死亡人数超过全年控制数的，每项扣3分
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

                    String parentId = (String) tempMap.get("parentId");
                    String parentIds = (String) tempMap.get("parentIds");
                    String unitId = (String) tempMap.get("unitId");
                    String unitName = (String) tempMap.get("unitName");
                    String userId = (String) tempMap.get("userId");
                    String unitCode = (String) tempMap.get("unitCode");
                    String sglb = (String) tempMap.get("sglb");//事故类别
                    examAutoEvaluation.setType("1");//考评对象 1 单位  2民警
                    examAutoEvaluation.setEvalType("3");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
                    examAutoEvaluation.setPeriod("2");//考评周期  1 月  2 年
                    examAutoEvaluation.setYear(year);//年份
                    examAutoEvaluation.setUnit(unitName);//单位名称
                    examAutoEvaluation.setUnitId(unitId);//单位id
                    examAutoEvaluation.setEvaluationId(userId);//被考评对象id
                    examAutoEvaluation.setFromSys("警综平台");
                    Date fsYear = DateUtils.parseDate(year + "-01-01");//发生年度
                    examAutoEvaluation.setHappenTime(fsYear);
                    Double score = 3.0;
                    //每超过10%以上的加扣0.5分
                    int needAdd = (swrsSum - baseSwrs) % 100;
                    score = score + (0.5 * needAdd);
                    examAutoEvaluation.setScore(score.toString());
                    StringBuffer sgyybuff = new StringBuffer(sglb);
//                    List<String> sgyyList = examAutoEvaluationDao.lwswItemByYearCode(year, unitCode);
                    List<String> sgjyqkList = examAutoEvaluationDao.lwswItemByNowLastYearCode(nowYearDate,lastYearDate, unitCode);
                    if (sgjyqkList != null && sgjyqkList.size() > 0) {
                        sgyybuff = new StringBuffer();
                        int i = 1;
                        for (String detail : sgjyqkList) {
                            if (StringUtils.isNotBlank(detail)) {
                                sgyybuff.append(i + "." + detail);
                                i++;
                            }
                        }
                    }
                    examAutoEvaluation.setDetails(sgyybuff.toString()+",死亡人数：" + swrsSum);
                    examAutoEvaluation.setRemark("死亡人数：" + swrsSum);
                    if ("34".equals(parentId) || "34".equals(unitId) || parentIds.contains(",34,")) {
                        //南宁处
                        examAutoEvaluation.setAssess("南宁处治安支队");//考核部门
                        examAutoEvaluation.setAssessId("aab30465f28547a4bdc69fd652ff8a4c");//考核部门id
                        examAutoEvaluation.setModel("2020年年度南宁公安处对派出所绩效考核扣分标准(业务部分)");//使用模板
                        examAutoEvaluation.setModelId("42882051f7214a7486258dfcb92a8d4d");//使用模板id
                        examAutoEvaluation.setOption("铁路交通事故、死亡人数、危行案件、撞扎大牲畜超过全年控制数的，每项扣3分；另在控制数基础上，每超1起的加扣1分）");//选择项
                        examAutoEvaluation.setOptionId("44aa9f3cb6bd4fdbbc2a037ed003fd4c");//选择项id
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","路外伤亡");
                    }
                    if ("95".equals(parentId) || "95".equals(unitId) || parentIds.contains(",95,")) {
                        //柳州处
                        examAutoEvaluation.setAssess("柳州处治安支队");//考核部门
                        examAutoEvaluation.setAssessId("f6461092f65243f9837b4a7fd3e46210");//考核部门id
                        examAutoEvaluation.setModel("柳州处对派出所2020年年度绩效考核扣分标准（业务扣分项目）");//使用模板
                        examAutoEvaluation.setModelId("879292d1da7d4b3e9d33c8079aec8721");//使用模板id
                        examAutoEvaluation.setOption("铁路交通事故、死亡人数、危行案件、撞扎大牲畜超过全年控制数的，每项扣3分（在控制数基础上，每超过10%以上的加扣0.5分）");//选择项
                        examAutoEvaluation.setOptionId("8c0866ea07784fd7931098a1300a183e");//选择项id
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","路外伤亡");
                    }
                    if ("156".equals(parentId) || "156".equals(unitId) || parentIds.contains(",156,")) {
                        //北海处
                        examAutoEvaluation.setAssess("北海处治安支队");//考核部门
                        examAutoEvaluation.setAssessId("b309552b4eb64c78b2540c52daa91b7f");//考核部门id
                        examAutoEvaluation.setModel("2020年年度北海处对派出所、刑警三大队绩效考核扣分标准(业务部分)");//使用模板
                        examAutoEvaluation.setModelId("ebbe5612a316481586636fef3fb8840d");//使用模板id
                        examAutoEvaluation.setOption("铁路交通事故、死亡人数、危行案件、撞扎大牲畜超过全年控制数的，每项扣3分；另在控制数基础上，每超过10%以上的加扣0.5分）");//选择项
                        examAutoEvaluation.setOptionId("2a49f351294d4659827731294fb915a9");//选择项id
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","路外伤亡");
                    }
                    //this.deleteInfoByMore(examAutoEvaluation);
                    this.summaryStandard(examAutoEvaluation,score,sgyybuff.toString()+"死亡人数：" + swrsSum);
                    this.save(examAutoEvaluation);
                }
            }
        }
    }


    /**
     * 处考处机关 - 月度 - 治安 -警综平台 -撞轧牲畜
     * 高铁线路发生铁路交通事故、撞大牲畜的，每起扣3分（已有）
     *
     * @param year  yyyy
     * @param month MM
     */
    @Transactional(readOnly = false)
    public void ckcjgZYSCByMonth(String year, String month) {
        Map<String,String> map = this.monthTime(year+"-"+month);
        String yearL = map.get("yearL");
        String yearT = map.get("yearT");
//        List<Map<String, Object>> mapList = examAutoEvaluationDao.ckcjgZYSCByMonth(year, month);
        List<Map<String, Object>> mapList = examAutoEvaluationDao.ckcjgZYSCByLastNowMonth(yearL,yearT);
        if (mapList != null && mapList.size() > 0) {
            for (Map<String, Object> tempMap : mapList) {
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");//考评对象 1 单位  2民警
                examAutoEvaluation.setEvalType("4");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
                examAutoEvaluation.setPeriod("1");//考评周期  1 月  2 年
                examAutoEvaluation.setYear(year);//年份
                examAutoEvaluation.setMonth(month);//年份
                String fssj = ((String) tempMap.get("fssj"));//发生时间
                String sglb = (String) tempMap.get("sglb");//details 详情  事故类别
                String sgjyqk = (String) tempMap.get("sgjyqk");//details 详情  事故原因
                String parentId = (String) tempMap.get("parentId");
                String parentIds = (String) tempMap.get("parentIds");
                String unitId = (String) tempMap.get("unitId");
                String unitName = (String) tempMap.get("unitName");
                String userId = (String) tempMap.get("userId");
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSSS");
                Date fssj_date = DateUtils.parseDate(fssj);//发生时间
                try {
                    if (fssj_date == null && StringUtils.isNotBlank(fssj)) {
                        fssj_date = sdf.parse(fssj);
                    }
                } catch (ParseException e) {
                    e.printStackTrace();
                }
                //详情
                if (StringUtils.isNotBlank(sgjyqk)) {
                    examAutoEvaluation.setDetails(sgjyqk);
                } else {
                    examAutoEvaluation.setDetails(sglb);
                }
                examAutoEvaluation.setHappenTime(fssj_date);
                examAutoEvaluation.setUnit(unitName);//单位名称
                examAutoEvaluation.setUnitId(unitId);//单位id
                examAutoEvaluation.setEvaluationId(userId);//被考评对象id
                examAutoEvaluation.setScore("3");//分值
                examAutoEvaluation.setFromSys("警综平台");
                if ("34".equals(parentId) || "34".equals(unitId) || parentIds.contains(",34,")) {
                    //南宁处
                    examAutoEvaluation.setAssess("南宁处治安支队");//考核部门
                    examAutoEvaluation.setAssessId("aab30465f28547a4bdc69fd652ff8a4c");//考核部门id
                    examAutoEvaluation.setModel("2020年月度南宁处对治安支队扣分标准");//使用模板
                    examAutoEvaluation.setModelId("88d4451451464a78ab2f4c059a496cfb");//使用模板id
                    examAutoEvaluation.setOption("既有线发生列车撞大牲畜事故的");//选择项
                    examAutoEvaluation.setOptionId("77f40342bb0642b8b806da9e972d4a02");//选择项id
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","撞轧牲畜");
                }
                if ("95".equals(parentId) || "95".equals(unitId) || parentIds.contains(",95,")) {
                    //柳州处
                    examAutoEvaluation.setAssess("柳州处治安支队");//考核部门
                    examAutoEvaluation.setAssessId("f6461092f65243f9837b4a7fd3e46210");//考核部门id
                    examAutoEvaluation.setModel("柳州处对单位（部门）2020年月度重点工作绩效考核评分标准（高铁）");//使用模板
                    examAutoEvaluation.setModelId("82cf1b0917864ef58cf700b7502d6cf4");//使用模板id
                    examAutoEvaluation.setOption("高铁发生铁路交通事故的");//选择项
                    examAutoEvaluation.setOptionId("ba9dbedb828f45d180b032b24060d014");//选择项id
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","撞轧牲畜");
                }
                if ("156".equals(parentId) || "156".equals(unitId) || parentIds.contains(",156,")) {
                    //北海处
                    examAutoEvaluation.setAssess("北海处治安支队");//考核部门
                    examAutoEvaluation.setAssessId("b309552b4eb64c78b2540c52daa91b7f");//考核部门id
                    examAutoEvaluation.setModel("2020年月度北海处对治安支队扣分标准");//使用模板
                    examAutoEvaluation.setModelId("e1cb1b5a0c9044d697f75035cd365cf3");//使用模板id
                    examAutoEvaluation.setOption("既有线发生列车撞大牲畜事故的");//选择项
                    examAutoEvaluation.setOptionId("d66f6b4885ed4407ac156b20e5d0ba5d");//选择项id
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","撞轧牲畜");
                }
                String detail = sgjyqk==null?sglb:sgjyqk;
                this.summaryStandard(examAutoEvaluation,3.0,detail);
                this.save(examAutoEvaluation);
            }
        }
    }
    /*处考处机关 - 年度 - 治安 -警综平台 -撞轧牲畜*/
    @Transactional(readOnly = false)
    public void ckcjgZYSCByYear(String year) {
        int baseNum = 0;
        Map<String,String> map = this.yearTime(year);
        String yearL = map.get("yearL");
        String yearT = map.get("yearT");
//        List<Map<String, Object>> mapList = examAutoEvaluationDao.ckcjgZYSCByMonth(year, month);
        List<Map<String, Object>> mapList = examAutoEvaluationDao.ckcjgZYSCCountByNowLastYear(yearL,yearT);
        if (mapList != null && mapList.size() > 0) {
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");//考评对象 1 单位  2民警
            examAutoEvaluation.setEvalType("4");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
            examAutoEvaluation.setPeriod("2");//考评周期  1 月  2 年
            examAutoEvaluation.setYear(year);//年份
            for (Map<String, Object> tempMap : mapList) {
                Integer countSUM = Integer.parseInt(tempMap.get("countSUM").toString());
                String userId = String.valueOf(tempMap.get("userId").toString());
                String parentId = (String) tempMap.get("parentId");
                String parentIds = (String) tempMap.get("parentIds");
                String unitId = (String) tempMap.get("unitId");
                String unitName = (String) tempMap.get("unitName");
                if (countSUM > baseNum) {
                    List<Map<String, Object>> mapInfoList = examAutoEvaluationDao.ckcjgZYSCInfoByNowLastYear(yearL,yearT,userId);
                    if (mapInfoList != null && mapInfoList.size() > 0) {
                        StringBuffer details = null;
                        int i =0;
                        for (Map<String, Object> tempMapInfo : mapInfoList) {
                            i++;
                            String sglb = (String) tempMapInfo.get("sglb");//details 详情  事故类别
                            String sgjyqk = (String) tempMapInfo.get("sgjyqk");//details 详情  事故简要情况
                            String sgDetail = sgjyqk==null?sglb:sgjyqk;
                            if(details==null){
                                details = new StringBuffer(sgDetail);
                            }else{
                                details.append(i+"."+sgDetail);
                            }
                        }
                        examAutoEvaluation.setUnit(unitName);//单位名称
                        examAutoEvaluation.setUnitId(unitId);//单位id
                        examAutoEvaluation.setEvaluationId(userId);//被考评对象id
                        Double score = 3.0;
                        //每超过10%以上的加扣0.5分
                        int needAdd = (countSUM - baseNum) % 100;
                        score = score + (0.5 * needAdd);
                        examAutoEvaluation.setScore(score.toString());
                        examAutoEvaluation.setDetails(details.toString());
                        examAutoEvaluation.setFromSys("警综平台");
                        if ("34".equals(parentId) || "34".equals(unitId) || parentIds.contains(",34,")) {
                            //南宁处
                            examAutoEvaluation.setModel("2020年年度南宁处对治安支队绩效考核扣分标准");//使用模板
                            examAutoEvaluation.setModelId("4caab695a676450ab04177aca9c68897");//使用模板id
                            examAutoEvaluation.setOption("铁路交通事故、死亡人数、危行案件、撞扎大牲畜超过全年控制数的，每项扣3分；另在控制数基础上，每超过10%以上的加扣0.5分）");//选择项
                            examAutoEvaluation.setOptionId("862f48c441944c2b9c7b85b1114c5e22");//选择项id
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","撞轧牲畜");
                        }
                        if ("95".equals(parentId) || "95".equals(unitId) || parentIds.contains(",95,")) {
                            //柳州处
                            examAutoEvaluation.setModel("柳州处对治安支队年度绩效考核评分标准（业务部分）");//使用模板
                            examAutoEvaluation.setModelId("6100628538624818969a63191dc9de47");//使用模板id
                            examAutoEvaluation.setOption("铁路交通事故、死亡人数、危行案件、撞扎大牲畜超过全年控制数的，每项扣3分；另在控制数基础上，每超过10%以上的加扣0.5分）");//选择项
                            examAutoEvaluation.setOptionId("a2de14e9f43c416c885970bd3228c196");//选择项id
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","撞轧牲畜");
                        }
                        if ("156".equals(parentId) || "156".equals(unitId) || parentIds.contains(",156,")) {
                            //北海处
                            examAutoEvaluation.setModel("2020年年度北海处对治安支队扣分标准");//使用模板
                            examAutoEvaluation.setModelId("7ea6730b5a5a425e8cc2e230f8ef4052");//使用模板id
                            examAutoEvaluation.setOption("铁路交通事故、死亡人数、危行案件、撞扎大牲畜超过全年控制数的，每项扣3分；另在控制数基础上，每超过10%以上的加扣0.5分）");//选择项
                            examAutoEvaluation.setOptionId("fd1a7757375e438483626dfa6a06ea2b");//选择项id
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","撞轧牲畜");
                        }
                        this.summaryStandard(examAutoEvaluation,score,details.toString());
                        this.save(examAutoEvaluation);

                    }
                }
            }
        }
    }

    //处考派出所-月度-治安-警综平台-撞轧牲畜
    @Transactional(readOnly = false)
    public void ckpcsZYSCByMonth(String year,String month){
        Map<String,Object> timeMap = getTimeQuantumByMonth(year,month,"外部");
        Date nowMonthDate = (Date) timeMap.get("nowTime");
        Date lastMonthDate = (Date) timeMap.get("lastTime");
        year = (String) timeMap.get("year");
        month = (String) timeMap.get("month");
        List<Map<String, Object>> mapList = examAutoEvaluationDao.ckpcsZYSCByLastNowDate(lastMonthDate,nowMonthDate);
        if(mapList != null  && mapList.size()>0){
            for(Map<String,Object> tempMap : mapList){
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");//考评对象 1 单位  2民警
                examAutoEvaluation.setEvalType("3");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
                examAutoEvaluation.setPeriod("1");//考评周期  1 月  2 年
                examAutoEvaluation.setYear(year);//年份
                examAutoEvaluation.setMonth(month);//年份
                String fssj = ((String) tempMap.get("fssj"));//发生时间
                String sglb = (String) tempMap.get("sglb");//details 详情  事故类别
                String sgjyqk = (String) tempMap.get("sgjyqk");//details 详情  事故原因
                String parentId = (String) tempMap.get("parentId");
                String parentIds = (String) tempMap.get("parentIds");
                String unitId = (String) tempMap.get("unitId");
                String unitName = (String) tempMap.get("unitName");
                String userId = (String) tempMap.get("userId");
                String sfgtlx = tempMap.get("sfgtlx")==null?"": (String) tempMap.get("sfgtlx");//是否高铁路线
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSSS");
                Date fssj_date = DateUtils.parseDate(fssj);//发生时间
                try {
                    if (fssj_date == null && StringUtils.isNotBlank(fssj)) {
                        fssj_date = sdf.parse(fssj);
                    }
                } catch (ParseException e) {
                    e.printStackTrace();
                }
                //详情
                if (StringUtils.isNotBlank(sgjyqk)) {
                    examAutoEvaluation.setDetails(sgjyqk);
                } else {
                    examAutoEvaluation.setDetails(sglb);
                }
                examAutoEvaluation.setHappenTime(fssj_date);
                examAutoEvaluation.setUnit(unitName);//单位名称
                examAutoEvaluation.setUnitId(unitId);//单位id
                examAutoEvaluation.setEvaluationId(userId);//被考评对象id
                examAutoEvaluation.setScore("3");//分值
                examAutoEvaluation.setFromSys("警综平台");
                if ("34".equals(parentId) || "34".equals(unitId) || parentIds.contains(",34,")) {
                    //南宁处
                    examAutoEvaluation.setAssess("南宁处治安支队");//考核部门
                    examAutoEvaluation.setAssessId("aab30465f28547a4bdc69fd652ff8a4c");//考核部门id
                    if("Y".equals(sfgtlx)){
                        //高铁路线
                        examAutoEvaluation.setModel("2020年月度南宁公安处对高铁派出所绩效标准（重点工作-高铁）");//使用模板
                        examAutoEvaluation.setModelId("4790cc51c0694e7b81bd176869d84be2");//使用模板id
                        examAutoEvaluation.setOption("高铁发生铁路交通事故的");//选择项
                        examAutoEvaluation.setOptionId("827024a0ec72400b91aa974f908c52eb");//选择项id
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","撞轧牲畜_高铁");
                    }else{
                        examAutoEvaluation.setModel("2020年月度南宁公安处对派出所绩效考核扣分标准(业务部分)");//使用模板
                        examAutoEvaluation.setModelId("aa392539a5bd4404b3fda4425c404c26");//使用模板id
                        examAutoEvaluation.setOption("既有线发生列车撞大牲畜事故的");//选择项
                        examAutoEvaluation.setOptionId("41075842acad46fa9470289702d55e93");//选择项id
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","撞轧牲畜");
                    }

                }
                if ("95".equals(parentId) || "95".equals(unitId) || parentIds.contains(",95,")) {
                    //柳州处
                    examAutoEvaluation.setAssess("柳州处治安支队");//考核部门
                    examAutoEvaluation.setAssessId("f6461092f65243f9837b4a7fd3e46210");//考核部门id
                    if("Y".equals(sfgtlx)){
                        //高铁路线
                        examAutoEvaluation.setModel("柳州处对派出所2020年月度绩效考核扣分标准（业务扣分项目）");//使用模板
                        examAutoEvaluation.setModelId("5ce30118b21549d2a7d4628f72f7f3c6");//使用模板id
                        examAutoEvaluation.setOption("铁路交通事故、死亡人数、危行案件、撞扎大牲畜超过全年控制数的，每项扣3分；另在控制数基础上，每超过10%以上的加扣0.5分）");//选择项
                        examAutoEvaluation.setOptionId("4e69a6fdefe5405ea92b5f0b4cb429be");//选择项id
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","撞轧牲畜_高铁");
                    }else{
                        examAutoEvaluation.setModel("柳州处对派出所2020年月度绩效考核扣分标准（业务扣分项目）");//使用模板
                        examAutoEvaluation.setModelId("5ce30118b21549d2a7d4628f72f7f3c6");//使用模板id
                        examAutoEvaluation.setOption("铁路交通事故、死亡人数、危行案件、撞扎大牲畜超过全年控制数的，每项扣3分；另在控制数基础上，每超过10%以上的加扣0.5分）");//选择项
                        examAutoEvaluation.setOptionId("4e69a6fdefe5405ea92b5f0b4cb429be");//选择项id
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","撞轧牲畜");
                    }
                }
                if ("156".equals(parentId) || "156".equals(unitId) || parentIds.contains(",156,")) {
                    //北海处
                    examAutoEvaluation.setAssess("北海处治安支队");//考核部门
                    examAutoEvaluation.setAssessId("b309552b4eb64c78b2540c52daa91b7f");//考核部门id
                    if("Y".equals(sfgtlx)){
                        //高铁路线
                        examAutoEvaluation.setModel("2020年北海处对派出所月度绩效标准（重点-高铁）");//使用模板
                        examAutoEvaluation.setModelId("db3a2ba82f714c589e9b91754ae8ba89");//使用模板id
                        examAutoEvaluation.setOption("高铁发生铁路交通事故的");//选择项
                        examAutoEvaluation.setOptionId("53c7c325a6ff4024ade8011f4135f01d");//选择项id
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","撞轧牲畜_高铁");
                    }else{
                        examAutoEvaluation.setModel("2020年月度北海处对派出所、刑警三大队扣分标准(业务部分)");//使用模板
                        examAutoEvaluation.setModelId("a9e6fbb8773d470d897319cd6f17fa2b");//使用模板id
                        examAutoEvaluation.setOption("既有线发生列车撞大牲畜事故的");//选择项
                        examAutoEvaluation.setOptionId("fb22ee951c2b40eeb9794274f59fd86e");//选择项id
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","撞轧牲畜");
                    }

                }
                String detail = sgjyqk==null?sglb:sgjyqk;
                this.summaryStandard(examAutoEvaluation,3.0,detail);
                this.save(examAutoEvaluation);
            }
        }

    }

    //处考派出所-年度-治安-警综平台-撞轧牲畜
    @Transactional(readOnly = false)
    public void ckpcsZYSCByYear(String year){
        int baseNum = 0;//每年基数
        Map<String,Object> timeMap = getTimeQuantumByYear(year);
        Date nowYearDate = (Date) timeMap.get("nowYear");
        Date lastYearDate = (Date) timeMap.get("lastYear");
        year = (String) timeMap.get("year");
        List<Map<String, Object>> mapList = examAutoEvaluationDao.ckpcsZYSCCountByNowLastYear(lastYearDate,nowYearDate);
        if (mapList != null && mapList.size() > 0) {
            for (Map<String, Object> tempMap : mapList) {
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");//考评对象 1 单位  2民警
                examAutoEvaluation.setEvalType("3");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
                examAutoEvaluation.setPeriod("2");//考评周期  1 月  2 年
                examAutoEvaluation.setYear(year);//年份
                Integer countSUM = Integer.parseInt(tempMap.get("countSUM").toString());
                String userId = String.valueOf(tempMap.get("userId").toString());
                String parentId = (String) tempMap.get("parentId");
                String parentIds = (String) tempMap.get("parentIds");
                String unitId = (String) tempMap.get("unitId");
                String unitName = (String) tempMap.get("unitName");
                if (countSUM > baseNum) {
//                    List<Map<String, Object>> mapInfoList = examAutoEvaluationDao.ckcjgZYSWInfoByNowLastYear(lastYearDate,nowYearDate,userId);
                    List<Map<String, Object>> mapInfoList = examAutoEvaluationDao.ckpcsZYSCInfoByNowLastYear(lastYearDate,nowYearDate,userId);
                    if (mapInfoList != null && mapInfoList.size() > 0) {
                        StringBuffer details = null;
                        int i =0;
                        for (Map<String, Object> tempMapInfo : mapInfoList) {
                            i++;
                            String sglb = (String) tempMapInfo.get("sglb");//details 详情  事故类别
                            String sgjyqk = (String) tempMapInfo.get("sgjyqk");//details 详情  事故简要情况
                            String sgDetail = sgjyqk==null?sglb:sgjyqk;
                            if(details==null){
                                details = new StringBuffer("共发生"+countSUM+"起；"+sgDetail);
                            }else{
                                details.append(i+"."+sgDetail);
                            }
                        }
                        examAutoEvaluation.setUnit(unitName);//单位名称
                        examAutoEvaluation.setUnitId(unitId);//单位id
                        examAutoEvaluation.setEvaluationId(userId);//被考评对象id
                        Double score = 3.0;
                        //每超过10%以上的加扣0.5分
                        int needAdd = (countSUM - baseNum) % 100;
                        score = score + (0.5 * needAdd);
                        examAutoEvaluation.setScore(score.toString());
                        examAutoEvaluation.setDetails(details.toString());
                        examAutoEvaluation.setFromSys("警综平台");
                        if ("34".equals(parentId) || "34".equals(unitId) || parentIds.contains(",34,")) {
                            //南宁处
                            examAutoEvaluation.setModel("2020年年度南宁公安处对派出所绩效考核扣分标准(业务部分)");//使用模板
                            examAutoEvaluation.setModelId("42882051f7214a7486258dfcb92a8d4d");//使用模板id
                            examAutoEvaluation.setOption("铁路交通事故、死亡人数、危行案件、撞扎大牲畜超过全年控制数的，每项扣3分；另在控制数基础上，每超1起的加扣1分）");//选择项
                            examAutoEvaluation.setOptionId("44aa9f3cb6bd4fdbbc2a037ed003fd4c");//选择项id
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","撞轧牲畜");
                        }
                        if ("95".equals(parentId) || "95".equals(unitId) || parentIds.contains(",95,")) {
                            //柳州处
                            examAutoEvaluation.setModel("柳州处对派出所2020年年度绩效考核扣分标准（业务扣分项目）");//使用模板
                            examAutoEvaluation.setModelId("879292d1da7d4b3e9d33c8079aec8721");//使用模板id
                            examAutoEvaluation.setOption("铁路交通事故、死亡人数、危行案件、撞扎大牲畜超过全年控制数的，每项扣3分；另在控制数基础上，每超过10%以上的加扣0.5分）");//选择项
                            examAutoEvaluation.setOptionId("8c0866ea07784fd7931098a1300a183e");//选择项id
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","撞轧牲畜");
                        }
                        if ("156".equals(parentId) || "156".equals(unitId) || parentIds.contains(",156,")) {
                            //北海处
                            examAutoEvaluation.setModel("2020年年度北海处对派出所、刑警三大队绩效考核扣分标准(业务部分)");//使用模板
                            examAutoEvaluation.setModelId("ebbe5612a316481586636fef3fb8840d");//使用模板id
                            examAutoEvaluation.setOption("铁路交通事故、死亡人数、危行案件、撞扎大牲畜超过全年控制数的，每项扣3分；另在控制数基础上，每超过10%以上的加扣0.5分）");//选择项
                            examAutoEvaluation.setOptionId("2a49f351294d4659827731294fb915a9");//选择项id
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","撞轧牲畜");
                        }
                        this.summaryStandard(examAutoEvaluation,score,details.toString());
                        this.save(examAutoEvaluation);

                    }
                }
            }
        }
    }

    public List<Map<String, Object>> findAllpcs() {
        return examAutoEvaluationDao.findAllpcs();
    }

    public Integer findpcsPolice(String officeId) {
        return examAutoEvaluationDao.findpcsPolice(officeId);
    }

    public Integer findGatherSum(String code, String month) {
        return examAutoEvaluationDao.findGatherSum(code, month);
    }

    public Integer findGatherSumYear(String code, String year) {
        return examAutoEvaluationDao.findGatherSumYear(code, year);
    }

    public List<Map<String, Object>> findPolices() {
        return examAutoEvaluationDao.findPolices();
    }

    public List<Map<String, Object>> findChuLeads() {
        return examAutoEvaluationDao.findChuLeads();
    }

    /*
     *  月度
     *  公安处领导班子考核（局）
     * 考核事项：考勤管理，旷工
     *
     * */
    public void checkOut(String checkTime) {

        //所有的公安处领导身份证

        String chuRoleId = "230e916609a349e68f7186f784e11419";

        ExamWorkflowDefine define = new ExamWorkflowDefine();
        define.setName(chuRoleId);
        List<User> chuList = examWorkflowSegmentsDefineService.queryPoliceDatas(define);

        //年份
        String year = checkTime.substring(0, 4);
        int y = Integer.valueOf(year);
        //月份
        String month = checkTime.substring(checkTime.length() - 2);
        int m = Integer.valueOf(month);

        int m1 = m - 1;

        String m2 = String.valueOf(m1);

        for (int h = 0; h < chuList.size(); h++) {
            //身份证号
            User user = chuList.get(h);
            String name = user.getName();
            String idNumber = user.getNo();
            String state = "9";

            List<AffairAttendanceChild> affairAttendanceChildList = new ArrayList<>();
            affairAttendanceChildList = affairAttendanceChildService.selectBean(idNumber, y, m, state);
            List<AffairAttendanceChild> affairAttendanceChildList1 = new ArrayList<>();
            affairAttendanceChildList1 = affairAttendanceChildService.selectBeanLastForeDay(idNumber, y, m1, state);
            if (affairAttendanceChildList.size() > 0 || affairAttendanceChildList1.size() > 0){

                Integer number = examAutoEvaluationDao.selectNumber(idNumber,year,month,"1");

                if (number == 0){

                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("5");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(name + year + "年" + month + "月" + "存在旷工情况");
                    examAutoEvaluation.setName(name);
                    examAutoEvaluation.setIdNumber(idNumber);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setModel("2020年月度对公安处领导班子成员绩效考核公共扣分标准");
                    examAutoEvaluation.setModelId("93f0ce15f62b4c479e5681a93ccb248b");
                    examAutoEvaluation.setOption("");//未找到
                    examAutoEvaluation.setOptionId("");//未找到
                    examAutoEvaluation.setRowNum("");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setScore("10");

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"考勤管理");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));
                    this.save(examAutoEvaluation);
                }
            }
        }
    }

    /*
     * 年度
     * 公安处领导班子考核
     * 考勤管理，旷工
     *
     * */
    public void checkOutYear(String year) {

        //所有的公安处领导身份证

        String chuRoleId = "230e916609a349e68f7186f784e11419";

        ExamWorkflowDefine define = new ExamWorkflowDefine();
        define.setName(chuRoleId);
        List<User> chuList = examWorkflowSegmentsDefineService.queryPoliceDatas(define);
    /*    Calendar date = Calendar.getInstance();
        String year = String.valueOf(date.get(Calendar.YEAR));

        //月份
        String month = String.valueOf(date.get(Calendar.MONTH) + 1);*/

        for (int h = 0; h < chuList.size(); h++) {
            //身份证号
            User user = chuList.get(h);
            String name = user.getName();
            String idNumber = user.getNo();
            String state = "9";
            int y = Integer.valueOf(year);
            int lastYear = y - 1;

            //上一年12月旷工情况
/*
            Integer laNumber = affairAttendanceChildService.selectLaNumber(idNumber,lastYear,state);
*/
            List<AffairAttendanceChild> affairAttendanceChildList = affairAttendanceChildService.selectLastBean(idNumber,lastYear,state);
            int laNumber = 0;
            for (int i = 0; i < affairAttendanceChildList.size(); i++) {

                AffairAttendanceChild affairAttendanceChild = affairAttendanceChildList.get(i);

                String day2 = affairAttendanceChild.getDay2();
                String day3 = affairAttendanceChild.getDay3();
                String day4 = affairAttendanceChild.getDay4();
                String day5 = affairAttendanceChild.getDay5();
                String day6 = affairAttendanceChild.getDay6();
                String day7 = affairAttendanceChild.getDay7();
                String day8 = affairAttendanceChild.getDay8();
                String day9 = affairAttendanceChild.getDay9();
                String day10 = affairAttendanceChild.getDay10();
                String day11 = affairAttendanceChild.getDay11();
                String day12 = affairAttendanceChild.getDay12();
                String day13 = affairAttendanceChild.getDay13();
                String day14 = affairAttendanceChild.getDay14();
                String day15 = affairAttendanceChild.getDay15();
                String day16 = affairAttendanceChild.getDay16();
                String day17 = affairAttendanceChild.getDay17();
                String day18 = affairAttendanceChild.getDay18();
                String day19 = affairAttendanceChild.getDay19();
                String day20 = affairAttendanceChild.getDay20();
                String day21 = affairAttendanceChild.getDay21();
                String day22 = affairAttendanceChild.getDay22();
                String day23 = affairAttendanceChild.getDay23();
                String day24 = affairAttendanceChild.getDay24();
                String day25 = affairAttendanceChild.getDay25();

                String day26 = affairAttendanceChild.getDay26();
                String day27 = affairAttendanceChild.getDay27();
                String day28 = affairAttendanceChild.getDay28();
                String day29 = affairAttendanceChild.getDay29();
                String day30 = affairAttendanceChild.getDay30();
                String day31 = affairAttendanceChild.getDay31();


                List<String> dayList = new ArrayList<>();

                dayList.add(day2);
                dayList.add(day3);
                dayList.add(day4);
                dayList.add(day5);
                dayList.add(day6);
                dayList.add(day7);
                dayList.add(day8);
                dayList.add(day9);
                dayList.add(day10);
                dayList.add(day11);
                dayList.add(day12);
                dayList.add(day13);
                dayList.add(day14);
                dayList.add(day15);
                dayList.add(day16);
                dayList.add(day17);
                dayList.add(day18);
                dayList.add(day19);
                dayList.add(day20);
                dayList.add(day21);
                dayList.add(day22);
                dayList.add(day23);
                dayList.add(day24);
                dayList.add(day25);
                dayList.add(day26);
                dayList.add(day27);
                dayList.add(day28);
                dayList.add(day29);
                dayList.add(day30);
                dayList.add(day31);
                for (int d = 0; d < dayList.size(); d++) {
                    String day = dayList.get(d);
                    if ("9".equals(day)) {
                        laNumber++;
                    }
                }
            }

            //本年度1月到11月数据
/*
            Integer oeNumber = affairAttendanceChildService.selectBeanYear(idNumber,y, state);
*/
            List<AffairAttendanceChild> affairAttendanceChildList1 = affairAttendanceChildService.selectThisYearBean(idNumber,y,state);
            int oeNumber = 0;
            for (int i = 0; i < affairAttendanceChildList1.size(); i++) {

                AffairAttendanceChild affairAttendanceChild = affairAttendanceChildList1.get(i);

                String day1 = affairAttendanceChild.getDay1();
                String day2 = affairAttendanceChild.getDay2();
                String day3 = affairAttendanceChild.getDay3();
                String day4 = affairAttendanceChild.getDay4();
                String day5 = affairAttendanceChild.getDay5();
                String day6 = affairAttendanceChild.getDay6();
                String day7 = affairAttendanceChild.getDay7();
                String day8 = affairAttendanceChild.getDay8();
                String day9 = affairAttendanceChild.getDay9();
                String day10 = affairAttendanceChild.getDay10();
                String day11 = affairAttendanceChild.getDay11();
                String day12 = affairAttendanceChild.getDay12();
                String day13 = affairAttendanceChild.getDay13();
                String day14 = affairAttendanceChild.getDay14();
                String day15 = affairAttendanceChild.getDay15();
                String day16 = affairAttendanceChild.getDay16();
                String day17 = affairAttendanceChild.getDay17();
                String day18 = affairAttendanceChild.getDay18();
                String day19 = affairAttendanceChild.getDay19();
                String day20 = affairAttendanceChild.getDay20();
                String day21 = affairAttendanceChild.getDay21();
                String day22 = affairAttendanceChild.getDay22();
                String day23 = affairAttendanceChild.getDay23();
                String day24 = affairAttendanceChild.getDay24();
                String day25 = affairAttendanceChild.getDay25();

                String day26 = affairAttendanceChild.getDay26();
                String day27 = affairAttendanceChild.getDay27();
                String day28 = affairAttendanceChild.getDay28();
                String day29 = affairAttendanceChild.getDay29();
                String day30 = affairAttendanceChild.getDay30();
                String day31 = affairAttendanceChild.getDay31();


                List<String> dayList = new ArrayList<>();

                dayList.add(day1);
                dayList.add(day2);
                dayList.add(day3);
                dayList.add(day4);
                dayList.add(day5);
                dayList.add(day6);
                dayList.add(day7);
                dayList.add(day8);
                dayList.add(day9);
                dayList.add(day10);
                dayList.add(day11);
                dayList.add(day12);
                dayList.add(day13);
                dayList.add(day14);
                dayList.add(day15);
                dayList.add(day16);
                dayList.add(day17);
                dayList.add(day18);
                dayList.add(day19);
                dayList.add(day20);
                dayList.add(day21);
                dayList.add(day22);
                dayList.add(day23);
                dayList.add(day24);
                dayList.add(day25);
                dayList.add(day26);
                dayList.add(day27);
                dayList.add(day28);
                dayList.add(day29);
                dayList.add(day30);
                dayList.add(day31);
                for (int d = 0; d < dayList.size(); d++) {
                    String day = dayList.get(d);
                    if ("9".equals(day)) {
                        oeNumber++;
                    }
                }
            }
            //本年度12月1号旷工情况
            Integer tNum = affairAttendanceChildService.selectBeanTnumber(idNumber,y,state);

            int number = laNumber + oeNumber + tNum;

            if (number > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("2");
            examAutoEvaluation.setEvalType("5");
            examAutoEvaluation.setPeriod("2");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setDetails(name + year + "年" + "存在" + number +"次旷工情况");
            examAutoEvaluation.setName(name);
            examAutoEvaluation.setIdNumber(idNumber);
            examAutoEvaluation.setAssess("");
            examAutoEvaluation.setModel("2020年年度对公安处领导班子成员绩效考核公共扣分标准");
            examAutoEvaluation.setModelId("39175e4e4f3a4c498313176dab9f5e10");
            examAutoEvaluation.setOption("");//未找到
            examAutoEvaluation.setOptionId("");//未找到
            examAutoEvaluation.setRowNum("");
            examAutoEvaluation.setFromSys("智慧政工");
            examAutoEvaluation.setScore(String.valueOf(number * 3));
            examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"考勤管理");

                this.save(examAutoEvaluation);
            }
        }
    }
    /*
     * 月度
     * 中基层领导班子
     * 考勤管理，旷工
     *
     * */
    public void zjcCkeckOut(String checkTime) {


        //年份
        String year = checkTime.substring(0, 4);
        int y = Integer.valueOf(year);
        //月份
        String month = checkTime.substring(checkTime.length() - 2);
        int m = Integer.valueOf(month);

       /* //上个月月份
        int m1 = m - 1;
        //下个月月份
        int m2 = 0;
        String month2 = null;
        if ("12".equals(month)){
            //下个月月份
            y = y + 1;
            m2 = 1;
        }else {
            m2 = m + 1;
            if (10 > m2){
                month2 = "0" + String.valueOf(m2);
            }else{
                month2 = String.valueOf(m2);
            }
        }*/

        /*中基层*/
        String juJiGuanRoleId = "13bac520ae4d4160b595384691b443fd";
        String chuJiGuanRoleId = "62cf6aaea0184d3b8cfbce1700ad0e38";
        String suoduiJiGuanRoleId = "ff24c3288860447d867d08d462a2a2b9";

        String[] zhongJiCeng = new String[3];
        zhongJiCeng[0] = chuJiGuanRoleId;
        zhongJiCeng[1] = juJiGuanRoleId;
        zhongJiCeng[2] = suoduiJiGuanRoleId;

        List<User> temzhongJiCengList = new ArrayList<>();

/*        Integer dayInt = Integer.parseInt(DateUtils.getDay());*/

        Arrays.stream(zhongJiCeng).forEach(s -> {
            ExamWorkflowDefine zhongDefine = new ExamWorkflowDefine();
            zhongDefine.setName(s);
            temzhongJiCengList.addAll(examWorkflowSegmentsDefineService.queryPoliceDatas(zhongDefine));
        });
/*
        if (26 > dayInt){*/
            for (int z = 0; z < temzhongJiCengList.size(); z++) {
            User user = temzhongJiCengList.get(z);
            String name = user.getName();
            String idNumber = user.getNo();

            String state = "9";
            List<AffairAttendanceChild> affairAttendanceChildList = new ArrayList<>();
            affairAttendanceChildList = affairAttendanceChildService.selectZjcBean(idNumber, y, m, state);

            //上个月记录
/*                List<AffairAttendanceChild> affairAttendanceChildList1 = new ArrayList<>();
                affairAttendanceChildList1 = affairAttendanceChildService.selectBeanLastForeDay(idNumber, y, m1, state);*/

            if (affairAttendanceChildList.size() > 0/* || affairAttendanceChildList1.size() > 0*/) {

                Integer number = examAutoEvaluationDao.selectNumber(idNumber,year,month,"1");

                if (number == 0) {

                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("6");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(name + year + "年" + month + "月" + "存在旷工情况");
                    examAutoEvaluation.setName(name);
                    examAutoEvaluation.setIdNumber(idNumber);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setModel("2020年月度对全局中层和基层领导干部考核公共扣分标准(公安处领导班子成员除外)");
                    examAutoEvaluation.setModelId("d498bf52ce334e3da66851fc57143639");
                    examAutoEvaluation.setOption("违反考勤制度，无故旷工的");
                    examAutoEvaluation.setOptionId("546sd41f68416sdf16a8sdf4231asdf63");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setScore("10");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"考勤管理");
                    this.save(examAutoEvaluation);

                }
            }
        }
        /*}
        else {
            for (int z = 0; z < temzhongJiCengList.size(); z++){
                User user = temzhongJiCengList.get(z);
                String name = user.getName();
                String idNumber = user.getNo();

                String state = "9";
                List<AffairAttendanceChild> affairAttendanceChildList = new ArrayList<>();
                affairAttendanceChildList = affairAttendanceChildService.selectBean(idNumber, y, m2, state);

                List<AffairAttendanceChild> affairAttendanceChildList1 = new ArrayList<>();
                affairAttendanceChildList1 = affairAttendanceChildService.selectBeanLastForeDay(idNumber, y, m, state);

                if (affairAttendanceChildList.size() > 0 || affairAttendanceChildList1.size() > 0) {

                    Integer number = examAutoEvaluationDao.selectNumber(idNumber,year,month2,"1");

                    if (number == 0) {

                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("2");
                        examAutoEvaluation.setEvalType("6");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month2);
                        examAutoEvaluation.setDetails(name + year + "年" + month2 + "月" + "存在旷工情况");
                        examAutoEvaluation.setName(name);
                        examAutoEvaluation.setIdNumber(idNumber);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setModel("2020年月度对全局中层和基层领导干部考核公共扣分标准(公安处领导班子成员除外)");
                        examAutoEvaluation.setModelId("d498bf52ce334e3da66851fc57143639");
                        examAutoEvaluation.setOption("违反考勤制度，无故旷工的");
                        examAutoEvaluation.setOptionId("546sd41f68416sdf16a8sdf4231asdf63");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setScore("10");
                        examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"考勤管理");
                        this.save(examAutoEvaluation);

                    }
                }
            }
        }*/
    }

    /*
     * 年度
     * 中基层领导班子
     * 考勤管理，旷工
     *
     * */
    public void zjcCkeckOutYear(String year) {

        int y = Integer.valueOf(year);
        int lastYear = y - 1;

        Integer monthInt = Integer.parseInt(DateUtils.getMonth());
        Integer dayInt = Integer.parseInt(DateUtils.getDay());

        /*中基层*/
        String juJiGuanRoleId = "13bac520ae4d4160b595384691b443fd";
        String chuJiGuanRoleId = "62cf6aaea0184d3b8cfbce1700ad0e38";
        String suoduiJiGuanRoleId = "ff24c3288860447d867d08d462a2a2b9";

        String[] zhongJiCeng = new String[3];
        zhongJiCeng[0] = chuJiGuanRoleId;
        zhongJiCeng[1] = juJiGuanRoleId;
        zhongJiCeng[2] = suoduiJiGuanRoleId;
        String companyId = "156";
        List<User> temzhongJiCengList = new ArrayList<>();
        /*Arrays.stream(zhongJiCeng).forEach(s -> {
            ExamWorkflowDefine zhongDefine = new ExamWorkflowDefine();
            zhongDefine.setName(s);
            if (companyId.equals("1")) {
                zhongDefine.getSqlMap().put("dsf", "and u.company_id = '" + companyId + "' and u.office_id not in ('34','95','156')");
            } else {
                zhongDefine.getSqlMap().put("dsf", "and u.company_id = '" + companyId + "'");
            }
            temzhongJiCengList.addAll(examWorkflowSegmentsDefineService.queryPoliceDatas(zhongDefine));
        });*/
        Arrays.stream(zhongJiCeng).forEach(s -> {
            ExamWorkflowDefine zhongDefine = new ExamWorkflowDefine();
            zhongDefine.setName(s);
            temzhongJiCengList.addAll(examWorkflowSegmentsDefineService.queryPoliceDatas(zhongDefine));
        });
        if (monthInt == 12 && dayInt > 10){
            //下一年
            int y2 = y + 1;
            String yearN = String.valueOf(y2);
            int y1 = Integer.valueOf(year);

            for (int z = 0; z < temzhongJiCengList.size(); z++) {
                User user = temzhongJiCengList.get(z);
                String name = user.getName();
                String idNumber = user.getNo();
                String state = "9";

                //上一年12月旷工情况
                /* Integer laNumber = affairAttendanceChildService.selectLaNumber(idNumber,lastYear,state);*/
                List<AffairAttendanceChild> affairAttendanceChildList = affairAttendanceChildService.selectLastBean(idNumber,y1,state);
                int laNumber = 0;
                for (int i = 0; i < affairAttendanceChildList.size(); i++) {

                    AffairAttendanceChild affairAttendanceChild = affairAttendanceChildList.get(i);

                    if ("9".equals(affairAttendanceChild.getDay11())) {
                        laNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay12())) {
                        laNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay13())) {
                        laNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay14())) {
                        laNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay15())) {
                        laNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay16())) {
                        laNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay17())) {
                        laNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay18())) {
                        laNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay19())) {
                        laNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay20())) {
                        laNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay21())) {
                        laNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay22())) {
                        laNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay23())) {
                        laNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay24())) {
                        laNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay25())) {
                        laNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay26())) {
                        laNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay27())) {
                        laNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay28())) {
                        laNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay29())) {
                        laNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay30())) {
                        laNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay31())) {
                        laNumber++;
                    }

                    /*for (int d = 0; d < dayList.size(); d++) {
                        String day = dayList.get(d);
                        if ("9".equals(day)) {
                            laNumber++;
                        }
                    }*/
                }

                //本年度1月到11月数据
/*
            Integer oeNumber = affairAttendanceChildService.selectBeanYear(idNumber,y, state);
*/

                List<AffairAttendanceChild> affairAttendanceChildList1 = affairAttendanceChildService.selectThisYearBean(idNumber,y2,state);
                int oeNumber = 0;
                for (int i = 0; i < affairAttendanceChildList1.size(); i++) {

                    AffairAttendanceChild affairAttendanceChild = affairAttendanceChildList1.get(i);
                    if ("9".equals(affairAttendanceChild.getDay1())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay2())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay3())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay4())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay5())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay6())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay7())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay8())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay9())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay10())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay11())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay12())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay13())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay14())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay15())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay16())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay17())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay18())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay19())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay20())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay21())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay22())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay23())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay24())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay25())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay26())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay27())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay28())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay29())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay30())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay31())) {
                        oeNumber++;
                    }
                }
                //本年度12月1号到10号旷工情况
                List<AffairAttendanceChild> affairAttendanceChildList2  = affairAttendanceChildService.selectOTBeanTnumber(idNumber,y2,state);
                int tNum = 0;
                for (int a = 0; a < affairAttendanceChildList2.size(); a++){

                    AffairAttendanceChild affairAttendanceChild = affairAttendanceChildList2.get(a);


                    if ("9".equals(affairAttendanceChild.getDay1())) {
                        tNum++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay2())) {
                        tNum++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay3())) {
                        tNum++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay4())) {
                        tNum++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay5())) {
                        tNum++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay6())) {
                        tNum++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay7())) {
                        tNum++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay8())) {
                        tNum++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay9())) {
                        tNum++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay10())) {
                        tNum++;
                    }
                }

                int number = laNumber + oeNumber + tNum;

                if (number > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("6");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(yearN);
                    examAutoEvaluation.setDetails(name + yearN + "年" + "存在"+ number + "次旷工情况");
                    examAutoEvaluation.setName(name);
                    examAutoEvaluation.setIdNumber(idNumber);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setModel("2020年年度全局中层和基层领导干部考核公共扣分标准(公安处领导班子成员除外)");
                    examAutoEvaluation.setModelId("c00cebbbc62c48d888316206d38e02c7");
                    examAutoEvaluation.setOption("违反考勤制度，无故旷工的");
                    examAutoEvaluation.setOptionId("65c3e411d9a24a28a9e98511b10705da");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setScore(String.valueOf(number * 3));
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"考勤管理");
                    this.save(examAutoEvaluation);
                }
            }
        }else{
            for (int z = 0; z < temzhongJiCengList.size(); z++) {
                User user = temzhongJiCengList.get(z);
                String name = user.getName();
                String idNumber = user.getNo();
                String state = "9";

                //上一年12月旷工情况
                /* Integer laNumber = affairAttendanceChildService.selectLaNumber(idNumber,lastYear,state);*/
                List<AffairAttendanceChild> affairAttendanceChildList = affairAttendanceChildService.selectLastBean(idNumber,lastYear,state);
                int laNumber = 0;
                for (int i = 0; i < affairAttendanceChildList.size(); i++) {

                    AffairAttendanceChild affairAttendanceChild = affairAttendanceChildList.get(i);


                    if ("9".equals(affairAttendanceChild.getDay11())) {
                        laNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay12())) {
                        laNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay13())) {
                        laNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay14())) {
                        laNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay15())) {
                        laNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay16())) {
                        laNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay17())) {
                        laNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay18())) {
                        laNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay19())) {
                        laNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay20())) {
                        laNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay21())) {
                        laNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay22())) {
                        laNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay23())) {
                        laNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay24())) {
                        laNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay25())) {
                        laNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay26())) {
                        laNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay27())) {
                        laNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay28())) {
                        laNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay29())) {
                        laNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay30())) {
                        laNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay31())) {
                        laNumber++;
                    }
                }

                //本年度1月到11月数据
/*
            Integer oeNumber = affairAttendanceChildService.selectBeanYear(idNumber,y, state);
*/

                List<AffairAttendanceChild> affairAttendanceChildList1 = affairAttendanceChildService.selectThisYearBean(idNumber,y,state);
                int oeNumber = 0;
                for (int i = 0; i < affairAttendanceChildList1.size(); i++) {

                    AffairAttendanceChild affairAttendanceChild = affairAttendanceChildList1.get(i);

                    if ("9".equals(affairAttendanceChild.getDay1())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay2())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay3())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay4())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay5())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay6())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay7())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay8())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay9())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay10())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay11())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay12())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay13())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay14())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay15())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay16())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay17())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay18())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay19())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay20())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay21())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay22())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay23())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay24())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay25())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay26())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay27())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay28())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay29())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay30())) {
                        oeNumber++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay31())) {
                        oeNumber++;
                    }
                }
                //本年度12月1号旷工情况
                List<AffairAttendanceChild> affairAttendanceChildList2 = affairAttendanceChildService.selectOTBeanTnumber(idNumber, y, state);
                int tNum = 0;
                for (int a = 0; a < affairAttendanceChildList2.size(); a++){

                    AffairAttendanceChild affairAttendanceChild = affairAttendanceChildList2.get(a);

                    if ("9".equals(affairAttendanceChild.getDay1())) {
                        tNum++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay2())) {
                        tNum++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay3())) {
                        tNum++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay4())) {
                        tNum++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay5())) {
                        tNum++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay6())) {
                        tNum++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay7())) {
                        tNum++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay8())) {
                        tNum++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay9())) {
                        tNum++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay10())) {
                        tNum++;
                    }
                }


                int number = laNumber + oeNumber + tNum;

                if (number > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("6");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + year + "年" + "存在"+ number + "次旷工情况");
                    examAutoEvaluation.setName(name);
                    examAutoEvaluation.setIdNumber(idNumber);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setModel("2020年年度全局中层和基层领导干部考核公共扣分标准(公安处领导班子成员除外)");
                    examAutoEvaluation.setModelId("c00cebbbc62c48d888316206d38e02c7");
                    examAutoEvaluation.setOption("违反考勤制度，无故旷工的");
                    examAutoEvaluation.setOptionId("65c3e411d9a24a28a9e98511b10705da");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setScore(String.valueOf(number * 3));
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"考勤管理");
                    examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
        }
    }


    /*
     * 月度
     * 民警
     * 考勤管理，旷工
     *
     * */
    public void mjCkeckOut(String checkTime) {


        //年份
        String year = checkTime.substring(0, 4);
        int y = Integer.valueOf(year);
        //月份
        String month = checkTime.substring(checkTime.length() - 2);
        int m = Integer.valueOf(month);

        /*int m1 = m - 1;

        //下个月月份
        int m2 = 0;
        String month2 = null;
        if ("12".equals(month)){
            //下个月月份
            y = y + 1;
            m2 = 1;
        }else {
            m2 = m + 1;
            if (10 > m2){
                month2 = "0" + String.valueOf(m2);
            }else{
                month2 = String.valueOf(m2);
            }
        }*/

/*        Integer dayInt = Integer.parseInt(DateUtils.getDay());

        if (26 > dayInt) {*/
            String roid = "2a7ea380b14f4870b6c44be21d2443c3";
            String state = "9";
            //本月
            List<AffairAttendanceChild> affairAttendanceChildList = new ArrayList<>();
            affairAttendanceChildList = affairAttendanceChildService.selectMjThisMonth(roid, y, m, state);
            AffairAttendanceChild affairAttendanceChild = new AffairAttendanceChild();

            //上个月
/*            List<AffairAttendanceChild> affairAttendanceChildList1 = new ArrayList<>();
            affairAttendanceChildList1 = affairAttendanceChildService.selectMjLastMonth(roid, y, m1, state);
            AffairAttendanceChild affairAttendanceChild1 = new AffairAttendanceChild();*/
            int number = 0;
            for (int a = 0; a < affairAttendanceChildList.size(); a++) {
                affairAttendanceChild = affairAttendanceChildList.get(a);
                if ("9".equals(affairAttendanceChild.getDay1())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay2())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay3())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay4())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay5())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay6())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay7())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay8())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay9())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay10())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay11())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay12())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay13())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay14())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay15())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay16())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay17())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay18())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay19())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay20())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay21())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay22())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay23())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay24())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay25())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay26())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay27())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay28())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay29())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay30())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay31())) {
                    number++;
                }

                /*for (int i = 0; i < affairAttendanceChildList1.size(); i++) {
                    affairAttendanceChild1 = affairAttendanceChildList1.get(i);




                }*/
            }
            if (number > 0) {
                String scoreNumber = String.valueOf(number * 10);

                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("2");
                examAutoEvaluation.setEvalType("7");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setDetails(affairAttendanceChild.getName() + year + "年" + month + "月" + "存在" + number + "次旷工情况");
                examAutoEvaluation.setName(affairAttendanceChild.getName());
                examAutoEvaluation.setIdNumber(affairAttendanceChild.getIdNumber());
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setModel("2020年月度南宁铁路公安局民警绩效考核公共扣分标准");
                examAutoEvaluation.setModelId("0c4b8784733d4aff83c94394ab1064dc");
                examAutoEvaluation.setOption("违反考勤制度，无故旷工的");
                examAutoEvaluation.setOptionId("94e9c0d9083f4fd5a9b93fb6989b9a97");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setScore(scoreNumber);
                examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(affairAttendanceChild.getIdNumber()));

                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation, null, "考勤管理");
                this.save(examAutoEvaluation);
            }
      /*  }else {
            String roid = "2a7ea380b14f4870b6c44be21d2443c3";
            String state = "9";
            //本月
            List<AffairAttendanceChild> affairAttendanceChildList = new ArrayList<>();
            affairAttendanceChildList = affairAttendanceChildService.selectMjThisMonth(roid, y, m2, state);
            AffairAttendanceChild affairAttendanceChild = new AffairAttendanceChild();

            //上个月
            List<AffairAttendanceChild> affairAttendanceChildList1 = new ArrayList<>();
            affairAttendanceChildList1 = affairAttendanceChildService.selectMjLastMonth(roid, y, m, state);
            AffairAttendanceChild affairAttendanceChild1 = new AffairAttendanceChild();
            int number = 0;
            for (int a = 0; a < affairAttendanceChildList.size(); a++) {
                affairAttendanceChild = affairAttendanceChildList.get(a);
                if ("9".equals(affairAttendanceChild.getDay1())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay2())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay3())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay4())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay5())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay6())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay7())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay8())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay9())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay10())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay11())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay12())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay13())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay14())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay15())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay16())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay17())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay18())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay19())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay20())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay21())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay22())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay23())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay24())) {
                    number++;
                }
                if ("9".equals(affairAttendanceChild.getDay25())) {
                    number++;
                }

                for (int i = 0; i < affairAttendanceChildList1.size(); i++) {
                    affairAttendanceChild1 = affairAttendanceChildList1.get(i);

                    if ("9".equals(affairAttendanceChild1.getDay26())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild1.getDay27())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild1.getDay28())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild1.getDay29())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild1.getDay30())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild1.getDay31())) {
                        number++;
                    }


                }
            }
            if (number > 0) {
                String scoreNumber = String.valueOf(number * 10);

                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("2");
                examAutoEvaluation.setEvalType("7");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month2);
                examAutoEvaluation.setDetails(affairAttendanceChild.getName() + year + "年" + month2 + "月" + "存在" + number + "次旷工情况");
                examAutoEvaluation.setName(affairAttendanceChild.getName());
                examAutoEvaluation.setIdNumber(affairAttendanceChild.getIdNumber());
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setModel("2020年月度南宁铁路公安局民警绩效考核公共扣分标准");
                examAutoEvaluation.setModelId("0c4b8784733d4aff83c94394ab1064dc");
                examAutoEvaluation.setOption("违反考勤制度，无故旷工的");
                examAutoEvaluation.setOptionId("94e9c0d9083f4fd5a9b93fb6989b9a97");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setScore(scoreNumber);
                examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(affairAttendanceChild.getIdNumber()));

                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation, null, "考勤管理");
                this.save(examAutoEvaluation);
            }
        }*/
    }

    /*
     * 年度
     * 民警
     * 考勤管理，旷工
     *
     * */
    public void mjCkeckOutYear(String year) {

        int y = Integer.valueOf(year);

        int lastYear = y - 1;
        //所有的民警身份证
        String policeRoleId = "2a7ea380b14f4870b6c44be21d2443c3";

        Integer monthInt = Integer.parseInt(DateUtils.getMonth());
        Integer dayInt = Integer.parseInt(DateUtils.getDay());

        if (monthInt == 12 && dayInt > 10) {
            //下一年
            int y2 = y + 1;
            String yearN = String.valueOf(y2);
            int y1 = Integer.valueOf(year);


            List<AffairAttendanceChild> affairAttendanceChildList = affairAttendanceChildService.selectHaveBugsIdNumber(policeRoleId, y, y2);
            String idNumber = null;
            String name = null;
            int number = 0;
            for (int a = 0; a < affairAttendanceChildList.size(); a++) {
                AffairAttendanceChild affairAttendanceChild1 = affairAttendanceChildList.get(a);
                idNumber = affairAttendanceChild1.getIdNumber();
                name = affairAttendanceChild1.getName();
                String state = "9";

                //去年12月2号到31号数据
                List<AffairAttendanceChild> affairAttendanceChildLastList = new ArrayList<>();
                affairAttendanceChildLastList = affairAttendanceChildService.selectLastBean(idNumber, y1, state);
                for (int al = 0; al < affairAttendanceChildLastList.size(); al++) {
                    AffairAttendanceChild affairAttendanceChild = affairAttendanceChildLastList.get(al);
                    if ("9".equals(affairAttendanceChild.getDay2())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay3())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay4())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay5())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay6())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay7())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay8())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay9())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay10())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay11())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay12())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay13())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay14())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay15())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay16())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay17())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay18())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay19())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay20())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay21())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay22())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay23())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay24())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay25())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay26())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay27())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay28())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay29())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay30())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay31())) {
                        number++;
                    }
                }

                //本年1到11月数据
                List<AffairAttendanceChild> affairAttendanceChildList1 = new ArrayList<>();
                affairAttendanceChildList1 = affairAttendanceChildService.selectThisYearBean(idNumber, y2, state);
                for (int af = 0; af < affairAttendanceChildList1.size(); af++) {
                    AffairAttendanceChild affairAttendanceChild = affairAttendanceChildList1.get(af);
                    if ("9".equals(affairAttendanceChild.getDay1())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay2())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay3())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay4())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay5())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay6())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay7())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay8())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay9())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay10())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay11())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay12())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay13())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay14())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay15())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay16())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay17())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay18())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay19())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay20())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay21())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay22())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay23())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay24())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay25())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay26())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay27())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay28())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay29())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay30())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay31())) {
                        number++;
                    }

                }

                //本年12月1号数据
                Integer number1 = affairAttendanceChildService.selectBeanTnumber(idNumber, y2, state);
                if (number1 > 0) {
                    number++;
                }
            }

            if (number > 0) {
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("2");
                examAutoEvaluation.setEvalType("7");
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(yearN);
                examAutoEvaluation.setDetails(name + yearN + "年" + "存在" + number + "次旷工情况");
                examAutoEvaluation.setName(name);
                examAutoEvaluation.setIdNumber(idNumber);
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setModel("2020年年度南宁铁路公安局民警绩效考评公共扣分标准");
                examAutoEvaluation.setModelId("c00cebbbc62c48d888316206d38e02c7");
                examAutoEvaluation.setOption("违反考勤制度，无故旷工的");
                examAutoEvaluation.setOptionId("7addfb33c3cd474e877e7c8a9f54ddf1");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setScore(String.valueOf(number * 3));
                examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation, null, "考勤管理");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);

                this.save(examAutoEvaluation);

            }
        }else{
            List<AffairAttendanceChild> affairAttendanceChildList = affairAttendanceChildService.selectHaveBugsIdNumber(policeRoleId, lastYear, y);
            String idNumber = null;
            String name = null;
            int number = 0;
            for (int a = 0; a < affairAttendanceChildList.size(); a++) {
                AffairAttendanceChild affairAttendanceChild1 = affairAttendanceChildList.get(a);
                idNumber = affairAttendanceChild1.getIdNumber();
                name = affairAttendanceChild1.getName();
                String state = "9";

                //去年12月11号到31号数据
                List<AffairAttendanceChild> affairAttendanceChildLastList = new ArrayList<>();
                affairAttendanceChildLastList = affairAttendanceChildService.selectLastBean(idNumber, lastYear, state);
                for (int al = 0; al < affairAttendanceChildLastList.size(); al++) {
                    AffairAttendanceChild affairAttendanceChild = affairAttendanceChildLastList.get(al);

                    if ("9".equals(affairAttendanceChild.getDay11())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay12())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay13())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay14())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay15())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay16())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay17())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay18())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay19())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay20())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay21())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay22())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay23())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay24())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay25())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay26())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay27())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay28())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay29())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay30())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay31())) {
                        number++;
                    }
                }

                //本年1到11月数据
                List<AffairAttendanceChild> affairAttendanceChildList1 = new ArrayList<>();
                affairAttendanceChildList1 = affairAttendanceChildService.selectThisYearBean(idNumber, y, state);
                for (int af = 0; af < affairAttendanceChildList1.size(); af++) {
                    AffairAttendanceChild affairAttendanceChild = affairAttendanceChildList1.get(af);
                    if ("9".equals(affairAttendanceChild.getDay1())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay2())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay3())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay4())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay5())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay6())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay7())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay8())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay9())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay10())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay11())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay12())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay13())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay14())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay15())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay16())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay17())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay18())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay19())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay20())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay21())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay22())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay23())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay24())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay25())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay26())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay27())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay28())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay29())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay30())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay31())) {
                        number++;
                    }

                }

                //本年12月1号到10号数据
                List<AffairAttendanceChild> affairAttendanceChildList2 = affairAttendanceChildService.selectOTBeanTnumber(idNumber, y, state);
                for (int at = 0; at < affairAttendanceChildList2.size(); at++){
                    AffairAttendanceChild affairAttendanceChild = affairAttendanceChildList2.get(at);
                    if ("9".equals(affairAttendanceChild.getDay1())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay2())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay3())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay4())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay5())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay6())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay7())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay8())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay9())) {
                        number++;
                    }
                    if ("9".equals(affairAttendanceChild.getDay10())) {
                        number++;
                    }
                }

            }

            if (number > 0) {
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("2");
                examAutoEvaluation.setEvalType("7");
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setDetails(name + year + "年" + "存在" + number + "次旷工情况");
                examAutoEvaluation.setName(name);
                examAutoEvaluation.setIdNumber(idNumber);
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setModel("2020年年度南宁铁路公安局民警绩效考评公共扣分标准");
                examAutoEvaluation.setModelId("c00cebbbc62c48d888316206d38e02c7");
                examAutoEvaluation.setOption("违反考勤制度，无故旷工的");
                examAutoEvaluation.setOptionId("7addfb33c3cd474e877e7c8a9f54ddf1");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setScore(String.valueOf(number * 3));
                examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation, null, "考勤管理");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);

                this.save(examAutoEvaluation);

            }
        }
    }


    /**
     * 局考局机关  志愿服务 年度
     */
    @Transactional(readOnly = false)
    public void zhiyuanYearJKJ(String year) {

        //查询局机关党组织
        Integer y = Integer.valueOf(year);
        Integer lastYear = y - 1;
        String yearL = lastYear + "-" + "12-02";
        String yearT = year + "-" + "12-01";
        List<AffairGeneralSituation> jjgPartyList = affairGeneralSituationService.getJJGPartyBranch();
        for (AffairGeneralSituation affairGeneralSituation : jjgPartyList) {
            String partyId = affairGeneralSituation.getId();
            String partyOrganization = affairGeneralSituation.getPartyOrganization();
            Integer num = affairVolunteerServiceService.selectNumByName(partyId, yearL,yearT);
            if (num < 1) {
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("2");
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setDetails(year + "年，" + partyOrganization + "，志愿服务，未按时录入扣分（每年最少1次，年度考）。");
                examAutoEvaluation.setAssess("南宁局绩效办");
                examAutoEvaluation.setAssessId("cca66e1339f14799b01f6db43ed16e16");
                examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队年度绩效考核公共扣分标准");
                examAutoEvaluation.setModelId("653c088f3e754adcaa659a3706d304b9");
                examAutoEvaluation.setOption("各平台数据未及时录入的");
                examAutoEvaluation.setOptionId("f7b968cead674bb2a553602db7f490f4");
                examAutoEvaluation.setScore("0.5");
                examAutoEvaluation.setFromSys("智慧政工");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"志愿服务");
                List<User> userList = this.getUserByPartyId(partyId);
                for (User user : userList) {
                    examAutoEvaluation.setUnit(user.getOffice().getName());
                    examAutoEvaluation.setUnitId(user.getOffice().getId());
                    examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                    //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                    examAutoEvaluation.setId("");
                    examAutoEvaluation.setIsNewRecord(false);
                    /*处理考评标准一样，汇总*/
                    this.summaryStandard(examAutoEvaluation,0.5,year + "年，" + partyOrganization + "，志愿服务，未按时录入扣分（每年最少1次，年度考）。");
                    this.save(examAutoEvaluation);
                }
            }
        }

    }

    /**
     * 处考处机关  志愿服务 年度
     */
    @Transactional(readOnly = false)
    public void zhiyuanCkcYear(String year) {

        Integer y = Integer.valueOf(year);
        Integer lastYear = y - 1;
        String yearL = lastYear + "-" + "12-02";
        String yearT = year + "-" + "12-01";
        //获取各处处机关党组织
        List<AffairGeneralSituation> nncPartyList = affairGeneralSituationService.getChuPartyBranch("34", "1");
        List<AffairGeneralSituation> lzcPartyList = affairGeneralSituationService.getChuPartyBranch("95", "1");
        List<AffairGeneralSituation> bhcPartyList = affairGeneralSituationService.getChuPartyBranch("156", "1");
        for (AffairGeneralSituation affairGeneralSituation : nncPartyList) {
            String partyId = affairGeneralSituation.getId();
            String partyOrganization = affairGeneralSituation.getPartyOrganization();
            Integer num = affairVolunteerServiceService.selectNumByName(partyId, yearL,yearT);
            if (num < 1) {
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("4");
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setDetails(year + "年，" + partyOrganization + "，志愿服务，未按时录入扣分（每年最少1次，年度考）。");
                examAutoEvaluation.setAssess("南宁处绩效办");
                examAutoEvaluation.setAssessId("978958003ea44a4bba3eed8ee6ceff3c");
                examAutoEvaluation.setModel("2020年年度南宁处对全处各单位考评公共扣分标准");
                examAutoEvaluation.setModelId("5587177f089e4ea8926b2feca9b3bf63");
                examAutoEvaluation.setOption("各平台数据未及时录入的");
                examAutoEvaluation.setOptionId("ffd58d706d7749929180cb117ef6c864");
                examAutoEvaluation.setScore("0.4");
                examAutoEvaluation.setFromSys("智慧政工");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","志愿服务");
                List<User> userList = this.getUserByPartyId(partyId);
                for (User user : userList) {
                   /* if (!user.getOffice().getName().contains("派出所")) {*/
                        examAutoEvaluation.setUnit(user.getOffice().getName());
                        examAutoEvaluation.setUnitId(user.getOffice().getId());
                        examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                        //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setIsNewRecord(false);
                        this.summaryStandard(examAutoEvaluation,0.4,year + "年，志愿服务，" + partyOrganization + "未按时录入扣分（每年最少1次，年度考）。");
                        this.save(examAutoEvaluation);
                    /*}*/
                }
            }
        }
        for (AffairGeneralSituation affairGeneralSituation : lzcPartyList) {
            String partyId = affairGeneralSituation.getId();
            String partyOrganization = affairGeneralSituation.getPartyOrganization();
            Integer num = affairVolunteerServiceService.selectNumByName(partyId, yearL,yearT);
            if (num < 1) {
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("4");
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setDetails(year + "年，" + partyOrganization + "，志愿服务，未按时录入扣分（每年最少1次，年度考）。");
                examAutoEvaluation.setAssess("柳州处绩效办");
                examAutoEvaluation.setAssessId("6af0e615e9b0477da82eff06ff532c8b");
                examAutoEvaluation.setModel("2020年年度柳州处对单位（部门）绩效考评公共扣分标准");
                examAutoEvaluation.setModelId("bed0dbae608b43879d002a52258a9f34");
                examAutoEvaluation.setOption("各平台数据未及时录入的");
                examAutoEvaluation.setOptionId("d6387398d93940129d769446488c612b");
                examAutoEvaluation.setScore("0.4");
                examAutoEvaluation.setFromSys("智慧政工");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","志愿服务");
                List<User> userList = this.getUserByPartyId(partyId);
                for (User user : userList) {
                    /*if (!user.getOffice().getName().contains("派出所")) {*/
                        examAutoEvaluation.setUnit(user.getOffice().getName());
                        examAutoEvaluation.setUnitId(user.getOffice().getId());
                        examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                        //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setIsNewRecord(false);
                        this.summaryStandard(examAutoEvaluation,0.4,year + "年，志愿服务，" + partyOrganization + "未按时录入扣分（每年最少1次，年度考）。");
                       /* ExamAutoEvaluation old = this.getInfoByMore(examAutoEvaluation);
                        if(old!=null){
                            String oldDetails = old.getDetails();
                            Double oldScore;
                            try {
                                oldScore = Double.valueOf(old.getScore());
                            }catch (Exception e){
                                e.printStackTrace();
                                oldScore = 0.0;
                            }
                            this.deleteInfoByMore(old);
                            examAutoEvaluation.setScore(String.valueOf(oldScore+0.5));
                            examAutoEvaluation.setDetails(oldDetails+"<br>"+year + "年，" + partyOrganization + "，志愿服务，未按时录入扣分（每年最少1次，年度考）。");
                        }*/
                        this.save(examAutoEvaluation);
                    /*}*/
                }
            }
        }
        for (AffairGeneralSituation affairGeneralSituation : bhcPartyList) {
            String partyId = affairGeneralSituation.getId();
            String partyOrganization = affairGeneralSituation.getPartyOrganization();
            Integer num = affairVolunteerServiceService.selectNumByName(partyId, yearL,yearT);
            if (num < 1) {
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("4");
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setDetails(year + "年，" + partyOrganization + "，志愿服务，未按时录入扣分（每年最少1次，年度考）。");
                examAutoEvaluation.setAssess("北海处绩效办");
                examAutoEvaluation.setAssessId("46c521bf67e24db28772b3eac52dc454");
                examAutoEvaluation.setModel("2020年年度北海处对机关科室、支队绩效考评公共扣分标准");
                examAutoEvaluation.setModelId("260748e24b19426ba5d8bd632cca3a0c");
                examAutoEvaluation.setOption("各平台数据未及时录入的");
                examAutoEvaluation.setOptionId("e6c5c182fbee48d4bc0f76519e57db6a");
                examAutoEvaluation.setScore("0.4");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","志愿服务");
                List<User> userList = this.getUserByPartyId(partyId);
                for (User user : userList) {
                    /*if (!user.getOffice().getName().contains("派出所")) {*/
                        examAutoEvaluation.setUnit(user.getOffice().getName());
                        examAutoEvaluation.setUnitId(user.getOffice().getId());
                        examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                        //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setIsNewRecord(false);
                        this.summaryStandard(examAutoEvaluation,0.4,year + "年，志愿服务，" + partyOrganization + "未按时录入扣分（每年最少1次，年度考）。");
                        /*ExamAutoEvaluation old = this.getInfoByMore(examAutoEvaluation);
                        if(old!=null){
                            String oldDetails = old.getDetails();
                            Double oldScore;
                            try {
                                oldScore = Double.valueOf(old.getScore());
                            }catch (Exception e){
                                e.printStackTrace();
                                oldScore = 0.0;
                            }
                            this.deleteInfoByMore(old);
                            examAutoEvaluation.setScore(String.valueOf(oldScore+0.5));
                            examAutoEvaluation.setDetails(oldDetails+"<br>"+year + "年，" + partyOrganization + "，志愿服务，未按时录入扣分（每年最少1次，年度考）。");
                        }*/
                        this.save(examAutoEvaluation);
                    /*}*/
                }
            }
        }
    }

    @Transactional(readOnly = false)
    public void zhiyuanCkpYear(String year) {


        Integer y = Integer.valueOf(year);
        Integer lastYear = y - 1;
        String yearL = lastYear + "-" + "12-02";
        String yearT = year + "-" + "12-01";

        //获取各处下派出所党组织
        List<AffairGeneralSituation> nncPartyList = affairGeneralSituationService.getChuPartyBranch("34", "2");
        List<AffairGeneralSituation> lzcPartyList = affairGeneralSituationService.getChuPartyBranch("95", "2");
        List<AffairGeneralSituation> bhcPartyList = affairGeneralSituationService.getChuPartyBranch("156", "2");
        for (AffairGeneralSituation affairGeneralSituation : nncPartyList) {
            String partyId = affairGeneralSituation.getId();
            String partyOrganization = affairGeneralSituation.getPartyOrganization();
            Integer num = affairVolunteerServiceService.selectNumByName(partyId, yearL,yearT);
            if (num < 1) {
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("3");
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setDetails(year + "年，" + partyOrganization + "，志愿服务，未按时录入扣分（每年最少1次，年度考）。");
                examAutoEvaluation.setAssess("南宁处政治处组织干部室");
                examAutoEvaluation.setAssessId("34e8d855cf6b4b1ab5e7e23e7aaba658");
                examAutoEvaluation.setModel("");
                examAutoEvaluation.setModelId("");
                examAutoEvaluation.setOption("");
                examAutoEvaluation.setOptionId("");
                /*examAutoEvaluation.setModel("2020年年度南宁处对全处各单位考评公共扣分标准");
                examAutoEvaluation.setModelId("5587177f089e4ea8926b2feca9b3bf63");
                examAutoEvaluation.setOption("各平台数据未及时录入的");
                examAutoEvaluation.setOptionId("ffd58d706d7749929180cb117ef6c864");*/
                examAutoEvaluation.setScore("3.0");
                examAutoEvaluation.setFromSys("智慧政工");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","志愿服务");
                List<User> userList = this.getUserByPartyId(partyId);
                for (User user : userList) {
                    //根据角色id判断
                    /*if (user.getOffice().getName().contains("派出所")) {*/
                        examAutoEvaluation.setUnit(user.getOffice().getName());
                        examAutoEvaluation.setUnitId(user.getOffice().getId());
                        examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                        //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setIsNewRecord(false);
                        this.summaryStandard(examAutoEvaluation,3.0,year + "年，志愿服务，" + partyOrganization + "未按时录入扣分（每年最少1次，年度考）。");
                        this.save(examAutoEvaluation);
                   /* }*/
                }
            }
        }
        for (AffairGeneralSituation affairGeneralSituation : lzcPartyList) {
            String partyId = affairGeneralSituation.getId();
            String partyOrganization = affairGeneralSituation.getPartyOrganization();
            Integer num = affairVolunteerServiceService.selectNumByName(partyId, yearL,yearT);
            if (num < 1) {
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("3");
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setDetails(year + "年，" + partyOrganization + "，志愿服务，未按时录入扣分（每年最少1次，年度考）。");
                examAutoEvaluation.setAssess("柳州处政治处组织干部室");
                examAutoEvaluation.setAssessId("ec3ba2efdd404f2faa520f6e8a71ec4c");
                examAutoEvaluation.setModel("2020年年度柳州处对派出所绩效考评公共扣分标准");
                examAutoEvaluation.setModelId("8506c629ac9d4ecead9143bf40bd1cc7");
                examAutoEvaluation.setOption("各平台数据未及时录入的");
                examAutoEvaluation.setOptionId("37ae037b90fb41b39f97a4f250b6833a");
                examAutoEvaluation.setScore("3.0");
                examAutoEvaluation.setFromSys("智慧政工");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","志愿服务");
                List<User> userList = this.getUserByPartyId(partyId);
                for (User user : userList) {
                    /*if (user.getOffice().getName().contains("派出所")) {*/
                        examAutoEvaluation.setUnit(user.getOffice().getName());
                        examAutoEvaluation.setUnitId(user.getOffice().getId());
                        examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                        //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setIsNewRecord(false);
                        this.summaryStandard(examAutoEvaluation,3.0,year + "年，志愿服务，" + partyOrganization + "未按时录入扣分（每年最少1次，年度考）。");
                        this.save(examAutoEvaluation);
                   /* }*/
                }
            }
        }
        for (AffairGeneralSituation affairGeneralSituation : bhcPartyList) {
            String partyId = affairGeneralSituation.getId();
            String partyOrganization = affairGeneralSituation.getPartyOrganization();
            Integer num = affairVolunteerServiceService.selectNumByName(partyId, yearL,yearT);
            if (num < 1) {
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("3");
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setDetails(year + "年，" + partyOrganization + "，志愿服务，未按时录入扣分（每年最少1次，年度考）。");
                examAutoEvaluation.setAssess("北海处政治处组织干部室");
                examAutoEvaluation.setAssessId("c90918faf2614baa8fa85230482bd43e");
                examAutoEvaluation.setModel("2020年年度北海处对派出所、刑警三大队绩效考评公共扣分标准");
                examAutoEvaluation.setModelId("c25e5dbae97f46c683ad276ed33580c0");
                examAutoEvaluation.setOption("各平台数据未及时录入的");
                examAutoEvaluation.setOptionId("d9b8be4cb9bb4c738bf1b854e900494c");
                examAutoEvaluation.setScore("3.0");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","志愿服务");
                List<User> userList = this.getUserByPartyId(partyId);
                for (User user : userList) {
                    /*if (user.getOffice().getName().contains("派出所") || user.getOffice().getName().contains("刑警三大队")) {*/
                        examAutoEvaluation.setUnit(user.getOffice().getName());
                        examAutoEvaluation.setUnitId(user.getOffice().getId());
                        examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                        //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setIsNewRecord(false);
                        this.summaryStandard(examAutoEvaluation,3.0,year + "年，志愿服务，" + partyOrganization + "未按时录入扣分（每年最少1次，年度考）。");
                        this.save(examAutoEvaluation);
                    /*}*/
                }
            }
        }
    }

    /*
     * 志愿服务
     * 中基层领导班子考核
     * 年度
     *
     * */
    @Transactional(readOnly = false)
    public void zjcZhiyuanYear(String year) {

        Map<String, String> map = yearTime(year);
        String yearL = map.get("yearL");
        String yearT = map.get("yearT");

        //所有党支部
        AffairGeneralSituation affairGeneralSituation = new AffairGeneralSituation();
        List<AffairGeneralSituation> affairGeneralSituationList = affairGeneralSituationService.findList(affairGeneralSituation);
        for (int i = 0; i < affairGeneralSituationList.size(); i++){
            AffairGeneralSituation aff = affairGeneralSituationList.get(i);
            String partyOrganizationName = aff.getPartyOrganization();
            String partyOrganizationId = aff.getId();
            int count = affairVolunteerServiceService.selectNumberById(yearL, yearT,partyOrganizationId);
            if (count < 1){
                String name = affairGeneralSituationService.findNameByPartyName(partyOrganizationName);
                String idNumber = userDao.selectUserIdNumber(name);
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("2");
                examAutoEvaluation.setEvalType("6");
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setName(name);
                examAutoEvaluation.setIdNumber(idNumber);
                examAutoEvaluation.setScore("2");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setDetails(year + "年" + name + "志愿服务未按时录入");
                examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"志愿服务");
                this.summaryStandard(examAutoEvaluation,2.0,"志愿服务，未按时录入扣分（每年最少1次，年度考）。");
                this.save(examAutoEvaluation);

            }
        }

    }

    /**
     * 团员教育评议
     * <p>
     * -- 共青团各类年度基础数据信息在智慧政工平台上未按时维护上报或录入出现错误、不及时的，扣2分（修改）
     *
     * @param year
     */
    @Transactional(readOnly = false)
    public void tuanyuanCkpYear(String year) {
        String year1 = DateUtils.getYear();
        String month = DateUtils.getMonth();
        String days = DateUtils.getDay();
        if("02".equals(month) && "01".equals(days)){
           /* Map<String,Object> yearMap = this.getTimeQuantumByYear(year);
            Date nowYearDate = (Date) yearMap.get("nowYear");
            Date lastYearDate = (Date) yearMap.get("lastYear");
            year = (String) yearMap.get("year");*/

            SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
            Map<String, String> yearTime = this.yearTime(year);
            Date lastYearDate = null;
            Date nowYearDate = null;
            try {
                lastYearDate = format.parse(yearTime.get("yearL"));
                nowYearDate = format.parse(yearTime.get("yearT"));
            } catch (ParseException e) {
                e.printStackTrace();
            }

            //所有的团支部
            List<AffairTwBase> nncTwList = examAutoEvaluationDao.findTuanZuZhi("34");
            List<AffairTwBase> lzcTwList = examAutoEvaluationDao.findTuanZuZhi("95");
            List<AffairTwBase> bhcTwList = examAutoEvaluationDao.findTuanZuZhi("156");


            for (AffairTwBase affairTwBase : nncTwList) {
                String unit = affairTwBase.getName();
                String unitId = affairTwBase.getId();
                List<AffairEducationComment> affairEducationCommentList = affairEducationCommentService.selectBeanById(unitId,nowYearDate,lastYearDate);
                if (affairEducationCommentList == null || affairEducationCommentList.size() == 0) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(unit +year1+"-"+month+"-"+days+ "前，团员教育评议未进行录入");
                    examAutoEvaluation.setModel("2020年年度南宁处对派出所绩效考核扣分标准(队伍建设)");
                    examAutoEvaluation.setModelId("f43cb06efe6b42acb625d2cef27bad1e");
                    examAutoEvaluation.setOption("工会各类年度基础数据信息在智慧政工平台上未按时维护上报或录入出现错误、不及时的");
                    examAutoEvaluation.setOptionId("fc7e67b2505a4d2aac82bd06528964f0");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setScore("2");

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","团员教育评议");
                    List<User> userList = this.getUserByTwId(unitId);
                    for (User user : userList) {
                        if (user.getOffice().getName().contains("派出所")) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId(IdGen.uuid());
                            examAutoEvaluation.setIsNewRecord(true);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
            }
            for (AffairTwBase affairTwBase : lzcTwList) {
                String unit = affairTwBase.getName();
                String unitId = affairTwBase.getId();
                List<AffairEducationComment> affairEducationCommentList = affairEducationCommentService.selectBeanById(unitId,nowYearDate,lastYearDate);
                if (affairEducationCommentList == null || affairEducationCommentList.size() == 0) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(unit +year1+"-"+month+"-"+days+ "前，团员教育评议未进行录入");
                    examAutoEvaluation.setModel("柳州处对派出所2020年年度队伍建设绩效考核扣分标准");
                    examAutoEvaluation.setModelId("1ccfeca0f49543d49f8833feb21735e3");
                    examAutoEvaluation.setOption("工会各类年度基础数据信息在智慧政工平台上未按时维护上报或录入出现错误、不及时的");
                    examAutoEvaluation.setOptionId("529071fd63b540a38647912f9feffece");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setScore("2");

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","团员教育评议");
                    List<User> userList = this.getUserByTwId(unitId);
                    for (User user : userList) {
                        if (user.getOffice().getName().contains("派出所")) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId(IdGen.uuid());
                            examAutoEvaluation.setIsNewRecord(true);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
            }

            for (AffairTwBase affairTwBase : bhcTwList) {
                String unit = affairTwBase.getName();
                String unitId = affairTwBase.getId();
                List<AffairEducationComment> affairEducationCommentList = affairEducationCommentService.selectBeanById(unitId,nowYearDate,lastYearDate);
                if (affairEducationCommentList == null || affairEducationCommentList.size() == 0) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(unit +year1+"-"+month+"-"+days+"前，团员教育评议未进行录入");
                    examAutoEvaluation.setModel("");
                    examAutoEvaluation.setModelId("");
                    examAutoEvaluation.setOption("");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setOptionId("");
                    examAutoEvaluation.setScore("2");

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","团员教育评议");
                    List<User> userList = this.getUserByTwId(unitId);
                    for (User user : userList) {
                        if (user.getOffice().getName().contains("派出所") || user.getOffice().getName().contains("刑警三大队")) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId(IdGen.uuid());
                            examAutoEvaluation.setIsNewRecord(true);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
            }
        }
    }


    @Transactional(readOnly = false)
    public void jkjRc(String checkTime) {

        List<Office> jjgPartyList = examAutoEvaluationDao.selectJjgUnit();

        String year = checkTime.substring(0, 4);
        Integer y = Integer.valueOf(year);
        String month = checkTime.substring(checkTime.length() - 2);
        Integer m = Integer.valueOf(month);

        Map<String, String> timeMap = this.monthTime(checkTime);
        String yearL = timeMap.get("yearL");
        String yearT = timeMap.get("yearT");

        for (int i = 0; i < jjgPartyList.size(); i++) {
            Office office = jjgPartyList.get(i);
            String idNumber = office.getId();
            String name = office.getName();

                int num = affairLearnDailyService.selectNum(yearL, yearT, idNumber);
                if (num < 1) {

                    int nu = 4;
                    String n = String.valueOf(nu) + ".0";

                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("2");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(name + year + "年" + month + "月" + "日常学习未完成");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(idNumber);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setRemark("");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(userDao.selectUserId(office.getCode()));//被考评对象id
                    examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队月度绩效考核公共扣分标准");
                    examAutoEvaluation.setModelId("e8aa72ffe54a4118aeae9077ff7898ec");
                    examAutoEvaluation.setOption("政治、业务学习制度不落实的");
                    examAutoEvaluation.setOptionId("be855cc128af463abab0ba57e7b9fe4d");
                    examAutoEvaluation.setScore(n);

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"日常学习");
                    this.save(examAutoEvaluation);

            }
        }
    }

    @Transactional(readOnly = false)
    public void jkjRcYear(String year) {

        List<Office> jjgPartyList = examAutoEvaluationDao.selectJjgUnit();

        Integer y = Integer.valueOf(year);
        Integer yl = y - 1;
        Map<String, String> timeMap = this.yearTime(year);
        String yearL = timeMap.get("yearL");
        String yearT = timeMap.get("yearT");

        for (int i = 0; i < jjgPartyList.size(); i++) {
            Office office = jjgPartyList.get(i);
            String idNumber = office.getId();
            String name = office.getName();
                int num1 = affairLearnDailyService.selectNumber(yearL, yearT, idNumber);
                if (num1 < 12) {
                    int nu = 12 - num1;
                    int n = 2 * nu;
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("2");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + year + "年" + "日常学习未完成");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(idNumber);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setEvaluationId(userDao.selectUserId(office.getCode()));//被考评对象id
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setRemark("");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队年度绩效考核公共扣分标准");
                    examAutoEvaluation.setModelId("653c088f3e754adcaa659a3706d304b9");
                    examAutoEvaluation.setOption("政治、业务学习制度不落实的");
                    examAutoEvaluation.setOptionId("5978e327441a4a429d7ced36e430d606");
                    examAutoEvaluation.setScore(String.valueOf(n));

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"日常学习");

                    this.save(examAutoEvaluation);

            }
        }
    }

    @Transactional(readOnly = false)
    public void ckcRc(String checkTime) {
        List<Office> nncPartyList = officeDao.getChuUnit("34", "1");
        List<Office> lzcPartyList = officeDao.getChuUnit("95", "1");
        List<Office> bhcPartyList = officeDao.getChuUnit("156", "1");

        String year = checkTime.substring(0, 4);
        String month = checkTime.substring(checkTime.length() - 2);

        Map<String, String> timeMap = this.monthTime(checkTime);
        String yearL = timeMap.get("yearL");
        String yearT = timeMap.get("yearT");

        for (int i = 0; i < nncPartyList.size(); i++) {
            Office office = nncPartyList.get(i);
            String idNumber = office.getId();
            String name = office.getName();
                int num = affairLearnDailyService.selectNum(yearL, yearT, idNumber);
                if (num < 1) {
                    int nu = 1;
                    String n = String.valueOf(nu) + ".0";

                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(name + year + "年" + month + "月" + "宣传思想-理论学习-单位政治学习-日常学习 未完成");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(idNumber);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(userDao.selectUserId(office.getCode()));//被考评对象id
                    examAutoEvaluation.setModel("2020年月度南宁处对宣教室扣分标准");
                    examAutoEvaluation.setModelId("ae2379371ce849fabddb4c9e122caecb");
                    examAutoEvaluation.setOption("不落实队伍思想政治工作以及上级部署的阶段性宣传、教育、学习等的");
                    examAutoEvaluation.setOptionId("154c4d36e78c474ab080219d4a04b520");
                    examAutoEvaluation.setScore(n);

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","日常学习");

                    this.save(examAutoEvaluation);

            }
        }
        for (int i = 0; i < lzcPartyList.size(); i++) {
            Office office = lzcPartyList.get(i);
            String idNumber = office.getId();
            String name = office.getName();
                int num = affairLearnDailyService.selectNum(yearL, yearT, idNumber);
                if (num < 1) {
                    int nu = 1;
                    String n = String.valueOf(nu) + ".0";
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(name + year + "年" + month + "月" + "，宣传思想-理论学习-单位政治学习-日常学习 未完成");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(idNumber);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(userDao.selectUserId(office.getCode()));//被考评对象id
                    examAutoEvaluation.setModel("柳州处对单位（部门）2020年月度队伍建设绩效考核评分标准");
                    examAutoEvaluation.setModelId("e2297d3f891a4ebca507d3ff34b158bc");
                    examAutoEvaluation.setOption("不落实队伍思想政治工作以及上级部署的阶段性宣传、教育、学习等的");
                    examAutoEvaluation.setOptionId("6183ad328b3b467d9a6841280cc98ec9");
                    examAutoEvaluation.setScore(n);

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","日常学习");

                    this.save(examAutoEvaluation);

            }
        }
        for (int i = 0; i < bhcPartyList.size(); i++) {
            Office office = bhcPartyList.get(i);
            String idNumber = office.getId();
            String name = office.getName();

                int num = affairLearnDailyService.selectNum(yearL, yearT, idNumber);
                if (num < 1) {
                    int nu = 1;
                    String n = String.valueOf(nu) + ".0";
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(name + year + "年" + month + "月" + "，宣传思想-理论学习-单位政治学习-日常学习 未完成");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(idNumber);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(userDao.selectUserId(office.getCode()));//被考评对象id
                    examAutoEvaluation.setModel("2020年月度北海处对机关科室扣分标准(业务部分)");
                    examAutoEvaluation.setModelId("9d566eb5263843daa3be3ae3eb562f58");
                    examAutoEvaluation.setOption("不落实队伍思想政治工作以及上级部署的阶段性宣传、教育、学习等的");
                    examAutoEvaluation.setOptionId("68b821ae97dd47ffbebd079fbfde7655");
                    examAutoEvaluation.setScore(n);

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","日常学习");
                    this.save(examAutoEvaluation);

            }
        }
    }

    @Transactional(readOnly = false)
    public void ckcRcYear(String year) {

        List<Office> nncPartyList = officeDao.getChuUnit("34", "1");
        List<Office> lzcPartyList = officeDao.getChuUnit("95", "1");
        List<Office> bhcPartyList = officeDao.getChuUnit("156", "1");

        Map<String, String> timeMap = this.yearTime(year);
        String yearL = timeMap.get("yearL");
        String yearT = timeMap.get("yearT");

        for (int i = 0; i < nncPartyList.size(); i++) {
            Office office = nncPartyList.get(i);
            String idNumber = office.getId();
            String name = office.getName();

                int num1 = affairLearnDailyService.selectNum(yearL, yearT, idNumber);
                if (num1 < 12) {
                    int nu = 12 - num1;
                    double n = 0.5 * nu;
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + year + "年" + "，宣传思想-理论学习-单位政治学习-日常学习 未完成");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(idNumber);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setEvaluationId(userDao.selectUserId(office.getCode()));//被考评对象id
                    examAutoEvaluation.setModel("2020年年度南宁处对各单位（部门）绩效考核扣分标准(队伍建设)");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setModelId("13ea683844d644cb8aa15e00fb07f825");
                    examAutoEvaluation.setOption("不落实队伍思想政治工作以及上级部署的阶段性宣传、教育、学习等的");
                    examAutoEvaluation.setOptionId("95d647f862fe471a917be5578da3cb72");
                    examAutoEvaluation.setScore(String.valueOf(n));
                    //关联自动考评标准关联表查询标准
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","日常学习");
                    this.save(examAutoEvaluation);

            }
        }
        for (int i = 0; i < lzcPartyList.size(); i++) {
            Office office = lzcPartyList.get(i);
            String idNumber = office.getId();
            String name = office.getName();
                int num1 = affairLearnDailyService.selectNum(yearL, yearT, idNumber);
                if (num1 < 12) {
                    int nu = 12 - num1;
                    double n = 0.5 * nu;
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + year + "年" + "，宣传思想-理论学习-单位政治学习-日常学习 未完成");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(idNumber);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setEvaluationId(userDao.selectUserId(office.getCode()));//被考评对象id
                    examAutoEvaluation.setModel("柳州处对单位（部门）2020年年度队伍建设绩效考核评分标准");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setModelId("da8bc710a7da4c50b32c0409f720e372");
                    examAutoEvaluation.setOption("不落实队伍思想政治工作以及上级部署的阶段性宣传、教育、学习等的");
                    examAutoEvaluation.setOptionId("74fb66153e3b44d3963ea0a8865aae73");
                    examAutoEvaluation.setScore(String.valueOf(n));
                    //关联自动考评标准关联表查询标准
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","日常学习");
                    this.save(examAutoEvaluation);

            }
        }
        for (int i = 0; i < bhcPartyList.size(); i++) {
            Office office = bhcPartyList.get(i);
            String idNumber = office.getId();
            String name = office.getName();

                int num1 = affairLearnDailyService.selectNum(yearL, yearT, idNumber);
                if (num1 < 12) {
                    int nu = 12 - num1;
                    double n = 0.5 * nu;
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + year + "年" + "，宣传思想-理论学习-单位政治学习-日常学习 未完成");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(idNumber);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setEvaluationId(userDao.selectUserId(office.getCode()));//被考评对象id
                    examAutoEvaluation.setModel("2020年年度北海处对机关科室绩效考核扣分标准(业务部分)");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setModelId("01bcee76bf194541b89220959b83b09a");
                    examAutoEvaluation.setOption("不落实队伍思想政治工作以及上级部署的阶段性宣传、教育、学习等的");
                    examAutoEvaluation.setOptionId("d088e6f568a447f1b389d27d6cd6393c");
                    examAutoEvaluation.setScore(String.valueOf(n));
                    //关联自动考评标准关联表查询标准
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","日常学习");
                    this.save(examAutoEvaluation);

            }
        }
    }
    /*宣传思想-理论学习-单位政治学习-日常学习-处考派出所*/
    @Transactional(readOnly = false)
    public void ckpcsRc(String checkTime) {
        List<Office> nncPartyList = officeDao.getChuUnit("34", "2");
        List<Office> lzcPartyList = officeDao.getChuUnit("95", "2");
        List<Office> bhcPartyList = officeDao.getChuUnit("156", "2");

        String year = checkTime.substring(0, 4);
        String month = checkTime.substring(checkTime.length() - 2);

        Map<String, String> timeMap = this.monthTime(checkTime);
        String yearL = timeMap.get("yearL");
        String yearT = timeMap.get("yearT");
        for (int n = 0; n < nncPartyList.size(); n++) {
            Office office = nncPartyList.get(n);
            String idNumber = office.getId();
            String name = office.getName();
                    int num = affairLearnDailyService.selectNum(yearL, yearT, idNumber);
                    if (num < 1) {
                        int nu = 3;
                        String num1 = String.valueOf(nu) + ".0";
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("2");
                        examAutoEvaluation.setDetails(name + year + "年" + month + "月" + "，宣传思想-理论学习-单位政治学习-日常学习 未完成");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setUnit(name);
                        examAutoEvaluation.setUnitId(idNumber);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setModelId("");
                        examAutoEvaluation.setOption("");
                        examAutoEvaluation.setEvaluationId(userDao.selectUserId(office.getCode()));//被考评对象id
                        examAutoEvaluation.setOptionId("");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setScore(num1);
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","日常学习");
                        this.save(examAutoEvaluation);


            }
        }
        for (int n = 0; n < lzcPartyList.size(); n++) {
            Office office = lzcPartyList.get(n);
            String idNumber = office.getId();
            String name = office.getName();
                Integer y = Integer.valueOf(year);
                Integer m = Integer.valueOf(month);
                int num = affairLearnDailyService.selectNum(yearL, yearT, idNumber);
                if (num < 1) {
                    int nu = 3;
                    String num1 = String.valueOf(nu) + ".0";
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setDetails(name + year + "年" + month + "月" + "，宣传思想-理论学习-单位政治学习-日常学习 未完成");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(idNumber);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("柳州处对派出所2020年月度队伍建设绩效考核扣分标准");
                    examAutoEvaluation.setModelId("f38535fc63a2418b8ed37c2e18f75ad6");
                    examAutoEvaluation.setOption("不落实队伍思想政治工作以及上级部署的阶段性宣传、教育、学习等的");
                    examAutoEvaluation.setEvaluationId(userDao.selectUserId(office.getCode()));//被考评对象id
                    examAutoEvaluation.setOptionId("11e9e3e796044006b0973d87c5577ef9");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setScore(num1);
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","日常学习");
                    this.save(examAutoEvaluation);


            }
        }
        for (int n = 0; n < bhcPartyList.size(); n++) {
            Office office = bhcPartyList.get(n);
            String idNumber = office.getId();
            String name = office.getName();
                Integer y = Integer.valueOf(year);
                Integer m = Integer.valueOf(month);
                int num = affairLearnDailyService.selectNum(yearL, yearT, idNumber);
                if (num < 1) {
                    int nu = 3;
                    String num1 = String.valueOf(nu) + ".0";
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setDetails(name + year + "年" + month + "月" + "，宣传思想-理论学习-单位政治学习-日常学习 未完成");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(idNumber);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("");
                    examAutoEvaluation.setModelId("");
                    examAutoEvaluation.setOption("");
                    examAutoEvaluation.setEvaluationId(userDao.selectUserId(office.getCode()));//被考评对象id
                    examAutoEvaluation.setOptionId("");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setScore(num1);
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","日常学习");
                    this.save(examAutoEvaluation);


            }
        }
    }

    @Transactional(readOnly = false)
    public void ckpcsRcYear(String year) {

        List<Office> nncPartyList = officeDao.getChuUnit("34", "2");
        List<Office> lzcPartyList = officeDao.getChuUnit("95", "2");
        List<Office> bhcPartyList = officeDao.getChuUnit("156", "2");

        Integer y = Integer.valueOf(year);

        Map<String, String> timeMap = this.yearTime(year);
        String yearL = timeMap.get("yearL");
        String yearT = timeMap.get("yearT");

        for (int n = 0; n < nncPartyList.size(); n++) {
            Office office = nncPartyList.get(n);
            String idNumber = office.getId();
            String name = office.getName();
            int num1 = affairLearnDailyService.selectNum(yearL, yearT, idNumber);
                if (num1 < 12) {
                    int nu = 12 - num1;
                    String num = String.valueOf(nu) + ".0";
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name+"，宣传思想-理论学习-单位政治学习-日常学习 未完成");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(idNumber);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(userDao.selectUserId(office.getCode()));//被考评对象id
                   /* examAutoEvaluation.setModel("2020年年度南宁公安处对派出所绩效考核扣分标准(队伍建设)");
                    examAutoEvaluation.setModelId("f43cb06efe6b42acb625d2cef27bad1e");
                    examAutoEvaluation.setOption("不落实队伍思想政治工作以及上级部署的阶段性宣传、教育、学习等的");
                    examAutoEvaluation.setOptionId("9874760b803045f5abeb210be1c231d2");*/
                    examAutoEvaluation.setScore(num);
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","日常学习");
                    this.save(examAutoEvaluation);
                }
        }
        for (int n = 0; n < lzcPartyList.size(); n++) {
            Office office = lzcPartyList.get(n);
            String idNumber = office.getId();
            String name = office.getName();
            int num1 = affairLearnDailyService.selectNum(yearL, yearT, idNumber);
            if (num1 < 12) {
                int nu = 12 - num1;
                String num = String.valueOf(nu) + ".0";
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("3");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setDetails(name+"，宣传思想-理论学习-单位政治学习-日常学习 未完成");
                examAutoEvaluation.setUnit(name);
                examAutoEvaluation.setUnitId(idNumber);
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setEvaluationId(userDao.selectUserId(office.getCode()));//被考评对象id
                /*examAutoEvaluation.setModel("");
                examAutoEvaluation.setModelId("");
                examAutoEvaluation.setOption("");
                examAutoEvaluation.setOptionId("");*/
                examAutoEvaluation.setScore(num);
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","日常学习");
                this.save(examAutoEvaluation);

            }
        }
        for (int n = 0; n < bhcPartyList.size(); n++) {
            Office office = bhcPartyList.get(n);
            String idNumber = office.getId();
            String name = office.getName();
            int num1 = affairLearnDailyService.selectNum(yearL, yearT, idNumber);
            if (num1 < 12) {
                int nu = 12 - num1;
                String num = String.valueOf(nu) + ".0";
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("3");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setDetails(name+"，宣传思想-理论学习-单位政治学习-日常学习 未完成");
                examAutoEvaluation.setUnit(name);
                examAutoEvaluation.setUnitId(idNumber);
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setEvaluationId(userDao.selectUserId(office.getCode()));//被考评对象id
             /*   examAutoEvaluation.setModel("");
                examAutoEvaluation.setModelId("");
                examAutoEvaluation.setOption("");
                examAutoEvaluation.setOptionId("");*/
                examAutoEvaluation.setScore(num);
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","日常学习");
                this.save(examAutoEvaluation);



            }
        }
    }

    /*
     *
     * 单位政治学习-学习平台
     *
     * 处考处
     *
     *  月度
     * */
    @Transactional(readOnly = false)
    public void ckcXxpt(String checkTime) {

        List<Office> nncPartyList = officeDao.getChuUnit("34", "1");
        List<Office> lzcPartyList = officeDao.getChuUnit("95", "1");
        List<Office> bhcPartyList = officeDao.getChuUnit("156", "1");


        String year = checkTime.substring(0, 4);
        Integer y = Integer.valueOf(year);
        String month = checkTime.substring(checkTime.length() - 2);
        Integer m = Integer.valueOf(month);


        Map<String, String> timeMap = this.monthTime(checkTime);
        String time = timeMap.get("time");

        for (int i = 0; i < nncPartyList.size(); i++) {

            Office office = nncPartyList.get(i);
            String idNumber = office.getId();

            /*List<String> evId = examAutoEvaluationDao.selectEvId(idNumber);
            for (int e = 0; e < evId.size(); e++) {
                String evI = evId.get(e);*/


            List<PersonnelBase> personnelBaseList = new ArrayList<>();
            personnelBaseList = examAutoEvaluationDao.selectAllPeopleMessage(idNumber);

            for (int p = 0; p < personnelBaseList.size(); p++){
                PersonnelBase personnelBase = personnelBaseList.get(p);
                String idNumber1 = personnelBase.getIdNumber();
                String name = personnelBase.getName();
                int score = 0;
                if (StringUtils.isNotBlank(idNumber1)){
                    int age = IdNOToAge(idNumber1);


                    if (0 <age && age < 50){
                        score = 750;
                    }else if (age > 50 || age == 50){
                        score = 625;
                    }
                }
                Integer num = affairLearnPowerService.selectPeopleNumber(time,idNumber1,score);

                /* String name = affairGeneralSituationService.selectNameById(idNumber);*/
                /*Integer num = affairLearnPowerService.selectNumber(yearL, yearT, idNumber);*/
                if (num <= 0) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(name + year + "年" + month + "月" + "，民警学习分数不达标的每次扣0.5分");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(idNumber);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("2020年月度南宁处对各单位重点工作扣分标准（直接扣大分）");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setModelId("4039253675e7495a8583ac9173345a96");
                    examAutoEvaluation.setEvaluationId(idNumber);//被考评对象id
                    examAutoEvaluation.setOption("未按照铁路公安局政治部《关于积极运用“学习强国”学习平台推进铁路公安机关理论学习常态化制度化的通知》（铁公传〔2019〕62号）的要求，落实好相关工作。被公安局检查出来的");
                    examAutoEvaluation.setOptionId("2331a386ccb1474798bc2320b3c1db27");
                    examAutoEvaluation.setScore("0.2");

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","学习平台");
                    this.save(examAutoEvaluation);
                }
            }
        }
        for (int i = 0; i < lzcPartyList.size(); i++) {

            Office office = lzcPartyList.get(i);
            String idNumber = office.getId();

            List<PersonnelBase> personnelBaseList = new ArrayList<>();
            personnelBaseList = examAutoEvaluationDao.selectAllPeopleMessage(idNumber);

            for (int p = 0; p < personnelBaseList.size(); p++){
                PersonnelBase personnelBase = personnelBaseList.get(p);
                String idNumber1 = personnelBase.getIdNumber();
                String name = personnelBase.getName();

                int score = 0;
                if (StringUtils.isNotBlank(idNumber1)){
                    int age = IdNOToAge(idNumber1);


                    if (0 <age && age < 50){
                        score = 750;
                    }else if (age > 50 || age == 50){
                        score = 625;
                    }
                }

                Integer num = affairLearnPowerService.selectPeopleNumber(time,idNumber1,score);

                if (num > 0) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(name + year + "年" + month + "月" + "，民警学习分数不达标的每次扣0.5分");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(idNumber);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("柳州处对单位（部门）2020年月度重点工作绩效考核评分标准（反恐、信息化、党建）");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setModelId("24e18007a8b942b7947f581b7cb9370e");
                    examAutoEvaluation.setEvaluationId(idNumber);//被考评对象id
                    examAutoEvaluation.setOption("未按照铁路公安局政治部《关于积极运用“学习强国”学习平台推进铁路公安机关理论学习常态化制度化的通知》（铁公传〔2019〕62号）的要求，落实好相关工作，被检查出来的");
                    examAutoEvaluation.setOptionId("7042c9c3fcdf4f3cb2b48a3e2bf1b993");
                    examAutoEvaluation.setScore("0.2");

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","学习平台");
                    this.save(examAutoEvaluation);
                }
            }
        }
        for (int i = 0; i < bhcPartyList.size(); i++) {

            Office office = bhcPartyList.get(i);
            String idNumber = office.getId();

            /*List<String> evId = examAutoEvaluationDao.selectEvId(idNumber);
            for (int e = 0; e < evId.size(); e++) {
                String evI = evId.get(e);*/


            List<PersonnelBase> personnelBaseList = new ArrayList<>();
            personnelBaseList = examAutoEvaluationDao.selectAllPeopleMessage(idNumber);

            for (int p = 0; p < personnelBaseList.size(); p++){
                PersonnelBase personnelBase = personnelBaseList.get(p);
                String idNumber1 = personnelBase.getIdNumber();
                String name = personnelBase.getName();
                int score = 0;
                if (StringUtils.isNotBlank(idNumber1)){
                    int age = IdNOToAge(idNumber1);


                    if (0 <age && age < 50){
                        score = 750;
                    }else if (age > 50 || age == 50){
                        score = 625;
                    }
                }

                Integer num = affairLearnPowerService.selectPeopleNumber(time,idNumber1,score);

                /* String name = affairGeneralSituationService.selectNameById(idNumber);*/
                /*Integer num = affairLearnPowerService.selectNumber(yearL, yearT, idNumber);*/
                if (num > 0) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(name + year + "年" + month + "月" + "，民警学习分数不达标的每次扣0.5分");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(idNumber);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队重点工作扣分标准（直接扣大分）");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setModelId("6f09b86236ed4745a89e97db3f2869aa");
                    examAutoEvaluation.setEvaluationId(idNumber);//被考评对象id
                    examAutoEvaluation.setOption("未按照铁路公安局政治部《关于积极运用“学习强国”学习平台推进铁路公安机关理论学习常态化制度化的通知》（铁公传〔2019〕62号）的要求，落实好相关工作。被公安局检查出来的");
                    examAutoEvaluation.setOptionId("986bd084406b4ed1acbb178f02a68747");
                    examAutoEvaluation.setScore("0.2");

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","学习平台");
                    this.save(examAutoEvaluation);
                }
            }
        }
    }

    /*
     * 单位政治学习-学习平台
     *
     * 处考处
     *
     * 年度
     * */
    @Transactional(readOnly = false)
    public void ckcXxptYear(String year) {
        List<Office> nncPartyList = officeDao.getChuUnit("34", "1");
        List<Office> lzcPartyList = officeDao.getChuUnit("95", "1");
        List<Office> bhcPartyList = officeDao.getChuUnit("156", "1");
        Map<String, String> timeMap = this.yearTime(year);
        String time = timeMap.get("time");
        for (int i = 0; i < nncPartyList.size(); i++) {

            Office office = nncPartyList.get(i);
            String idNumber = office.getId();

            List<PersonnelBase> personnelBaseList = new ArrayList<>();
            personnelBaseList = examAutoEvaluationDao.selectAllPeopleMessage(idNumber);

            for (int p = 0; p < personnelBaseList.size(); p++){
                PersonnelBase personnelBase = personnelBaseList.get(p);
                String idNumber1 = personnelBase.getIdNumber();
                String name = personnelBase.getName();
                int score = 0;
                if (StringUtils.isNotBlank(idNumber1)){
                    int age = IdNOToAge(idNumber1);


                    if (0 <age && age < 50){
                        score = 7500;
                    }else if (age > 50 || age == 50){
                        score = 9000;
                    }
                }

                Integer num = affairLearnPowerService.selectPeoNumberYear(time,idNumber1,score);

                /*Integer number = affairLearnPowerService.selectNumber(yearL, yearT, idNumber);*/
                if (num <= 0) {

                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + year + "年" + "，学习强国管理不规范，民警学习分数不达标的扣0.5分。（已有");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(idNumber);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("");
                    examAutoEvaluation.setModelId("");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setOption("");
                    examAutoEvaluation.setEvaluationId(idNumber1);//被考评对象id
                    examAutoEvaluation.setOptionId("");
                    examAutoEvaluation.setScore("0.1");

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","学习平台");
                    this.save(examAutoEvaluation);
                }
            }
        }
        for (int i = 0; i < lzcPartyList.size(); i++) {
            Office office = lzcPartyList.get(i);
            String idNumber = office.getId();


            Integer y = Integer.valueOf(year);
            Integer yl = y - 1;
            String yearL = yl + "-" + "12-02";
            String yearT = year + "-" + "12-01";
            List<PersonnelBase> personnelBaseList = new ArrayList<>();
            personnelBaseList = examAutoEvaluationDao.selectAllPeopleMessage(idNumber);

            for (int p = 0; p < personnelBaseList.size(); p++){
                PersonnelBase personnelBase = personnelBaseList.get(p);
                String idNumber1 = personnelBase.getIdNumber();
                String name = personnelBase.getName();
                int score = 0;
                if (StringUtils.isNotBlank(idNumber1)){
                    int age = IdNOToAge(idNumber1);


                    if (0 <age && age < 50){
                        score = 7500;
                    }else if (age > 50 || age == 50){
                        score = 9000;
                    }
                }

                Integer num = affairLearnPowerService.selectPeoNumberYear(time,idNumber1,score);

                /*Integer number = affairLearnPowerService.selectNumber(yearL, yearT, idNumber);*/
                if (num > 0) {

                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + year + "年" + "，学习强国管理不规范，民警学习分数不达标的扣0.5分。（已有");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(idNumber);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("柳州处对单位（部门）2020年年度重点工作绩效考核评分标准（反恐、信息化、党建））");
                    examAutoEvaluation.setModelId("c228f93dde1143d7980cfff7da9a9ba8");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setOption("未按照铁路公安局政治部《关于积极运用“学习强国”学习平台推进铁路公安机关理论学习常态化制度化的通知》（铁公传〔2019〕62号）的要求，落实好相关工作，被检查出来的");
                    examAutoEvaluation.setEvaluationId(idNumber1);//被考评对象id
                    examAutoEvaluation.setOptionId("2f5835f2e276460fb6c8bad79bbf5775");
                    examAutoEvaluation.setScore("0.1");

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","学习平台");
                    this.save(examAutoEvaluation);
                }
            }
        }
        for (int i = 0; i < bhcPartyList.size(); i++) {
            Office office = bhcPartyList.get(i);
            String idNumber = office.getId();

            List<PersonnelBase> personnelBaseList = new ArrayList<>();
            personnelBaseList = examAutoEvaluationDao.selectAllPeopleMessage(idNumber);

            for (int p = 0; p < personnelBaseList.size(); p++){
                PersonnelBase personnelBase = personnelBaseList.get(p);
                String idNumber1 = personnelBase.getIdNumber();
                String name = personnelBase.getName();
                int score = 0;
                if (StringUtils.isNotBlank(idNumber1)){
                    int age = IdNOToAge(idNumber1);

                    if (0 <age && age < 50){
                        score = 7500;
                    }else if (age > 50 || age == 50){
                        score = 9000;
                    }
                }

                Integer num = affairLearnPowerService.selectPeoNumberYear(time,idNumber1,score);

                if (num > 0) {

                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + year + "年" + "，学习强国管理不规范，民警学习分数不达标的扣0.5分。（已有");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(idNumber);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("");
                    examAutoEvaluation.setModelId("");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setOption("");
                    examAutoEvaluation.setEvaluationId(idNumber1);//被考评对象id
                    examAutoEvaluation.setOptionId("");
                    examAutoEvaluation.setScore("0.1");

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","学习平台");
                    this.save(examAutoEvaluation);


                }
            }
        }
    }

    /*
     * 单位政治学习-学习平台
     *
     * 处考派出所
     *
     *
     * */
    @Transactional(readOnly = false)
    public void ckpcsXxpt(String checkTime) {

        List<Office> nncPartyList = officeDao.getChuUnit("34", "2");
        List<Office> lzcPartyList = officeDao.getChuUnit("95", "2");
        List<Office> bhcPartyList = officeDao.getChuUnit("156", "2");
        String year = checkTime.substring(0, 4);
        Integer y = Integer.valueOf(year);
        String month = checkTime.substring(checkTime.length() - 2);
        Integer m = Integer.valueOf(month);


        Map<String, String> timeMap = this.xxqgTime(checkTime);
        String time = timeMap.get("time");

        StringBuilder nncdetails = new StringBuilder();
        Integer numSum = 0;
        StringBuilder lzcdetails = new StringBuilder();
        Integer lzcnumSum = 0;
        StringBuilder bhcdetails = new StringBuilder();
        Integer bhcnumSum = 0;
        for (int n = 0; n < nncPartyList.size(); n++) {
            Office office = nncPartyList.get(n);
            String idNumber = office.getId();
            String partyOrganization = office.getName();

            List<PersonnelBase> personnelBaseList = new ArrayList<>();
                personnelBaseList = examAutoEvaluationDao.selectAllPeopleMessage(idNumber);
                for (int p = 0; p < personnelBaseList.size(); p++ ){
                    PersonnelBase personnelBase = personnelBaseList.get(p);

                    String name1 = personnelBase.getName();
                    String idNumber1 = personnelBase.getIdNumber();
                    int score = 0;
                    if (StringUtils.isNotBlank(idNumber1)){
                        int age = IdNOToAge(idNumber1);


                        if (0 <age && age < 50){
                            score = 750;
                        }else if (age > 50 || age == 50){
                            score = 625;
                        }
                    }

                    Integer number = affairLearnPowerService.selectPeopleNumber(time,idNumber1,score);
                    if (number < 1) {
                        numSum++;
                        nncdetails = nncdetails.append(",").append(name1);

                }
            }
                if (numSum > 0){
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("3");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setDetails(nncdetails + year + "年" + month + "月" + "，民警学习分数不达标的，每次扣2分。");
                examAutoEvaluation.setUnit(partyOrganization);
                examAutoEvaluation.setUnitId(idNumber);
                examAutoEvaluation.setEvaluationId(idNumber);//被考评对象id
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("");
                examAutoEvaluation.setModelId("");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setOption("");
                examAutoEvaluation.setOptionId("");
                examAutoEvaluation.setScore("0.2");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","学习平台");
                this.save(examAutoEvaluation);
                }
        }
        for (int n = 0; n < lzcPartyList.size(); n++) {
            Office office = lzcPartyList.get(n);
            String idNumber = office.getId();
            String partyOrganization = office.getName();
            List<PersonnelBase> personnelBaseList = new ArrayList<>();
            personnelBaseList = examAutoEvaluationDao.selectAllPeopleMessage(idNumber);
            for (int p = 0; p < personnelBaseList.size(); p++ ){
                PersonnelBase personnelBase = personnelBaseList.get(p);

                String name1 = personnelBase.getName();
                String idNumber1 = personnelBase.getIdNumber();
                int score = 0;
                if (StringUtils.isNotBlank(idNumber1)){
                    int age = IdNOToAge(idNumber1);


                    if (0 <age && age < 50){
                        score = 750;
                    }else if (age > 50 || age == 50){
                        score = 625;
                    }
                }

                Integer number = affairLearnPowerService.selectPeopleNumber(time,idNumber1,score);
                if (number < 1) {
                    lzcnumSum++;
                    lzcdetails = lzcdetails.append(",").append(name1);

                }
            }
            if (lzcnumSum > 0){
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("3");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setDetails(lzcdetails + year + "年" + month + "月" + "，民警学习分数不达标的，每次扣2分。");
                examAutoEvaluation.setUnit(partyOrganization);
                examAutoEvaluation.setUnitId(idNumber);
                examAutoEvaluation.setEvaluationId(idNumber);//被考评对象id
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("");
                examAutoEvaluation.setModelId("");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setOption("");
                examAutoEvaluation.setOptionId("");
                examAutoEvaluation.setScore("0.2");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","学习平台");
                this.save(examAutoEvaluation);
            }
        }
        for (int n = 0; n < bhcPartyList.size(); n++) {
            Office office = bhcPartyList.get(n);
            String idNumber = office.getId();
            String partyOrganization = office.getName();
            List<PersonnelBase> personnelBaseList = new ArrayList<>();
            personnelBaseList = examAutoEvaluationDao.selectAllPeopleMessage(idNumber);
            for (int p = 0; p < personnelBaseList.size(); p++ ){
                PersonnelBase personnelBase = personnelBaseList.get(p);

                String name1 = personnelBase.getName();
                String idNumber1 = personnelBase.getIdNumber();
                int score = 0;
                if (StringUtils.isNotBlank(idNumber1)){
                    int age = IdNOToAge(idNumber1);


                    if (0 <age && age < 50){
                        score = 750;
                    }else if (age > 50 || age == 50){
                        score = 625;
                    }
                }

                Integer number = affairLearnPowerService.selectPeopleNumber(time,idNumber1,score);
                if (number < 1) {
                    bhcdetails = bhcdetails.append(",").append(name1);
                    bhcnumSum++;

                }
            }
            if (bhcnumSum > 0){
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("3");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setDetails(bhcdetails + year + "年" + month + "月" + "，民警学习分数不达标的，每次扣2分。");
                examAutoEvaluation.setUnit(partyOrganization);
                examAutoEvaluation.setUnitId(idNumber);
                examAutoEvaluation.setEvaluationId(idNumber);//被考评对象id
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("2020年月度北海处对派出所、刑警三大队重点工作扣分标准（直接扣大分）");
                examAutoEvaluation.setModelId("f0a9d645e2a6465f8ceb5847d1b32525");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setOption("未按照铁路公安局政治部《关于积极运用“学习强国”学习平台推进铁路公安机关理论学习常态化制度化的通知》（铁公传〔2019〕62号）的要求，落实好相关工作。被上级单位检查出来的");
                examAutoEvaluation.setOptionId("d25ce6bef1454828b9dc7d2e0a0ac6d0");
                examAutoEvaluation.setScore("0.2");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","学习平台");
                this.save(examAutoEvaluation);
            }
        }
    }

    /*
     * 单位政治学习-- 学习平台
     *
     * 处考派出所
     *
     * 年度
     * */
    @Transactional(readOnly = false)
    public void ckpcsXxptYear(String year) {

        List<Office> nncPartyList = officeDao.getChuUnit("34", "2");
        List<Office> lzcPartyList = officeDao.getChuUnit("95", "2");
        List<Office> bhcPartyList = officeDao.getChuUnit("156", "2");

        StringBuilder nncdetails = new StringBuilder();
        Integer numSum = 0;
        StringBuilder lzcdetails = new StringBuilder();
        Integer lzcnumSum = 0;
        StringBuilder bhcdetails = new StringBuilder();
        Integer bhcnumSum = 0;

        Map<String, String> timeMap = this.xxqgTimeY(year);
        String time = timeMap.get("time");

        for (int n = 0; n < nncPartyList.size(); n++) {

            Office office = nncPartyList.get(n);
            String idNumber = office.getId();
            String partyOrganization = office.getName();
            Integer y = Integer.valueOf(year);
                Integer yl = y - 1;


                /*List<String> evId = examAutoEvaluationDao.selectEvId(idNumber);
                for (int e = 0; e < evId.size(); e++) {
                    String evI = evId.get(e);*/
                List<PersonnelBase> personnelBaseList = new ArrayList<>();
                personnelBaseList = examAutoEvaluationDao.selectAllPeopleMessage(idNumber);
                for (int p = 0; p < personnelBaseList.size(); p++ ){
                    PersonnelBase personnelBase = personnelBaseList.get(p);

                    String name1 = personnelBase.getName();
                    String idNumber1 = personnelBase.getIdNumber();
                    int score = 0;
                    if (StringUtils.isNotBlank(idNumber1)){
                        int age = IdNOToAge(idNumber1);

                        if (0 <age && age < 50){
                            score = 7500;
                        }else if (age > 50 || age == 50){
                            score = 9000;
                        }
                    }

                    Integer num = affairLearnPowerService.selectPeoNumberYear(time,idNumber1,score);
                    if (num <= 0) {
                        numSum++;
                        nncdetails.append(",").append(name1);
                }
            }
                if (numSum > 0){
                    ExamAutoEvaluation examAutoEvaluation1 = new ExamAutoEvaluation();
                    examAutoEvaluation1.setType("1");
                    examAutoEvaluation1.setEvalType("3");
                    examAutoEvaluation1.setPeriod("2");
                    examAutoEvaluation1.setYear(year);
                    examAutoEvaluation1.setDetails(nncdetails + year + "年" + "，学习强国管理不规范，民警学习分数不达标的扣1分。");
                    examAutoEvaluation1.setUnit(partyOrganization);
                    examAutoEvaluation1.setUnitId(idNumber);
                    examAutoEvaluation1.setAssess("");
                    examAutoEvaluation1.setAssessId("");
                    examAutoEvaluation1.setEvaluationId(idNumber);//被考评对象id
                    examAutoEvaluation1.setModel("2020年年度北海处对派出所重点工作考核扣分标准（直接扣大分）");
                    examAutoEvaluation1.setModelId("ae2adcfc3ba745bc95ea925e00a0a119");
                    examAutoEvaluation1.setOption("未按照铁路公安局政治部《关于积极运用“学习强国”学习平台推进铁路公安机关理论学习常态化制度化的通知》（铁公传〔2019〕62号）的要求，落实好相关工作的");
                    examAutoEvaluation1.setFromSys("智慧政工");
                    examAutoEvaluation1.setOptionId("f5f2f474bafc4629a7cd0d4d96d907ea");
                    examAutoEvaluation1.setScore("0.1");

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation1,"34","学习平台");
                    this.save(examAutoEvaluation1);
                }
        }
        for (int n = 0; n < lzcPartyList.size(); n++) {

            Office office = lzcPartyList.get(n);
            String idNumber = office.getId();
            String partyOrganization = office.getName();
            Integer y = Integer.valueOf(year);
            Integer yl = y - 1;

                /*List<String> evId = examAutoEvaluationDao.selectEvId(idNumber);
                for (int e = 0; e < evId.size(); e++) {
                    String evI = evId.get(e);*/
            List<PersonnelBase> personnelBaseList = new ArrayList<>();
            personnelBaseList = examAutoEvaluationDao.selectAllPeopleMessage(idNumber);
            for (int p = 0; p < personnelBaseList.size(); p++ ){
                PersonnelBase personnelBase = personnelBaseList.get(p);

                String name1 = personnelBase.getName();
                String idNumber1 = personnelBase.getIdNumber();
                int age = IdNOToAge(idNumber1);


                int score = 0;
                if (StringUtils.isNotBlank(idNumber1)){

                    if (0 <age && age < 50){
                        score = 7500;
                    }else if (age > 50 || age == 50){
                        score = 9000;
                    }
                }

                Integer num = affairLearnPowerService.selectPeoNumberYear(time,idNumber1,score);
                if (num > 0) {
                    lzcnumSum++;
                    lzcdetails.append(",").append(name1);
                }
            }
            if (lzcnumSum > 0){
                ExamAutoEvaluation examAutoEvaluation1 = new ExamAutoEvaluation();
                examAutoEvaluation1.setType("1");
                examAutoEvaluation1.setEvalType("3");
                examAutoEvaluation1.setPeriod("2");
                examAutoEvaluation1.setYear(year);
                examAutoEvaluation1.setDetails(lzcdetails + year + "年" + "，学习强国管理不规范，民警学习分数不达标的扣1分。");
                examAutoEvaluation1.setUnit(partyOrganization);
                examAutoEvaluation1.setUnitId(idNumber);
                examAutoEvaluation1.setAssess("");
                examAutoEvaluation1.setAssessId("");
                examAutoEvaluation1.setEvaluationId(idNumber);//被考评对象id
                examAutoEvaluation1.setModel("柳州处对派出所2020年年度重点工作绩效考核扣分标准（反恐、信息化、党建）");
                examAutoEvaluation1.setModelId("97a2266f262443afa51a378ba259372a");
                examAutoEvaluation1.setOption("未按照铁路公安局政治部《关于积极运用“学习强国”学习平台推进铁路公安机关理论学习常态化制度化的通知》（铁公传〔2019〕62号）的要求，落实好相关工作，被检查出来的");
                examAutoEvaluation1.setFromSys("智慧政工");
                examAutoEvaluation1.setOptionId("031ee47bcfb44938a6255b688292ef4a");
                examAutoEvaluation1.setScore("0.1");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation1,"95","学习平台");
                this.save(examAutoEvaluation1);
            }
        }
        for (int n = 0; n < bhcPartyList.size(); n++) {

            Office office = bhcPartyList.get(n);
            String idNumber = office.getId();
            String partyOrganization = office.getName();
            Integer y = Integer.valueOf(year);
            Integer yl = y - 1;

                /*List<String> evId = examAutoEvaluationDao.selectEvId(idNumber);
                for (int e = 0; e < evId.size(); e++) {
                    String evI = evId.get(e);*/
            List<PersonnelBase> personnelBaseList = new ArrayList<>();
            personnelBaseList = examAutoEvaluationDao.selectAllPeopleMessage(idNumber);
            for (int p = 0; p < personnelBaseList.size(); p++ ){
                PersonnelBase personnelBase = personnelBaseList.get(p);

                String name1 = personnelBase.getName();
                String idNumber1 = personnelBase.getIdNumber();

                int score = 0;

                if (StringUtils.isNotBlank(idNumber1)){
                    int age = IdNOToAge(idNumber1);


                    if (0 <age && age < 50){
                        score = 7500;
                    }else if (age > 50 || age == 50){
                        score = 9000;
                    }
                }

                Integer num = affairLearnPowerService.selectPeoNumberYear(time,idNumber1,score);
                if (num > 1) {
                    bhcnumSum++;
                    bhcdetails.append(",").append(name1);
                }
            }
            if (bhcnumSum > 0){
                ExamAutoEvaluation examAutoEvaluation1 = new ExamAutoEvaluation();
                examAutoEvaluation1.setType("1");
                examAutoEvaluation1.setEvalType("3");
                examAutoEvaluation1.setPeriod("2");
                examAutoEvaluation1.setYear(year);
                examAutoEvaluation1.setDetails(bhcdetails + year + "年" + "，学习强国管理不规范，民警学习分数不达标的扣1分。");
                examAutoEvaluation1.setUnit(partyOrganization);
                examAutoEvaluation1.setUnitId(idNumber);
                examAutoEvaluation1.setAssess("");
                examAutoEvaluation1.setAssessId("");
                examAutoEvaluation1.setEvaluationId(idNumber);//被考评对象id
                examAutoEvaluation1.setModel("2020年年度北海处对派出所重点工作考核扣分标准（直接扣大分）");
                examAutoEvaluation1.setModelId("ae2adcfc3ba745bc95ea925e00a0a119");
                examAutoEvaluation1.setOption("未按照铁路公安局政治部《关于积极运用“学习强国”学习平台推进铁路公安机关理论学习常态化制度化的通知》（铁公传〔2019〕62号）的要求，落实好相关工作的");
                examAutoEvaluation1.setFromSys("智慧政工");
                examAutoEvaluation1.setOptionId("f5f2f474bafc4629a7cd0d4d96d907ea");
                examAutoEvaluation1.setScore("0.1");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation1,"156","学习平台");
                this.save(examAutoEvaluation1);
            }
        }
    }

    /*
     * 单位政治学习-- 学习平台
     *
     * 公安处领导班子考核
     *
     * 月度
     * */
    @Transactional(readOnly = false)
    public void gacXxpt(String checkTime) {


        String chuRoleId = "230e916609a349e68f7186f784e11419";

        ExamWorkflowDefine define = new ExamWorkflowDefine();
        define.setName(chuRoleId);
        List<User> chuList = examWorkflowSegmentsDefineService.queryPoliceDatas(define);

        String year = checkTime.substring(0, 4);

        String month = checkTime.substring(checkTime.length() - 2);


        Map<String, String> timeMap = this.xxqgTime(checkTime);
        String time = timeMap.get("time");

        for (int i = 0; i < chuList.size(); i++) {

            User user = chuList.get(i);
            String idNumber = user.getNo();
            String name = userDao.selectName(idNumber);

            Integer y = Integer.valueOf(year);
             Integer m = Integer.valueOf(month);



            int score = 0;
            if (StringUtils.isNotBlank(idNumber)){
                int age = IdNOToAge(idNumber);


                if (0 <age && age < 50){
                    score = 750;
                }else if (age > 50 || age == 50){
                    score = 625;
                }
            }

            Integer num = affairLearnPowerService.selectPeopleNumber(time,idNumber,score);
            if (num <= 0) {
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("2");
                examAutoEvaluation.setEvalType("5");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setDetails(name + year + "年" + month + "月" + "在“学习强国”学习平台中对学习制度不落实、学习分数不达标的，扣2分。");
                examAutoEvaluation.setName(name);
                examAutoEvaluation.setIdNumber(idNumber);
                examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("2020年月度对公安处领导班子成员绩效考核公共扣分标准");
                examAutoEvaluation.setModelId("93f0ce15f62b4c479e5681a93ccb248b");
                examAutoEvaluation.setOption("在“学习强国”学习平台中对学习制度不落实、学习分数不达标的");
                examAutoEvaluation.setOptionId("907df24d059640a5bf0d7bfc964ab066");

                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setScore("2");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"学习平台");
                this.save(examAutoEvaluation);

            }
        }
    }

    /*
     * 单位政治学习--学习平台
     *
     * 公安处领导班子考核
     *
     * 年度
     * */
    @Transactional(readOnly = false)
    public void gacXxptYear(String year) {

        String chuRoleId = "230e916609a349e68f7186f784e11419";

        ExamWorkflowDefine define = new ExamWorkflowDefine();
        define.setName(chuRoleId);
        List<User> chuList = examWorkflowSegmentsDefineService.queryPoliceDatas(define);


        Map<String, String> timeMap = this.xxqgTimeY(year);
        String time = timeMap.get("time");

        for (int i = 0; i < chuList.size(); i++) {

            User user = chuList.get(i);
            String idNumber = user.getNo();
            String name = userDao.selectName(idNumber);

            Integer y = Integer.valueOf(year);
            Integer yl = y - 1;
            int score = 0;
            if (StringUtils.isNotBlank(idNumber)){
                int age = IdNOToAge(idNumber);

                if (0 <age && age < 50){
                    score = 7500;
                }else if (age > 50 || age == 50){
                    score = 9000;
                }
            }

            int number = affairLearnPowerService.selectPeoNumberYear(time, idNumber,score);
            if (number <= 0) {
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("2");
                examAutoEvaluation.setEvalType("5");
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setDetails(name + year + "年" + "在“学习强国”学习平台中对学习制度不落实、学习分数不达标的，扣2分。");
                examAutoEvaluation.setName(name);
                examAutoEvaluation.setIdNumber(idNumber);
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("2020年年度对公安处领导班子成员绩效考核公共扣分标准");
                examAutoEvaluation.setModelId("39175e4e4f3a4c498313176dab9f5e10");
                examAutoEvaluation.setOption("在“学习强国”学习平台中对学习制度不落实、学习分数不达标的");
                examAutoEvaluation.setOptionId("f67f7458ffc749398c68dc52680c61d2");
                examAutoEvaluation.setScore(String.valueOf(number));

                examAutoEvaluation.setFromSys("智慧政工");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"学习平台");
                this.save(examAutoEvaluation);
            }
        }
    }

    /*
     * 单位政治学习-- 学习平台
     *
     * 中基层领导班子考核
     *
     * 月度
     * */
    @Transactional(readOnly = false)
    public void zjcXxpt(String checkTime) {

                //所有的中基层领导班子身份证
        String juJiGuanRoleId = "13bac520ae4d4160b595384691b443fd";
        String chuJiGuanRoleId = "62cf6aaea0184d3b8cfbce1700ad0e38";
        String suoduiJiGuanRoleId = "ff24c3288860447d867d08d462a2a2b9";

        String[] zhongJiCeng = new String[3];
        zhongJiCeng[0] = chuJiGuanRoleId;
        zhongJiCeng[1] = juJiGuanRoleId;
        zhongJiCeng[2] = suoduiJiGuanRoleId;
        String companyId = "156";
        List<User> temzhongJiCengList = new ArrayList<>();
        /*Arrays.stream(zhongJiCeng).forEach(s -> {
            ExamWorkflowDefine zhongDefine = new ExamWorkflowDefine();
            zhongDefine.setName(s);
            if (companyId.equals("1")) {
                zhongDefine.getSqlMap().put("dsf", "and u.company_id = '" + companyId + "' and u.office_id not in ('34','95','156')");
            } else {
                zhongDefine.getSqlMap().put("dsf", "and u.company_id = '" + companyId + "'");
            }
            zjcList.addAll(examWorkflowSegmentsDefineService.queryPoliceDatas(zhongDefine));
        });*/

        Arrays.stream(zhongJiCeng).forEach(s -> {
            ExamWorkflowDefine zhongDefine = new ExamWorkflowDefine();
            zhongDefine.setName(s);
            temzhongJiCengList.addAll(examWorkflowSegmentsDefineService.queryPoliceDatas(zhongDefine));
        });
        String year = checkTime.substring(0, 4);

        String month = checkTime.substring(checkTime.length() - 2);
        for (int i = 0; i < temzhongJiCengList.size(); i++) {
            User user = temzhongJiCengList.get(i);
            String idNumber = user.getNo();
            String name = user.getName();

            Integer y = Integer.valueOf(year);
            Integer m = Integer.valueOf(month);
            Integer lastMonth = m - 1;
            Integer lastYear = y - 1;

            Map<String, String> timeMap = this.xxqgTime(checkTime);
            String time = timeMap.get("time");

            int score = 0;
            if (StringUtils.isNotBlank(idNumber)){
                int age = IdNOToAge(idNumber);


                if (0 <age && age < 50){
                    score = 750;
                }else if (age > 50 || age == 50){
                    score = 625;
                }
            }

            //中基层领导单位下属民警学习强国情况
            Integer mjNumber = affairLearnPowerService.selectMjNumber(time,user.getOffice().getId(),score);

            Integer number = affairLearnPowerService.selectPeopleNumber(time, idNumber,score);
            if (number <= 0) {
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("2");
                examAutoEvaluation.setEvalType("6");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setDetails(name + year + "年" + month + "月" + "本单位干部民警在“学习强国”学习平台中对学习制度不落实、学习分数不达标的（分管领导为支部书记，其他领导为支委成员），扣本人2分（支部内有人不达标扣支部书记1分，其他支委成员0.5分），");
                examAutoEvaluation.setName(name);
                examAutoEvaluation.setIdNumber(idNumber);
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));
                examAutoEvaluation.setModel("2020年月度对全局中层和基层领导干部考核公共扣分标准(公安处领导班子成员除外)");
                examAutoEvaluation.setModelId("c5ccef3270be43f598a1eb794bc45919");
                examAutoEvaluation.setOption("本单位干部民警在“学习强国”学习平台中对学习制度不落实、学习分数不达标的（分管领导为支部书记，其他领导为支委成员）");
                examAutoEvaluation.setOptionId("20881b22b69e4786a0ca781db45de9c0");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"学习平台");
                if (mjNumber > 0){
                    examAutoEvaluation.setScore("2.5");
                }else {
                    examAutoEvaluation.setScore("2");
                }
                this.save(examAutoEvaluation);
            }
        }
    }


    /*
     * 单位政治学习-- 学习平台
     *
     * 中基层领导班子考核
     *
     * 年度
     * */
    @Transactional(readOnly = false)
    public void zjcXxptYear(String year) {

        Map<String, String> timeMap = this.xxqgTimeY(year);
        String time = timeMap.get("time");

        //所有的中基层领导班子身份证
        String juJiGuanRoleId = "13bac520ae4d4160b595384691b443fd";
        String chuJiGuanRoleId = "62cf6aaea0184d3b8cfbce1700ad0e38";
        String suoduiJiGuanRoleId = "ff24c3288860447d867d08d462a2a2b9";

        String[] zhongJiCeng = new String[3];
        zhongJiCeng[0] = chuJiGuanRoleId;
        zhongJiCeng[1] = juJiGuanRoleId;
        zhongJiCeng[2] = suoduiJiGuanRoleId;
        String companyId = "156";
        List<User> zjcList = new ArrayList<>();
        /*Arrays.stream(zhongJiCeng).forEach(s -> {
            ExamWorkflowDefine zhongDefine = new ExamWorkflowDefine();
            zhongDefine.setName(s);
            if (companyId.equals("1")) {
                zhongDefine.getSqlMap().put("dsf", "and u.company_id = '" + companyId + "' and u.office_id not in ('34','95','156')");
            } else {
                zhongDefine.getSqlMap().put("dsf", "and u.company_id = '" + companyId + "'");
            }
            zjcList.addAll(examWorkflowSegmentsDefineService.queryPoliceDatas(zhongDefine));
        });*/
        Arrays.stream(zhongJiCeng).forEach(s -> {
            ExamWorkflowDefine zhongDefine = new ExamWorkflowDefine();
            zhongDefine.setName(s);
            zjcList.addAll(examWorkflowSegmentsDefineService.queryPoliceDatas(zhongDefine));
        });
        for (int i = 0; i < zjcList.size(); i++) {
            User user = zjcList.get(i);
            String idNumber = user.getNo();
            String name = user.getName();

            int score = 0;
            if (StringUtils.isNotBlank(idNumber)){
                int age = IdNOToAge(idNumber);

                if (0 <age && age < 50){
                    score = 7500;
                }else if (age > 50 || age == 50){
                    score = 9000;
                }
            }
            //中基层领导单位下属民警学习强国情况
            Integer mjNumber = affairLearnPowerService.selectMjNumber(time,user.getOffice().getId(),score);

            Integer num = affairLearnPowerService.selectPeoNumberYear(time, idNumber,score);
            if (num <= 0) {
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("2");
                examAutoEvaluation.setEvalType("6");
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setDetails(name + year + "年" + "本单位干部民警在“学习强国”学习平台中对学习制度不落实、学习分数不达标的（分管领导为支部书记，其他领导为支委成员），扣本人2分（支部内有人不达标扣支部书记1分，其他支委成员0.5分），");
                examAutoEvaluation.setName(name);
                examAutoEvaluation.setIdNumber(idNumber);
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));
                examAutoEvaluation.setModel("2020年年度全局中层和基层领导干部考核公共扣分标准(公安处领导班子成员除外)");

                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setModelId("c00cebbbc62c48d888316206d38e02c7");
                examAutoEvaluation.setOption("本单位干部民警在“学习强国”学习平台中对学习制度不落实、学习分数不达标的（分管领导为支部书记，其他领导为支委成员）");
                examAutoEvaluation.setOptionId("f6bd5e3b8b844c459db1fae6223846ce");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"学习平台");
                if (mjNumber <= 0){
                    examAutoEvaluation.setScore("2.5");
                }
                examAutoEvaluation.setScore("2");

                this.save(examAutoEvaluation);
            }
        }
    }


    /*
     * 单位政治学习-- 学习平台
     *
     * 民警考核（局处）
     *
     * 月度
     * */
    @Transactional(readOnly = false)
    public void mjXxpt(String checkTime) {

        //所有的民警身份证
        String policeRoleId = "2a7ea380b14f4870b6c44be21d2443c3";

        StringBuffer policeIds = new StringBuffer();
        StringBuffer policePersonNames = new StringBuffer();
        ExamWorkflowDefine policeDefine = new ExamWorkflowDefine();
        policeDefine.setName(policeRoleId);
        /*String companyId = "156";
        if (companyId.equals("1")) {
            policeDefine.getSqlMap().put("dsf", "and u.company_id = '" + companyId + "' and u.office_id not in ('34','95','156')");
        } else {
            policeDefine.getSqlMap().put("dsf", "and u.company_id = '" + companyId + "'");
        }*/
        List<User> userList = examWorkflowSegmentsDefineService.queryPoliceDatas(policeDefine);

        String year = checkTime.substring(0, 4);
        String month = checkTime.substring(checkTime.length() - 2);


        Map<String, String> timeMap = this.xxqgTime(checkTime);
        String time = timeMap.get("time");

        for (int i = 0; i < userList.size(); i++) {

            User user = userList.get(i);
            String idNumber = user.getNo();
            String name = user.getName();

            int score = 0;
            if (StringUtils.isNotBlank(idNumber)){
                int age = IdNOToAge(idNumber);

                if (0 <age && age < 50){
                    score = 750;
                }else if (age > 50 || age == 50){
                    score = 625;
                }
            }

            Integer number = affairLearnPowerService.selectPeopleNumber(time, idNumber,score);
            if (number <= 0) {
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("2");
                examAutoEvaluation.setEvalType("7");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setDetails(name + year + "年" + month + "月" + "公共扣分：在“学习强国”学习平台中对学习制度不落实、学习分数不达标的，每次扣2分");

                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setName(name);
                examAutoEvaluation.setIdNumber(idNumber);
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("2020年月度南宁铁路公安局民警绩效考核公共扣分标准");
                examAutoEvaluation.setModelId("0c4b8784733d4aff83c94394ab1064dc");
                examAutoEvaluation.setOption("在“学习强国”学习平台中对学习制度不落实、学习分数不达标的");
                examAutoEvaluation.setOptionId("04c6f9983df54e50b357d14e4f1b52ae");
                examAutoEvaluation.setScore("2");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"学习平台");
                this.save(examAutoEvaluation);
            }
        }
    }

    /*
     * 单位政治学习-- 学习平台
     *
     *民警考核（局处）
     *
     * 年度
     * */
    @Transactional(readOnly = false)
    public void njXxptYear(String year) {
        //所有的民警身份证
        String policeRoleId = "2a7ea380b14f4870b6c44be21d2443c3";

        StringBuffer policeIds = new StringBuffer();
        StringBuffer policePersonNames = new StringBuffer();
        ExamWorkflowDefine policeDefine = new ExamWorkflowDefine();
        policeDefine.setName(policeRoleId);
        /*String companyId = "156";
        if (companyId.equals("1")) {
            policeDefine.getSqlMap().put("dsf", "and u.company_id = '" + companyId + "' and u.office_id not in ('34','95','156')");
        } else {
            policeDefine.getSqlMap().put("dsf", "and u.company_id = '" + companyId + "'");
        }*/
        List<User> idNumberList = examWorkflowSegmentsDefineService.queryPoliceDatas(policeDefine);


        Map<String, String> timeMap = this.xxqgTimeY(year);
        String time = timeMap.get("time");

        for (int i = 0; i < idNumberList.size(); i++) {

            User user = idNumberList.get(i);
            String idNumber = user.getNo();
            String name = user.getName();

            int score = 0;
            if (StringUtils.isNotBlank(idNumber)){
                int age = IdNOToAge(idNumber);

                if (0 <age && age < 50){
                    score = 7500;
                }else if (age > 50 || age == 50){
                    score = 9000;
                }
            }


            Integer number1 = affairLearnPowerService.selectPeoNumberYear(time, idNumber,score);
            if (number1 <= 0) {

                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("2");
                examAutoEvaluation.setEvalType("7");
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setDetails(name + year + "年" + "公共扣分：在“学习强国”学习平台中对学习制度不落实、学习分数不达标的，每次扣2分");
                examAutoEvaluation.setName(name);
                examAutoEvaluation.setIdNumber(idNumber);
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));
                examAutoEvaluation.setAssessId("");

                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setModel("2020年年度南宁铁路公安局民警绩效考评公共扣分标准");
                examAutoEvaluation.setModelId("a4acf3d881c6489d9a112fead04d8504");
                examAutoEvaluation.setOption("在“学习强国”学习平台中对学习制度不落实、学习分数不达标的");
                examAutoEvaluation.setOptionId("9a0e9a252b2e43f89492b567f88d8872");
                examAutoEvaluation.setScore("2");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"学习平台");
                this.save(examAutoEvaluation);

            }
        }
    }



    @Transactional(readOnly = false)
    public void ckcTx(String checkTime) {


        String unitName = "南宁公安处办公室党支部";
        String unitName1 = "南宁公安处装财室党支部";
        String unitName2 = "南宁公安处组干室党支部";
        String unitName3 = "南宁公安处宣教室党支部";
        String unitName4 = "南宁公安处人训、监察、工团联合党支部";
        String unitName5 = "南宁公安处离退室党支部";
        String unitName6 = "柳州公安处办公室党支部";
        String unitName7 = "柳州公安处装备财务室党支部";
        String unitName8 = "柳州公安处组干室党支部";
        String unitName9 = "柳州公安处人训室、宣教室、纪检监察室、工会、团委联合党支部";
        String unitName10 = "柳州公安处离退休党支部";
        String unitName11 = "北海公安处政治处、纪检监察室联合党支部";
        String unitName12 = "北海公安处信息指挥中心、装备财务室联合党支部";

        String id = affairGeneralSituationService.selectUnitId(unitName);
        String id1 = affairGeneralSituationService.selectUnitId(unitName1);
        String id2 = affairGeneralSituationService.selectUnitId(unitName2);
        String id3 = affairGeneralSituationService.selectUnitId(unitName3);
        String id4 = affairGeneralSituationService.selectUnitId(unitName4);
        String id5 = affairGeneralSituationService.selectUnitId(unitName5);
        String id6 = affairGeneralSituationService.selectUnitId(unitName6);
        String id7 = affairGeneralSituationService.selectUnitId(unitName7);
        String id8 = affairGeneralSituationService.selectUnitId(unitName8);
        String id9 = affairGeneralSituationService.selectUnitId(unitName9);
        String id10 = affairGeneralSituationService.selectUnitId(unitName10);
        String id11 = affairGeneralSituationService.selectUnitId(unitName11);
        String id12 = affairGeneralSituationService.selectUnitId(unitName12);


        //所有处单位id
        List<String> idList = new ArrayList<>();

        idList.add(id);
        idList.add(id1);
        idList.add(id2);
        idList.add(id3);
        idList.add(id4);
        idList.add(id5);
        idList.add(id6);
        idList.add(id7);
        idList.add(id8);
        idList.add(id9);
        idList.add(id10);
        idList.add(id11);
        idList.add(id12);

        String year = checkTime.substring(0, 4);
        String month = checkTime.substring(checkTime.length() - 2);

        for (int i = 0; i < idList.size(); i++) {
            String idNumber = idList.get(i);
            String name = affairGeneralSituationService.selectNameById(idNumber);
            List<String> evId = examAutoEvaluationDao.selectEvId(idNumber);
            for (int e = 0; e < evId.size(); e++) {
                String evI = evId.get(e);
                String time = year + "-" + month;
                int number = affairTalkHeartService.selectNumber(time, idNumber);
                if (number < 1) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(name + year + "年" + month + "月" + "，不落实队伍思想政治工作以及上级部署的阶段性宣传、教育、学习等的每少1次扣1分。");
                    examAutoEvaluation.setUnit(name);

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setUnitId(idNumber);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setEvaluationId(evI);//被考评对象id
                    examAutoEvaluation.setModel("");
                    examAutoEvaluation.setModelId("");
                    examAutoEvaluation.setOption("");
                    examAutoEvaluation.setOptionId("");
                    examAutoEvaluation.setScore("1");

                    this.save(examAutoEvaluation);
                }
            }
        }
    }

    @Transactional(readOnly = false)
    public void ckcTxYear(String year) {

        String unitName = "南宁公安处办公室党支部";
        String unitName1 = "南宁公安处装财室党支部";
        String unitName2 = "南宁公安处组干室党支部";
        String unitName3 = "南宁公安处宣教室党支部";
        String unitName4 = "南宁公安处人训、监察、工团联合党支部";
        String unitName5 = "南宁公安处离退室党支部";
        String unitName6 = "柳州公安处办公室党支部";
        String unitName7 = "柳州公安处装备财务室党支部";
        String unitName8 = "柳州公安处组干室党支部";
        String unitName9 = "柳州公安处人训室、宣教室、纪检监察室、工会、团委联合党支部";
        String unitName10 = "柳州公安处离退休党支部";
        String unitName11 = "北海公安处政治处、纪检监察室联合党支部";
        String unitName12 = "北海公安处信息指挥中心、装备财务室联合党支部";

        String id = affairGeneralSituationService.selectUnitId(unitName);
        String id1 = affairGeneralSituationService.selectUnitId(unitName1);
        String id2 = affairGeneralSituationService.selectUnitId(unitName2);
        String id3 = affairGeneralSituationService.selectUnitId(unitName3);
        String id4 = affairGeneralSituationService.selectUnitId(unitName4);
        String id5 = affairGeneralSituationService.selectUnitId(unitName5);
        String id6 = affairGeneralSituationService.selectUnitId(unitName6);
        String id7 = affairGeneralSituationService.selectUnitId(unitName7);
        String id8 = affairGeneralSituationService.selectUnitId(unitName8);
        String id9 = affairGeneralSituationService.selectUnitId(unitName9);
        String id10 = affairGeneralSituationService.selectUnitId(unitName10);
        String id11 = affairGeneralSituationService.selectUnitId(unitName11);
        String id12 = affairGeneralSituationService.selectUnitId(unitName12);


        //所有处单位id
        List<String> idList = new ArrayList<>();

        idList.add(id);
        idList.add(id1);
        idList.add(id2);
        idList.add(id3);
        idList.add(id4);
        idList.add(id5);
        idList.add(id6);
        idList.add(id7);
        idList.add(id8);
        idList.add(id9);
        idList.add(id10);
        idList.add(id11);
        idList.add(id12);

        for (int i = 0; i < idList.size(); i++) {
            String idNumber = idList.get(i);
            String name = affairGeneralSituationService.selectNameById(idNumber);
            Integer number1 = affairTalkHeartService.selectNumber(year, idNumber);
            List<String> evId = examAutoEvaluationDao.selectEvId(idNumber);
            for (int e = 0; e < evId.size(); e++) {
                String evI = evId.get(e);
                if (number1 < 12) {
                    int num = 12 - number1;
                    double nu = 0.5 * num;
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + year + "年" + "，不落实队伍思想政治工作以及上级部署的阶段性宣传、教育、学习等的每少1次扣1分。");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(idNumber);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("");
                    examAutoEvaluation.setEvaluationId(evI);//被考评对象id
                    examAutoEvaluation.setModelId("");
                    examAutoEvaluation.setOption("");
                    examAutoEvaluation.setOptionId("");
                    examAutoEvaluation.setScore(String.valueOf(nu));

                    this.save(examAutoEvaluation);

                }
            }
        }
    }

    @Transactional(readOnly = false)
    public void ckpcsTxMonth(String checkTime) {

        //所有单位名称
        List<String> nameList = affairGeneralSituationService.selectAllName();

        String year = checkTime.substring(4);

        String month = checkTime.substring(checkTime.length() - 2);

        for (int n = 0; n < nameList.size(); n++) {
            String unitName = nameList.get(n);
            String unitId = affairGeneralSituationService.selectUnitId(unitName);
            List<String> evId = examAutoEvaluationDao.selectEvId(unitId);
            for (int e = 0; e < evId.size(); e++) {
                String evI = evId.get(e);
                if (unitName.contains("支队") || unitName.contains("大队") || unitName.contains("派出所")) {

                    String time = year + "-" + month;
                    Integer number = affairTalkHeartService.selectNumber(time, unitId);
                    if (number < 1) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails(unitName + year + "年" + month + "月" + "，不落实队伍思想政治工作以及上级部署的阶段性宣传、教育、学习等的每少一次扣3分。");
                        examAutoEvaluation.setUnit(unitName);
                        examAutoEvaluation.setUnitId(unitId);

                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setEvaluationId(evI);//被考评对象id
                        examAutoEvaluation.setModel(" ");
                        examAutoEvaluation.setModelId(" ");
                        examAutoEvaluation.setOption(" ");
                        examAutoEvaluation.setOptionId(" ");
                        examAutoEvaluation.setScore("2");

                        this.save(examAutoEvaluation);
                    }
                }
            }
        }
    }

    @Transactional(readOnly = false)
    public void ckpcsTxYear(String year) {

        //所有单位名称
        List<String> nameList = affairGeneralSituationService.selectAllName();

        for (int n = 0; n < nameList.size(); n++) {
            String unitName = nameList.get(n);
            String unitId = affairGeneralSituationService.selectUnitId(unitName);
            if (unitName.contains("支队") || unitName.contains("大队") || unitName.contains("派出所")) {
                List<String> evId = examAutoEvaluationDao.selectEvId(unitId);
                for (int e = 0; e < evId.size(); e++) {
                    String evI = evId.get(e);
                    Integer number1 = affairTalkHeartService.selectNumber(year, unitId);
                    if (number1 < 12) {
                        int num = 12 - number1;
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("2");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setDetails(unitName + year + "年" + "，不落实队伍思想政治工作以及上级部署的阶段性宣传、教育、学习等的每少一次扣3分。");
                        examAutoEvaluation.setUnit(unitName);
                        examAutoEvaluation.setUnitId(unitId);
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setModelId("");

                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setEvaluationId(evI);//被考评对象id
                        examAutoEvaluation.setOption("");
                        examAutoEvaluation.setOptionId("");
                        examAutoEvaluation.setScore(String.valueOf(num));

                        this.save(examAutoEvaluation);
                    }
                }
            }
        }
    }

    @Transactional(readOnly = false)
    public void ckpcsSxfxMonth(String checkTime) {

        List<AffairGeneralSituation> nncPartyList = affairGeneralSituationService.getChuPartyBranch("34", "2");
        List<AffairGeneralSituation> lzcPartyList = affairGeneralSituationService.getChuPartyBranch("95", "2");
        List<AffairGeneralSituation> bhcPartyList = affairGeneralSituationService.getChuPartyBranch("156", "2");


        String year = checkTime.substring(0, 4);
        Integer y = Integer.valueOf(year);
        String month = checkTime.substring(checkTime.length() - 2);
        Integer m = Integer.valueOf(month);
        Integer lastMonth = m - 1;
        Integer lastYear = y - 1;
        String yearL = null;
        if (m == 1){
            yearL = lastYear + "-12-26";
        }else {
            yearL = year + "-" + lastMonth + "-26";
        }
        String yearT = year + "-" + month +  "-25";

        for (int n = 0; n < nncPartyList.size(); n++) {

            AffairGeneralSituation affairGeneralSituation = nncPartyList.get(n);
            String name = affairGeneralSituation.getPartyOrganization();

            String unitId = affairGeneralSituation.getId();
                 List<String> evId = examAutoEvaluationDao.selectEvId(unitId);
                for (int e = 0; e < evId.size(); e++) {
                    String evI = evId.get(e);
                    Integer number = affairPoliceThoughtAnalysisService.selectNumber(yearL, yearT, unitId);
                    if (number < 1) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);

                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails(name + year + "年" + month + "月" + "民警队伍思想分析未完成");
                        examAutoEvaluation.setUnit(name);
                        examAutoEvaluation.setUnitId(unitId);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setEvaluationId(evI);//被考评对象id
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setModelId("");
                        examAutoEvaluation.setOption("");
                        examAutoEvaluation.setOptionId("");
                        examAutoEvaluation.setScore("3");

                        this.save(examAutoEvaluation);

                }
            }
        }
        for (int n = 0; n < lzcPartyList.size(); n++) {

            AffairGeneralSituation affairGeneralSituation = lzcPartyList.get(n);
            String name = affairGeneralSituation.getPartyOrganization();

            String unitId = affairGeneralSituation.getId();
            List<String> evId = examAutoEvaluationDao.selectEvId(unitId);
            for (int e = 0; e < evId.size(); e++) {
                String evI = evId.get(e);
                Integer number = affairPoliceThoughtAnalysisService.selectNumber(yearL, yearT, unitId);
                if (number < 1) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(name + year + "年" + month + "月" + "民警队伍思想分析未完成");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setEvaluationId(evI);//被考评对象id
                    examAutoEvaluation.setModel("柳州处对单位（部门）2020年月度队伍建设绩效考核评分标准");
                    examAutoEvaluation.setModelId("e2297d3f891a4ebca507d3ff34b158bc");
                    examAutoEvaluation.setOption("未完成季度民警队伍思想分析报告或报告质量不高、应付了事的");
                    examAutoEvaluation.setOptionId("8098d3420ee949038e9aef20633822f7");
                    examAutoEvaluation.setScore("3");

                    this.save(examAutoEvaluation);

                }
            }
        }
        for (int n = 0; n < bhcPartyList.size(); n++) {

            AffairGeneralSituation affairGeneralSituation = bhcPartyList.get(n);
            String name = affairGeneralSituation.getPartyOrganization();

            String unitId = affairGeneralSituation.getId();
            List<String> evId = examAutoEvaluationDao.selectEvId(unitId);
            for (int e = 0; e < evId.size(); e++) {
                String evI = evId.get(e);
                Integer number = affairPoliceThoughtAnalysisService.selectNumber(yearL, yearT, unitId);
                if (number < 1) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(name + year + "年" + month + "月" + "民警队伍思想分析未完成");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setEvaluationId(evI);//被考评对象id
                    examAutoEvaluation.setModel("");
                    examAutoEvaluation.setModelId("");
                    examAutoEvaluation.setOption("");
                    examAutoEvaluation.setOptionId("");
                    examAutoEvaluation.setScore("3");

                    this.save(examAutoEvaluation);

                }
            }
        }
    }

    @Transactional(readOnly = false)
    public void ckpcsSxfxYear(String year) {

        List<AffairGeneralSituation> nncPartyList = affairGeneralSituationService.getChuPartyBranch("34", "2");
        List<AffairGeneralSituation> lzcPartyList = affairGeneralSituationService.getChuPartyBranch("95", "2");
        List<AffairGeneralSituation> bhcPartyList = affairGeneralSituationService.getChuPartyBranch("156", "2");

        Integer y = Integer.valueOf(year);
        Integer lastYear = y - 1;
        String yearL = year + "-" + "12-02";
        String yearT = year + "-" + "12-01";

        for (int n = 0; n < nncPartyList.size(); n++) {
            AffairGeneralSituation affairGeneralSituation = nncPartyList.get(n);
            String unitId = affairGeneralSituation.getId();
            String name = affairGeneralSituation.getPartyOrganization();
                List<String> evId = examAutoEvaluationDao.selectEvId(unitId);
                for (int e = 0; e < evId.size(); e++) {
                    String evI = evId.get(e);
                    Integer number1 = affairPoliceThoughtAnalysisService.selectNumber(yearL, yearT, unitId);
                    if (number1 < 12) {
                        int num = 12 - number1;
                        double nu = 0.6 * num;
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("2");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setDetails(name + year + "年" + "民警队伍思想分析未完成");
                        examAutoEvaluation.setUnit(name);
                        examAutoEvaluation.setUnitId(unitId);

                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("2020年年度南宁处对宣教室绩效考核扣分标准");
                        examAutoEvaluation.setModelId("dde7481e69124856bafcb3cc272e4094");
                        examAutoEvaluation.setOption("不按时向公安局上报季度队伍思想分析报告（最后一个月20日前上报），不真实反映民警队伍中存在的问题(既有定性分析，又有定量分析，既有情况介绍，又有对策研究。要求以党委文件形式上报)，每少一次的");
                        examAutoEvaluation.setEvaluationId(evI);//被考评对象id
                        examAutoEvaluation.setOptionId("09eb899bb7144a66a1edd0b94f9259a3");
                        examAutoEvaluation.setScore(String.valueOf(nu));

                        this.save(examAutoEvaluation);

                }
            }
        }
        for (int n = 0; n < lzcPartyList.size(); n++) {
            AffairGeneralSituation affairGeneralSituation = lzcPartyList.get(n);
            String unitId = affairGeneralSituation.getId();
            String name = affairGeneralSituation.getPartyOrganization();
            List<String> evId = examAutoEvaluationDao.selectEvId(unitId);
            for (int e = 0; e < evId.size(); e++) {
                String evI = evId.get(e);
                Integer number1 = affairPoliceThoughtAnalysisService.selectNumber(yearL, yearT, unitId);
                if (number1 < 12) {
                    int num = 12 - number1;
                    double nu = 0.6 * num;
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + year + "年" + "民警队伍思想分析未完成");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(unitId);

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("柳州处对单位（部门）2020年月度队伍建设绩效考核评分标准");
                    examAutoEvaluation.setModelId("e2297d3f891a4ebca507d3ff34b158bc");
                    examAutoEvaluation.setOption("不按时向公安处上报季度队伍思想分析报告（最后一个月15日前上报），不真实反映民警队伍中存在的问题(既有定性分析，又有定量分析，既有情况介绍，又有对策研究，每少一次");
                    examAutoEvaluation.setEvaluationId(evI);//被考评对象id
                    examAutoEvaluation.setOptionId("57d17b0d180e48e282414e4bf23663e2");
                    examAutoEvaluation.setScore(String.valueOf(nu));

                    this.save(examAutoEvaluation);

                }
            }
        }
        for (int n = 0; n < bhcPartyList.size(); n++) {
            AffairGeneralSituation affairGeneralSituation = bhcPartyList.get(n);
            String unitId = affairGeneralSituation.getId();
            String name = affairGeneralSituation.getPartyOrganization();
            List<String> evId = examAutoEvaluationDao.selectEvId(unitId);
            for (int e = 0; e < evId.size(); e++) {
                String evI = evId.get(e);
                Integer number1 = affairPoliceThoughtAnalysisService.selectNumber(yearL, yearT, unitId);
                if (number1 < 12) {
                    int num = 12 - number1;
                    double nu = 0.6 * num;
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + year + "年" + "，民警队伍思想分析未完成");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(unitId);

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("2020年年度北海处对机关科室绩效考核扣分标准(业务部分)");
                    examAutoEvaluation.setModelId("01bcee76bf194541b89220959b83b09a");
                    examAutoEvaluation.setOption("不按时向公安局上报季度队伍思想分析报告（最后一个月20日前上报），不真实反映民警队伍中存在的问题(既有定性分析，又有定量分析，既有情况介绍，又有对策研究。要求以党委文件形式上报)，每少一次的");
                    examAutoEvaluation.setEvaluationId(evI);//被考评对象id
                    examAutoEvaluation.setOptionId("e4e848f74c39437aa5d699ad8b7c79c1");
                    examAutoEvaluation.setScore(String.valueOf(nu));

                    this.save(examAutoEvaluation);

                }
            }
        }

    }

    @Transactional(readOnly = false)
    public void ckcHdqkMonth(String checkTime) {

        List<Office> nncPartyList = officeDao.getChuUnit("34", "1");
        List<Office> lzcPartyList = officeDao.getChuUnit("95", "1");
        List<Office> bhcPartyList = officeDao.getChuUnit("156", "1");

        String year = checkTime.substring(0, 4);
        Integer y = Integer.valueOf(year);
        String month = checkTime.substring(checkTime.length() - 2);
        Integer m = Integer.valueOf(month);
        Integer lastMonth = m - 1;
        Integer lastYear = y - 1;

        Map<String, String> timeMap = this.monthTime(checkTime);
        String yearL = timeMap.get("yearL");
        String yearT = timeMap.get("yearT");

        for (int i = 0; i < nncPartyList.size(); i++) {
            Office office = nncPartyList.get(i);
            String idNumber = office.getId();
            String name = office.getName();
                Integer number = affairActiveService.selectNumber(yearL, yearT, idNumber);
                if (number < 1) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(name + year + "年" + month + "月" + "月度未完成开展读书交流1次的每次扣1分。");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(idNumber);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setEvaluationId(userDao.selectUserId(office.getCode()));//被考评对象id
                    examAutoEvaluation.setModel("南宁公安处月度对各单位（部门）2020年度绩效考核评分标准（队伍建设）");
                    examAutoEvaluation.setModelId("5d9645f6da694060a2f6cbbdf388343f");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setOption("未按要求组织开展读书交流活动的");
                    examAutoEvaluation.setOptionId("6b30692d5aa542139715396b42e0afb0");
                    examAutoEvaluation.setScore("0.5");

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","活动情况");
                    this.save(examAutoEvaluation);


            }
        }
        for (int i = 0; i < lzcPartyList.size(); i++) {
            Office office = lzcPartyList.get(i);
            String idNumber = office.getId();
            String name = office.getName();
                Integer number = affairActiveService.selectNumber(yearL, yearT, idNumber);
                if (number < 1) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(name + year + "年" + month + "月" + "月度未完成开展读书交流1次的每次扣1分。");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(idNumber);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setEvaluationId(userDao.selectUserId(office.getCode()));//被考评对象id
                    examAutoEvaluation.setModel("柳州处对单位（部门）2020年月度队伍建设绩效考核评分标准");
                    examAutoEvaluation.setModelId("e2297d3f891a4ebca507d3ff34b158bc");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setOption("未按要求组织开展读书交流活动的");
                    examAutoEvaluation.setOptionId("8b83fdc74fd74276852c0584357998b9");
                    examAutoEvaluation.setScore("0.5");

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","活动情况");
                    this.save(examAutoEvaluation);


            }
        }
        for (int i = 0; i < bhcPartyList.size(); i++) {
            Office office = bhcPartyList.get(i);
            String idNumber = office.getId();
            String name = office.getName();
                Integer number = affairActiveService.selectNumber(yearL, yearT, idNumber);
                if (number < 1) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(name + year + "年" + month + "月" + "月度未完成开展读书交流1次的每次扣1分。");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(idNumber);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setEvaluationId(userDao.selectUserId(office.getCode()));//被考评对象id
                    examAutoEvaluation.setModel("2020年月度北海处对机关科室扣分标准(业务部分)");
                    examAutoEvaluation.setModelId("9d566eb5263843daa3be3ae3eb562f58");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setOption("未按要求组织开展读书交流活动的");
                    examAutoEvaluation.setOptionId("c6ae2f28a20b4509951b13a15352807c");
                    examAutoEvaluation.setScore("0.5");

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","活动情况");
                    this.save(examAutoEvaluation);


            }
        }
    }

    @Transactional(readOnly = false)
    public void ckcHdqkYear(String year) {

        List<Office> nncPartyList = officeDao.getChuUnit("34", "1");
        List<Office> lzcPartyList = officeDao.getChuUnit("95", "1");
        List<Office> bhcPartyList = officeDao.getChuUnit("156", "1");

        Integer y = Integer.valueOf(year);
        Integer yl = y - 1;

        Map<String, String> timeMap = this.yearTime(year);
        String yearL = timeMap.get("yearL");
        String yearT = timeMap.get("yearT");

        for (int i = 0; i < nncPartyList.size(); i++) {
            Office office = nncPartyList.get(i);
            String idNumber = office.getId();
            String name = office.getName();

            Integer number1 = affairActiveService.selectNumber(yearL, yearT, idNumber);
            if (number1 < 12) {
                int num = 12 - number1;
                double nu = 0.5 * num;
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("4");
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setDetails(name + year + "年" + "读书活动制度不健全，未按要求开展，读书任务未完成的扣0.5分。");
                examAutoEvaluation.setUnit(name);
                examAutoEvaluation.setUnitId(idNumber);
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");

                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setModel("2020年年度南宁处对各单位（部门）绩效考核扣分标准(队伍建设)");
                examAutoEvaluation.setModelId("13ea683844d644cb8aa15e00fb07f825");
                examAutoEvaluation.setOption("未按要求组织开展读书交流活动的");
                examAutoEvaluation.setEvaluationId(userDao.selectUserId(office.getCode()));//被考评对象id
                examAutoEvaluation.setOptionId("9d6ea8d36e6a4c2fa5e868bbbe191723");
                examAutoEvaluation.setScore(String.valueOf(nu));

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","活动情况");
                this.save(examAutoEvaluation);
            }
        }
        for (int i = 0; i < lzcPartyList.size(); i++) {
            Office office = lzcPartyList.get(i);
            String idNumber = office.getId();
            String name = office.getName();

            Integer number1 = affairActiveService.selectNumber(yearL, yearT, idNumber);
            if (number1 < 12) {
                int num = 12 - number1;
                double nu = 0.5 * num;
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("4");
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setDetails(name + year + "年" + "读书活动制度不健全，未按要求开展，读书任务未完成的扣0.5分。");
                examAutoEvaluation.setUnit(name);
                examAutoEvaluation.setUnitId(idNumber);
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");

                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setModel("柳州处对单位（部门）2020年年度队伍建设绩效考核评分标准");
                examAutoEvaluation.setModelId("da8bc710a7da4c50b32c0409f720e372");
                examAutoEvaluation.setOption("未按要求组织开展读书交流活动的");
                examAutoEvaluation.setEvaluationId(userDao.selectUserId(office.getCode()));//被考评对象id
                examAutoEvaluation.setOptionId("663a42a2f17b4baf85df824b5763d17b");
                examAutoEvaluation.setScore(String.valueOf(nu));

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","活动情况");
                this.save(examAutoEvaluation);
            }
        }
        for (int i = 0; i < bhcPartyList.size(); i++) {
            Office office = bhcPartyList.get(i);
            String idNumber = office.getId();
            String name = office.getName();

            Integer number1 = affairActiveService.selectNumber(yearL, yearT, idNumber);
            if (number1 < 12) {
                int num = 12 - number1;
                double nu = 0.5 * num;
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("4");
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setDetails(name + year + "年" + "读书活动制度不健全，未按要求开展，读书任务未完成的扣0.5分。");
                examAutoEvaluation.setUnit(name);
                examAutoEvaluation.setUnitId(idNumber);
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");

                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setModel("2020年年度北海处对机关科室绩效考核扣分标准(业务部分)");
                examAutoEvaluation.setModelId("01bcee76bf194541b89220959b83b09a");
                examAutoEvaluation.setOption("未按要求组织开展读书交流活动的");
                examAutoEvaluation.setEvaluationId(userDao.selectUserId(office.getCode()));//被考评对象id
                examAutoEvaluation.setOptionId("b23832dffca0492d86d92bf408bef153");
                examAutoEvaluation.setScore(String.valueOf(nu));

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","活动情况");
                this.save(examAutoEvaluation);
            }
        }
    }

    @Transactional(readOnly = false)
    public void ckpcsHdqkMonth(String checkTime) {

        List<Office> nncPartyList = officeDao.getChuUnit("34", "2");
        List<Office> lzcPartyList = officeDao.getChuUnit("95", "2");
        List<Office> bhcPartyList = officeDao.getChuUnit("156", "2");

        String year = checkTime.substring(0, 4);
        Integer y = Integer.valueOf(year);
        String month = checkTime.substring(checkTime.length() - 2);
        Integer m = Integer.valueOf(month);
        Integer lastMonth = m - 1;
        Integer lastYear = y - 1;

        Map<String, String> timeMap = this.monthTime(checkTime);
        String yearL = timeMap.get("yearL");
        String yearT = timeMap.get("yearT");

        for (int n = 0; n < nncPartyList.size(); n++) {
            Office office = nncPartyList.get(n);
            String idNumber = office.getId();
            String name = office.getName();
                    Integer number = affairActiveService.selectNumber(yearL, yearT, idNumber);
                    if (number < 1) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails(name + year + "年" + month + "月" + "月度未完成开展读书交流1次的每次扣1分。");
                        examAutoEvaluation.setUnit(name);
                        examAutoEvaluation.setUnitId(idNumber);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setEvaluationId(userDao.selectUserId(office.getCode()));//被考评对象id
                        examAutoEvaluation.setModel("南宁公安处月度对派出所2020年度绩效考核评分标准（队伍建设）");

                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setModelId("ddc6d6dd210e4f428b3a5361f27389fa");
                        examAutoEvaluation.setOption("未按要求组织开展读书交流活动的");
                        examAutoEvaluation.setOptionId("a043029a45374c4cb938248fa680287f");
                        examAutoEvaluation.setScore("2.0");

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","活动情况");
                        this.save(examAutoEvaluation);

                }
            }
        for (int n = 0; n < lzcPartyList.size(); n++) {
            Office office = lzcPartyList.get(n);
            String idNumber = office.getId();
            String name = office.getName();
                Integer number = affairActiveService.selectNumber(yearL, yearT, idNumber);
                if (number < 1) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(name + year + "年" + month + "月" + "月度未完成开展读书交流1次的每次扣1分。");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(idNumber);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setEvaluationId(userDao.selectUserId(office.getCode()));//被考评对象id
                    examAutoEvaluation.setModel("柳州处对派出所2020年月度队伍建设绩效考核扣分标准");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setModelId("f38535fc63a2418b8ed37c2e18f75ad6");
                    examAutoEvaluation.setOption("未按要求组织开展读书交流活动的");
                    examAutoEvaluation.setOptionId("18a69acb25e64eaf8d5ac58b7808e7b0");
                    examAutoEvaluation.setScore("2.0");

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","活动情况");
                    this.save(examAutoEvaluation);

            }
        }
        for (int n = 0; n < bhcPartyList.size(); n++) {
            Office office = bhcPartyList.get(n);
            String idNumber = office.getId();
            String name = office.getName();
                String time = year + "-" + month;
                Integer number = affairActiveService.selectNumber(yearL, yearT, idNumber);
                if (number < 1) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(name + year + "年" + month + "月" + "月度未完成开展读书交流1次的每次扣1分。");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(idNumber);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setEvaluationId(userDao.selectUserId(office.getCode()));//被考评对象id
                    examAutoEvaluation.setModel("");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setModelId("");
                    examAutoEvaluation.setOption("");
                    examAutoEvaluation.setOptionId("");
                    examAutoEvaluation.setScore("2.0");

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","活动情况");
                    this.save(examAutoEvaluation);
                }
            }
        }

    @Transactional(readOnly = false)
    public void ckpcsHdqkYear(String year) {


        List<Office> nncPartyList = officeDao.getChuUnit("34", "2");
        List<Office> lzcPartyList = officeDao.getChuUnit("95", "2");
        List<Office> bhcPartyList = officeDao.getChuUnit("156", "2");

        Integer y = Integer.valueOf(year);
        Integer yl = y - 1;

        Map<String, String> timeMap = this.yearTime(year);
        String yearL = timeMap.get("yearL");
        String yearT = timeMap.get("yearT");

        for (int n = 0; n < nncPartyList.size(); n++) {
            Office office = nncPartyList.get(n);
            String unitId = office.getId();
            String name = office.getName();
                    Integer number1 = affairActiveService.selectNumber(yearL, yearT, unitId);
                    if (number1 < 12) {
                        int num = 12 - number1;
                        double nu = 2.0 * num;
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("4");
                        examAutoEvaluation.setPeriod("2");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setDetails(name + year + "年" + "读书活动制度不健全，未按要求开展，读书任务未完成的扣1分。");
                        examAutoEvaluation.setUnit(name);
                        examAutoEvaluation.setUnitId(unitId);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("2020年年度南宁处对派出所绩效考核扣分标准(队伍建设)");
                        examAutoEvaluation.setModelId("f43cb06efe6b42acb625d2cef27bad1e");

                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setOption("未按要求组织开展读书交流活动的");
                        examAutoEvaluation.setEvaluationId(userDao.selectUserId(office.getCode()));//被考评对象id
                        examAutoEvaluation.setOptionId("28fe5e664f7d49b5b874983ec8c071a5");
                        examAutoEvaluation.setScore(String.valueOf(nu));

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","活动情况");
                        this.save(examAutoEvaluation);


            }
        }
        for (int n = 0; n < lzcPartyList.size(); n++) {
            Office office = lzcPartyList.get(n);
            String unitId = office.getId();
            String name = office.getName();
                Integer number1 = affairActiveService.selectNumber(yearL, yearT, unitId);
                if (number1 < 12) {
                    int num = 12 - number1;
                    double nu = 2.0 * num;
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + year + "年" + "读书活动制度不健全，未按要求开展，读书任务未完成的扣1分。");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("柳州处对派出所2020年年度队伍建设绩效考核扣分标准");
                    examAutoEvaluation.setModelId("1ccfeca0f49543d49f8833feb21735e3");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setOption("未按要求组织开展读书交流活动的");
                    examAutoEvaluation.setEvaluationId(userDao.selectUserId(office.getCode()));//被考评对象id
                    examAutoEvaluation.setOptionId("afc06afba9ae459cb20e92d00c808afc");
                    examAutoEvaluation.setScore(String.valueOf(nu));

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","活动情况");
                    this.save(examAutoEvaluation);


            }
        }
        for (int n = 0; n < bhcPartyList.size(); n++) {
            Office office = bhcPartyList.get(n);
            String unitId = office.getId();
            String name = office.getName();
                Integer number1 = affairActiveService.selectNumber(yearL, yearT, unitId);
                if (number1 < 12) {
                    int num = 12 - number1;
                    double nu = 2.0 * num;
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + year + "年" + "读书活动制度不健全，未按要求开展，读书任务未完成的扣1分。");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("");
                    examAutoEvaluation.setModelId("");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setOption("");
                    examAutoEvaluation.setEvaluationId(userDao.selectUserId(office.getCode()));//被考评对象id
                    examAutoEvaluation.setOptionId("");
                    examAutoEvaluation.setScore(String.valueOf(nu));

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","活动情况");
                    this.save(examAutoEvaluation);


            }
        }
    }

    @Transactional(readOnly = false)
    public void ckpcsTnshhYear(String year) {

        List<String> twList = affairTwBaseService.selectAllTw();

            String yearL = year + "-" + "12-02";
            String yearT = year + "-" + "12-01";

            //支委会
            String zwh = "1";

            //团员大会
            String tydh = "2";

            //团课
            String tk = "4";
            List<String> typeList = new ArrayList<>();
            typeList.add(zwh);
            typeList.add(tydh);
            typeList.add(tk);

            for (int p = 0; p < typeList.size();p++){
                String type = typeList.get(p);
            for (int t = 0; t < twList.size(); t++) {
                String tw = twList.get(t);
                if (tw.contains("派出所")) {

                    //团委名称
                    String twName = twList.get(t);
                    //团委id
                    String twId = affairTwBaseService.selectId(twName);
                    //团委下设角色数量
                    Integer number = affairTwBaseSignService.selectNumber(twId);

                    List<String> evId = examAutoEvaluationDao.selectTwEvId(twId);
                    for (int e = 0; e < evId.size(); e++) {
                        String evI = evId.get(e);
                        if (number < 3) {
                            //角色数量小于3是不设支委的团支部
                            Integer tydhNumber = affairThreeOneService.selectTydhNum(yearL, yearT, twId, type);
                            if (tydhNumber < 1) {
                                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                examAutoEvaluation.setType("1");
                                examAutoEvaluation.setEvalType("3");
                                examAutoEvaluation.setPeriod("2");
                                examAutoEvaluation.setYear(year);
                                examAutoEvaluation.setDetails(twName + year + "年" + "团内民主（组织）生活会未按时完成");

                                examAutoEvaluation.setFromSys("智慧政工");
                                examAutoEvaluation.setUnit(twName);
                                examAutoEvaluation.setUnitId(twId);
                                examAutoEvaluation.setAssess("");
                                examAutoEvaluation.setAssessId("");
                                examAutoEvaluation.setModel("");
                                examAutoEvaluation.setModelId("");
                                examAutoEvaluation.setEvaluationId(evI);//被考评对象id
                                examAutoEvaluation.setOption("");
                                examAutoEvaluation.setOptionId("");
                                examAutoEvaluation.setScore("2");

                                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"团内民主生活会");
                                this.save(examAutoEvaluation);
                            }
                        } else {
                            //角色数量大于3是设立支委的团支部
                            Integer zwhNumber = affairThreeOneService.selectTydhNum(yearL,yearT, twId, type);
                            if (zwhNumber < 1) {
                                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

                                examAutoEvaluation.setFromSys("智慧政工");
                                examAutoEvaluation.setType("1");
                                examAutoEvaluation.setEvalType("3");
                                examAutoEvaluation.setPeriod("1");
                                examAutoEvaluation.setYear(year);
                                examAutoEvaluation.setDetails(twName + year + "年，团内民主（组织）生活会未按时完成");
                                examAutoEvaluation.setUnit(twName);
                                examAutoEvaluation.setUnitId(twId);
                                examAutoEvaluation.setAssess("");
                                examAutoEvaluation.setAssessId("");
                                examAutoEvaluation.setModel("");
                                examAutoEvaluation.setModelId("");
                                examAutoEvaluation.setEvaluationId(evI);//被考评对象id
                                examAutoEvaluation.setOption("");
                                examAutoEvaluation.setOptionId("");
                                examAutoEvaluation.setScore("2");

                                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation, null, "团内民主生活会");
                                this.save(examAutoEvaluation);

                                }
                            }
                        }
                    }
                }
            }
        }

    @Transactional(readOnly = false)
    public void ckpcsMzYear(String year) {

        Integer y = Integer.valueOf(year);
        Integer lastYear = y - 1;
        String yearL = lastYear + "-" + "12-02";
        String yearT = year + "-" + "12-01";


        //团内组织生活会
        String tnzzshh = "5";

        //团委名称
        List<String> twList = affairTwBaseService.selectAllTw();

        for (int t = 0; t < twList.size(); t++) {
            String twName = twList.get(t);
            String twId = affairTwBaseService.selectId(twName);

            List<String> evId = examAutoEvaluationDao.selectTwEvId(twId);
            for (int e = 0; e < evId.size(); e++) {
                String evI = evId.get(e);
                Integer number = affairThreeOneService.selectNumber(yearL,yearT, twName, tnzzshh);
                if (number < 1) {

                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(twName + year + "年" + "团内民主（组织）生活会每年一次，未按时完成扣分");
                    examAutoEvaluation.setUnit(twName);
                    examAutoEvaluation.setUnitId(twId);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(evI);//被考评对象id
                    examAutoEvaluation.setModelId("");
                    examAutoEvaluation.setOption("");
                    examAutoEvaluation.setOptionId("");
                    examAutoEvaluation.setScore("3");

                    this.save(examAutoEvaluation);
                }
            }
        }
    }

    @Transactional(readOnly = false)
    public void ckpcsTy(String checkTime) {

        //团委名称
        List<String> twList = affairTwBaseService.selectAllTw();

        String year = checkTime.substring(0, 4);

        String month = checkTime.substring(checkTime.length() - 2);
        for (int n = 0; n < twList.size(); n++) {
            String name = twList.get(n);
            if (name.contains("团支部")) {
                String unitId = affairTwBaseService.selectId(name);

                List<String> evId = examAutoEvaluationDao.selectTwEvId(unitId);
                for (int e = 0; e < evId.size(); e++) {
                    String evI = evId.get(e);
                    String time = year + "-" + month;
                    Integer number = affairTnActivityRecordService.selectNumber(time, unitId);
                    if (number < 1) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails(name + year + "年" + month + "月" + "每月最后一天24时，团支部至少上报1条团内活动信息和图片，少1条扣2分(修改)");
                        examAutoEvaluation.setUnit(name);
                        examAutoEvaluation.setUnitId(unitId);

                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setEvaluationId(evI);//被考评对象id
                        examAutoEvaluation.setModelId("");
                        examAutoEvaluation.setOption("");
                        examAutoEvaluation.setOptionId("");
                        examAutoEvaluation.setScore("2");

                        this.save(examAutoEvaluation);
                    }
                }
            }
        }
    }
    /*
    * 每季编发廉政教育资料
    *
    * 局考局
    *
    * 年度
    *
    * */
    @Transactional(readOnly = false)
    public void jkjLzjy(String year) {


        List<Office> jjgPartyList = new ArrayList<>();
        Office office = officeDao.selectBeanById("6");
        jjgPartyList.add(office);

        Integer y = Integer.valueOf(year);
        Integer lastYear = y - 1;
        Map<String, String> timeMap = this.yearTime(year);
        String yearL = timeMap.get("yearL");
        String yearT = timeMap.get("yearT");

        for (int i = 0; i < jjgPartyList.size(); i++) {
            Office office1 = jjgPartyList.get(i);
            String idNumber = office1.getId();
            String name = office1.getName();

                Integer number = affairLzxxjyActivitiesService.selectNumber(yearL,yearT,idNumber);
                if (number < 4) {
                    int num = 4 - number;
                    int nu = 2 * num;
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("2");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + year + "年" + "每年编发或转发《廉政必读》少于4期的，每少1期，扣2分。");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(idNumber);

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setEvaluationId(userDao.selectUserId(office1.getCode()));//被考评对象id
                    examAutoEvaluation.setModel("2020年公安局对局机关各处室直属支队年度绩效考核扣分标准");
                    examAutoEvaluation.setModelId("db6adcddf3ec4015bd11e542fe6ce985");
                    examAutoEvaluation.setOption("每年编发或转发《廉政必读》少于4期的");
                    examAutoEvaluation.setOptionId("d0170f0c8ec54c28a50211c7343dc8cd");
                    examAutoEvaluation.setScore(String.valueOf(nu));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"廉政教育资料");
                    this.save(examAutoEvaluation);

            }
        }
    }
    /*
     * 每季编发廉政教育资料
     *
     * 处考处机关
     *
     * 年度
     *
     * */
    @Transactional(readOnly = false)
    public void ckcLzjy(String year) {

        List<Office> nncPartyList = new ArrayList<>();
        //南宁处纪检监察室
        Office nncOffice = officeDao.selectBeanById("31");
        nncPartyList.add(nncOffice);

        List<Office> lzcPartyList = new ArrayList<>();
        //柳州处纪检监察室
        Office lzcOffice = officeDao.selectBeanById("146");
        lzcPartyList.add(lzcOffice);

        List<Office> bhcPartyList = new ArrayList<>();
        //北海处纪检监察室
        Office bhcOffice = officeDao.selectBeanById("266");
        bhcPartyList.add(bhcOffice);


        Integer y = Integer.valueOf(year);
        Integer lastYear = y - 1;
        Map<String, String> timeMap = this.yearTime(year);
        String yearL = timeMap.get("yearL");
        String yearT = timeMap.get("yearT");

        for (int i = 0; i < nncPartyList.size(); i++) {
            Office office = nncPartyList.get(i);
            String idNumber = office.getId();
            String name = office.getName();

                Integer number = affairLzxxjyActivitiesService.selectNumber(yearL,yearT,idNumber);
                if (number < 4) {
                    int num = 4 - number;
                    double nu = 3.0 * num;
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("2");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + year + "年" + "每年编发或转发《廉政必读》少于4期的，每少1期，扣2分。");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(idNumber);

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("2020年年度南宁处对监察室绩效考核扣分标准");
                    examAutoEvaluation.setEvaluationId(userDao.selectUserId(office.getCode()));//被考评对象id
                    examAutoEvaluation.setModelId("619c03a10f584c558687d2566fe8c56d");
                    examAutoEvaluation.setOption("每季编发廉政教育资料不少于1期，每少一期的");
                    examAutoEvaluation.setOptionId("49e358e4f8c54ca8aee3ab968c2d394d");
                    examAutoEvaluation.setScore(String.valueOf(nu));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","廉政教育资料");
                    this.save(examAutoEvaluation);

            }
        }
        for (int i = 0; i < lzcPartyList.size(); i++) {
            Office office = nncPartyList.get(i);
            String idNumber = office.getId();
            String name = office.getName();
                Integer number = affairLzxxjyActivitiesService.selectNumber(yearL,yearT,idNumber);
                if (number < 4) {
                    int num = 4 - number;
                    double nu = 3.0 * num;
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("2");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + year + "年" + "每年编发或转发《廉政必读》少于4期的，每少1期，扣2分。");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(idNumber);

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("柳州处对监察室年度绩效考核评分标准(业务部分)");
                    examAutoEvaluation.setEvaluationId(userDao.selectUserId(office.getCode()));//被考评对象id
                    examAutoEvaluation.setModelId("7ae23721372743fe97683033433ab0a7");
                    examAutoEvaluation.setOption("每季编发廉政教育资料不少于1期，每少一期的");
                    examAutoEvaluation.setOptionId("d58a436291014f45af89b73698727d18");
                    examAutoEvaluation.setScore(String.valueOf(nu));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","廉政教育资料");
                    this.save(examAutoEvaluation);

            }
        }
        for (int i = 0; i < bhcPartyList.size(); i++) {
            Office office = nncPartyList.get(i);
            String idNumber = office.getId();
            String name = office.getName();
                Integer number = affairLzxxjyActivitiesService.selectNumber(yearL,yearT,idNumber);
                if (number < 4) {
                    int num = 4 - number;
                    double nu = 0.3 * num;
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("2");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + year + "年" + "每年编发或转发《廉政必读》少于4期的，每少1期，扣2分。");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(idNumber);

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("2020年年度北海处对机关科室绩效考核扣分标准(业务部分)");
                    examAutoEvaluation.setEvaluationId(userDao.selectUserId(office.getCode()));//被考评对象id
                    examAutoEvaluation.setModelId("01bcee76bf194541b89220959b83b09a");
                    examAutoEvaluation.setOption("每季编发廉政教育资料不少于1期，每少一期的");
                    examAutoEvaluation.setOptionId("b074dcd634ec414aa06a02c65cfa5654");
                    examAutoEvaluation.setScore(String.valueOf(nu));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","廉政教育资料");
                    this.save(examAutoEvaluation);

            }
        }
    }

    /*
     * 每季编发廉政教育资料
     *
     * 处考派出所
     *
     * 年度
     *
     * */
/*    @Transactional(readOnly = false)
    public void ckpcsLzjy(String year) {

        Integer y = Integer.valueOf(year);
        Integer lastYear = y - 1;
        String yearL = lastYear + "-" + "12-02";
        String yearT = year + "-" + "12-01";

        List<AffairGeneralSituation> nncPartyList = affairGeneralSituationService.getChuPartyBranch("34", "2");
        List<AffairGeneralSituation> lzcPartyList = affairGeneralSituationService.getChuPartyBranch("95", "2");
        List<AffairGeneralSituation> bhcPartyList = affairGeneralSituationService.getChuPartyBranch("156", "2");



        for (int n = 0; n < nncPartyList.size(); n++) {
            AffairGeneralSituation affairGeneralSituation = nncPartyList.get(n);
            String idNumber = affairGeneralSituation.getId();
            String name = affairGeneralSituation.getPartyOrganization();

                List<String> evId = examAutoEvaluationDao.selectEvId(idNumber);
                for (int e = 0; e < evId.size(); e++) {
                    String evI = evId.get(e);
                    Integer number = affairLzxxjyActivitiesService.selectNumber(yearL,yearT,idNumber);
                    if (number < 1) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("2");
                        examAutoEvaluation.setPeriod("2");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setDetails(name + year + "年" + "未按要求组织学习《廉政教育必读》及上级下发的违法违纪通知通报，每次扣1分。");
                        examAutoEvaluation.setUnit(name);
                        examAutoEvaluation.setUnitId(idNumber);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel(" ");
                        examAutoEvaluation.setEvaluationId(evI);//被考评对象id
                        examAutoEvaluation.setModelId(" ");

                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setOption(" ");
                        examAutoEvaluation.setOptionId(" ");
                        examAutoEvaluation.setScore("1");

                        this.save(examAutoEvaluation);

                }
            }
        }
        for (int n = 0; n < lzcPartyList.size(); n++) {
            AffairGeneralSituation affairGeneralSituation = lzcPartyList.get(n);
            String idNumber = affairGeneralSituation.getId();
            String name = affairGeneralSituation.getPartyOrganization();

            List<String> evId = examAutoEvaluationDao.selectEvId(idNumber);
            for (int e = 0; e < evId.size(); e++) {
                String evI = evId.get(e);
                Integer number = affairLzxxjyActivitiesService.selectNumber(yearL,yearT,idNumber);
                if (number < 1) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("2");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + year + "年" + "未按要求组织学习《廉政教育必读》及上级下发的违法违纪通知通报，每次扣1分。");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(idNumber);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("柳州处对派出所2020年年度队伍建设绩效考核扣分标准");
                    examAutoEvaluation.setEvaluationId(evI);//被考评对象id
                    examAutoEvaluation.setModelId("1ccfeca0f49543d49f8833feb21735e3");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setOption("学习上级党委、纪委下发的相关违法违纪通报及《廉政教育必读》，并建立专门台账，台账资料不全，未开展教育或资料丢失的");
                    examAutoEvaluation.setOptionId("617041c9745d4c47b99e3eefde7d5c2c");
                    examAutoEvaluation.setScore("1");

                    this.save(examAutoEvaluation);

                }
            }
        }
        for (int n = 0; n < bhcPartyList.size(); n++) {
            AffairGeneralSituation affairGeneralSituation = bhcPartyList.get(n);
            String idNumber = affairGeneralSituation.getId();
            String name = affairGeneralSituation.getPartyOrganization();

            List<String> evId = examAutoEvaluationDao.selectEvId(idNumber);
            for (int e = 0; e < evId.size(); e++) {
                String evI = evId.get(e);
                Integer number = affairLzxxjyActivitiesService.selectNumber(yearL,yearT,idNumber);
                if (number < 1) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("2");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + year + "年" + "未按要求组织学习《廉政教育必读》及上级下发的违法违纪通知通报，每次扣1分。");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(idNumber);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel(" ");
                    examAutoEvaluation.setEvaluationId(evI);//被考评对象id
                    examAutoEvaluation.setModelId(" ");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setOption(" ");
                    examAutoEvaluation.setOptionId(" ");
                    examAutoEvaluation.setScore("1");

                    this.save(examAutoEvaluation);

                }
            }
        }
    }*/

    /*
    *首页-政工简报
    *
    * 处考处机关
    *
    * 年度
    * */
    @Transactional(readOnly = false)
    public void ckcZgjb(String year) {

        List<Office> nncPartyList = officeDao.getChuUnit("34", "1");
        List<Office> lzcPartyList = officeDao.getChuUnit("95", "1");
        List<Office> bhcPartyList = officeDao.getChuUnit("156", "1");
        //所有处单位id
        List<String> idList = new ArrayList<>();

        for (int n = 0; n < nncPartyList.size(); n++){
            String id = nncPartyList.get(n).getId();
            idList.add(id);
        }
        for (int n = 0; n < lzcPartyList.size(); n++){
            String id = lzcPartyList.get(n).getId();
            idList.add(id);
        }
        for (int n = 0; n < bhcPartyList.size(); n++){
            String id = bhcPartyList.get(n).getId();
            idList.add(id);
        }
        //调研id
        String dyId = "3cac8ac633dd43e2845f6c45b0c9c4ea";

        //政工id
        String zgId = "d82d42b9d0ab4c34b5405dbb8e398020";

        Integer y = Integer.valueOf(year);
        Integer lastYear = y - 1;
        Map<String, String> timeMap = this.yearTime(year);
        String yearL = timeMap.get("yearL");
        String yearT = timeMap.get("yearT");
        Double d = 0.2;

        for (int n = 0; n < idList.size(); n++) {
            String idNumber = idList.get(n);
            String name = officeDao.selectUnitName(idNumber);
            String code = officeDao.selectUnitCode(idNumber);
                if (name.contains("南宁")) {
                    Integer number = articleService.selectNumber(dyId, yearL,yearT, idNumber);
                    Integer zgNumber = articleService.selectNumber(zgId, yearL,yearT, idNumber);
                    if (number < 20) {
                        int num = 20 - number;
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("4");
                        examAutoEvaluation.setPeriod("2");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setDetails(name + year + "年" + "未及时上报调研文章或调研文章不合格的，扣1分。");
                        examAutoEvaluation.setUnit(name);
                        examAutoEvaluation.setUnitId(idNumber);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");

                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setModel(" ");
                        examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));//被考评对象id
                        examAutoEvaluation.setModelId(" ");
                        examAutoEvaluation.setOption(" ");
                        examAutoEvaluation.setOptionId(" ");
                        examAutoEvaluation.setScore(String.valueOf(num * d));
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","政工简报");
                        this.save(examAutoEvaluation);
                    } else if (zgNumber < 20) {
                        int num = 20 - zgNumber;
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("4");
                        examAutoEvaluation.setPeriod("2");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setDetails(name + year + "年" +"未及时上报调研文章或调研文章不合格的，扣1分。");
                        examAutoEvaluation.setUnit(name);
                        examAutoEvaluation.setUnitId(idNumber);

                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel(" ");
                        examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));//被考评对象id
                        examAutoEvaluation.setModelId(" ");
                        examAutoEvaluation.setOption(" ");
                        examAutoEvaluation.setOptionId(" ");
                        examAutoEvaluation.setScore(String.valueOf(num * d));

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","政工简报");
                        this.save(examAutoEvaluation);
                    }
                } else if (name.contains("柳州")) {

                    String idN = affairGeneralSituationService.selectUnitId(name);
                    Integer zgNumber = articleService.selectNumber(zgId, yearL,yearT, idNumber);
                    Integer number = articleService.selectNumber(dyId, yearL,yearT, idN);
                    if (number < 20) {
                        int num = 20 - number;
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("4");
                        examAutoEvaluation.setPeriod("2");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setDetails(name+year+"年"+"未及时上报调研文章或调研文章不合格的，扣1分。");
                        examAutoEvaluation.setUnit(name);
                        examAutoEvaluation.setUnitId(idN);
                        examAutoEvaluation.setAssess("");

                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel(" ");
                        examAutoEvaluation.setModelId(" ");
                        examAutoEvaluation.setOption(" ");
                        examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));//被考评对象id
                        examAutoEvaluation.setOptionId(" ");
                        examAutoEvaluation.setScore(String.valueOf(num * d));

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","政工简报");
                        this.save(examAutoEvaluation);
                    } else if (zgNumber < 20) {
                        int num = 20 - zgNumber;
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("4");
                        examAutoEvaluation.setPeriod("2");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setDetails(name+year+"年"+"未及时上报调研文章或调研文章不合格的，扣1分。");
                        examAutoEvaluation.setUnit(name);

                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setUnitId(idNumber);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel(" ");
                        examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));//被考评对象id
                        examAutoEvaluation.setModelId(" ");
                        examAutoEvaluation.setOption(" ");
                        examAutoEvaluation.setOptionId(" ");
                        examAutoEvaluation.setScore(String.valueOf(num * d));

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","政工简报");
                        this.save(examAutoEvaluation);
                    }
                } else if (name.contains("北海")) {
                    String idN = affairGeneralSituationService.selectUnitId(name);
                    Integer zgNumber = articleService.selectNumber(zgId, yearL,yearT, idNumber);
                    Integer number = articleService.selectNumber(dyId, yearL,yearT, idN);
                    if (number < 8) {
                        int num = 8 - number;
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("4");
                        examAutoEvaluation.setPeriod("2");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setDetails(name+year+"年"+"未及时上报调研文章或调研文章不合格的，扣1分。");
                        examAutoEvaluation.setUnit(name);
                        examAutoEvaluation.setUnitId(idN);

                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));//被考评对象id
                        examAutoEvaluation.setModel(" ");
                        examAutoEvaluation.setModelId(" ");
                        examAutoEvaluation.setOption(" ");
                        examAutoEvaluation.setOptionId(" ");
                        examAutoEvaluation.setScore(String.valueOf(num * d));

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","政工简报");
                        this.save(examAutoEvaluation);
                    } else if (zgNumber < 8) {
                        int num = 8 - zgNumber;
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("4");
                        examAutoEvaluation.setPeriod("2");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setDetails(name+year+"年"+"未及时上报调研文章或调研文章不合格的，扣1分。");
                        examAutoEvaluation.setUnit(name);

                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setUnitId(idN);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel(" ");
                        examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));//被考评对象id
                        examAutoEvaluation.setModelId(" ");
                        examAutoEvaluation.setOption(" ");
                        examAutoEvaluation.setOptionId(" ");
                        examAutoEvaluation.setScore(String.valueOf(num * d));

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","政工简报");
                        this.save(examAutoEvaluation);

                }
            }
        }
    }


    /*
    * 首页-政工简报
    *
    * 处考派出所
    *
    * 年度
    *
    * */
    @Transactional(readOnly = false)
    public void ckpcsZgjb(String year) {

        List<Office> nncPartyList = officeDao.getChuUnit("34", "2");
        List<Office> lzcPartyList = officeDao.getChuUnit("95", "2");
        List<Office> bhcPartyList = officeDao.getChuUnit("156", "2");

        //所有处单位id
        List<String> idList = new ArrayList<>();

        for (int n = 0; n < nncPartyList.size(); n++){
            String id = nncPartyList.get(n).getId();
            idList.add(id);
        }
        for (int n = 0; n < lzcPartyList.size(); n++){
            String id = lzcPartyList.get(n).getId();
            idList.add(id);
        }
        for (int n = 0; n < bhcPartyList.size(); n++){
            String id = bhcPartyList.get(n).getId();
            idList.add(id);
        }

        //调研id
        String dyId = "3cac8ac633dd43e2845f6c45b0c9c4ea";

        //政工id
        String zgId = "d82d42b9d0ab4c34b5405dbb8e398020";

        Integer y = Integer.valueOf(year);
        Integer lastYear = y - 1;
        Map<String, String> timeMap = this.yearTime(year);
        String yearL = timeMap.get("yearL");
        String yearT = timeMap.get("yearT");
        Double d = 2.0;

        for (int n = 0; n < idList.size(); n++) {
            String idNumber = idList.get(n);
            String name = officeDao.selectUnitName(idNumber);
            String code = officeDao.selectUnitCode(idNumber);

                    if (name.contains("南宁")) {
                        Integer number = articleService.selectNumber(dyId, yearL,yearT, idNumber);
                        Integer zgNumber = articleService.selectNumber(zgId, yearL,yearT, idNumber);

                        if (number < 20) {
                            int num = 20 - number;
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("4");
                            examAutoEvaluation.setPeriod("2");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setDetails(name + year + "年" + "未及时上报调研文章或调研文章不合格的，扣1分。");
                            examAutoEvaluation.setUnit(name);
                            examAutoEvaluation.setUnitId(idNumber);
                            examAutoEvaluation.setAssess("");
                            examAutoEvaluation.setAssessId("");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoEvaluation.setModel(" ");
                            examAutoEvaluation.setModelId(" ");
                            examAutoEvaluation.setOption(" ");
                            examAutoEvaluation.setOptionId(" ");
                            examAutoEvaluation.setScore(String.valueOf(num * d));

                            examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));//被考评对象id
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","政工简报");
                            this.save(examAutoEvaluation);
                        } else if (zgNumber < 20) {
                            int num = 20 - zgNumber;
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("4");
                            examAutoEvaluation.setPeriod("2");
                            examAutoEvaluation.setYear(year);

                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoEvaluation.setDetails(name+year+"年"+"未及时上报调研文章或调研文章不合格的，扣1分。");
                            examAutoEvaluation.setUnit(name);
                            examAutoEvaluation.setUnitId(idNumber);
                            examAutoEvaluation.setAssess("");
                            examAutoEvaluation.setAssessId("");
                            examAutoEvaluation.setModel(" ");
                            examAutoEvaluation.setModelId(" ");
                            examAutoEvaluation.setOption(" ");
                            examAutoEvaluation.setOptionId(" ");
                            examAutoEvaluation.setScore(String.valueOf(num * d));

                            examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));//被考评对象id
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","政工简报");
                            this.save(examAutoEvaluation);
                        }
                    } else if (name.contains("柳州")) {
                        Integer number = articleService.selectNumber(dyId, yearL,yearT, idNumber);
                        Integer zgNumber = articleService.selectNumber(zgId, yearL,yearT, idNumber);
                        if (number < 20) {
                            int num = 20 - number;
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("4");
                            examAutoEvaluation.setPeriod("2");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setDetails(name+year+"年"+"未及时上报调研文章或调研文章不合格的，扣1分。");
                            examAutoEvaluation.setUnit(name);
                            examAutoEvaluation.setUnitId(idNumber);

                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoEvaluation.setAssess("");
                            examAutoEvaluation.setAssessId("");
                            examAutoEvaluation.setModel(" ");
                            examAutoEvaluation.setModelId(" ");
                            examAutoEvaluation.setOption(" ");
                            examAutoEvaluation.setOptionId(" ");
                            examAutoEvaluation.setScore(String.valueOf(num * d));

                            examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));//被考评对象id
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","政工简报");
                            this.save(examAutoEvaluation);
                        } else if (zgNumber < 20) {
                            int num = 20 - zgNumber;
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("4");
                            examAutoEvaluation.setPeriod("2");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setDetails(name+year+"年"+"未及时上报调研文章或调研文章不合格的，扣1分。");
                            examAutoEvaluation.setUnit(name);
                            examAutoEvaluation.setUnitId(idNumber);
                            examAutoEvaluation.setAssess("");

                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoEvaluation.setAssessId("");
                            examAutoEvaluation.setModel(" ");
                            examAutoEvaluation.setModelId(" ");
                            examAutoEvaluation.setOption(" ");
                            examAutoEvaluation.setOptionId(" ");
                            examAutoEvaluation.setScore(String.valueOf(num * d));

                            examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));//被考评对象id
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","政工简报");
                            this.save(examAutoEvaluation);
                        }
                    } else if (name.contains("北海")) {


                        Integer number = articleService.selectNumber(dyId, yearL,yearT, idNumber);
                        Integer zgNumber = articleService.selectNumber(zgId, yearL,yearT, idNumber);
                        if (number < 8) {
                            int num = 8 - number;
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("4");
                            examAutoEvaluation.setPeriod("2");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setDetails(name+year+"年"+"未及时上报调研文章或调研文章不合格的，扣1分。");
                            examAutoEvaluation.setUnit(name);
                            examAutoEvaluation.setUnitId(idNumber);

                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoEvaluation.setAssess("");
                            examAutoEvaluation.setAssessId("");
                            examAutoEvaluation.setModel(" ");
                            examAutoEvaluation.setModelId(" ");
                            examAutoEvaluation.setOption(" ");
                            examAutoEvaluation.setOptionId(" ");
                            examAutoEvaluation.setScore(String.valueOf(num * d));

                            examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));//被考评对象id
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","政工简报");
                            this.save(examAutoEvaluation);
                        } else if (zgNumber < 8) {
                            int num = 8 - zgNumber;
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("4");
                            examAutoEvaluation.setPeriod("2");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setDetails(name+year+"年"+"未及时上报调研文章或调研文章不合格的，扣1分。");
                            examAutoEvaluation.setUnit(name);

                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoEvaluation.setUnitId(idNumber);
                            examAutoEvaluation.setAssess("");
                            examAutoEvaluation.setAssessId("");
                            examAutoEvaluation.setModel(" ");
                            examAutoEvaluation.setModelId(" ");
                            examAutoEvaluation.setOption(" ");
                            examAutoEvaluation.setOptionId(" ");
                            examAutoEvaluation.setScore(String.valueOf(num * d));
                            examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));//被考评对象id
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","政工简报");
                            this.save(examAutoEvaluation);


                }
            }
        }
    }

    /*
     * 月度
     * 公安处领导班子
     * 宣传思想-立功创模-荣誉管理-奖项维护
     *
     * */
    public void gacJxwh(String checkTime) {
        String year = checkTime.substring(0, 4);
        Integer y = Integer.valueOf(year);
        String month = checkTime.substring(checkTime.length() - 2);
        Integer m = Integer.valueOf(month);

        Map<String, String> map = this.monthTime(checkTime);
        String yearL = map.get("yearL");
        String yearT = map.get("yearT");

        //所有的公安处领导身份证

        String chuRoleId = "230e916609a349e68f7186f784e11419";

        ExamWorkflowDefine define = new ExamWorkflowDefine();
        define.setName(chuRoleId);
        List<User> chuList = examWorkflowSegmentsDefineService.queryPoliceDatas(define);
        List<String> chuIdList = new ArrayList<>();
        for (int c = 0; c < chuList.size(); c++) {
            User user = chuList.get(c);
            String idN = user.getNo();
            chuIdList.add(idN);
        }

        for (int i = 0; i < chuIdList.size(); i++) {
            String idN = chuIdList.get(i);
            String name = userDao.selectName(idN);
            //所有获得的奖励
            List<AffairPersonalReward> affairPersonalRewardList = new ArrayList<>();
            affairPersonalRewardList = affairPersonalRewardService.selectAllReward(idN, yearL,yearT);
            for (int r = 0; r < affairPersonalRewardList.size(); r++) {
                AffairPersonalReward affairPersonalReward = affairPersonalRewardList.get(r);
                String rewardName = affairPersonalReward.getRewardName();
                String rewardLevel = affairPersonalReward.getLevel();
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("2");
                examAutoEvaluation.setEvalType("5");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);

                examAutoEvaluation.setName(name);
                examAutoEvaluation.setIdNumber(idN);
                //获得个人嘉奖
                if ("4".equals(rewardName)) {
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "获得个人嘉奖，加2分");
                    examAutoEvaluation.setScore("2");
                    examAutoEvaluation.setModel("2020年月度对公安处领导班子成员绩效考核加分标准");
                    examAutoEvaluation.setModelId("1b2068b9ecd14f4d8e2c5dbb9b25e96a");
                    examAutoEvaluation.setOption("本人获得个人嘉奖的");
                    examAutoEvaluation.setOptionId("1a1fa91ff7664750b5775c7a4053a1df");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idN));

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_本人获得个人嘉奖的");
                    examAutoEvaluationDao.delete(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                //获得个人三等功
                if ("3".equals(rewardName)) {
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "获得个人三等功，加3分");
                    examAutoEvaluation.setScore("3");
                    examAutoEvaluation.setModel("2020年月度对公安处领导班子成员绩效考核加分标准");
                    examAutoEvaluation.setModelId("1b2068b9ecd14f4d8e2c5dbb9b25e96a");
                    examAutoEvaluation.setOption("本人获得个人三等功的");
                    examAutoEvaluation.setOptionId("bc44c709edb74e009198d8f9e3f9696d");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idN));

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_本人获得个人三等功的");
                    examAutoEvaluationDao.delete(examAutoEvaluation);
                    this.save(examAutoEvaluation);

                }
                if ("2".equals(rewardName)) {
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "获得个人二等功，加5分");
                    examAutoEvaluation.setScore("5");
                    examAutoEvaluation.setModel("2020年月度对公安处领导班子成员绩效考核加分标准");
                    examAutoEvaluation.setModelId("1b2068b9ecd14f4d8e2c5dbb9b25e96a");
                    examAutoEvaluation.setOption("本人获得个人二等功的");
                    examAutoEvaluation.setOptionId("541640cc455f43308e23ccecd8b408fa");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idN));

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_本人获得个人二等功的");
                    examAutoEvaluationDao.delete(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if ("1".equals(rewardName)) {
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "获得个人一等功，加6分");
                    examAutoEvaluation.setScore("6");
                    examAutoEvaluation.setModel("2020年月度对公安处领导班子成员绩效考核加分标准");
                    examAutoEvaluation.setModelId("1b2068b9ecd14f4d8e2c5dbb9b25e96a");
                    examAutoEvaluation.setOption("本人获得个人一等功的");
                    examAutoEvaluation.setOptionId("23028fa771724c2f93f017e0e5feab5f");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idN));

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_本人获得个人一等功的");
                    examAutoEvaluationDao.delete(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }

                /* 个人获得公安处级先进（综合类）的，加1分；*/
                if (("20".equals(rewardName)|| "9".equals(rewardName)) && ("9".equals(rewardLevel) || "10".equals(rewardLevel))) {
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "获得公安处级先进（综合类），加1分；");
                    examAutoEvaluation.setScore("1");
                    examAutoEvaluation.setModel("2020年月度对公安处领导班子成员绩效考核加分标准");
                    examAutoEvaluation.setModelId("1b2068b9ecd14f4d8e2c5dbb9b25e96a");
                    examAutoEvaluation.setOption("个人获得公安处级先进（综合类）");
                    examAutoEvaluation.setOptionId("0ff9a132e6e24c4c936bc57668d9fafb");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idN));

                   /* examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"");*/
                    examAutoEvaluationDao.delete(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                /* 本人被评为公安局级先进的，加2分；*/
                if (("20".equals(rewardName) || "9".equals(rewardName)) && "8".equals(rewardLevel)) {
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "被评为公安局级先进，加2分；");
                    examAutoEvaluation.setScore("2");
                    examAutoEvaluation.setModel("2020年月度对公安处领导班子成员绩效考核加分标准");
                    examAutoEvaluation.setModelId("1b2068b9ecd14f4d8e2c5dbb9b25e96a");
                    examAutoEvaluation.setOption("个人获得公安局级先进（综合类）");
                    examAutoEvaluation.setOptionId("c342be9d64d94e7eaca75238ce89da0b");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idN));

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_本人被评为公安局级先进");
                    examAutoEvaluationDao.delete(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                /* 本人被评为厅局级先进的，加3分；*/
                if (("20".equals(rewardName)|| "9".equals(rewardName)) && "7".equals(rewardLevel)) {
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "被评为厅局级先进，加3分；");
                    examAutoEvaluation.setScore("3");
                    examAutoEvaluation.setModel("2020年月度对公安处领导班子成员绩效考核加分标准");
                    examAutoEvaluation.setModelId("1b2068b9ecd14f4d8e2c5dbb9b25e96a");
                    examAutoEvaluation.setOption("个人获得厅局级先进（综合类）");
                    examAutoEvaluation.setOptionId("55982ccf2d66487e9329f7f86a9af443");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idN));

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_本人被评为厅局级先进");
                    examAutoEvaluationDao.delete(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                /*本人被评为省部级先进的加5分；*/
                if (("20".equals(rewardName) || "9".equals(rewardName)) && ("6".equals(rewardLevel) || "5".equals(rewardLevel) || "4".equals(rewardLevel) || "3".equals(rewardLevel))) {
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "被评为省部级先进加5分；");
                    examAutoEvaluation.setScore("5");
                    examAutoEvaluation.setModel("2020年月度对公安处领导班子成员绩效考核加分标准");
                    examAutoEvaluation.setModelId("1b2068b9ecd14f4d8e2c5dbb9b25e96a");
                    examAutoEvaluation.setOption("个人获得省部级先进（综合类）");
                    examAutoEvaluation.setOptionId("792305d5e8b74275aae9692667b2779d");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idN));

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_本人被评为省部级先进");
                    examAutoEvaluationDao.delete(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                /*本人被评为全国先进的，加8分。*/
                if (("20".equals(rewardName) || "9".equals(rewardName)) && ("1".equals(rewardLevel) || "2".equals(rewardLevel))) {
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "被评为省部级先进加5分；");
                    examAutoEvaluation.setScore("8");
                    examAutoEvaluation.setModel("2020年月度对公安处领导班子成员绩效考核加分标准");
                    examAutoEvaluation.setModelId("1b2068b9ecd14f4d8e2c5dbb9b25e96a");
                    examAutoEvaluation.setOption("个人获得全国先进（综合类）");
                    examAutoEvaluation.setOptionId("87a75ede7bf546c59c3dfada24c390a3");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idN));

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_本人被评为全国先进");
                    examAutoEvaluationDao.delete(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
        }
    }


    /*
     * 年度
     * 公安处领导班子
     * 宣传思想-立功创模-荣誉管理-奖项维护
     *
     * */
    public void gacJxwhYear(String year) {

        Map<String, String> map = this.yearTime(year);
        String yearL = map.get("yearL");
        String yearT = map.get("yearT");
        //所有的公安处领导身份证

        String chuRoleId = "230e916609a349e68f7186f784e11419";

        ExamWorkflowDefine define = new ExamWorkflowDefine();
        define.setName(chuRoleId);
        List<User> chuList = examWorkflowSegmentsDefineService.queryPoliceDatas(define);
        List<String> chuIdList = new ArrayList<>();
        for (int c = 0; c < chuList.size(); c++) {
            User user = chuList.get(c);
            String idN = user.getNo();
            chuIdList.add(idN);
        }

        for (int i = 0; i < chuIdList.size(); i++) {
            String idN = chuIdList.get(i);
            String name = userDao.selectName(idN);
            //所有获得的奖励
            List<AffairPersonalReward> affairPersonalRewardList = new ArrayList<>();
            affairPersonalRewardList = affairPersonalRewardService.selectAllRewardYear(idN, yearL,yearT);
            for (int r = 0; r < affairPersonalRewardList.size(); r++) {
                AffairPersonalReward affairPersonalReward = affairPersonalRewardList.get(r);
                String rewardName = affairPersonalReward.getRewardName();
                String rewardLevel = affairPersonalReward.getLevel();
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("2");
                examAutoEvaluation.setEvalType("5");
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setName(name);
                examAutoEvaluation.setIdNumber(idN);
                //获得个人嘉奖
                if ("4".equals(rewardName)) {
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "获得个人嘉奖的，加2分");
                    examAutoEvaluation.setScore("2");
                    examAutoEvaluation.setModel("2020年年度对中、基层领导干部(公安处领导除外)绩效考核加分标准");
                    examAutoEvaluation.setModelId("6921ad30851d4f0f96bd3db80c8505c0");
                    examAutoEvaluation.setOption("个人获得嘉奖");
                    examAutoEvaluation.setOptionId("7de2f4318330473eb809b5486cb91cc1");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idN));

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_本人获得个人嘉奖的");
                    examAutoEvaluationDao.delete(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                //获得个人三等功
                if ("3".equals(rewardName)) {
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "获得个人三等，加3分");
                    examAutoEvaluation.setScore("3");
                    examAutoEvaluation.setModel("2020年年度对中、基层领导干部(公安处领导除外)绩效考核加分标准");
                    examAutoEvaluation.setModelId("6921ad30851d4f0f96bd3db80c8505c0");
                    examAutoEvaluation.setOption("个人获得三等功");
                    examAutoEvaluation.setOptionId("6e44714ea2c94eb08403d4a31c7abd57");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idN));

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_本人获得个人三等功的");
                    examAutoEvaluationDao.delete(examAutoEvaluation);
                    this.save(examAutoEvaluation);

                }
                if ("2".equals(rewardName)) {
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "获得个人二等功，加5分");
                    examAutoEvaluation.setScore("5");
                    examAutoEvaluation.setModel("2020年年度对中、基层领导干部(公安处领导除外)绩效考核加分标准");
                    examAutoEvaluation.setModelId("6921ad30851d4f0f96bd3db80c8505c0");
                    examAutoEvaluation.setOption("个人获得二等功");
                    examAutoEvaluation.setOptionId("53864b8c582d464ead30635c5dc69eba");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idN));

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_本人获得个人二等功的");
                    examAutoEvaluationDao.delete(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if ("1".equals(rewardName)) {
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "获得个人一等功，加6分");
                    examAutoEvaluation.setScore("6");
                    examAutoEvaluation.setModel("2020年年度对中、基层领导干部(公安处领导除外)绩效考核加分标准");
                    examAutoEvaluation.setModelId("6921ad30851d4f0f96bd3db80c8505c0");
                    examAutoEvaluation.setOption("个人获得一等功");
                    examAutoEvaluation.setOptionId("0dcbd08cf5ed4a4589897821e2f066db");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idN));

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_本人获得个人一等功的");
                    examAutoEvaluationDao.delete(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }

                /* 个人获得公安处级先进（综合类）的，加1分；*/
                if (("20".equals(rewardName)|| "9".equals(rewardName)) && ("9".equals(rewardLevel) || "10".equals(rewardLevel))) {//20  9
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "个人获得公安处级先进（综合类）的，加1分；");
                    examAutoEvaluation.setScore("1");
                    examAutoEvaluation.setModel("2020年年度对中、基层领导干部(公安处领导除外)绩效考核加分标准");
                    examAutoEvaluation.setModelId("6921ad30851d4f0f96bd3db80c8505c0");
                    examAutoEvaluation.setOption("个人获得公安处级先进（综合类）");
                    examAutoEvaluation.setOptionId("8237e3a98e734b4e9594babda221b593");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idN));

                    examAutoEvaluationDao.delete(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                /* 本人被评为公安局级先进的，加2分；*/
                if (("20".equals(rewardName)|| "9".equals(rewardName)) && "8".equals(rewardLevel)) {//20  9
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "被评为公安局级先进，加2分；");
                    examAutoEvaluation.setScore("2");
                    examAutoEvaluation.setModel("2020年年度对中、基层领导干部(公安处领导除外)绩效考核加分标准");
                    examAutoEvaluation.setModelId("6921ad30851d4f0f96bd3db80c8505c0");
                    examAutoEvaluation.setOption("个人获得公安局级先进（综合类）");
                    examAutoEvaluation.setOptionId("abd110d9a59943a787b069bc84091617");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idN));

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_本人被评为公安局级先进");
                    examAutoEvaluationDao.delete(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                /* 本人被评为厅局级先进的，加3分；*/
                if (("20".equals(rewardName)|| "9".equals(rewardName)) && "7".equals(rewardLevel)) {//20  9
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "被评为厅局级先进，加3分；");
                    examAutoEvaluation.setScore("3");
                    examAutoEvaluation.setModel("2020年年度对中、基层领导干部(公安处领导除外)绩效考核加分标准");
                    examAutoEvaluation.setModelId("6921ad30851d4f0f96bd3db80c8505c0");
                    examAutoEvaluation.setOption("个人获得厅局级先进（综合类）");
                    examAutoEvaluation.setOptionId("5a61da6c294f449fad6caa07bd2cc3a2");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idN));

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_本人被评为厅局级先进");
                    examAutoEvaluationDao.delete(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                /*本人被评为省部级先进的加5分；*/
                if (("20".equals(rewardName)|| "9".equals(rewardName)) && ("6".equals(rewardLevel) || "5".equals(rewardLevel) || "4".equals(rewardLevel) || "3".equals(rewardLevel))) {//20  9
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "被评为省部级先进加5分；");
                    examAutoEvaluation.setScore("5");
                    examAutoEvaluation.setModel("2020年年度对中、基层领导干部(公安处领导除外)绩效考核加分标准");
                    examAutoEvaluation.setModelId("6921ad30851d4f0f96bd3db80c8505c0");
                    examAutoEvaluation.setOption("个人获得省部级先进（综合类）");
                    examAutoEvaluation.setOptionId("b8415858d8f644d0abeb07070281b21f");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idN));

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_本人被评为省部级先进");
                    examAutoEvaluationDao.delete(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                /*本人被评为全国先进的，加8分。*/
                if (("20".equals(rewardName)|| "9".equals(rewardName)) && ("1".equals(rewardLevel) || "2".equals(rewardLevel))) {//20  9
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "被评为省部级先进加5分；");
                    examAutoEvaluation.setScore("8");
                    examAutoEvaluation.setModel("2020年年度对中、基层领导干部(公安处领导除外)绩效考核加分标准");
                    examAutoEvaluation.setModelId("6921ad30851d4f0f96bd3db80c8505c0");
                    examAutoEvaluation.setOption("个人获得全国先进（综合类）");
                    examAutoEvaluation.setOptionId("e8ace1b1a173480c9607dd93dd20bf5a");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idN));

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_本人被评为全国先进");
                    examAutoEvaluationDao.delete(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
        }
    }

    /*
     * 月度
     * 中基层领导班子
     * 宣传思想-立功创模-荣誉管理-奖项维护
     * */
    public void zjcJxwh(String checkTime) {

        String year = checkTime.substring(0, 4);
        Integer y = Integer.valueOf(year);
        String month = checkTime.substring(checkTime.length() - 2);
        Integer m = Integer.valueOf(month);
        Map<String, String> map = this.monthTime(checkTime);
        String yearL = map.get("yearL");
        String yearT = map.get("yearT");

        /*中基层*/
        String juJiGuanRoleId = "13bac520ae4d4160b595384691b443fd";
        String chuJiGuanRoleId = "62cf6aaea0184d3b8cfbce1700ad0e38";
        String suoduiJiGuanRoleId = "ff24c3288860447d867d08d462a2a2b9";

        String[] zhongJiCeng = new String[3];
        zhongJiCeng[0] = chuJiGuanRoleId;
        zhongJiCeng[1] = juJiGuanRoleId;
        zhongJiCeng[2] = suoduiJiGuanRoleId;
        String companyId = "156";
        List<User> temzhongJiCengList = new ArrayList<>();
/*        Arrays.stream(zhongJiCeng).forEach(s -> {
            ExamWorkflowDefine zhongDefine = new ExamWorkflowDefine();
            zhongDefine.setName(s);
            if (companyId.equals("1")) {
                zhongDefine.getSqlMap().put("dsf", "and u.company_id = '" + companyId + "' and u.office_id not in ('34','95','156')");
            } else {
                zhongDefine.getSqlMap().put("dsf", "and u.company_id = '" + companyId + "'");
            }
            temzhongJiCengList.addAll(examWorkflowSegmentsDefineService.queryPoliceDatas(zhongDefine));
        });*/
        Arrays.stream(zhongJiCeng).forEach(s -> {
            ExamWorkflowDefine zhongDefine = new ExamWorkflowDefine();
            zhongDefine.setName(s);
            temzhongJiCengList.addAll(examWorkflowSegmentsDefineService.queryPoliceDatas(zhongDefine));
        });
        for (int z = 0; z < temzhongJiCengList.size(); z++) {
            User user = temzhongJiCengList.get(z);
            String idN = user.getNo();
            String name = user.getName();
            //所有获得的奖励
            List<AffairPersonalReward> affairPersonalRewardList = new ArrayList<>();
            affairPersonalRewardList = affairPersonalRewardService.selectAllReward(idN, yearL,yearT);
            for (int r = 0; r < affairPersonalRewardList.size(); r++) {
                AffairPersonalReward affairPersonalReward = affairPersonalRewardList.get(r);
                String rewardName = affairPersonalReward.getRewardName();
                String rewardLevel = affairPersonalReward.getLevel();
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("2");
                examAutoEvaluation.setEvalType("6");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setName(name);
                examAutoEvaluation.setIdNumber(idN);

                //获得个人嘉奖
                if ("4".equals(rewardName)) {
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "获得个人嘉奖的，加2分");
                    examAutoEvaluation.setScore("5");
                    examAutoEvaluation.setModel("2020年月度对中、基层领导干部(公安处领导除外)绩效考核加分标准");
                    examAutoEvaluation.setModelId("8c649c304296427c95c85ec150054694");
                    examAutoEvaluation.setOption("个人获得嘉奖");
                    examAutoEvaluation.setOptionId("c4f79c2949ee42b394cdd00f2e996da5");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idN));

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_个人获得嘉奖");
                    examAutoEvaluationDao.delete(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                //获得个人三等功
                if ("3".equals(rewardName)) {
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "获得个人三等功的，加3分");
                    examAutoEvaluation.setScore("10");
                    examAutoEvaluation.setModel("2020年月度对中、基层领导干部(公安处领导除外)绩效考核加分标准");
                    examAutoEvaluation.setModelId("8c649c304296427c95c85ec150054694");
                    examAutoEvaluation.setOption("个人获得三等功");
                    examAutoEvaluation.setOptionId("6a9566dc532e4e89ba0d44772b7e6975");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idN));

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_个人获得三等功");
                    examAutoEvaluationDao.delete(examAutoEvaluation);
                    this.save(examAutoEvaluation);

                }
                //获得个人二等功
                if ("2".equals(rewardName)) {
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "获得个人二等功的，加5分");
                    examAutoEvaluation.setScore("15");
                    examAutoEvaluation.setModel("2020年月度对中、基层领导干部(公安处领导除外)绩效考核加分标准");
                    examAutoEvaluation.setModelId("8c649c304296427c95c85ec150054694");
                    examAutoEvaluation.setOption("个人获得二等功");
                    examAutoEvaluation.setOptionId("24abeb15c7fd4df5affb1cdbee303483");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idN));

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_个人获得二等功");
                    examAutoEvaluationDao.delete(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                //获得个人一等功
                if ("1".equals(rewardName)) {
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "获得个人一等功的，加6分");
                    examAutoEvaluation.setScore("20");
                    examAutoEvaluation.setModel("2020年月度对中、基层领导干部(公安处领导除外)绩效考核加分标准");
                    examAutoEvaluation.setModelId("8c649c304296427c95c85ec150054694");
                    examAutoEvaluation.setOption("个人获得一等功");
                    examAutoEvaluation.setOptionId("aac1aad0ad984c429defcb86ce948f7b");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idN));

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_个人获得一等功");
                    examAutoEvaluationDao.delete(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                //公安处级先进3
                if (("20".equals(rewardName)|| "9".equals(rewardName)) && ("9".equals(rewardLevel) || "10".equals(rewardLevel))) {
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "被评为公安处级先进的加5分；");
                    examAutoEvaluation.setScore("3");
                    examAutoEvaluation.setModel("2020年月度对中、基层领导干部(公安处领导除外)绩效考核加分标准");
                    examAutoEvaluation.setModelId("8c649c304296427c95c85ec150054694");
                    examAutoEvaluation.setOption("个人获得公安处级先进（综合类）");
                    examAutoEvaluation.setOptionId("0ff9a132e6e24c4c936bc57668d9fafb");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idN));

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_个人获得公安处级先进（综合类）");
                    examAutoEvaluationDao.delete(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }//公安局级先进5
                if (("20".equals(rewardName) || "9".equals(rewardName)) && "9".equals(rewardLevel)) {
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "被评为公安局级先进的加5分；");
                    examAutoEvaluation.setScore("5");
                    examAutoEvaluation.setModel("2020年月度对中、基层领导干部(公安处领导除外)绩效考核加分标准");
                    examAutoEvaluation.setModelId("8c649c304296427c95c85ec150054694");
                    examAutoEvaluation.setOption("个人获得公安局级先进（综合类）");
                    examAutoEvaluation.setOptionId("c342be9d64d94e7eaca75238ce89da0b");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idN));

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_个人获得公安局级先进（综合类）");
                    examAutoEvaluationDao.delete(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }//厅局级先进10
                if (("20".equals(rewardName) || "9".equals(rewardName)) && "7".equals(rewardLevel)) {
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "被评为厅局级先进的加5分；");
                    examAutoEvaluation.setScore("10");
                    examAutoEvaluation.setModel("2020年月度对中、基层领导干部(公安处领导除外)绩效考核加分标准");
                    examAutoEvaluation.setModelId("8c649c304296427c95c85ec150054694");
                    examAutoEvaluation.setOption("个人获得厅局级先进（综合类）");
                    examAutoEvaluation.setOptionId("6d0602c616794764a34b0b0f510c97e9");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idN));

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_个人获得厅局级先进（综合类）");
                    examAutoEvaluationDao.delete(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }//省部级先进15
                if (("20".equals(rewardName) || "9".equals(rewardName)) && ("6".equals(rewardLevel) || "5".equals(rewardLevel) || "4".equals(rewardLevel) || "3".equals(rewardLevel))) {
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "被评为省部级先进的加5分；");
                    examAutoEvaluation.setScore("15");
                    examAutoEvaluation.setModel("2020年月度对中、基层领导干部(公安处领导除外)绩效考核加分标准");
                    examAutoEvaluation.setModelId("8c649c304296427c95c85ec150054694");
                    examAutoEvaluation.setOption("个人获得省部级先进（综合类）");
                    examAutoEvaluation.setOptionId("792305d5e8b74275aae9692667b2779d");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idN));

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_个人获得省部级先进（综合类）");
                    examAutoEvaluationDao.delete(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }//全国级先进25
                if (("20".equals(rewardName) || "9".equals(rewardName)) && ("1".equals(rewardLevel) || "2".equals(rewardLevel))) {
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "被评为全国级先进的加5分；");
                    examAutoEvaluation.setScore("25");
                    examAutoEvaluation.setModel("2020年月度对中、基层领导干部(公安处领导除外)绩效考核加分标准");
                    examAutoEvaluation.setModelId("8c649c304296427c95c85ec150054694");
                    examAutoEvaluation.setOption("个人获得全国先进（综合类）");
                    examAutoEvaluation.setOptionId("87a75ede7bf546c59c3dfada24c390a3");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idN));

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_个人获得全国先进（综合类）");
                    examAutoEvaluationDao.delete(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
        }
    }

    /*
     * 年度
     * 中基层领导班子
     * 宣传思想-立功创模-荣誉管理-奖项维护
     * */
    public void zjcJxwhYear(String year) {

        Map<String, String> map = this.yearTime(year);
        String yearL = map.get("yearL");
        String yearT = map.get("yearT");
        /*中基层*/
        String juJiGuanRoleId = "13bac520ae4d4160b595384691b443fd";
        String chuJiGuanRoleId = "62cf6aaea0184d3b8cfbce1700ad0e38";
        String suoduiJiGuanRoleId = "ff24c3288860447d867d08d462a2a2b9";

        String[] zhongJiCeng = new String[3];
        zhongJiCeng[0] = chuJiGuanRoleId;
        zhongJiCeng[1] = juJiGuanRoleId;
        zhongJiCeng[2] = suoduiJiGuanRoleId;
        String companyId = "156";
        List<User> temzhongJiCengList = new ArrayList<>();
 /*       Arrays.stream(zhongJiCeng).forEach(s -> {
            ExamWorkflowDefine zhongDefine = new ExamWorkflowDefine();
            zhongDefine.setName(s);
            if (companyId.equals("1")) {
                zhongDefine.getSqlMap().put("dsf", "and u.company_id = '" + companyId + "' and u.office_id not in ('34','95','156')");
            } else {
                zhongDefine.getSqlMap().put("dsf", "and u.company_id = '" + companyId + "'");
            }
            temzhongJiCengList.addAll(examWorkflowSegmentsDefineService.queryPoliceDatas(zhongDefine));
        });*/
        Arrays.stream(zhongJiCeng).forEach(s -> {
            ExamWorkflowDefine zhongDefine = new ExamWorkflowDefine();
            zhongDefine.setName(s);
            temzhongJiCengList.addAll(examWorkflowSegmentsDefineService.queryPoliceDatas(zhongDefine));
        });
        for (int z = 0; z < temzhongJiCengList.size(); z++) {
            User user = temzhongJiCengList.get(z);
            String idN = user.getNo();
            String name = user.getName();
            //所有获得的奖励
            List<AffairPersonalReward> affairPersonalRewardList = new ArrayList<>();
            affairPersonalRewardList = affairPersonalRewardService.selectAllRewardYear(idN, yearL,yearT);
            for (int r = 0; r < affairPersonalRewardList.size(); r++) {
                AffairPersonalReward affairPersonalReward = affairPersonalRewardList.get(r);
                String rewardName = affairPersonalReward.getRewardName();
                String rewardLevel = affairPersonalReward.getLevel();
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("2");
                examAutoEvaluation.setEvalType("6");
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setName(name);
                examAutoEvaluation.setIdNumber(idN);

                //获得个人嘉奖
                if ("4".equals(rewardName)) {
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + year + "年" + "获得个人嘉奖，加2分");
                    examAutoEvaluation.setScore("5");
                    examAutoEvaluation.setModel("2020年年度对中、基层领导干部(公安处领导除外)绩效考核加分标准");
                    examAutoEvaluation.setModelId("6921ad30851d4f0f96bd3db80c8505c0");
                    examAutoEvaluation.setOption("个人获得嘉奖");
                    examAutoEvaluation.setOptionId("c4f79c2949ee42b394cdd00f2e996da5");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idN));

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_个人获得嘉奖");
                    examAutoEvaluationDao.delete(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                //获得个人三等功
                if ("3".equals(rewardName)) {
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + year + "年" + "获得个人三等功，加3分");
                    examAutoEvaluation.setScore("10");
                    examAutoEvaluation.setModel("2020年年度对中、基层领导干部(公安处领导除外)绩效考核加分标准");
                    examAutoEvaluation.setModelId("6921ad30851d4f0f96bd3db80c8505c0");
                    examAutoEvaluation.setOption("个人获得三等功");
                    examAutoEvaluation.setOptionId("6a9566dc532e4e89ba0d44772b7e6975");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idN));

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_个人获得三等功");
                    examAutoEvaluationDao.delete(examAutoEvaluation);
                    this.save(examAutoEvaluation);

                }
                if ("2".equals(rewardName)) {
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + year + "年" + "获得个人二等功，加5分");
                    examAutoEvaluation.setScore("15");
                    examAutoEvaluation.setModel("2020年月度对中、基层领导干部(公安处领导除外)绩效考核加分标准");
                    examAutoEvaluation.setModelId("6921ad30851d4f0f96bd3db80c8505c0");
                    examAutoEvaluation.setOption("个人获得二等功");
                    examAutoEvaluation.setOptionId("24abeb15c7fd4df5affb1cdbee303483");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idN));

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_个人获得二等功");
                    examAutoEvaluationDao.delete(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if ("1".equals(rewardName)) {
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + year + "年" + "获得个人一等功，加6分");
                    examAutoEvaluation.setScore("20");
                    examAutoEvaluation.setModel("2020年月度对中、基层领导干部(公安处领导除外)绩效考核加分标准");
                    examAutoEvaluation.setModelId("6921ad30851d4f0f96bd3db80c8505c0");
                    examAutoEvaluation.setOption("个人获得一等功");
                    examAutoEvaluation.setOptionId("aac1aad0ad984c429defcb86ce948f7b");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idN));

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_个人获得一等功");
                    examAutoEvaluationDao.delete(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                //公安处级先进3
                if (("20".equals(rewardName) || "9".equals(rewardName)) && ("9".equals(rewardLevel) || "10".equals(rewardLevel))) {
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + year + "年" + "被评为公安处级先进加5分；");
                    examAutoEvaluation.setScore("3");
                    examAutoEvaluation.setModel("2020年月度对中、基层领导干部(公安处领导除外)绩效考核加分标准");
                    examAutoEvaluation.setModelId("6921ad30851d4f0f96bd3db80c8505c0");
                    examAutoEvaluation.setOption("个人获得公安处级先进（综合类）");
                    examAutoEvaluation.setOptionId("8237e3a98e734b4e9594babda221b593");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idN));

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_个人获得公安处级先进（综合类）");
                    examAutoEvaluationDao.delete(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }//公安局级先进5
                if (("20".equals(rewardName) || "9".equals(rewardName)) && "9".equals(rewardLevel)) {
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + year + "年" + "被评为公安局级先进加5分；");
                    examAutoEvaluation.setScore("5");
                    examAutoEvaluation.setModel("2020年月度对中、基层领导干部(公安处领导除外)绩效考核加分标准");
                    examAutoEvaluation.setModelId("6921ad30851d4f0f96bd3db80c8505c0");
                    examAutoEvaluation.setOption("个人获得公安局级先进（综合类）");
                    examAutoEvaluation.setOptionId("abd110d9a59943a787b069bc84091617");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idN));

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_个人获得公安局级先进（综合类）");
                    examAutoEvaluationDao.delete(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }//厅局级先进10
                if (("20".equals(rewardName) || "9".equals(rewardName)) && "7".equals(rewardLevel)) {
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + year + "年" + "被评为厅局级先进加5分；");
                    examAutoEvaluation.setScore("10");
                    examAutoEvaluation.setModel("2020年月度对中、基层领导干部(公安处领导除外)绩效考核加分标准");
                    examAutoEvaluation.setModelId("6921ad30851d4f0f96bd3db80c8505c0");
                    examAutoEvaluation.setOption("个人获得厅局级先进（综合类）");
                    examAutoEvaluation.setOptionId("5a61da6c294f449fad6caa07bd2cc3a2");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idN));

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_个人获得厅局级先进（综合类）");
                    examAutoEvaluationDao.delete(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }//省部级先进15
                if (("20".equals(rewardName) || "9".equals(rewardName)) && ("6".equals(rewardLevel) || "5".equals(rewardLevel) || "4".equals(rewardLevel) || "3".equals(rewardLevel))) {
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + year + "年" + "被评为省部级先进加5分；");
                    examAutoEvaluation.setScore("15");
                    examAutoEvaluation.setModel("2020年月度对中、基层领导干部(公安处领导除外)绩效考核加分标准");
                    examAutoEvaluation.setModelId("6921ad30851d4f0f96bd3db80c8505c0");
                    examAutoEvaluation.setOption("个人获得省部级先进（综合类）");
                    examAutoEvaluation.setOptionId("b8415858d8f644d0abeb07070281b21f");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idN));

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_个人获得省部级先进（综合类）");
                    examAutoEvaluationDao.delete(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }//全国级先进25
                if (("20".equals(rewardName) || "9".equals(rewardName)) && ("1".equals(rewardLevel) || "2".equals(rewardLevel))) {
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + year + "年" + "被评为全国级先进加5分；");
                    examAutoEvaluation.setScore("25");
                    examAutoEvaluation.setModel("2020年月度对中、基层领导干部(公安处领导除外)绩效考核加分标准");
                    examAutoEvaluation.setModelId("6921ad30851d4f0f96bd3db80c8505c0");
                    examAutoEvaluation.setOption("个人获得全国先进（综合类）");
                    examAutoEvaluation.setOptionId("e8ace1b1a173480c9607dd93dd20bf5a");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idN));

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_个人获得全国先进（综合类）");
                    examAutoEvaluationDao.delete(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
        }
    }


    /*
     * 月度
     * 民警
     * 宣传思想-立功创模-荣誉管理-奖项维护
     * */
    public void mjJxwh(String checkTime) {

        //所有的民警身份证
        String policeRoleId = "2a7ea380b14f4870b6c44be21d2443c3";

        StringBuffer policeIds = new StringBuffer();
        StringBuffer policePersonNames = new StringBuffer();
        ExamWorkflowDefine policeDefine = new ExamWorkflowDefine();
        policeDefine.setName(policeRoleId);
       /* String companyId = "156";
        if (companyId.equals("1")) {
            policeDefine.getSqlMap().put("dsf", "and u.company_id = '" + companyId + "' and u.office_id not in ('34','95','156')");
        } else {
            policeDefine.getSqlMap().put("dsf", "and u.company_id = '" + companyId + "'");
        }*/
        List<User> userList = examWorkflowSegmentsDefineService.queryPoliceDatas(policeDefine);

        String year = checkTime.substring(0, 4);
        Integer y = Integer.valueOf(year);
        String month = checkTime.substring(checkTime.length() - 2);
        Integer m = Integer.valueOf(month);
        Map<String, String> map = this.monthTime(checkTime);
        String yearL = map.get("yearL");
        String yearT = map.get("yearT");
        for (int i = 0; i < userList.size(); i++) {

            User user = userList.get(i);
            String idNumber = user.getNo();
            String name = user.getName();
            List<AffairPersonalReward> affairPersonalRewardList = new ArrayList<>();
            affairPersonalRewardList = affairPersonalRewardService.selectAllReward(idNumber, yearL,yearT);
            for (int r = 0; r < affairPersonalRewardList.size(); r++) {
                AffairPersonalReward affairPersonalReward = affairPersonalRewardList.get(r);
                String rewardName = affairPersonalReward.getRewardName();
                String rewardLevel = affairPersonalReward.getLevel();
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("2");
                examAutoEvaluation.setEvalType("7");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setName(name);
                examAutoEvaluation.setIdNumber(idNumber);

                //获得个人嘉奖 5
                if ("4".equals(rewardName)) {
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "获得个人嘉奖的，加2分");
                    examAutoEvaluation.setScore("5");
                    examAutoEvaluation.setModel("2020年月度南宁铁路公安局民警绩效考核公共加分标准");
                    examAutoEvaluation.setModelId("f1bd374dc4de469dbf9dc924c19ae413");
                    examAutoEvaluation.setOption("个人获得嘉奖的");
                    examAutoEvaluation.setOptionId("61cc3e950e1445f2896e71af1ee1a847");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_个人获得嘉奖的");
                    examAutoEvaluationDao.delete(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                //获得个人三等功 10
                if ("3".equals(rewardName)) {
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) +  "获得个人三等功的，加3分");
                    examAutoEvaluation.setScore("10");
                    examAutoEvaluation.setModel("2020年月度南宁铁路公安局民警绩效考核公共加分标准");
                    examAutoEvaluation.setModelId("f1bd374dc4de469dbf9dc924c19ae413");
                    examAutoEvaluation.setOption("个人获得三等功的");
                    examAutoEvaluation.setOptionId("e59c7d65e5d24cd29469c0cd6b726684");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_个人获得三等功的");
                    examAutoEvaluationDao.delete(examAutoEvaluation);
                    this.save(examAutoEvaluation);

                }
                //获得个人二等功 15
                if ("2".equals(rewardName)) {
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "获得个人二等功，加5分");
                    examAutoEvaluation.setScore("15");
                    examAutoEvaluation.setModel("2020年月度南宁铁路公安局民警绩效考核公共加分标准");
                    examAutoEvaluation.setModelId("f1bd374dc4de469dbf9dc924c19ae413");
                    examAutoEvaluation.setOption("个人获得二等功的");
                    examAutoEvaluation.setOptionId("4de46460578a416ea7889de042f6d991");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_个人获得二等功的");
                    examAutoEvaluationDao.delete(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                //获得个人一等功 20
                if ("1".equals(rewardName)) {
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "获得个人一等功，加6分");
                    examAutoEvaluation.setScore("20");
                    examAutoEvaluation.setModel("2020年月度南宁铁路公安局民警绩效考核公共加分标准");
                    examAutoEvaluation.setModelId("f1bd374dc4de469dbf9dc924c19ae413");
                    examAutoEvaluation.setOption("个人获得一等功的");
                    examAutoEvaluation.setOptionId("8de53cd2eb7845ae80d0f7b928a46b27");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_个人获得一等功的");
                    examAutoEvaluationDao.delete(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                //公安处级先进3
                if ((("20".equals(rewardName) || ("9".equals(rewardName))) || ("9".equals(rewardLevel) || "10".equals(rewardLevel)))) {
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "被评为公安处先进加5分；");
                    examAutoEvaluation.setScore("3");
                    examAutoEvaluation.setModel("2020年月度南宁铁路公安局民警绩效考核公共加分标准");
                    examAutoEvaluation.setModelId("f1bd374dc4de469dbf9dc924c19ae413");
                    examAutoEvaluation.setOption("个人获得公安处级先进（综合类）");
                    examAutoEvaluation.setOptionId("8237e3a98e734b4e9594babda221b593");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_个人获得公安处级先进（综合类）");
                    examAutoEvaluationDao.delete(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }//公安局级先进5
                if ((("20".equals(rewardName) || ("9".equals(rewardName))) && "9".equals(rewardLevel))) {
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "被评为公安局级先进加5分；");
                    examAutoEvaluation.setScore("5");
                    examAutoEvaluation.setModel("2020年月度南宁铁路公安局民警绩效考核公共加分标准");
                    examAutoEvaluation.setModelId("f1bd374dc4de469dbf9dc924c19ae413");
                    examAutoEvaluation.setOption("个人获得公安局级先进（综合类）");
                    examAutoEvaluation.setOptionId("db1e309d4eac425c9395ed69b6d3bb9d");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_个人获得公安局级先进（综合类）");
                    examAutoEvaluationDao.delete(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }//厅局级先进10
                if ((("20".equals(rewardName) || ("9".equals(rewardName))) && "7".equals(rewardLevel))) {
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + " 被评为厅局级先进加5分；");
                    examAutoEvaluation.setScore("10");
                    examAutoEvaluation.setModel("2020年月度南宁铁路公安局民警绩效考核公共加分标准");
                    examAutoEvaluation.setModelId("f1bd374dc4de469dbf9dc924c19ae413");
                    examAutoEvaluation.setOption("个人获得厅局级先进（综合类）");
                    examAutoEvaluation.setOptionId("b61688ea4b36437b99cc831900376177");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_个人获得厅局级先进（综合类）");
                    examAutoEvaluationDao.delete(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }//省部级先进15
                if (("20".equals(rewardName) || "9".equals(rewardName)) && ("6".equals(rewardLevel) || "5".equals(rewardLevel) || "4".equals(rewardLevel) || "3".equals(rewardLevel))) {
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) +  " 被评为省部级先进加5分；");
                    examAutoEvaluation.setScore("15");
                    examAutoEvaluation.setModel("2020年月度南宁铁路公安局民警绩效考核公共加分标准");
                    examAutoEvaluation.setModelId("f1bd374dc4de469dbf9dc924c19ae413");
                    examAutoEvaluation.setOption("个人获得省部级先进（综合类）");
                    examAutoEvaluation.setOptionId("f0fbb8314b464b9e96d112aa3b25a33a");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_个人获得省部级先进（综合类）");
                    examAutoEvaluationDao.delete(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }//全国级先进25
                if (("20".equals(rewardName) || "9".equals(rewardName)) && ("1".equals(rewardLevel) || "2".equals(rewardLevel))) {
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + " 被评为全国级先进加5分；");
                    examAutoEvaluation.setScore("25");
                    examAutoEvaluation.setModel("2020年月度南宁铁路公安局民警绩效考核公共加分标准");
                    examAutoEvaluation.setModelId("f1bd374dc4de469dbf9dc924c19ae413");
                    examAutoEvaluation.setOption("个人获得全国先进（综合类）");
                    examAutoEvaluation.setOptionId("354ec11c99ad47c097db8eaedc13c89c");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_个人获得全国先进（综合类）");
                    examAutoEvaluationDao.delete(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
        }
    }

    /*
     * 年度
     * 民警
     * 宣传思想-立功创模-荣誉管理-奖项维护
     * */
    public void mjJxwhYear(String year) {

        Map<String, String> map = this.yearTime(year);
        String yearL = map.get("yearL");
        String yearT = map.get("yearT");
        //所有的民警身份证
        String policeRoleId = "2a7ea380b14f4870b6c44be21d2443c3";

        StringBuffer policeIds = new StringBuffer();
        StringBuffer policePersonNames = new StringBuffer();
        ExamWorkflowDefine policeDefine = new ExamWorkflowDefine();
        policeDefine.setName(policeRoleId);
       /* String companyId = "156";
        if (companyId.equals("1")) {
            policeDefine.getSqlMap().put("dsf", "and u.company_id = '" + companyId + "' and u.office_id not in ('34','95','156')");
        } else {
            policeDefine.getSqlMap().put("dsf", "and u.company_id = '" + companyId + "'");
        }*/
        List<User> userList = examWorkflowSegmentsDefineService.queryPoliceDatas(policeDefine);

        for (int i = 0; i < userList.size(); i++) {

            User user = userList.get(i);
            String idNumber = user.getNo();
            String name = user.getName();
            List<AffairPersonalReward> affairPersonalRewardList = new ArrayList<>();
            affairPersonalRewardList = affairPersonalRewardService.selectAllRewardYear(idNumber, yearL,yearT);
            for (int r = 0; r < affairPersonalRewardList.size(); r++) {
                AffairPersonalReward affairPersonalReward = affairPersonalRewardList.get(r);
                String rewardName = affairPersonalReward.getRewardName();
                String rewardLevel = affairPersonalReward.getLevel();
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("2");
                examAutoEvaluation.setEvalType("7");
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setName(name);
                examAutoEvaluation.setIdNumber(idNumber);
                //获得个人嘉奖 2
                if ("4".equals(rewardName)) {
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "获得个人嘉奖，加2分");
                    examAutoEvaluation.setScore("5");
                    examAutoEvaluation.setModel("2020年年度南宁铁路公安局民警绩效考核公共加分标准");
                    examAutoEvaluation.setModelId("59c90866a1484aec97cbf82578b457a2");
                    examAutoEvaluation.setOption("个人获得嘉奖的");
                    examAutoEvaluation.setOptionId("e583e0558f084b79a3ab3bcdc8f0c79d");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_个人获得嘉奖的");
                    examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                //获得个人三等功 3
                if ("3".equals(rewardName)) {
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "获得个人三等功，加3分");
                    examAutoEvaluation.setScore("10");
                    examAutoEvaluation.setModel("2020年年度南宁铁路公安局民警绩效考核公共加分标准");
                    examAutoEvaluation.setModelId("59c90866a1484aec97cbf82578b457a2");
                    examAutoEvaluation.setOption("个人获得三等功的");
                    examAutoEvaluation.setOptionId("a15cb11a53d44408b293787a24abe56f");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_个人获得三等功的");
                    examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);

                }
                //获得个人二等功 5
                if ("2".equals(rewardName)) {
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "获得个人二等功，加5分");
                    examAutoEvaluation.setScore("15");
                    examAutoEvaluation.setModel("2020年年度南宁铁路公安局民警绩效考核公共加分标准");
                    examAutoEvaluation.setModelId("59c90866a1484aec97cbf82578b457a2");
                    examAutoEvaluation.setOption("个人获得二等功的");
                    examAutoEvaluation.setOptionId("ee140a8c27e444b4a41651580b4aafde");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_个人获得二等功的");
                    examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                //获得个人一等功 6
                if ("1".equals(rewardName)) {
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "获得个人一等功，加6分");
                    examAutoEvaluation.setScore("20");
                    examAutoEvaluation.setModel("2020年年度南宁铁路公安局民警绩效考核公共加分标准");
                    examAutoEvaluation.setModelId("59c90866a1484aec97cbf82578b457a2");
                    examAutoEvaluation.setOption("个人获得一等功的");
                    examAutoEvaluation.setOptionId("a2fc1a82b1aa4c758801d949425b851d");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_个人获得一等功的");
                    examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                //公安处级先进1
                if ("20".equals(rewardName) && ("9".equals(rewardLevel) || "10".equals(rewardLevel))) {
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "被评为公安处级先进加5分；");
                    examAutoEvaluation.setScore("3");
                    examAutoEvaluation.setModel("2020年年度南宁铁路公安局民警绩效考核公共加分标准");
                    examAutoEvaluation.setModelId("59c90866a1484aec97cbf82578b457a2");
                    examAutoEvaluation.setOption("个人获得公安处级先进（综合类）");
                    examAutoEvaluation.setOptionId("b4335e864eb44180a540483b366e8834");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_个人获得公安处级先进（综合类）");
                    examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }//公安局级先进2
                if ("20".equals(rewardName) || ("9".equals(rewardName) && "9".equals(rewardLevel))) {
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "被评为公安局级先进加5分；");
                    examAutoEvaluation.setScore("5");
                    examAutoEvaluation.setModel("2020年年度南宁铁路公安局民警绩效考核公共加分标准");
                    examAutoEvaluation.setModelId("59c90866a1484aec97cbf82578b457a2");
                    examAutoEvaluation.setOption("个人获得公安局级先进（综合类）");
                    examAutoEvaluation.setOptionId("96efd9cb18864b6f9d4361dca444b951");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_个人获得公安局级先进（综合类）");
                    examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }//厅局级先进3
                if (("20".equals(rewardName) || "9".equals(rewardName)) && "7".equals(rewardLevel)) {
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "被评为厅局级先进加5分；");
                    examAutoEvaluation.setScore("10");
                    examAutoEvaluation.setModel("2020年年度南宁铁路公安局民警绩效考核公共加分标准");
                    examAutoEvaluation.setModelId("59c90866a1484aec97cbf82578b457a2");
                    examAutoEvaluation.setOption("个人获得厅局级先进（综合类）");
                    examAutoEvaluation.setOptionId("400d91877e814eafae2d45bea7c20986");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_个人获得厅局级先进（综合类）");
                    examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }//省部级先进5
                if (("20".equals(rewardName)|| "9".equals(rewardName)) && ("6".equals(rewardLevel) || "5".equals(rewardLevel) || "4".equals(rewardLevel) || "3".equals(rewardLevel))) {
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "被评为省部级先进加5分；");
                    examAutoEvaluation.setScore("15");
                    examAutoEvaluation.setModel("2020年年度南宁铁路公安局民警绩效考核公共加分标准");
                    examAutoEvaluation.setModelId("59c90866a1484aec97cbf82578b457a2");
                    examAutoEvaluation.setOption("个人获得省部级先进（综合类）");
                    examAutoEvaluation.setOptionId("6237f3f52fba40819d5b167ad2f3bdd0");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_个人获得省部级先进（综合类）");
                    examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }//全国级先进8
                if (("20".equals(rewardName) || "9".equals(rewardName)) && ("1".equals(rewardLevel) || "2".equals(rewardLevel))) {
                    examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "被评为省部级先进加5分；");
                    examAutoEvaluation.setScore("25");
                    examAutoEvaluation.setModel("2020年年度南宁铁路公安局民警绩效考核公共加分标准");
                    examAutoEvaluation.setModelId("59c90866a1484aec97cbf82578b457a2");
                    examAutoEvaluation.setOption("个人获得全国先进（综合类）");
                    examAutoEvaluation.setOptionId("6ea436b7a88e455da3a5f6b3b255d5df");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_个人获得全国先进（综合类）");
                    examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }

            }
        }
    }

    /*
     * 月度
     * 处考派出所
     * 宣传思想-立功创模-荣誉管理-奖项维护
     * */
    public void ckpcsJxwh(String checkTime){

        String year = checkTime.substring(0, 4);
        Integer y = Integer.valueOf(year);
        String month = checkTime.substring(checkTime.length() - 2);
        Integer m = Integer.valueOf(month);
        Map<String, String> map = this.monthTime(checkTime);
        String yearL = map.get("yearL");
        String yearT = map.get("yearT");

        List<Office> nncPartyList = officeDao.getChuUnit("34", "2");
        List<Office> lzcPartyList = officeDao.getChuUnit("95", "2");
        List<Office> bhcPartyList = officeDao.getChuUnit("156", "2");

        for (int n = 0; n < nncPartyList.size(); n++) {
            Office office = nncPartyList.get(n);
            String idN = office.getId();
            String name = office.getName();
            StringBuilder details1 = new StringBuilder();
            StringBuilder details2 = new StringBuilder();
            StringBuilder details3 = new StringBuilder();
            StringBuilder details4 = new StringBuilder();
            StringBuilder details5 = new StringBuilder();
            StringBuilder details6 = new StringBuilder();
            StringBuilder details7 = new StringBuilder();

            Integer numSum1 = 0;
            Integer numSum2 = 0;
            Integer numSum3 = 0;
            Integer numSum4 = 0;
            Integer numSum5 = 0;
            Integer numSum6 = 0;
            Integer numSum7 = 0;

            /*
                 * 下属民警获奖加分
                 * */
                List<PersonnelBase> personnelBaseList = new ArrayList<>();
                personnelBaseList = examAutoEvaluationDao.selectAllPeopleMessage(idN);
                for (int p = 0; p < personnelBaseList.size(); p++) {
                    PersonnelBase personnelBase = personnelBaseList.get(p);
                    String idNumber = personnelBase.getIdNumber();
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    List<AffairPersonalReward> affairPersonalRewardList = affairPersonalRewardService.selectAllReward(idNumber,yearL,yearT);
                    for (int a = 0; a < affairPersonalRewardList.size(); a++) {
                        AffairPersonalReward affairPersonalReward = affairPersonalRewardList.get(a);
                        String rewardName = affairPersonalReward.getRewardName();
                        String rewardLevel = affairPersonalReward.getLevel();


                        examAutoEvaluation.setType("2");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setName(name);
                        examAutoEvaluation.setIdNumber(idN);
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setModelId("");
                        examAutoEvaluation.setFromSys("智慧政工");

                        //民警被评为厅局级岗位标兵  0.5

                        //全路，全区优秀人民警察1
                        if ("8".equals(rewardName) && "7".equals(rewardLevel)) {
                            details1.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                            numSum1++;
                        }
                        //全国优秀人民警察，省部级先进1.5
                        if (("20".equals(rewardName) || "9".equals(rewardName)) && ("2".equals(rewardLevel) || "1".equals(rewardLevel))) {
                             details2.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                            numSum2++;
                        }
                        //全国级先进、省部级劳模2.5
                        if ((("20".equals(rewardName) || "9".equals(rewardName)) && ("1".equals(rewardLevel) || "2".equals(rewardLevel))) || ("10".equals(rewardName) && ("3".equals(rewardLevel) || "4".equals(rewardLevel) || "5".equals(rewardLevel) || "6".equals(rewardLevel)))) {
                            details3.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                            numSum3++;
                        }
                        //特级优秀人民警察、二级英模、全国级劳模6、
                        if ("7".equals(rewardName) || "6".equals(rewardName) || ("10".equals(rewardName) && ("1".equals(rewardLevel) || "2".equals(rewardLevel)))) {
                            details4.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                            numSum4++;
                        }
                        // 一级英模7.5
                        if ("5".equals(rewardName)) {
                            details5.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                            numSum5++;
                        }

                        //个人二等功1.5
                        if ("2".equals(rewardName)) {
                            details6.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                            numSum6++;
                        }
                        //个人一等功2.5
                        if ("1".equals(rewardName)) {
                            details7.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                            numSum7++;
                        }

                    }
                    if (numSum1 > 0){
                        examAutoEvaluation.setDetails(details1 + year + "年" + month + "月" + "被评为全路，全区优秀人民警察，加1分；");
                        examAutoEvaluation.setScore("1");
                        examAutoEvaluation.setOption("");
                        examAutoEvaluation.setOptionId("");
                        examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","立功创模_民警被评为全路、全区优秀人民警察");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    if (numSum2 > 0){
                        examAutoEvaluation.setDetails(details2 + year + "年" + month + "月" + "被评为全国优秀人民警察、省部级先进，加1.5分；");
                        examAutoEvaluation.setScore("1.5");
                        examAutoEvaluation.setOption("");
                        examAutoEvaluation.setOptionId("");
                        examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","立功创模_民警被评为全国优秀人民警察");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    if (numSum3 > 0){
                        examAutoEvaluation.setDetails(details3 + year + "年" + month + "月" + "被评为全国级先进、省部级劳模，加2.5分");
                        examAutoEvaluation.setScore("2.5");
                        examAutoEvaluation.setOption("");
                        examAutoEvaluation.setOptionId("");
                        examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","立功创模_民警被评为全国级先进");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    if (numSum4 > 0){
                        examAutoEvaluation.setDetails(details4 + year + "年" + month + "月" + "被评为特级优秀人民警察、二级英模、全国级劳模，加6分");
                        examAutoEvaluation.setScore("6");
                        examAutoEvaluation.setOption("");
                        examAutoEvaluation.setOptionId("");
                        examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","立功创模_民警被评为全国特级优秀人民警察");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    if (numSum5 > 0){
                        examAutoEvaluation.setDetails( details5 + year + "年" + month + "月" + "被评为一级英雄模范，加7.5分");
                        examAutoEvaluation.setScore("7.5");
                        examAutoEvaluation.setOption("");
                        examAutoEvaluation.setOptionId("");
                        examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","立功创模_民警被评为一级英模");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    if (numSum6 > 0){
                        examAutoEvaluation.setDetails(details6 + year + "年" + month + "月" + "荣立个人二等功，加1.5分");
                        examAutoEvaluation.setScore("1.5");
                        examAutoEvaluation.setOption("");
                        examAutoEvaluation.setOptionId("");
                        examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","立功创模_民警获得个人二等功");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    if (numSum7 > 0){
                        examAutoEvaluation.setDetails(details7 + year + "年" + month + "月" + "荣立个人一等功，加2.5分");
                        examAutoEvaluation.setScore("2.5");
                        examAutoEvaluation.setOption("");
                        examAutoEvaluation.setOptionId("");
                        examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","立功创模_民警获得个人一等功");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                }
                /*
                 * 单位获奖加分
                 * */

                    List<AffairXcUnitReward> affairXcUnitRewardList = new ArrayList<>();
                    affairXcUnitRewardList = affairXcUnitRewardService.selectAllReward(idN, yearL,yearT);
                    for (int x = 0; x < affairXcUnitRewardList.size(); x++) {
                        AffairXcUnitReward affairXcUnitReward = affairXcUnitRewardList.get(x);
                        //奖励名称
                        String nameCode = affairXcUnitReward.getNameCode();
                        //奖励级别
                        String level = affairXcUnitReward.getLevel();

                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("2");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setUnit(name);
                        examAutoEvaluation.setUnitId(idN);
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setModelId("");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectEvalId(office.getCode()));
                        //单位或部门评为厅局级先进0.5
                        //省部级先进2
                        //全国先进3
                        //集体二等功2.5

                        /*
                         *
                         *   待完善
                         *
                         * */


                        if ("2".equals(nameCode)) {
                            examAutoEvaluation.setDetails(name + year + "年" + month + "月" + "被评为集体二等功，加2.5分");
                            examAutoEvaluation.setScore("2.5");
                            examAutoEvaluation.setOption("");
                            examAutoEvaluation.setOptionId("");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","立功创模_单位或部门获得集体二等功");
                            examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                        //集体一等功5
                        if ("1".equals(nameCode)) {
                            examAutoEvaluation.setDetails(name + year + "年" + month + "月" + "被评为集体一等功，加5分");
                            examAutoEvaluation.setScore("5");
                            examAutoEvaluation.setOption("");
                            examAutoEvaluation.setOptionId("");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","立功创模_单位或部门获得集体一等功");
                            examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);


                }
            }
        }
        for (int n = 0; n < lzcPartyList.size(); n++) {
            Office office = lzcPartyList.get(n);
            String idN = office.getId();
            String name = office.getName();

            /*
             * 下属民警获奖加分
             * */
            List<PersonnelBase> personnelBaseList = new ArrayList<>();
            personnelBaseList = examAutoEvaluationDao.selectAllPeopleMessage(idN);
            for (int p = 0; p < personnelBaseList.size(); p++) {
                PersonnelBase personnelBase = personnelBaseList.get(p);
                String idNumber = personnelBase.getIdNumber();

                List<AffairPersonalReward> affairPersonalRewardList = affairPersonalRewardService.selectAllReward(idNumber,yearL,yearT);
                for (int a = 0; a < affairPersonalRewardList.size(); a++) {
                    AffairPersonalReward affairPersonalReward = affairPersonalRewardList.get(a);
                    String rewardName = affairPersonalReward.getRewardName();
                    String rewardLevel = affairPersonalReward.getLevel();

                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setName(name);
                    examAutoEvaluation.setIdNumber(idN);

                    //民警被评为厅局级岗位标兵  0.5

                    //全路，全区优秀人民警察1
                    if ("8".equals(rewardName) && "7".equals(rewardLevel)) {
                        examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "被评为全路，全区优秀人民警察，加1分；");
                        examAutoEvaluation.setScore("1");
                        examAutoEvaluation.setModel("2020年月度柳州处对派出所绩效考评公共加分标准");
                        examAutoEvaluation.setModelId("547546c3d76144afa2a4433dd350afda");
                        examAutoEvaluation.setOption("民警被评为全路、全区优秀人民警察");
                        examAutoEvaluation.setOptionId("0fe6ca86ef634598b5defd7ef362c4a6");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","立功创模_民警被评为全路、全区优秀人民警察");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }

                    //全国优秀人民警察，省部级先进1.5
                    if (("20".equals(rewardName) || "9".equals(rewardName)) && ("2".equals(rewardLevel) || "1".equals(rewardLevel))) {
                        examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "被评为全国优秀人民警察、省部级先进，加1.5分；");
                        examAutoEvaluation.setScore("1.5");
                        examAutoEvaluation.setModel("2020年月度柳州处对派出所绩效考评公共加分标准");
                        examAutoEvaluation.setModelId("547546c3d76144afa2a4433dd350afda");
                        examAutoEvaluation.setOption("民警被评为全国优秀人民警察");
                        examAutoEvaluation.setOptionId("3ab2d5aa622f4249b2a5c686bc04eada");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","立功创模_民警被评为全国优秀人民警察");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    //全国级先进、省部级劳模2.5
                    if ((("20".equals(rewardName) || "9".equals(rewardName)) && ("1".equals(rewardLevel) || "2".equals(rewardLevel))) || ("10".equals(rewardName) && ("3".equals(rewardLevel) || "4".equals(rewardLevel) || "5".equals(rewardLevel) || "6".equals(rewardLevel)))) {
                        examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "被评为全国级先进、省部级劳模，加2.5分");
                        examAutoEvaluation.setScore("2.5");
                        examAutoEvaluation.setModel("2020年月度柳州处对派出所绩效考评公共加分标准");
                        examAutoEvaluation.setModelId("547546c3d76144afa2a4433dd350afda");
                        examAutoEvaluation.setOption("民警被评为全国级先进");
                        examAutoEvaluation.setOptionId("40d66790c48c425b963cc13e3122a809");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","立功创模_民警被评为全国优秀人民警察");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    //特级优秀人民警察、二级英模、全国级劳模6、
                    if ("7".equals(rewardName) || "6".equals(rewardName) || ("10".equals(rewardName) && ("1".equals(rewardLevel) || "2".equals(rewardLevel)))) {
                        examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "被评为特级优秀人民警察、二级英模、全国级劳模，加6分");
                        examAutoEvaluation.setScore("6");
                        examAutoEvaluation.setModel("2020年月度柳州处对派出所绩效考评公共加分标准");
                        examAutoEvaluation.setModelId("547546c3d76144afa2a4433dd350afda");
                        examAutoEvaluation.setOption("民警被评为全国特级优秀人民警察");
                        examAutoEvaluation.setOptionId("ab528debe61d410e99e6ae17f9726b9a");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","立功创模_民警被评为全国特级优秀人民警察");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    // 一级英模7.5
                    if ("5".equals(rewardName)) {
                        examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "被评为一级英雄模范，加7.5分");
                        examAutoEvaluation.setScore("7.5");
                        examAutoEvaluation.setModel("2020年月度柳州处对派出所绩效考评公共加分标准");
                        examAutoEvaluation.setModelId("547546c3d76144afa2a4433dd350afda");
                        examAutoEvaluation.setOption("民警被评为一级英模");
                        examAutoEvaluation.setOptionId("3e9b256782574f3c9bad01f3e5ee474b");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","立功创模_民警被评为一级英模");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }

                    //个人二等功1.5
                    if ("2".equals(rewardName)) {
                        examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "荣立个人二等功，加1.5分");
                        examAutoEvaluation.setScore("1.5");
                        examAutoEvaluation.setModel("2020年月度柳州处对派出所绩效考评公共加分标准");
                        examAutoEvaluation.setModelId("547546c3d76144afa2a4433dd350afda");
                        examAutoEvaluation.setOption("民警获得个人二等功");
                        examAutoEvaluation.setOptionId("639c0bb3640c46f79b8161594897d3d1");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","立功创模_民警获得个人二等功");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    //个人一等功2.5
                    if ("1".equals(rewardName)) {
                        examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "荣立个人一等功，加2.5分");
                        examAutoEvaluation.setScore("2.5");
                        examAutoEvaluation.setModel("2020年月度柳州处对派出所绩效考评公共加分标准");
                        examAutoEvaluation.setModelId("547546c3d76144afa2a4433dd350afda");
                        examAutoEvaluation.setOption("民警获得个人一等功");
                        examAutoEvaluation.setOptionId("2fcbb7532328408d989f8a0a285b5999");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","立功创模_民警获得个人一等功");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }

                }
            }
            /*
             * 单位获奖加分
             * */

                List<AffairXcUnitReward> affairXcUnitRewardList = new ArrayList<>();
                affairXcUnitRewardList = affairXcUnitRewardService.selectAllReward(idN, yearL,yearT);
                for (int x = 0; x < affairXcUnitRewardList.size(); x++) {
                    AffairXcUnitReward affairXcUnitReward = affairXcUnitRewardList.get(x);
                    //奖励名称
                    String nameCode = affairXcUnitReward.getNameCode();
                    //奖励级别
                    String level = affairXcUnitReward.getLevel();

                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(idN);
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectEvalId(office.getCode()));
                    //单位或部门评为厅局级先进0.5
                    //省部级先进2
                    //全国先进3
                    //集体二等功2.5

                    /*
                     *
                     *   待完善
                     *
                     * */


                    if ("2".equals(nameCode)) {
                        examAutoEvaluation.setDetails(name  + DateUtils.formatDate(affairXcUnitReward.getDate()) + "被评为集体二等功，加2.5分");
                        examAutoEvaluation.setScore("2.5");
                        examAutoEvaluation.setModel("2020年月度柳州处对派出所绩效考评公共加分标准");
                        examAutoEvaluation.setModelId("547546c3d76144afa2a4433dd350afda");
                        examAutoEvaluation.setOption("单位或部门获得集体二等功");
                        examAutoEvaluation.setOptionId("bf55cd3842544fb1ba89d6ba09ee0df8");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","立功创模_单位或部门获得集体二等功");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    //集体一等功5
                    if ("1".equals(nameCode)) {
                        examAutoEvaluation.setDetails(name  + DateUtils.formatDate(affairXcUnitReward.getDate()) + "被评为集体一等功，加5分");
                        examAutoEvaluation.setScore("5");
                        examAutoEvaluation.setModel("2020年月度柳州处对派出所绩效考评公共加分标准");
                        examAutoEvaluation.setModelId("547546c3d76144afa2a4433dd350afda");
                        examAutoEvaluation.setOption("单位或部门获得集体一等功");
                        examAutoEvaluation.setOptionId("edad4299e17d4432bdd5eeb52f209829");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","立功创模_单位或部门获得集体一等功");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);


                }
            }
        }
        for (int n = 0; n < bhcPartyList.size(); n++) {
            Office office = bhcPartyList.get(n);
            String idN = office.getId();
            String name = office.getName();

            /*
             * 下属民警获奖加分
             * */
            List<PersonnelBase> personnelBaseList = new ArrayList<>();
            personnelBaseList = examAutoEvaluationDao.selectAllPeopleMessage(idN);
            for (int p = 0; p < personnelBaseList.size(); p++) {
                PersonnelBase personnelBase = personnelBaseList.get(p);
                String idNumber = personnelBase.getIdNumber();

                List<AffairPersonalReward> affairPersonalRewardList = affairPersonalRewardService.selectAllReward(idNumber,yearL,yearT);
                for (int a = 0; a < affairPersonalRewardList.size(); a++) {
                    AffairPersonalReward affairPersonalReward = affairPersonalRewardList.get(a);
                    String rewardName = affairPersonalReward.getRewardName();
                    String rewardLevel = affairPersonalReward.getLevel();

                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setName(name);
                    examAutoEvaluation.setIdNumber(idN);

                    //民警被评为厅局级岗位标兵  0.5

                    //全路，全区优秀人民警察1
                    if ("8".equals(rewardName) && "7".equals(rewardLevel)) {
                        examAutoEvaluation.setDetails(affairPersonalReward.getName()  + DateUtils.formatDate(affairPersonalReward.getDate()) + "被评为全路，全区优秀人民警察，加1分；");
                        examAutoEvaluation.setScore("1");
                        examAutoEvaluation.setModel("2020年月度北海处对派出所、大队绩效考评公共加分标准");
                        examAutoEvaluation.setModelId("3cd29fab3ef043c2908ad83c56b7fc9b");
                        examAutoEvaluation.setOption("民警被评为全路、全区优秀人民警察");
                        examAutoEvaluation.setOptionId("74dc04615bec4b21bebaa87fcc5048de");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","立功创模_民警被评为全路、全区优秀人民警察");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }

                    //全国优秀人民警察，省部级先进1.5
                    if (("20".equals(rewardName) || "9".equals(rewardName)) && ("2".equals(rewardLevel) || "1".equals(rewardLevel))) {
                        examAutoEvaluation.setDetails(affairPersonalReward.getName()  + DateUtils.formatDate(affairPersonalReward.getDate()) +"被评为全国优秀人民警察、省部级先进，加1.5分；");
                        examAutoEvaluation.setScore("1.5");
                        examAutoEvaluation.setModel("2020年月度北海处对派出所、大队绩效考评公共加分标准");
                        examAutoEvaluation.setModelId("3cd29fab3ef043c2908ad83c56b7fc9b");
                        examAutoEvaluation.setOption("民警被评为全国优秀人民警察");
                        examAutoEvaluation.setOptionId("f03bdc4c763047ccb83d13c013424c09");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","立功创模_民警被评为全国优秀人民警察");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    //全国级先进、省部级劳模2.5
                    if ((("20".equals(rewardName) || "9".equals(rewardName)) && ("1".equals(rewardLevel) || "2".equals(rewardLevel))) || ("10".equals(rewardName) && ("3".equals(rewardLevel) || "4".equals(rewardLevel) || "5".equals(rewardLevel) || "6".equals(rewardLevel)))) {
                        examAutoEvaluation.setDetails(affairPersonalReward.getName()  + DateUtils.formatDate(affairPersonalReward.getDate()) +"被评为全国级先进、省部级劳模，加2.5分");
                        examAutoEvaluation.setScore("2.5");
                        examAutoEvaluation.setModel("2020年月度北海处对派出所、大队绩效考评公共加分标准");
                        examAutoEvaluation.setModelId("3cd29fab3ef043c2908ad83c56b7fc9b");
                        examAutoEvaluation.setOption("民警被评为全国级先进");
                        examAutoEvaluation.setOptionId("6000684b92d447178beac8cd9705dda5");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","立功创模_民警被评为全国级先进");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    //特级优秀人民警察、二级英模、全国级劳模6、
                    if ("7".equals(rewardName) || "6".equals(rewardName) || ("10".equals(rewardName) && ("1".equals(rewardLevel) || "2".equals(rewardLevel)))) {
                        examAutoEvaluation.setDetails(affairPersonalReward.getName()  + DateUtils.formatDate(affairPersonalReward.getDate()) +"被评为特级优秀人民警察、二级英模、全国级劳模，加6分");
                        examAutoEvaluation.setScore("6");
                        examAutoEvaluation.setModel("2020年月度北海处对派出所、大队绩效考评公共加分标准");
                        examAutoEvaluation.setModelId("3cd29fab3ef043c2908ad83c56b7fc9b");
                        examAutoEvaluation.setOption("民警被评为全国特级优秀人民警察");
                        examAutoEvaluation.setOptionId("7e92f390f7cb451886b1236aa09398b7");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","立功创模_民警被评为全国特级优秀人民警察");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    // 一级英模7.5
                    if ("5".equals(rewardName)) {
                        examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) +"被评为一级英雄模范，加7.5分");
                        examAutoEvaluation.setScore("7.5");
                        examAutoEvaluation.setModel("2020年月度北海处对派出所、大队绩效考评公共加分标准");
                        examAutoEvaluation.setModelId("3cd29fab3ef043c2908ad83c56b7fc9b");
                        examAutoEvaluation.setOption("民警被评为一级英模");
                        examAutoEvaluation.setOptionId("bbbfd4a1d10542b99fb8d3665ae7bfce");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","立功创模_民警被评为一级英模");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }

                    //个人二等功1.5
                    if ("2".equals(rewardName)) {
                        examAutoEvaluation.setDetails(affairPersonalReward.getName()  + DateUtils.formatDate(affairPersonalReward.getDate()) +"荣立个人二等功，加1.5分");
                        examAutoEvaluation.setScore("1.5");
                        examAutoEvaluation.setModel("2020年月度北海处对派出所、大队绩效考评公共加分标准");
                        examAutoEvaluation.setModelId("3cd29fab3ef043c2908ad83c56b7fc9b");
                        examAutoEvaluation.setOption("民警获得个人二等功");
                        examAutoEvaluation.setOptionId("d8bca56b785d4c05aac79fdc53236561");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","立功创模_民警获得个人二等功");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    //个人一等功2.5
                    if ("1".equals(rewardName)) {
                        examAutoEvaluation.setDetails(affairPersonalReward.getName()  + DateUtils.formatDate(affairPersonalReward.getDate()) +"荣立个人一等功，加2.5分");
                        examAutoEvaluation.setScore("2.5");
                        examAutoEvaluation.setModel("2020年月度北海处对派出所、大队绩效考评公共加分标准");
                        examAutoEvaluation.setModelId("3cd29fab3ef043c2908ad83c56b7fc9b");
                        examAutoEvaluation.setOption("民警获得个人一等功");
                        examAutoEvaluation.setOptionId("8ccb35b75a3f43f39c1bfaf11e0d66ac");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","立功创模_民警获得个人一等功");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }

                }
            }
            /*
             * 单位获奖加分
             * */

                List<AffairXcUnitReward> affairXcUnitRewardList = new ArrayList<>();
                affairXcUnitRewardList = affairXcUnitRewardService.selectAllReward(idN, yearL,yearT);
                for (int x = 0; x < affairXcUnitRewardList.size(); x++) {
                    AffairXcUnitReward affairXcUnitReward = affairXcUnitRewardList.get(x);
                    //奖励名称
                    String nameCode = affairXcUnitReward.getNameCode();
                    //奖励级别
                    String level = affairXcUnitReward.getLevel();

                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(idN);
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectEvalId(office.getCode()));
                    //单位或部门评为厅局级先进0.5
                    //省部级先进2
                    //全国先进3

                    /*
                     *
                     *   待完善
                     *
                     * */


                    if ("2".equals(nameCode)) {
                        examAutoEvaluation.setDetails(name  + DateUtils.formatDate(affairXcUnitReward.getDate()) +"被评为集体二等功，加2.5分");
                        examAutoEvaluation.setScore("2.5");
                        examAutoEvaluation.setModel("2020年月度北海处对派出所、大队绩效考评公共加分标准");
                        examAutoEvaluation.setModelId("3cd29fab3ef043c2908ad83c56b7fc9b");
                        examAutoEvaluation.setOption("单位或部门获得集体二等功");
                        examAutoEvaluation.setOptionId("33078987247b4ac6adc0d1b415dceb94");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","立功创模_单位或部门获得集体二等功");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    //集体一等功5
                    if ("1".equals(nameCode)) {
                        examAutoEvaluation.setDetails(name   + DateUtils.formatDate(affairXcUnitReward.getDate()) +"被评为集体一等功，加5分");
                        examAutoEvaluation.setScore("5");
                        examAutoEvaluation.setModel("2020年月度北海处对派出所、大队绩效考评公共加分标准");
                        examAutoEvaluation.setModelId("3cd29fab3ef043c2908ad83c56b7fc9b");
                        examAutoEvaluation.setOption("单位或部门获得集体一等功");
                        examAutoEvaluation.setOptionId("3854c255110949f2a17ffe3c7d222f51");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","立功创模_单位或部门获得集体一等功");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);


                }
            }
        }
    }

    /*
     * 月度
     * 处考处
     * 宣传思想-立功创模-荣誉管理-奖项维护
     * */
    public void ckcJxwh(String checkTime){

        String year = checkTime.substring(0, 4);
        Integer y = Integer.valueOf(year);
        String month = checkTime.substring(checkTime.length() - 2);
        Integer m = Integer.valueOf(month);
        Map<String, String> map = this.monthTime(checkTime);
        String yearL = map.get("yearL");
        String yearT = map.get("yearT");

        List<Office> nncPartyList = officeDao.getChuUnit("34", "1");
        List<Office> lzcPartyList = officeDao.getChuUnit("95", "1");
        List<Office> bhcPartyList = officeDao.getChuUnit("156", "1");

        StringBuilder details1 = new StringBuilder();
        StringBuilder details2 = new StringBuilder();
        StringBuilder details3 = new StringBuilder();
        StringBuilder details4 = new StringBuilder();
        StringBuilder details5 = new StringBuilder();
        StringBuilder details6 = new StringBuilder();
        StringBuilder details7 = new StringBuilder();

        Integer numSum1 = 0;
        Integer numSum2 = 0;
        Integer numSum3 = 0;
        Integer numSum4 = 0;
        Integer numSum5 = 0;
        Integer numSum6 = 0;
        Integer numSum7 = 0;

        for (int i = 0; i < nncPartyList.size(); i++) {
            Office office = nncPartyList.get(i);
            String idNum = office.getId();
            String name = office.getName();
            /*
             * 下属民警获奖加分
             * */
            List<PersonnelBase> personnelBaseList = new ArrayList<>();
            personnelBaseList = examAutoEvaluationDao.selectAllPeopleMessage(idNum);
            for (int p = 0; p < personnelBaseList.size(); p++) {
                PersonnelBase personnelBase = personnelBaseList.get(p);
                String idNumber = personnelBase.getIdNumber();
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                List<AffairPersonalReward> affairPersonalRewardList = affairPersonalRewardService.selectAllReward(idNumber, yearL,yearT);
                for (int a = 0; a < affairPersonalRewardList.size(); a++) {
                    AffairPersonalReward affairPersonalReward = affairPersonalRewardList.get(a);
                    String rewardName = affairPersonalReward.getRewardName();
                    String rewardLevel = affairPersonalReward.getLevel();


                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setName(name);
                    examAutoEvaluation.setIdNumber(idNum);

                    //民警被评为厅局级岗位标兵  0.5

                    //全路，全区优秀人民警察1
                    if ("8".equals(rewardName) && "7".equals(rewardLevel)) {
                        details1.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum1++;
                    }
                    //全国优秀人民警察，省部级先进1.5
                    if (("20".equals(rewardName) || "9".equals(rewardName)) && ("2".equals(rewardLevel) || "1".equals(rewardLevel))) {
                        details2.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum2++;
                    }
                    //全国级先进、省部级劳模2.5
                    if ((("20".equals(rewardName) || "9".equals(rewardName)) && ("1".equals(rewardLevel) || "2".equals(rewardLevel))) || ("10".equals(rewardName) && ("3".equals(rewardLevel) || "4".equals(rewardLevel) || "5".equals(rewardLevel) || "6".equals(rewardLevel)))) {
                        details3.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum3++;
                    }
                    //特级优秀人民警察、二级英模、全国级劳模6、
                    if ("7".equals(rewardName) || "6".equals(rewardName) || ("10".equals(rewardName) && ("1".equals(rewardLevel) || "2".equals(rewardLevel)))) {
                        details4.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum4++;
                    }
                    // 一级英模7.5
                    if ("5".equals(rewardName)) {
                        details5.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum5++;
                    }
                    //个人二等功1.5
                    if ("2".equals(rewardName)) {
                        details6.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum6++;
                    }
                    //个人一等功2.5
                    if ("1".equals(rewardName)) {
                        details7.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum7++;
                    }
                }
                if (numSum1 > 0){
                    examAutoEvaluation.setDetails(details1 +"被评为全路，全区优秀人民警察，加1分；");
                    examAutoEvaluation.setScore("1");
                    examAutoEvaluation.setModel("2020年月度南宁处对全处各单位绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("1f2bbad95514488db2e93ebd7a4352dd");
                    examAutoEvaluation.setOption("民警被评为全路、全区优秀人民警察");
                    examAutoEvaluation.setOptionId("0649d4f5b328464bad55f18107c90d81");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","立功创模_民警被评为全路、全区优秀人民警察");
                    examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if (numSum2 > 0){
                    examAutoEvaluation.setDetails(details2 + "被评为全国优秀人民警察、省部级先进，加1.5分；");
                    examAutoEvaluation.setScore("1.5");
                    examAutoEvaluation.setModel("2020年月度南宁处对全处各单位绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("1f2bbad95514488db2e93ebd7a4352dd");
                    examAutoEvaluation.setOption("民警被评为全国优秀人民警察");
                    examAutoEvaluation.setOptionId("1528ee128ccc4f91a8bf3724ae221385");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","立功创模_民警被评为全国优秀人民警察");
                    examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if (numSum3 > 0){
                    examAutoEvaluation.setDetails(details3 + "被评为全国级先进、省部级劳模，加2.5分");
                    examAutoEvaluation.setScore("2.5");
                    examAutoEvaluation.setModel("2020年月度南宁处对全处各单位绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("1f2bbad95514488db2e93ebd7a4352dd");
                    examAutoEvaluation.setOption("民警被评为全国级先进");
                    examAutoEvaluation.setOptionId("04aa6b13b4a64993a7e52823d4173ff3");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","立功创模_民警被评为全国级先进");
                    examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if (numSum4 > 0){
                    examAutoEvaluation.setDetails(details4 + "被评为特级优秀人民警察、二级英模、全国级劳模，加6分");
                    examAutoEvaluation.setScore("6");
                    examAutoEvaluation.setModel("2020年月度南宁处对全处各单位绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("1f2bbad95514488db2e93ebd7a4352dd");
                    examAutoEvaluation.setOption("民警被评为全国特级优秀人民警察");
                    examAutoEvaluation.setOptionId("e6c52bfac97f4d4392fc79d41e27ebe2");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","立功创模_民警被评为全国特级优秀人民警察");
                    examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if (numSum5 > 0){
                    examAutoEvaluation.setDetails(details5 + "被评为一级英雄模范，加7.5分");
                    examAutoEvaluation.setScore("7.5");
                    examAutoEvaluation.setModel("2020年月度南宁处对全处各单位绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("1f2bbad95514488db2e93ebd7a4352dd");
                    examAutoEvaluation.setOption("民警被评为一级英模");
                    examAutoEvaluation.setOptionId("73216f61a61a449085a61109b88de608");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","立功创模_民警被评为一级英模");
                    examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if (numSum6 > 0){
                    examAutoEvaluation.setDetails(details6 +  "荣立个人二等功，加1.5分");
                    examAutoEvaluation.setScore("1.5");
                    examAutoEvaluation.setModel("2020年月度南宁处对全处各单位绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("1f2bbad95514488db2e93ebd7a4352dd");
                    examAutoEvaluation.setOption("民警获得个人二等功");
                    examAutoEvaluation.setOptionId("a510c1c53dcb4351b52656d0ea41eccf");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","立功创模_民警获得个人二等功");
                    examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if (numSum7 > 0){
                    examAutoEvaluation.setDetails(details7 + "荣立个人一等功，加2.5分");
                    examAutoEvaluation.setScore("2.5");
                    examAutoEvaluation.setModel("2020年月度南宁处对全处各单位绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("1f2bbad95514488db2e93ebd7a4352dd");
                    examAutoEvaluation.setOption("民警获得个人一等功");
                    examAutoEvaluation.setOptionId("a4e2c50400d34680a876ff9c3796cc88");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","立功创模_民警获得个人一等功");
                    examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
            /*
             * 单位获奖加分
             * */

                List<AffairXcUnitReward> affairXcUnitRewardList = new ArrayList<>();
                affairXcUnitRewardList = affairXcUnitRewardService.selectAllReward(idNum, yearL,yearT);
                for (int x = 0; x < affairXcUnitRewardList.size(); x++) {
                    AffairXcUnitReward affairXcUnitReward = affairXcUnitRewardList.get(x);
                    //奖励名称
                    String nameCode = affairXcUnitReward.getNameCode();
                    //奖励级别
                    String level = affairXcUnitReward.getLevel();

                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(idNum);
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectEvalId(office.getCode()));
                    //单位或部门评为厅局级先进0.5
                    //省部级先进2
                    //全国先进3
                    //集体二等功2.5

                    /*
                     *
                     *   待完善
                     *
                     * */


                    if ("2".equals(nameCode)) {
                        examAutoEvaluation.setDetails(name  + DateUtils.formatDate(affairXcUnitReward.getDate()) +"被评为集体二等功，加2.5分");
                        examAutoEvaluation.setScore("2.5");
                        examAutoEvaluation.setModel("2020年月度南宁处对全处各单位绩效考评公共加分标准");
                        examAutoEvaluation.setModelId("1f2bbad95514488db2e93ebd7a4352dd");
                        examAutoEvaluation.setOption("单位或部门获得集体二等功");
                        examAutoEvaluation.setOptionId("338e897ff0ac425e85ca9c87189003b0");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","立功创模_单位或部门获得集体二等功");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    //集体一等功5
                    if ("1".equals(nameCode)) {
                        examAutoEvaluation.setDetails(name  + DateUtils.formatDate(affairXcUnitReward.getDate()) +"被评为集体一等功，加5分");
                        examAutoEvaluation.setScore("5");
                        examAutoEvaluation.setModel("2020年月度南宁处对全处各单位绩效考评公共加分标准");
                        examAutoEvaluation.setModelId("1f2bbad95514488db2e93ebd7a4352dd");
                        examAutoEvaluation.setOption("单位或部门获得集体一等功");
                        examAutoEvaluation.setOptionId("abf05326d46f475e9d2c844234999a1b");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","立功创模_单位或部门获得集体一等功");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);

                }
            }
        }
        for (int i = 0; i < lzcPartyList.size(); i++) {
            Office office = lzcPartyList.get(i);
            String idNum = office.getId();
            String name = office.getName();
            /*
             * 下属民警获奖加分
             * */
            List<PersonnelBase> personnelBaseList = new ArrayList<>();
            personnelBaseList = examAutoEvaluationDao.selectAllPeopleMessage(idNum);
            for (int p = 0; p < personnelBaseList.size(); p++) {
                PersonnelBase personnelBase = personnelBaseList.get(p);
                String idNumber = personnelBase.getIdNumber();

                List<AffairPersonalReward> affairPersonalRewardList = affairPersonalRewardService.selectAllReward(idNumber, yearL,yearT);
                for (int a = 0; a < affairPersonalRewardList.size(); a++) {
                    AffairPersonalReward affairPersonalReward = affairPersonalRewardList.get(a);
                    String rewardName = affairPersonalReward.getRewardName();
                    String rewardLevel = affairPersonalReward.getLevel();

                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setName(name);
                    examAutoEvaluation.setIdNumber(idNum);

                    //民警被评为厅局级岗位标兵  0.5

                    //全路，全区优秀人民警察1
                    if ("8".equals(rewardName) && "7".equals(rewardLevel)) {
                        examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) +"被评为全路，全区优秀人民警察，加1分；");
                        examAutoEvaluation.setScore("1");
                        examAutoEvaluation.setModel("2020年月度柳州处对单位（部门）绩效考评公共加分标准");
                        examAutoEvaluation.setModelId("4eaa281381b742adbbc9b8540d7bf822");
                        examAutoEvaluation.setOption("民警被评为全路、全区优秀人民警察");
                        examAutoEvaluation.setOptionId("e5c3f6e46dc342a8add1664e50f437a0");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","立功创模_民警被评为全路、全区优秀人民警察");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }

                    //全国优秀人民警察，省部级先进1.5
                    if (("20".equals(rewardName) || "9".equals(rewardName)) && ("2".equals(rewardLevel) || "1".equals(rewardLevel))) {
                        examAutoEvaluation.setDetails(affairPersonalReward.getName()  + DateUtils.formatDate(affairPersonalReward.getDate()) + "被评为全国优秀人民警察、省部级先进，加1.5分；");
                        examAutoEvaluation.setScore("1.5");
                        examAutoEvaluation.setModel("2020年月度柳州处对单位（部门）绩效考评公共加分标准");
                        examAutoEvaluation.setModelId("4eaa281381b742adbbc9b8540d7bf822");
                        examAutoEvaluation.setOption("民警被评为全国优秀人民警察");
                        examAutoEvaluation.setOptionId("30710cdd00ad496ebe028ca4693483dc");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","立功创模_民警被评为全国优秀人民警察");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    //全国级先进、省部级劳模2.5
                    if ((("20".equals(rewardName) || "9".equals(rewardName)) && ("1".equals(rewardLevel) || "2".equals(rewardLevel))) || ("10".equals(rewardName) && ("3".equals(rewardLevel) || "4".equals(rewardLevel) || "5".equals(rewardLevel) || "6".equals(rewardLevel)))) {
                        examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "被评为全国级先进、省部级劳模，加2.5分");
                        examAutoEvaluation.setScore("2.5");
                        examAutoEvaluation.setModel("2020年月度柳州处对单位（部门）绩效考评公共加分标准");
                        examAutoEvaluation.setModelId("4eaa281381b742adbbc9b8540d7bf822");
                        examAutoEvaluation.setOption("民警被评为全国级先进");
                        examAutoEvaluation.setOptionId("c78a45687d00470cb25fa49bbd2230f0");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","立功创模_民警被评为全国级先进");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    //特级优秀人民警察、二级英模、全国级劳模6、
                    if ("7".equals(rewardName) || "6".equals(rewardName) || ("10".equals(rewardName) && ("1".equals(rewardLevel) || "2".equals(rewardLevel)))) {
                        examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "被评为特级优秀人民警察、二级英模、全国级劳模，加6分");
                        examAutoEvaluation.setScore("6");
                        examAutoEvaluation.setModel("2020年月度柳州处对单位（部门）绩效考评公共加分标准");
                        examAutoEvaluation.setModelId("4eaa281381b742adbbc9b8540d7bf822");
                        examAutoEvaluation.setOption("");
                        examAutoEvaluation.setOptionId("");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","立功创模_民警被评为全国特级优秀人民警察");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    // 一级英模7.5
                    if ("5".equals(rewardName)) {
                        examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "被评为一级英雄模范，加7.5分");
                        examAutoEvaluation.setScore("7.5");
                        examAutoEvaluation.setModel("2020年月度柳州处对单位（部门）绩效考评公共加分标准");
                        examAutoEvaluation.setModelId("4eaa281381b742adbbc9b8540d7bf822");
                        examAutoEvaluation.setOption("民警被评为一级英模");
                        examAutoEvaluation.setOptionId("c165176c83404d6299646b7eda2f4a4b");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","立功创模_民警被评为一级英模");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }

                    //个人二等功1.5
                    if ("2".equals(rewardName)) {
                        examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "荣立个人二等功，加1.5分");
                        examAutoEvaluation.setScore("1.5");
                        examAutoEvaluation.setModel("2020年月度柳州处对单位（部门）绩效考评公共加分标准");
                        examAutoEvaluation.setModelId("4eaa281381b742adbbc9b8540d7bf822");
                        examAutoEvaluation.setOption("民警获得个人二等功");
                        examAutoEvaluation.setOptionId("59aacf8552444d1dba18e013b9cbe11d");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","立功创模_民警获得个人二等功");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    //个人一等功2.5
                    if ("1".equals(rewardName)) {
                        examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "荣立个人一等功，加2.5分");
                        examAutoEvaluation.setScore("2.5");
                        examAutoEvaluation.setModel("2020年月度柳州处对单位（部门）绩效考评公共加分标准");
                        examAutoEvaluation.setModelId("4eaa281381b742adbbc9b8540d7bf822");
                        examAutoEvaluation.setOption("民警获得个人一等功");
                        examAutoEvaluation.setOptionId("c4e1c4fd3cfe415bb8ade1325912d126");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","立功创模_民警获得个人一等功");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                }
            }
            /*
             * 单位获奖加分
             * */

                List<AffairXcUnitReward> affairXcUnitRewardList = new ArrayList<>();
                affairXcUnitRewardList = affairXcUnitRewardService.selectAllReward(idNum, yearL,yearT);
                for (int x = 0; x < affairXcUnitRewardList.size(); x++) {
                    AffairXcUnitReward affairXcUnitReward = affairXcUnitRewardList.get(x);
                    //奖励名称
                    String nameCode = affairXcUnitReward.getNameCode();
                    //奖励级别
                    String level = affairXcUnitReward.getLevel();

                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(idNum);
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectEvalId(office.getCode()));
                    //单位或部门评为厅局级先进0.5
                    //省部级先进2
                    //全国先进3
                    //集体二等功2.5

                    /*
                     *
                     *   待完善
                     *
                     * */


                    if ("2".equals(nameCode)) {
                        examAutoEvaluation.setDetails(name + DateUtils.formatDate(affairXcUnitReward.getDate()) + "被评为集体二等功，加2.5分");
                        examAutoEvaluation.setScore("2.5");
                        examAutoEvaluation.setModel("2020年月度柳州处对单位（部门）绩效考评公共加分标准");
                        examAutoEvaluation.setModelId("4eaa281381b742adbbc9b8540d7bf822");
                        examAutoEvaluation.setOption("单位或部门获得集体二等功");
                        examAutoEvaluation.setOptionId("3731e6df596a4afbbe68ed1a30bc8cb7");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","立功创模_单位或部门获得集体二等功");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    //集体一等功5
                    if ("1".equals(nameCode)) {
                        examAutoEvaluation.setDetails(name + DateUtils.formatDate(affairXcUnitReward.getDate()) + "被评为集体一等功，加5分");
                        examAutoEvaluation.setScore("5");
                        examAutoEvaluation.setModel("2020年月度柳州处对单位（部门）绩效考评公共加分标准");
                        examAutoEvaluation.setModelId("4eaa281381b742adbbc9b8540d7bf822");
                        examAutoEvaluation.setOption("单位或部门获得集体一等功");
                        examAutoEvaluation.setOptionId("633a69efbce842b9ae1a9985e6195018");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","立功创模_单位或部门获得集体一等功");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);

                }
            }
        }
        for (int i = 0; i < bhcPartyList.size(); i++) {
            Office office = bhcPartyList.get(i);
            String idNum = office.getId();
            String name = office.getName();
            /*
             * 下属民警获奖加分
             * */
            List<PersonnelBase> personnelBaseList = new ArrayList<>();
            personnelBaseList = examAutoEvaluationDao.selectAllPeopleMessage(idNum);
            for (int p = 0; p < personnelBaseList.size(); p++) {
                PersonnelBase personnelBase = personnelBaseList.get(p);
                String idNumber = personnelBase.getIdNumber();

                List<AffairPersonalReward> affairPersonalRewardList = affairPersonalRewardService.selectAllReward(idNumber, yearL,yearT);
                for (int a = 0; a < affairPersonalRewardList.size(); a++) {
                    AffairPersonalReward affairPersonalReward = affairPersonalRewardList.get(a);
                    String rewardName = affairPersonalReward.getRewardName();
                    String rewardLevel = affairPersonalReward.getLevel();

                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setName(name);
                    examAutoEvaluation.setIdNumber(idNum);

                    //民警被评为厅局级岗位标兵  0.5

                    //全路，全区优秀人民警察1
                    if ("8".equals(rewardName) && "7".equals(rewardLevel)) {
                        examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "被评为全路，全区优秀人民警察，加1分；");
                        examAutoEvaluation.setScore("1");
                        examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队绩效考评公共加分标准");
                        examAutoEvaluation.setModelId("87edef047b9a47d086f5b7e0ebc06e8f");
                        examAutoEvaluation.setOption("民警被评为全路、全区优秀人民警察");
                        examAutoEvaluation.setOptionId("f98182d557b64707a1d0a62dae6de843");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","立功创模_民警被评为全路、全区优秀人民警察");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }

                    //全国优秀人民警察，省部级先进1.5
                    if (("20".equals(rewardName) || "9".equals(rewardName)) && ("2".equals(rewardLevel) || "1".equals(rewardLevel))) {
                        examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "被评为全国优秀人民警察、省部级先进，加1.5分；");
                        examAutoEvaluation.setScore("1.5");
                        examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队绩效考评公共加分标准");
                        examAutoEvaluation.setModelId("87edef047b9a47d086f5b7e0ebc06e8f");
                        examAutoEvaluation.setOption("民警被评为全国优秀人民警察");
                        examAutoEvaluation.setOptionId("0d353747d0f24d04a2bc4da9836b4aab");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","立功创模_民警被评为全国优秀人民警察");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    //全国级先进、省部级劳模2.5
                    if ((("20".equals(rewardName) || "9".equals(rewardName)) && ("1".equals(rewardLevel) || "2".equals(rewardLevel))) || ("10".equals(rewardName) && ("3".equals(rewardLevel) || "4".equals(rewardLevel) || "5".equals(rewardLevel) || "6".equals(rewardLevel)))) {
                        examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "被评为全国级先进、省部级劳模，加2.5分");
                        examAutoEvaluation.setScore("2.5");
                        examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队绩效考评公共加分标准");
                        examAutoEvaluation.setModelId("87edef047b9a47d086f5b7e0ebc06e8f");
                        examAutoEvaluation.setOption("民警被评为全国级先进");
                        examAutoEvaluation.setOptionId("83415ad2325444418a69868aba56aef9");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","立功创模_民警被评为全国级先进");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    //特级优秀人民警察、二级英模、全国级劳模6、
                    if ("7".equals(rewardName) || "6".equals(rewardName) || ("10".equals(rewardName) && ("1".equals(rewardLevel) || "2".equals(rewardLevel)))) {
                        examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "被评为特级优秀人民警察、二级英模、全国级劳模，加6分");
                        examAutoEvaluation.setScore("6");
                        examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队绩效考评公共加分标准");
                        examAutoEvaluation.setModelId("87edef047b9a47d086f5b7e0ebc06e8f");
                        examAutoEvaluation.setOption("民警被评为全国特级优秀人民警察");
                        examAutoEvaluation.setOptionId("2625b8a98496407ba244ad466a7e9374");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","立功创模_民警被评为全国特级优秀人民警察");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    // 一级英模7.5
                    if ("5".equals(rewardName)) {
                        examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "被评为一级英雄模范，加7.5分");
                        examAutoEvaluation.setScore("7.5");
                        examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队绩效考评公共加分标准");
                        examAutoEvaluation.setModelId("87edef047b9a47d086f5b7e0ebc06e8f");
                        examAutoEvaluation.setOption("民警被评为一级英模");
                        examAutoEvaluation.setOptionId("2d57aef3a50e44a78b23318e3769cfd6");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","立功创模_民警被评为一级英模");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }

                    //个人二等功1.5
                    if ("2".equals(rewardName)) {
                        examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "荣立个人二等功，加1.5分");
                        examAutoEvaluation.setScore("1.5");
                        examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队绩效考评公共加分标准");
                        examAutoEvaluation.setModelId("87edef047b9a47d086f5b7e0ebc06e8f");
                        examAutoEvaluation.setOption("民警获得个人二等功");
                        examAutoEvaluation.setOptionId("21315fe9073648b38922e6244bd08093");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","立功创模_民警获得个人二等功");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    //个人一等功2.5
                    if ("1".equals(rewardName)) {
                        examAutoEvaluation.setDetails(affairPersonalReward.getName() + DateUtils.formatDate(affairPersonalReward.getDate()) + "荣立个人一等功，加2.5分");
                        examAutoEvaluation.setScore("2.5");
                        examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队绩效考评公共加分标准");
                        examAutoEvaluation.setModelId("87edef047b9a47d086f5b7e0ebc06e8f");
                        examAutoEvaluation.setOption("民警获得个人一等功");
                        examAutoEvaluation.setOptionId("7a4e84b3a35846d3932378a34c5f93e5");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","立功创模_民警获得个人一等功");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                }
            }
            /*
             * 单位获奖加分
             * */

                List<AffairXcUnitReward> affairXcUnitRewardList = new ArrayList<>();
                affairXcUnitRewardList = affairXcUnitRewardService.selectAllReward(idNum, yearL,yearT);
                for (int x = 0; x < affairXcUnitRewardList.size(); x++) {
                    AffairXcUnitReward affairXcUnitReward = affairXcUnitRewardList.get(x);
                    //奖励名称
                    String nameCode = affairXcUnitReward.getNameCode();
                    //奖励级别
                    String level = affairXcUnitReward.getLevel();

                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(idNum);
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectEvalId(office.getCode()));
                    //单位或部门评为厅局级先进0.5
                    //省部级先进2
                    //全国先进3
                    //集体二等功2.5

                    /*
                     *
                     *   待完善
                     *
                     * */


                    if ("2".equals(nameCode)) {
                        examAutoEvaluation.setDetails(name + DateUtils.formatDate(affairXcUnitReward.getDate()) + "被评为集体二等功，加2.5分");
                        examAutoEvaluation.setScore("2.5");
                        examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队绩效考评公共加分标准");
                        examAutoEvaluation.setModelId("87edef047b9a47d086f5b7e0ebc06e8f");
                        examAutoEvaluation.setOption("单位或部门获得集体二等功");
                        examAutoEvaluation.setOptionId("f648c1243d1c430abc25a4812920bd55");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","立功创模_单位或部门获得集体二等功");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    //集体一等功5
                    if ("1".equals(nameCode)) {
                        examAutoEvaluation.setDetails(name + DateUtils.formatDate(affairXcUnitReward.getDate()) +"被评为集体一等功，加5分");
                        examAutoEvaluation.setScore("5");
                        examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队绩效考评公共加分标准");
                        examAutoEvaluation.setModelId("87edef047b9a47d086f5b7e0ebc06e8f");
                        examAutoEvaluation.setOption("单位或部门获得集体一等功");
                        examAutoEvaluation.setOptionId("63acebe9c8ae4005b74cd083fc48767a");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","立功创模_单位或部门获得集体一等功");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);

                }
            }
        }
    }
    /*
     * 月度
     * 局考局
     * 宣传思想-立功创模-荣誉管理-奖项维护
     * */
    public void jkjJxwh(String checkTime){

        String year = checkTime.substring(0, 4);
        Integer y = Integer.valueOf(year);
        String month = checkTime.substring(checkTime.length() - 2);
        Integer m = Integer.valueOf(month);
        Map<String, String> map = this.monthTime(checkTime);
        String yearL = map.get("yearL");
        String yearT = map.get("yearT");
        List<Office> jjgPartyList = examAutoEvaluationDao.selectJjgUnit();


        StringBuilder details1 = new StringBuilder();
        StringBuilder details2 = new StringBuilder();
        StringBuilder details3 = new StringBuilder();
        StringBuilder details4 = new StringBuilder();
        StringBuilder details5 = new StringBuilder();
        StringBuilder details6 = new StringBuilder();
        StringBuilder details7 = new StringBuilder();
        StringBuilder details8 = new StringBuilder();
        StringBuilder details9 = new StringBuilder();
        StringBuilder details10 = new StringBuilder();
        StringBuilder details11 = new StringBuilder();

        Integer numSum1 = 0;
        Integer numSum2 = 0;
        Integer numSum3 = 0;
        Integer numSum4 = 0;
        Integer numSum5 = 0;
        Integer numSum6 = 0;
        Integer numSum7 = 0;
        Integer numSum8 = 0;
        Integer numSum9 = 0;
        Integer numSum10 = 0;
        Integer numSum11 = 0;

        for (int i = 0; i < jjgPartyList.size(); i++) {
            Office office = jjgPartyList.get(i);
            String idNumber = office.getId();
            String name = office.getName();

            /*
             * 单位获奖加分
             * */
            List<AffairXcUnitReward> affairXcUnitRewardList = new ArrayList<>();
            affairXcUnitRewardList = affairXcUnitRewardService.selectAllReward(idNumber, yearL,yearT);

                for (int x = 0; x < affairXcUnitRewardList.size(); x++) {
                    AffairXcUnitReward affairXcUnitReward = affairXcUnitRewardList.get(x);
                    String nameCode = affairXcUnitReward.getNameCode();
                    String level = affairXcUnitReward.getLevel();


                    //	部门（支队）评为厅局级先进的，每次加1分；
                    //	部门（支队）评为省部级先进的，每次加3分；
                    //	部门（支队）评为全国先进的，每次加5分；
                    //待完善

                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("2");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(idNumber);
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectEvalId(office.getCode()));

                    //	部门（支队）获得集体三等功，每次加2分；
                    if ("3".equals(nameCode)) {
                        examAutoEvaluation.setDetails(name + DateUtils.formatDate(affairXcUnitReward.getDate()) +"被评为集体三等功，加2分");
                        examAutoEvaluation.setScore("2");
                        examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队月度绩效考核公共加分标准");
                        examAutoEvaluation.setModelId("ee53f212fa8740a7a88c8764104d15a3");
                        examAutoEvaluation.setOption("单位或部门获得集体三等功");
                        examAutoEvaluation.setOptionId("40adedb946ae48d99599a7bb90b35082");
                        examAutoEvaluation.setFromSys("智慧政工");

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_单位或部门获得集体三等功");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    //	部门（支队）获得集体二等功，每次加4分；
                    if ("2".equals(nameCode)) {
                        examAutoEvaluation.setDetails(name + DateUtils.formatDate(affairXcUnitReward.getDate()) +"被评为集体二等功，加4分");
                        examAutoEvaluation.setScore("4");
                        examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队月度绩效考核公共加分标准");
                        examAutoEvaluation.setModelId("ee53f212fa8740a7a88c8764104d15a3");
                        examAutoEvaluation.setOption("单位或部门获得集体二等功");
                        examAutoEvaluation.setOptionId("c11ddcae31e3400cb8758b5dbf01ee2e");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_单位或部门获得集体二等功");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    //	部门（支队）获得集体一等功，每次加6分。
                    if ("1".equals(nameCode)) {
                        examAutoEvaluation.setDetails(name + DateUtils.formatDate(affairXcUnitReward.getDate()) +"被评为集体一等功，加6分");
                        examAutoEvaluation.setScore("4");
                        examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队月度绩效考核公共加分标准");
                        examAutoEvaluation.setModelId("ee53f212fa8740a7a88c8764104d15a3");
                        examAutoEvaluation.setOption("单位或部门获得集体一等功");
                        examAutoEvaluation.setOptionId("0c81e7f4ef324294b3f455d82fe5671b");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_单位或部门获得集体一等功");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                }


            /*
             * 下属民警获奖加分
             * */
            List<PersonnelBase> personnelBaseList = new ArrayList<>();
            personnelBaseList = examAutoEvaluationDao.selectAllPeopleMessage(idNumber);
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            for (int p = 0; p < personnelBaseList.size(); p++) {
                PersonnelBase personnelBase = personnelBaseList.get(p);
                String idN = personnelBase.getIdNumber();
                List<AffairPersonalReward> affairPersonalRewardList = new ArrayList<>();
                affairPersonalRewardList = affairPersonalRewardService.selectAllReward(idN,yearL,yearT);
                for (int a = 0; a < affairPersonalRewardList.size(); a++){
                    AffairPersonalReward affairPersonalReward = affairPersonalRewardList.get(a);
                    String rewardName = affairPersonalReward.getRewardName();
                    String level = affairPersonalReward.getLevel();

                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("2");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setName(name);
                    examAutoEvaluation.setIdNumber(idNumber);
                    examAutoEvaluation.setEvaluationId(userDao.selectUserId(idN));
                    //民警被评为厅（局）级岗位标兵，每人加0.5分；
                    //	民警被评为全路、全区优秀人民警察，每人加1分；
                    if ("8".equals(rewardName) && "7".equals(level)){
                        details1.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum1++;
                    }
                    //	民警被评为全国优秀人民警察每人加1.5分；
                    if (("1".equals(level) || "2".equals(level)) && "8".equals(rewardName)){
                        details2.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum2++;
                    }
                    //省部级先进 加1.5分
                    if (("3".equals(level) || "4".equals(level) || "5".equals(level) || "6".equals(level)) && ("20".equals(rewardName) || "9".equals(rewardName))){
                        details3.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum3++;
                    }
                    //个人二等功1.5分
                    if ("2".equals(rewardName)){
                        details4.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum4++;
                    }
                    //	民警被评为全国级先进每人加2.5分；
                    if ((("1".equals(level) || "2".equals(level)) && ("20".equals(rewardName) || "9".equals(rewardName)))){
                        details5.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum5++;
                    }
                    //省部级劳模2.5分
                    if (("3".equals(level) || "4".equals(level) || "5".equals(level) || "6".equals(level)) && "10".equals(rewardName)){
                        details6.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum6++;
                    }
                    //个人一等功
                    if ("1".equals(rewardName)){
                       details7.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                       numSum7++;
                    }
                    //	民警被评为特级优秀人民警察每人加6分；
                    if ("7".equals(rewardName) || "6".equals(rewardName)){
                        details8.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum8++;
                    }
                    //二级英模
                    if ("6".equals(rewardName)){
                        details9.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum9++;
                    }
                    //全国级劳模
                    if ("10".equals(rewardName) && ("1".equals(level) || "2".equals(level))){
                        details10.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum10++;
                    }
                    //	民警被评为一级英模，每人加7分
                    if ("5".equals(rewardName)){
                        details11.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum11++;
                    }
                }
            }
            if (numSum1 > 0){
                examAutoEvaluation.setDetails(details1 + "被评为全路，全区优秀人民警察，加1分；");
                examAutoEvaluation.setScore("1");
                examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队月度绩效考核公共加分标准");
                examAutoEvaluation.setModelId("d07471fe33c64f85afc6288d039f2248");
                examAutoEvaluation.setOption("民警被评为全路、全区优秀人民警察");
                examAutoEvaluation.setOptionId("9ce2973aaaab41d484d18ff0ca83d916");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为全路、全区优秀人民警察");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (numSum2 > 0){
                examAutoEvaluation.setDetails(details2  + "被评为全国优秀人民警察加1.5分");
                examAutoEvaluation.setScore("1.5");
                examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队月度绩效考核公共加分标准");
                examAutoEvaluation.setModelId("d07471fe33c64f85afc6288d039f2248");
                examAutoEvaluation.setOption("民警被评为全国优秀人民警察");
                examAutoEvaluation.setOptionId("4f888362acaa4759ba269f6f8960d000");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为全国优秀人民警察");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (numSum3 > 0){
                examAutoEvaluation.setDetails(details3 + "被评为省部级先进加1.5分");
                examAutoEvaluation.setScore("1.5");
                examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队月度绩效考核公共加分标准");
                examAutoEvaluation.setModelId("d07471fe33c64f85afc6288d039f2248");
                examAutoEvaluation.setOption("民警被评为省部级先进");
                examAutoEvaluation.setOptionId("920ca34fa0974f13a166ff0a0e5321d3");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为省部级先进");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (numSum4 > 0){
                examAutoEvaluation.setDetails(details4  + "荣立个人二等功，加1.5分");
                examAutoEvaluation.setScore("1.5");
                examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队月度绩效考核公共加分标准");
                examAutoEvaluation.setModelId("d07471fe33c64f85afc6288d039f2248");
                examAutoEvaluation.setOption("民警获得个人二等功");
                examAutoEvaluation.setOptionId("3eca5072e39443b29e2bde64d37af663");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警获得个人二等功");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (numSum5 > 0){
                examAutoEvaluation.setDetails(details5 + "被评为全国级先进加2.5分");
                examAutoEvaluation.setScore("2.5");
                examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队月度绩效考核公共加分标准");
                examAutoEvaluation.setModelId("d07471fe33c64f85afc6288d039f2248");
                examAutoEvaluation.setOption("民警被评为全国级先进");
                examAutoEvaluation.setOptionId("f829917407da44e4b22929a6eea7357f");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为全国级先进");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (numSum6 > 0){
                examAutoEvaluation.setDetails(details6 + "被评为省部级劳模加2.5分");
                examAutoEvaluation.setScore("1.5");
                examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队月度绩效考核公共加分标准");
                examAutoEvaluation.setModelId("d07471fe33c64f85afc6288d039f2248");
                examAutoEvaluation.setOption("民警被评为省部级劳模");
                examAutoEvaluation.setOptionId("7d007129d08141f3b8604bf61ed28b1d");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为省部级劳模");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (numSum7 > 0){
                examAutoEvaluation.setDetails(details7  + "荣立个人一等功的，加2.5分");
                examAutoEvaluation.setScore("2.5");
                examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队月度绩效考核公共加分标准");
                examAutoEvaluation.setModelId("d07471fe33c64f85afc6288d039f2248");
                examAutoEvaluation.setOption("民警获得个人一等功");
                examAutoEvaluation.setOptionId("a7c64b1cd749439d8278a5e3e884f056");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警获得个人一等功");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (numSum8 > 0){
                examAutoEvaluation.setDetails(details8 + "被评为特级优秀人民警察每人加6分；");
                examAutoEvaluation.setScore("6");
                examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队月度绩效考核公共加分标准");
                examAutoEvaluation.setModelId("d07471fe33c64f85afc6288d039f2248");
                examAutoEvaluation.setOption("民警被评为全国特级优秀人民警察");
                examAutoEvaluation.setOptionId("d6f3015de7b347b5aa5df4cb17c7d976");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为全国特级优秀人民警察");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (numSum9 > 0){
                examAutoEvaluation.setDetails(details9  + "被评为二级英模每人加6分；");
                examAutoEvaluation.setScore("6");
                examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队月度绩效考核公共加分标准");
                examAutoEvaluation.setModelId("d07471fe33c64f85afc6288d039f2248");
                examAutoEvaluation.setOption("民警被评为二级英模");
                examAutoEvaluation.setOptionId("7a3cfe270d054c73acecf15d790c0d12");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为二级英模");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (numSum10 > 0){
                examAutoEvaluation.setDetails(details10 + "被评为全国级劳模每人加6分；");
                examAutoEvaluation.setScore("6");
                examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队月度绩效考核公共加分标准");
                examAutoEvaluation.setModelId("d07471fe33c64f85afc6288d039f2248");
                examAutoEvaluation.setOption("民警被评为全国级劳模");
                examAutoEvaluation.setOptionId("a908325d1a3c4fcfb4ec0de11d8ffbd2");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为全国级劳模");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (numSum11 > 0){
                examAutoEvaluation.setDetails(details11 + "被评为一级英模，每人加7分；");
                examAutoEvaluation.setScore("7");
                examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队月度绩效考核公共加分标准");
                examAutoEvaluation.setModelId("d07471fe33c64f85afc6288d039f2248");
                examAutoEvaluation.setOption("民警被评为一级英模");
                examAutoEvaluation.setOptionId("f69885d093244f408ad6fb76ffd57f8a");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为一级英模");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
        }
    }

    /*
     * 年度
     * 局考局
     * 宣传思想-立功创模-荣誉管理-奖项维护
     * */
    public void jkjJxwhYear(String year){

        Map<String, String> map = this.yearTime(year);
        String yearL = map.get("yearL");
        String yearT = map.get("yearT");

        List<Office> jjgPartyList = examAutoEvaluationDao.selectJjgUnit();

        StringBuilder details1 = new StringBuilder();
        StringBuilder details2 = new StringBuilder();
        StringBuilder details3 = new StringBuilder();
        StringBuilder details4 = new StringBuilder();
        StringBuilder details5 = new StringBuilder();
        StringBuilder details6 = new StringBuilder();
        StringBuilder details7 = new StringBuilder();
        StringBuilder details8 = new StringBuilder();
        StringBuilder details9 = new StringBuilder();
        StringBuilder details10 = new StringBuilder();
        StringBuilder details11 = new StringBuilder();

        int numSum1 = 0;
        int numSum2 = 0;
        int numSum3 = 0;
        int numSum4 = 0;
        int numSum5 = 0;
        int numSum6 = 0;
        int numSum7 = 0;
        int numSum8 = 0;
        int numSum9 = 0;
        int numSum10 = 0;
        int numSum11 = 0;

        for (int i = 0; i < jjgPartyList.size(); i++) {
            Office office = jjgPartyList.get(i);
            String idNumber = office.getId();
            String name = office.getName();

            /*
             * 单位获奖加分
             * */
            List<AffairXcUnitReward> affairXcUnitRewardList = new ArrayList<>();
            affairXcUnitRewardList = affairXcUnitRewardService.selectAllRewardYear(idNumber, year);

                for (int x = 0; x < affairXcUnitRewardList.size(); x++) {
                    AffairXcUnitReward affairXcUnitReward = affairXcUnitRewardList.get(x);
                    String nameCode = affairXcUnitReward.getNameCode();
                    String level = affairXcUnitReward.getLevel();


                    //	部门（支队）评为厅局级先进的，每次加1分；
                    //	部门（支队）评为省部级先进的，每次加3分；
                    //	部门（支队）评为全国先进的，每次加5分；
                    //待完善

                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("2");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(idNumber);
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectEvalId(office.getCode()));
                    //	部门（支队）获得集体三等功，每次加2分；
                    if ("3".equals(nameCode)) {
                        examAutoEvaluation.setDetails(name + DateUtils.formatDate(affairXcUnitReward.getDate()) +"被评为集体三等功，加2分");
                        examAutoEvaluation.setScore("2");
                        examAutoEvaluation.setModel("2020年年度公安局对局机关各处室及直属支队年度绩效考核公共加分标准");
                        examAutoEvaluation.setModelId("ee53f212fa8740a7a88c8764104d15a3");
                        examAutoEvaluation.setOption("单位或部门获得集体三等功");
                        examAutoEvaluation.setOptionId("40adedb946ae48d99599a7bb90b35082");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_单位或部门获得集体三等功");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    //	部门（支队）获得集体二等功，每次加4分；
                    if ("2".equals(nameCode)) {
                        examAutoEvaluation.setDetails(name + DateUtils.formatDate(affairXcUnitReward.getDate()) +"被评为集体二等功，加4分");
                        examAutoEvaluation.setScore("4");
                        examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队月度绩效考核公共加分标准");
                        examAutoEvaluation.setModelId("d07471fe33c64f85afc6288d039f2248");
                        examAutoEvaluation.setOption("单位或部门获得集体二等功");
                        examAutoEvaluation.setOptionId("c11ddcae31e3400cb8758b5dbf01ee2e");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_单位或部门获得集体二等功");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    //	部门（支队）获得集体一等功，每次加6分。
                    if ("1".equals(nameCode)) {
                        examAutoEvaluation.setDetails(name + DateUtils.formatDate(affairXcUnitReward.getDate()) +"被评为集体一等功，加6分");
                        examAutoEvaluation.setScore("4");
                        examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队月度绩效考核公共加分标准");
                        examAutoEvaluation.setModelId("d07471fe33c64f85afc6288d039f2248");
                        examAutoEvaluation.setOption("单位或部门获得集体一等功");
                        examAutoEvaluation.setOptionId("c11ddcae31e3400cb8758b5dbf01ee2e");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_单位或部门获得集体一等功");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                }


            /*
             * 下属民警获奖加分
             * */
            List<PersonnelBase> personnelBaseList = new ArrayList<>();
            personnelBaseList = examAutoEvaluationDao.selectAllPeopleMessage(idNumber);
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            for (int p = 0; p < personnelBaseList.size(); p++) {
                PersonnelBase personnelBase = personnelBaseList.get(p);
                String idN = personnelBase.getIdNumber();
                List<AffairPersonalReward> affairPersonalRewardList = new ArrayList<>();
                affairPersonalRewardList = affairPersonalRewardService.selectAllRewardYear(idN,yearL,yearT);
                for (int a = 0; a < affairPersonalRewardList.size(); a++){
                    AffairPersonalReward affairPersonalReward = affairPersonalRewardList.get(a);
                    String rewardName = affairPersonalReward.getRewardName();
                    String level = affairPersonalReward.getLevel();

                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("2");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setName(name);
                    examAutoEvaluation.setIdNumber(idNumber);
                    examAutoEvaluation.setEvaluationId(userDao.selectUserId(idN));
                    examAutoEvaluation.setModel("2020年年度公安局对局机关各处室及直属支队年度绩效考核公共加分标准");
                    examAutoEvaluation.setModelId("ee53f212fa8740a7a88c8764104d15a3");
                    examAutoEvaluation.setFromSys("智慧政工");
                    //民警被评为厅（局）级岗位标兵，每人加0.5分；
                    //	民警被评为全路、全区优秀人民警察，每人加0.3分；
                    if ("8".equals(rewardName) && "7".equals(level)){
                        details1.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum1++;
                    }
                    //	民警被评为全国优秀人民警察每人加1.5分；
                    if (("1".equals(level) || "2".equals(level)) && "8".equals(rewardName)){
                        details2.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum2++;
                    }
                    //省部级先进 加1.5分
                    if (("3".equals(level) || "4".equals(level) || "5".equals(level) || "6".equals(level)) && ("20".equals(rewardName) || "9".equals(rewardName))){
                        details3.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum3++;
                    }
                    //个人二等功1.5分
                    if ("2".equals(rewardName)){
                        details4.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum4++;
                    }
                    //	民警被评为全国级先进每人加2.5分；
                    if ((("1".equals(level) || "2".equals(level)) && ("20".equals(rewardName) || "9".equals(rewardName)))){
                        details5.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum5++;
                    }
                    //省部级劳模2.5分
                    if (("3".equals(level) || "4".equals(level) || "5".equals(level) || "6".equals(level)) && "10".equals(rewardName)){
                        details6.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum6++;
                    }
                    //个人一等功
                    if ("1".equals(rewardName)){
                        details7.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum7++;
                    }
                    //	民警被评为特级优秀人民警察每人加6分；
                    if ("7".equals(rewardName) || "6".equals(rewardName)){
                        details8.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum8++;
                    }
                    //二级英模
                    if ("6".equals(rewardName)){
                        details9.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum9++;
                    }
                    //全国级劳模
                    if ("10".equals(rewardName) && ("1".equals(level) || "2".equals(level))){
                       details10.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                       numSum10++;
                    }
                    //	民警被评为一级英模，每人加7分
                    if ("5".equals(rewardName)){
                        details11.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum11++;
                    }
                }
            }
            if (numSum1 > 0){
                examAutoEvaluation.setDetails(details1 + "被评为全路，全区优秀人民警察，加0.3分；");
                examAutoEvaluation.setScore("0.3");
                examAutoEvaluation.setOption("民警被评为全路、全区优秀人民警察");
                examAutoEvaluation.setOptionId("f1e84e5c32344671bdb4a3ce1e83376d");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为全路、全区优秀人民警察");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (numSum2 > 0){
                examAutoEvaluation.setDetails(details2  + "被评为全国优秀人民警察加1.5分");
                examAutoEvaluation.setScore("1.5");
                examAutoEvaluation.setOption("民警被评为全国优秀人民警察");
                examAutoEvaluation.setOptionId("9192225b64e941f69b1e792ab225619b");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为全国优秀人民警察");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (numSum3 > 0){
                examAutoEvaluation.setDetails(details3 + "被评为省部级先进加1.5分");
                examAutoEvaluation.setScore("1.5");
                examAutoEvaluation.setOption("民警被评为省部级先进");
                examAutoEvaluation.setOptionId("541d3c0802804a9f988e43b1062e9155");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为省部级先进");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (numSum4 > 0){
                examAutoEvaluation.setDetails(details4 + "荣立个人二等功，加1.5分");
                examAutoEvaluation.setScore("1.5");
                examAutoEvaluation.setOption("民警获得个人二等功");
                examAutoEvaluation.setOptionId("14c2053f521340fb96eac49493995ab4");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警获得个人二等功");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (numSum5 > 0){
                examAutoEvaluation.setDetails(details5 + "被评为全国级先进加2.5分");
                examAutoEvaluation.setScore("2.5");
                examAutoEvaluation.setOption("民警被评为全国级先进");
                examAutoEvaluation.setOptionId("87f232482ea14d958d53e4e2d31184db");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为全国级先进");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (numSum6 > 0){
                examAutoEvaluation.setDetails(details6 + "被评为省部级劳模加2.5分");
                examAutoEvaluation.setScore("1.5");
                examAutoEvaluation.setOption("民警被评为省部级劳模");
                examAutoEvaluation.setOptionId("2ef008c714e945269676c7d193a5f8e3");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为省部级劳模");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (numSum7 > 0){
                examAutoEvaluation.setDetails(details7 + "荣立个人一等功的，加2.5分");
                examAutoEvaluation.setScore("2.5");
                examAutoEvaluation.setOption("民警获得个人一等功");
                examAutoEvaluation.setOptionId("03b711857c0240809ecf88c885be0fc0");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警获得个人一等功");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (numSum8 > 0){
                examAutoEvaluation.setDetails(details8   + "被评为特级优秀人民警察每人加6分；");
                examAutoEvaluation.setScore("6");
                examAutoEvaluation.setOption("民警被评为全国特级优秀人民警察");
                examAutoEvaluation.setOptionId("7e341bfc0b244458a366c6fb2a35f36d");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为全国特级优秀人民警察");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (numSum9 > 0){
                examAutoEvaluation.setDetails(details9 + "被评为二级英模每人加6分；");
                examAutoEvaluation.setScore("6");
                examAutoEvaluation.setOption("民警被评为二级英模");
                examAutoEvaluation.setOptionId("7a3cfe270d054c73acecf15d790c0d12");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为二级英模");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (numSum10 > 0){
                examAutoEvaluation.setDetails(details10 + "被评为全国级劳模每人加6分；");
                examAutoEvaluation.setScore("6");
                examAutoEvaluation.setOption("民警被评为全国级劳模");
                examAutoEvaluation.setOptionId("c8ba704f5cd84eae82eca08727d72f96");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为全国级劳模");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (numSum11 > 0){
                examAutoEvaluation.setDetails(details11 + "被评为一级英模，每人加7分；");
                examAutoEvaluation.setScore("7");
                examAutoEvaluation.setOption("民警被评为一级英模");
                examAutoEvaluation.setOptionId("82695169e9474849bf71c81f34628ecb");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为一级英模");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
        }
    }

    /*
     * 月度
     * 局考处
     * 宣传思想-立功创模-荣誉管理-奖项维护
     * */
    public void jkcJxwh(String checkTime){


        String year = checkTime.substring(0, 4);
        Integer y = Integer.valueOf(year);
        String month = checkTime.substring(checkTime.length() - 2);
        Integer m = Integer.valueOf(month);
        Map<String, String> map = this.monthTime(checkTime);
        String yearL = map.get("yearL");
        String yearT = map.get("yearT");

        Map<String,Object> jkcUnit = examAutoEvaluationUnitService.jkcUnit();
        List<Office> nncPartyList = (List<Office>) jkcUnit.get("nnc");
        List<Office> lzcPaytyList = (List<Office>) jkcUnit.get("lzc");
        List<Office> bhcPaytyList = (List<Office>) jkcUnit.get("bhc");

        for (int o = 0; o < nncPartyList.size(); o++) {
            StringBuilder details1 = new StringBuilder();
            StringBuilder details2 = new StringBuilder();
            StringBuilder details3 = new StringBuilder();
            StringBuilder details4 = new StringBuilder();
            StringBuilder details5 = new StringBuilder();
            StringBuilder details6 = new StringBuilder();
            StringBuilder details7 = new StringBuilder();
            StringBuilder details8 = new StringBuilder();
            StringBuilder details9 = new StringBuilder();
            StringBuilder details10 = new StringBuilder();
            StringBuilder details11 = new StringBuilder();

            int numSum1 = 0;
            int numSum2 = 0;
            int numSum3 = 0;
            int numSum4 = 0;
            int numSum5 = 0;
            int numSum6 = 0;
            int numSum7 = 0;
            int numSum8 = 0;
            int numSum9 = 0;
            int numSum10 = 0;
            int numSum11 = 0;
            Office office = nncPartyList.get(o);
            //公安处名称
            String name = office.getName();
            //公安处id
            String unitId = office.getId();

            String code = office.getCode();

                /*
                 * 单位获奖加分
                 * */
                List<AffairXcUnitReward> affairXcUnitRewardList = new ArrayList<>();
                affairXcUnitRewardList = affairXcUnitRewardService.selectAllReward(unitId,yearL,yearT);
                for (int a = 0; a < affairXcUnitRewardList.size(); a++){
                    AffairXcUnitReward affairXcUnitReward = affairXcUnitRewardList.get(a);
                    String nameCode = affairXcUnitReward.getNameCode();
                    String level = affairXcUnitReward.getLevel();

                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("1");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectEvalId(office.getCode()));
                    examAutoEvaluation.setModel("2020年月度公安局对公安处绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("a20967b72dca4e6e9915fa43c46e153a");
                    examAutoEvaluation.setFromSys("智慧政工");
                    //部门或单位评为厅局级先进的（综合类），每个加0.5分；
                    //部门或单位评为省部级先进的（综合类），每个加2分；
                    //部门或单位评为全国先进的（综合类），每个加3分；
                    /*
                     *
                     * 单位的  "先进"  名称未定，待完善
                     *
                     * */
                    //部门或单位获得集体二等功，每次加2.5分；
                    if ("2".equals(nameCode)){
                        examAutoEvaluation.setDetails(name + DateUtils.formatDate(affairXcUnitReward.getDate()) +"获得集体二等功加2.5分；");
                        examAutoEvaluation.setScore("2.5");
                        examAutoEvaluation.setOption("单位或部门获得集体二等功");
                        examAutoEvaluation.setOptionId("5011be2521e6495484d8bfc20dcb68a1");
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_单位或部门获得集体二等功");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);

                        this.save(examAutoEvaluation);

                    }
                    //部门或单位获得集体一等功，每次加5分。
                    if ("1".equals(nameCode)){
                        examAutoEvaluation.setDetails(name + DateUtils.formatDate(affairXcUnitReward.getDate()) +"获得集体一等功，每次加5分；");
                        examAutoEvaluation.setScore("5");
                        examAutoEvaluation.setOption("单位或部门获得集体一等功");
                        examAutoEvaluation.setOptionId("074e4f7e6fe444779533e414489f1a9b");
                        examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectEvalId(office.getCode()));
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_单位或部门获得集体一等功");
                        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);

                    }
                }


                /*
                 * 下属民警获奖加分
                 * */
                List<PersonnelBase> personnelBaseList = new ArrayList<>();
                personnelBaseList = examAutoEvaluationDao.selectAllPeopleMessage(unitId);
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                for (int p = 0; p < personnelBaseList.size(); p++) {
                    PersonnelBase personnelBase = personnelBaseList.get(p);
                    String idN = personnelBase.getIdNumber();
                    List<AffairPersonalReward> affairPersonalRewardList = new ArrayList<>();
                    affairPersonalRewardList = affairPersonalRewardService.selectAllRewardYear(idN,yearL,yearT);
                    for (int a = 0; a < affairPersonalRewardList.size(); a++) {
                        AffairPersonalReward affairPersonalReward = affairPersonalRewardList.get(a);
                        String rewardName = affairPersonalReward.getRewardName();
                        String level = affairPersonalReward.getLevel();

                        examAutoEvaluation.setType("2");
                        examAutoEvaluation.setEvalType("2");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setModel("2020年月度公安局对公安处绩效考评公共加分标准");
                        examAutoEvaluation.setModelId("a20967b72dca4e6e9915fa43c46e153a");
                        examAutoEvaluation.setFromSys("智慧政工");
                        if (name.contains("南宁")){
                            examAutoEvaluation.setUnit("南宁处政治处宣传教育室（民警训练基地）");
                            examAutoEvaluation.setUnitId("800901370000");
                            examAutoEvaluation.setEvaluationId("a4e40825e3b34c37895ee2ed168f24a0");
                        }
                        /*if (name.contains("柳州")){
                            examAutoEvaluation.setUnit("柳州处政治处宣传教育室（民警训练基地）");
                            examAutoEvaluation.setUnitId("800902370000");
                            examAutoEvaluation.setEvaluationId("94ccb0bdb21441f997c72268b4d882db");
                        }
                        if (name.contains("北海")){
                            examAutoEvaluation.setUnit("北海处政治处宣传教育室（民警训练基地）");
                            examAutoEvaluation.setUnitId("800903370000");
                            examAutoEvaluation.setUnitId("82f8e9ba1cd7446b99c084d5b4b5c038");
                        }*/

                        //民警被评为厅（局）级岗位标兵，每人加0.5分；
                        //民警被评为全路、全区优秀人民警察，每人加1分；
                        if ("8".equals(rewardName) && "7".equals(level)){
                            details1.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                            numSum1++;
                        }
                        //民警被评为全国优秀人民警察 每人加1.5分；
                        if (("1".equals(level) || "2".equals(level)) && "8".equals(rewardName)){
                            details2.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));

                            numSum2++;
                        }
                        //省部级先进加1.5分；
                        if (("4".equals(level) || "3".equals(level) || "5".equals(level) || "6".equals(level)) && ("20".equals(rewardName) || "9".equals(rewardName))){
                            details3.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));

                            numSum3++;
                        }
                        //荣立个人二等功的1.5分；
                        if ("2".equals(rewardName)){
                            details4.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                            numSum4++;
                        }
                        //民警被评为全国级先进 每人加2.5分；
                        if (("1".equals(level) || "2".equals(level)) && ("20".equals(rewardName) || "9".equals(rewardName))){
                            details5.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));

                            numSum5++;
                        }
                        //省部级劳模；每人加2.5分；
                        if (("4".equals(level) || "3".equals(level) || "5".equals(level) || "6".equals(level)) && ("10".equals(rewardName))){
                            details6.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));

                            numSum6++;
                        }
                        //荣立个人一等功的，每人加2.5分；
                        if ("1".equals(rewardName)){
                            details7.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));

                            numSum7++;
                        }
                        //民警被评为特级优秀人民警察、，每人加6分；
                        if ("7".equals(rewardName)){
                            details8.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));

                            numSum8++;
                        }
                        //二级英模每人加6分；
                        if ("6".equals(rewardName)){
                            details9.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));

                            numSum9++;
                        }
                        //全国级劳模每人加6分；
                        if ("10".equals(rewardName) && ("1".equals(level) || "2".equals(level))){
                            details10.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));

                            numSum10++;
                        }
                        //民警被评为一级英模，每人加7分
                        if ("5".equals(rewardName)){
                            details11.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));

                            numSum11++;
                        }
                }
            }
                if (numSum1 > 0){
                    examAutoEvaluation.setDetails( details1 + "被评为全路，全区优秀人民警察，加1分；");
                    examAutoEvaluation.setScore("1");
                    examAutoEvaluation.setOption("民警被评为全路、全区优秀人民警察");
                    examAutoEvaluation.setOptionId("0166ddad678349438caf6422bf999aef");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为全路、全区优秀人民警察");

                    examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);

                }
                if (numSum2 > 0){
                    examAutoEvaluation.setDetails(details2 + "被评为全国优秀人民警察，每次加1.5分；");
                    examAutoEvaluation.setScore("1.5");
                    examAutoEvaluation.setOption("民警被评为全国优秀人民警察");
                    examAutoEvaluation.setOptionId("ddc4a0842d464668a6fe3da017715385");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为全国优秀人民警察");

                    examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);

                }
                if (numSum3 > 0){
                    examAutoEvaluation.setDetails(details3 + "被评为省部级先进，每次加1.5分；");
                    examAutoEvaluation.setScore("5");
                    examAutoEvaluation.setOption("民警被评为省部级先进");
                    examAutoEvaluation.setOptionId("f2cda4aa3f48438ea54becfd938d231f");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为省部级先进");

                    examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);

                }
                if (numSum4 > 0){
                    examAutoEvaluation.setDetails(details4 + "荣立个人二等功，每次加1.5分；");
                    examAutoEvaluation.setScore("5");
                    examAutoEvaluation.setOption("民警获得个人二等功");
                    examAutoEvaluation.setOptionId("ae4ea67ceef34454aed79bb0ec350b38");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警获得个人二等功");

                    examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);

                }
                if (numSum5 > 0){
                    examAutoEvaluation.setDetails(details5 + "被评为全国级先进，每次加2.5分；");
                    examAutoEvaluation.setScore("2.5");
                    examAutoEvaluation.setOption("民警被评为全国级先进");
                    examAutoEvaluation.setOptionId("baa20ab7bd5c4df7aa2c7de638cfc96f");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为全国级先进");

                    examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);

                }
                if (numSum6 > 0){
                    examAutoEvaluation.setDetails(details6 + "被评为省部级劳模，每次加2.5分；");
                    examAutoEvaluation.setScore("2.5");
                    examAutoEvaluation.setOption("民警被评为省部级劳模");
                    examAutoEvaluation.setOptionId("10f03c26d2a046d28f6f1222258ec4f9");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为省部级劳模");

                    examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);

                }
                if (numSum7 > 0){
                    examAutoEvaluation.setDetails(details7 + "被评为荣立个人一等功的，每次加2.5分；");
                    examAutoEvaluation.setScore("2.5");
                    examAutoEvaluation.setOption("民警获得个人一等功");
                    examAutoEvaluation.setOptionId("2314c9d9f8b644a9b5151a9df854e32d");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警获得个人一等功");

                    examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);

                }
                if (numSum8 > 0){
                    examAutoEvaluation.setDetails(details8 + "被评为特级优秀人民警察，每次加6分；");
                    examAutoEvaluation.setScore("6");
                    examAutoEvaluation.setOption("民警被评为全国特级优秀人民警察");
                    examAutoEvaluation.setOptionId("6b5a15ffbfa945988c47599baf6f8900");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为全国特级优秀人民警察");

                    examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);

                }
                if (numSum9 > 0){
                    examAutoEvaluation.setDetails(details9 + "被评为二级英模，每次加6分；");
                    examAutoEvaluation.setScore("6");
                    examAutoEvaluation.setOption("民警被评为二级英模");
                    examAutoEvaluation.setOptionId("d36ad16ad99e4b19a100e3a08ed60f6b");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为二级英模");

                    examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);

                }
                if (numSum10 > 0){
                    examAutoEvaluation.setDetails(details10 + "被评为全国级劳模，每次加6分；");
                    examAutoEvaluation.setScore("6");
                    examAutoEvaluation.setOption("民警被评为全国级劳模");
                    examAutoEvaluation.setOptionId("e485c21104f64432aa3ae685b3ea8245");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为全国级劳模");

                    examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);

                }
                if (numSum11 > 0){
                    examAutoEvaluation.setDetails(details11 + "被评为一级英模，每次加7分；");
                    examAutoEvaluation.setScore("7");
                    examAutoEvaluation.setOption("民警被评为一级英模");
                    examAutoEvaluation.setOptionId("ca075d9cfde0485dba46cdde6b422a1f");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为一级英模");

                    examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);

                }
        }
        for (int o = 0; o < lzcPaytyList.size(); o++) {
            StringBuilder details1 = new StringBuilder();
            StringBuilder details2 = new StringBuilder();
            StringBuilder details3 = new StringBuilder();
            StringBuilder details4 = new StringBuilder();
            StringBuilder details5 = new StringBuilder();
            StringBuilder details6 = new StringBuilder();
            StringBuilder details7 = new StringBuilder();
            StringBuilder details8 = new StringBuilder();
            StringBuilder details9 = new StringBuilder();
            StringBuilder details10 = new StringBuilder();
            StringBuilder details11 = new StringBuilder();

            int numSum1 = 0;
            int numSum2 = 0;
            int numSum3 = 0;
            int numSum4 = 0;
            int numSum5 = 0;
            int numSum6 = 0;
            int numSum7 = 0;
            int numSum8 = 0;
            int numSum9 = 0;
            int numSum10 = 0;
            int numSum11 = 0;
            Office office = lzcPaytyList.get(o);
            //公安处名称
            String name = office.getName();
            //公安处id
            String unitId = office.getId();

            String code = office.getCode();

            /*
             * 单位获奖加分
             * */
            List<AffairXcUnitReward> affairXcUnitRewardList = new ArrayList<>();
            affairXcUnitRewardList = affairXcUnitRewardService.selectAllReward(unitId,yearL,yearT);
            for (int a = 0; a < affairXcUnitRewardList.size(); a++){
                AffairXcUnitReward affairXcUnitReward = affairXcUnitRewardList.get(a);
                String nameCode = affairXcUnitReward.getNameCode();
                String level = affairXcUnitReward.getLevel();

                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("1");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setUnit(name);
                examAutoEvaluation.setUnitId(unitId);
                examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectEvalId(office.getCode()));
                examAutoEvaluation.setModel("2020年月度公安局对公安处绩效考评公共加分标准");
                examAutoEvaluation.setModelId("a20967b72dca4e6e9915fa43c46e153a");
                examAutoEvaluation.setFromSys("智慧政工");
                //部门或单位评为厅局级先进的（综合类），每个加0.5分；
                //部门或单位评为省部级先进的（综合类），每个加2分；
                //部门或单位评为全国先进的（综合类），每个加3分；
                /*
                 *
                 * 单位的  "先进"  名称未定，待完善
                 *
                 * */
                //部门或单位获得集体二等功，每次加2.5分；
                if ("2".equals(nameCode)){
                    examAutoEvaluation.setDetails(name + DateUtils.formatDate(affairXcUnitReward.getDate()) +"获得集体二等功加2.5分；");
                    examAutoEvaluation.setScore("2.5");
                    examAutoEvaluation.setOption("单位或部门获得集体二等功");
                    examAutoEvaluation.setOptionId("5011be2521e6495484d8bfc20dcb68a1");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_单位或部门获得集体二等功");

                    examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);

                }
                //部门或单位获得集体一等功，每次加5分。
                if ("1".equals(nameCode)){
                    examAutoEvaluation.setDetails(name + DateUtils.formatDate(affairXcUnitReward.getDate()) +"获得集体一等功，每次加5分；");
                    examAutoEvaluation.setScore("5");
                    examAutoEvaluation.setOption("单位或部门获得集体一等功");
                    examAutoEvaluation.setOptionId("074e4f7e6fe444779533e414489f1a9b");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectEvalId(office.getCode()));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_单位或部门获得集体一等功");

                    examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);

                }
            }


            /*
             * 下属民警获奖加分
             * */
            List<PersonnelBase> personnelBaseList = new ArrayList<>();
            personnelBaseList = examAutoEvaluationDao.selectAllPeopleMessage(unitId);
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            for (int p = 0; p < personnelBaseList.size(); p++) {
                PersonnelBase personnelBase = personnelBaseList.get(p);
                String idN = personnelBase.getIdNumber();
                List<AffairPersonalReward> affairPersonalRewardList = new ArrayList<>();
                affairPersonalRewardList = affairPersonalRewardService.selectAllRewardYear(idN,yearL,yearT);
                for (int a = 0; a < affairPersonalRewardList.size(); a++) {
                    AffairPersonalReward affairPersonalReward = affairPersonalRewardList.get(a);
                    String rewardName = affairPersonalReward.getRewardName();
                    String level = affairPersonalReward.getLevel();

                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("2");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setModel("2020年月度公安局对公安处绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("a20967b72dca4e6e9915fa43c46e153a");
                    examAutoEvaluation.setFromSys("智慧政工");
                    /*if (name.contains("南宁")){
                        examAutoEvaluation.setUnit("南宁处政治处宣传教育室（民警训练基地）");
                        examAutoEvaluation.setUnitId("800901370000");
                        examAutoEvaluation.setEvaluationId("a4e40825e3b34c37895ee2ed168f24a0");
                    }*/
                    if (name.contains("柳州")){
                        examAutoEvaluation.setUnit("柳州处政治处宣传教育室（民警训练基地）");
                        examAutoEvaluation.setUnitId("800902370000");
                        examAutoEvaluation.setEvaluationId("94ccb0bdb21441f997c72268b4d882db");
                    }
                   /* if (name.contains("北海")){
                        examAutoEvaluation.setUnit("北海处政治处宣传教育室（民警训练基地）");
                        examAutoEvaluation.setUnitId("800903370000");
                        examAutoEvaluation.setUnitId("82f8e9ba1cd7446b99c084d5b4b5c038");
                    }*/

                    //民警被评为厅（局）级岗位标兵，每人加0.5分；
                    //民警被评为全路、全区优秀人民警察，每人加1分；
                    if ("8".equals(rewardName) && "7".equals(level)){
                        details1.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum1++;
                    }
                    //民警被评为全国优秀人民警察 每人加1.5分；
                    if (("1".equals(level) || "2".equals(level)) && "8".equals(rewardName)){
                        details2.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum2++;
                    }
                    //省部级先进加1.5分；
                    if (("4".equals(level) || "3".equals(level) || "5".equals(level) || "6".equals(level)) && ("20".equals(rewardName) || "9".equals(rewardName))){
                        details3.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum3++;
                    }
                    //荣立个人二等功的1.5分；
                    if ("2".equals(rewardName)){
                        details4.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum4++;
                    }
                    //民警被评为全国级先进 每人加2.5分；
                    if (("1".equals(level) || "2".equals(level)) && ("20".equals(rewardName) || "9".equals(rewardName))){
                        details5.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum5++;
                    }
                    //省部级劳模；每人加2.5分；
                    if (("4".equals(level) || "3".equals(level) || "5".equals(level) || "6".equals(level)) && ("10".equals(rewardName))){
                        details6.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum6++;
                    }
                    //荣立个人一等功的，每人加2.5分；
                    if ("1".equals(rewardName)){
                        details7.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum7++;
                    }
                    //民警被评为特级优秀人民警察、，每人加6分；
                    if ("7".equals(rewardName)){
                        details8.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum8++;
                    }
                    //二级英模每人加6分；
                    if ("6".equals(rewardName)){
                        details9.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum9++;
                    }
                    //全国级劳模每人加6分；
                    if ("10".equals(rewardName) && ("1".equals(level) || "2".equals(level))){
                        details10.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum10++;
                    }
                    //民警被评为一级英模，每人加7分
                    if ("5".equals(rewardName)){
                        details11.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum11++;
                    }
                }
            }
            if (numSum1 > 0){
                examAutoEvaluation.setDetails( details1 + "被评为全路，全区优秀人民警察，加1分；");
                examAutoEvaluation.setScore("1");
                examAutoEvaluation.setOption("民警被评为全路、全区优秀人民警察");
                examAutoEvaluation.setOptionId("0166ddad678349438caf6422bf999aef");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为全路、全区优秀人民警察");

                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);

            }
            if (numSum2 > 0){
                examAutoEvaluation.setDetails(details2 + "被评为全国优秀人民警察，每次加1.5分；");
                examAutoEvaluation.setScore("1.5");
                examAutoEvaluation.setOption("民警被评为全国优秀人民警察");
                examAutoEvaluation.setOptionId("ddc4a0842d464668a6fe3da017715385");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为全国特级优秀人民警察");

                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);

            }
            if (numSum3 > 0){
                examAutoEvaluation.setDetails(details3 + "被评为省部级先进，每次加1.5分；");
                examAutoEvaluation.setScore("5");
                examAutoEvaluation.setOption("民警被评为省部级先进");
                examAutoEvaluation.setOptionId("f2cda4aa3f48438ea54becfd938d231f");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_单位或部门被评为省部级先进(综合类)");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);

            }
            if (numSum4 > 0){
                examAutoEvaluation.setDetails(details4 + "荣立个人二等功，每次加1.5分；");
                examAutoEvaluation.setScore("5");
                examAutoEvaluation.setOption("民警获得个人二等功");
                examAutoEvaluation.setOptionId("ae4ea67ceef34454aed79bb0ec350b38");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警获得个人二等功");

                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);

            }
            if (numSum5 > 0){
                examAutoEvaluation.setDetails(details5 + "被评为全国级先进，每次加2.5分；");
                examAutoEvaluation.setScore("2.5");
                examAutoEvaluation.setOption("民警被评为全国级先进");
                examAutoEvaluation.setOptionId("baa20ab7bd5c4df7aa2c7de638cfc96f");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为全国级先进");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);

            }
            if (numSum6 > 0){
                examAutoEvaluation.setDetails(details6 + "被评为省部级劳模，每次加2.5分；");
                examAutoEvaluation.setScore("2.5");
                examAutoEvaluation.setOption("民警被评为省部级劳模");
                examAutoEvaluation.setOptionId("10f03c26d2a046d28f6f1222258ec4f9");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为省部级劳模");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);

            }
            if (numSum7 > 0){
                examAutoEvaluation.setDetails(details7 + "荣立个人一等功的，每次加2.5分；");
                examAutoEvaluation.setScore("2.5");
                examAutoEvaluation.setOption("民警获得个人一等功");
                examAutoEvaluation.setOptionId("2314c9d9f8b644a9b5151a9df854e32d");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警获得个人一等功");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);

            }
            if (numSum8 > 0){
                examAutoEvaluation.setDetails(details8 + "被评为特级优秀人民警察，每次加6分；");
                examAutoEvaluation.setScore("6");
                examAutoEvaluation.setOption("民警被评为全国特级优秀人民警察");
                examAutoEvaluation.setOptionId("6b5a15ffbfa945988c47599baf6f8900");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为全国特级优秀人民警察");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);

            }
            if (numSum9 > 0){
                examAutoEvaluation.setDetails(details9 + "被评为二级英模，每次加6分；");
                examAutoEvaluation.setScore("6");
                examAutoEvaluation.setOption("民警被评为二级英模");
                examAutoEvaluation.setOptionId("d36ad16ad99e4b19a100e3a08ed60f6b");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为二级英模");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);

            }
            if (numSum10 > 0){
                examAutoEvaluation.setDetails(details10 + "被评为全国级劳模，每次加6分；");
                examAutoEvaluation.setScore("6");
                examAutoEvaluation.setOption("民警被评为全国级劳模");
                examAutoEvaluation.setOptionId("e485c21104f64432aa3ae685b3ea8245");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为全国级劳模");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);

            }
            if (numSum11 > 0){
                examAutoEvaluation.setDetails(details11 + "被评为一级英模，每次加7分；");
                examAutoEvaluation.setScore("7");
                examAutoEvaluation.setOption("民警被评为一级英模");
                examAutoEvaluation.setOptionId("ca075d9cfde0485dba46cdde6b422a1f");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为一级英模");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);

            }
        }
        for (int o = 0; o < bhcPaytyList.size(); o++) {
            StringBuilder details1 = new StringBuilder();
            StringBuilder details2 = new StringBuilder();
            StringBuilder details3 = new StringBuilder();
            StringBuilder details4 = new StringBuilder();
            StringBuilder details5 = new StringBuilder();
            StringBuilder details6 = new StringBuilder();
            StringBuilder details7 = new StringBuilder();
            StringBuilder details8 = new StringBuilder();
            StringBuilder details9 = new StringBuilder();
            StringBuilder details10 = new StringBuilder();
            StringBuilder details11 = new StringBuilder();

            int numSum1 = 0;
            int numSum2 = 0;
            int numSum3 = 0;
            int numSum4 = 0;
            int numSum5 = 0;
            int numSum6 = 0;
            int numSum7 = 0;
            int numSum8 = 0;
            int numSum9 = 0;
            int numSum10 = 0;
            int numSum11 = 0;
            Office office = bhcPaytyList.get(o);
            //公安处名称
            String name = office.getName();
            //公安处id
            String unitId = office.getId();

            String code = office.getCode();

            /*
             * 单位获奖加分
             * */
            List<AffairXcUnitReward> affairXcUnitRewardList = new ArrayList<>();
            affairXcUnitRewardList = affairXcUnitRewardService.selectAllReward(unitId,yearL,yearT);
            for (int a = 0; a < affairXcUnitRewardList.size(); a++){
                AffairXcUnitReward affairXcUnitReward = affairXcUnitRewardList.get(a);
                String nameCode = affairXcUnitReward.getNameCode();
                String level = affairXcUnitReward.getLevel();

                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("1");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setUnit(name);
                examAutoEvaluation.setUnitId(unitId);
                examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectEvalId(office.getCode()));
                examAutoEvaluation.setModel("2020年月度公安局对公安处绩效考评公共加分标准");
                examAutoEvaluation.setModelId("a20967b72dca4e6e9915fa43c46e153a");
                examAutoEvaluation.setFromSys("智慧政工");
                //部门或单位评为厅局级先进的（综合类），每个加0.5分；
                //部门或单位评为省部级先进的（综合类），每个加2分；
                //部门或单位评为全国先进的（综合类），每个加3分；
                /*
                 *
                 * 单位的  "先进"  名称未定，待完善
                 *
                 * */
                //部门或单位获得集体二等功，每次加2.5分；
                if ("2".equals(nameCode)){
                    examAutoEvaluation.setDetails(name  + "获得集体二等功加2.5分；");
                    examAutoEvaluation.setScore("2.5");
                    examAutoEvaluation.setOption("单位或部门获得集体二等功");
                    examAutoEvaluation.setOptionId("5011be2521e6495484d8bfc20dcb68a1");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_单位或部门获得集体二等功");
                    examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);

                }
                //部门或单位获得集体一等功，每次加5分。
                if ("1".equals(nameCode)){
                    examAutoEvaluation.setDetails(name + "获得集体一等功，每次加5分；");
                    examAutoEvaluation.setScore("5");
                    examAutoEvaluation.setOption("单位或部门获得集体一等功");
                    examAutoEvaluation.setOptionId("074e4f7e6fe444779533e414489f1a9b");
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectEvalId(office.getCode()));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_单位或部门获得集体一等功");
                    examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);

                }
            }


            /*
             * 下属民警获奖加分
             * */
            List<PersonnelBase> personnelBaseList = new ArrayList<>();
            personnelBaseList = examAutoEvaluationDao.selectAllPeopleMessage(unitId);
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            for (int p = 0; p < personnelBaseList.size(); p++) {
                PersonnelBase personnelBase = personnelBaseList.get(p);
                String idN = personnelBase.getIdNumber();
                List<AffairPersonalReward> affairPersonalRewardList = new ArrayList<>();
                affairPersonalRewardList = affairPersonalRewardService.selectAllRewardYear(idN,yearL,yearT);
                for (int a = 0; a < affairPersonalRewardList.size(); a++) {
                    AffairPersonalReward affairPersonalReward = affairPersonalRewardList.get(a);
                    String rewardName = affairPersonalReward.getRewardName();
                    String level = affairPersonalReward.getLevel();

                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("2");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setModel("2020年月度公安局对公安处绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("a20967b72dca4e6e9915fa43c46e153a");
                    examAutoEvaluation.setFromSys("智慧政工");
                    /*if (name.contains("南宁")){
                        examAutoEvaluation.setUnit("南宁处政治处宣传教育室（民警训练基地）");
                        examAutoEvaluation.setUnitId("800901370000");
                        examAutoEvaluation.setEvaluationId("a4e40825e3b34c37895ee2ed168f24a0");
                    }
                    if (name.contains("柳州")){
                        examAutoEvaluation.setUnit("柳州处政治处宣传教育室（民警训练基地）");
                        examAutoEvaluation.setUnitId("800902370000");
                        examAutoEvaluation.setEvaluationId("94ccb0bdb21441f997c72268b4d882db");
                    }*/
                    if (name.contains("北海")){
                        examAutoEvaluation.setUnit("北海处政治处宣传教育室（民警训练基地）");
                        examAutoEvaluation.setUnitId("800903370000");
                        examAutoEvaluation.setUnitId("82f8e9ba1cd7446b99c084d5b4b5c038");
                    }

                    //民警被评为厅（局）级岗位标兵，每人加0.5分；
                    //民警被评为全路、全区优秀人民警察，每人加1分；
                    if ("8".equals(rewardName) && "7".equals(level)){
                        details1.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum1++;
                    }
                    //民警被评为全国优秀人民警察 每人加1.5分；
                    if (("1".equals(level) || "2".equals(level)) && "8".equals(rewardName)){
                        details2.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum2++;
                    }
                    //省部级先进加1.5分；
                    if (("4".equals(level) || "3".equals(level) || "5".equals(level) || "6".equals(level)) && ("20".equals(rewardName) || "9".equals(rewardName))){
                        details3.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum3++;
                    }
                    //荣立个人二等功的1.5分；
                    if ("2".equals(rewardName)){
                        details4.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum4++;
                    }
                    //民警被评为全国级先进 每人加2.5分；
                    if (("1".equals(level) || "2".equals(level)) && ("20".equals(rewardName) || "9".equals(rewardName))){
                        details5.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum5++;
                    }
                    //省部级劳模；每人加2.5分；
                    if (("4".equals(level) || "3".equals(level) || "5".equals(level) || "6".equals(level)) && ("10".equals(rewardName))){
                        details6.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum6++;
                    }
                    //荣立个人一等功的，每人加2.5分；
                    if ("1".equals(rewardName)){
                        details7.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum7++;
                    }
                    //民警被评为特级优秀人民警察、，每人加6分；
                    if ("7".equals(rewardName)){
                        details8.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum8++;
                    }
                    //二级英模每人加6分；
                    if ("6".equals(rewardName)){
                        details9.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum9++;
                    }
                    //全国级劳模每人加6分；
                    if ("10".equals(rewardName) && ("1".equals(level) || "2".equals(level))){
                        details10.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum10++;
                    }
                    //民警被评为一级英模，每人加7分
                    if ("5".equals(rewardName)){
                        details11.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum11++;
                    }
                }
            }
            if (numSum1 > 0){
                examAutoEvaluation.setDetails( details1 + "被评为全路，全区优秀人民警察，加1分；");
                examAutoEvaluation.setScore("1");
                examAutoEvaluation.setOption("民警被评为全路、全区优秀人民警察");
                examAutoEvaluation.setOptionId("0166ddad678349438caf6422bf999aef");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为全路、全区优秀人民警察");
                this.save(examAutoEvaluation);

            }
            if (numSum2 > 0){
                examAutoEvaluation.setDetails(details2 + "被评为全国优秀人民警察，每次加1.5分；");
                examAutoEvaluation.setScore("1.5");
                examAutoEvaluation.setOption("民警被评为全国优秀人民警察");
                examAutoEvaluation.setOptionId("ddc4a0842d464668a6fe3da017715385");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为全国优秀人民警察");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);

            }
            if (numSum3 > 0){
                examAutoEvaluation.setDetails(details3 + "被评为省部级先进，每次加1.5分；");
                examAutoEvaluation.setScore("5");
                examAutoEvaluation.setOption("民警被评为省部级先进");
                examAutoEvaluation.setOptionId("f2cda4aa3f48438ea54becfd938d231f");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为省部级先进");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);

            }
            if (numSum4 > 0){
                examAutoEvaluation.setDetails(details4 + "荣立个人二等功，每次加1.5分；");
                examAutoEvaluation.setScore("5");
                examAutoEvaluation.setOption("民警获得个人二等功");
                examAutoEvaluation.setOptionId("ae4ea67ceef34454aed79bb0ec350b38");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警获得个人二等功");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);

            }
            if (numSum5 > 0){
                examAutoEvaluation.setDetails(details5  + "被评为全国级先进，每次加2.5分；");
                examAutoEvaluation.setScore("2.5");
                examAutoEvaluation.setOption("民警被评为全国级先进");
                examAutoEvaluation.setOptionId("baa20ab7bd5c4df7aa2c7de638cfc96f");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为全国级先进");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);

            }
            if (numSum6 > 0){
                examAutoEvaluation.setDetails(details6 + "被评为省部级劳模，每次加2.5分；");
                examAutoEvaluation.setScore("2.5");
                examAutoEvaluation.setOption("民警被评为省部级劳模");
                examAutoEvaluation.setOptionId("10f03c26d2a046d28f6f1222258ec4f9");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为省部级劳模");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);

            }
            if (numSum7 > 0){
                examAutoEvaluation.setDetails(details7 + "荣立个人一等功的，每次加2.5分；");
                examAutoEvaluation.setScore("2.5");
                examAutoEvaluation.setOption("民警获得个人一等功");
                examAutoEvaluation.setOptionId("2314c9d9f8b644a9b5151a9df854e32d");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警获得个人一等功");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);

            }
            if (numSum8 > 0){
                examAutoEvaluation.setDetails(details8 + "被评为特级优秀人民警察，每次加6分；");
                examAutoEvaluation.setScore("6");
                examAutoEvaluation.setOption("民警被评为全国特级优秀人民警察");
                examAutoEvaluation.setOptionId("6b5a15ffbfa945988c47599baf6f8900");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为全国特级优秀人民警察");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);

            }
            if (numSum9 > 0){
                examAutoEvaluation.setDetails(details9 + "被评为二级英模，每次加6分；");
                examAutoEvaluation.setScore("6");
                examAutoEvaluation.setOption("民警被评为二级英模");
                examAutoEvaluation.setOptionId("d36ad16ad99e4b19a100e3a08ed60f6b");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为二级英模");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);

            }
            if (numSum10 > 0){
                examAutoEvaluation.setDetails(details10 + "被评为全国级劳模，每次加6分；");
                examAutoEvaluation.setScore("6");
                examAutoEvaluation.setOption("民警被评为全国级劳模");
                examAutoEvaluation.setOptionId("e485c21104f64432aa3ae685b3ea8245");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为全国级劳模");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);

            }
            if (numSum11 > 0){
                examAutoEvaluation.setDetails(details11 + "被评为一级英模，每次加7分；");
                examAutoEvaluation.setScore("7");
                examAutoEvaluation.setOption("民警被评为一级英模");
                examAutoEvaluation.setOptionId("ca075d9cfde0485dba46cdde6b422a1f");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为一级英模");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);

            }
        }
    }


    /*
     * 年度
     * 局考处
     * 宣传思想-立功创模-荣誉管理-奖项维护
     * */
    public void jkcJxwhYear(String year){

        Map<String, String> map = this.yearTime(year);
        String yearL = map.get("yearL");
        String yearT = map.get("yearT");

        List<Office> nncPartyList = officeDao.selectChuUnitList("34");
        List<Office> lzcPartyList = officeDao.selectChuUnitList("95");
        List<Office> bhcPartyList = officeDao.selectChuUnitList("156");


        for (int o = 0; o < nncPartyList.size(); o++) {


            StringBuilder details1 = new StringBuilder();
            StringBuilder details2 = new StringBuilder();
            StringBuilder details3 = new StringBuilder();
            StringBuilder details4 = new StringBuilder();
            StringBuilder details5 = new StringBuilder();
            StringBuilder details6 = new StringBuilder();
            StringBuilder details7 = new StringBuilder();
            StringBuilder details8 = new StringBuilder();
            StringBuilder details9 = new StringBuilder();
            StringBuilder details10 = new StringBuilder();
            StringBuilder details11 = new StringBuilder();

            int numSum1 = 0;
            int numSum2 = 0;
            int numSum3 = 0;
            int numSum4 = 0;
            int numSum5 = 0;
            int numSum6 = 0;
            int numSum7 = 0;
            int numSum8 = 0;
            int numSum9 = 0;
            int numSum10 = 0;
            int numSum11 = 0;


            Office office = nncPartyList.get(o);
            //公安处名称
            String name = office.getName();
            //公安处id
            String unitId = office.getId();

                /*
                 * 下属民警获奖加分
                 * */
                List<PersonnelBase> personnelBaseList = new ArrayList<>();
                personnelBaseList = examAutoEvaluationDao.selectAllPeopleMessage(unitId);
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

            for (int p = 0; p < personnelBaseList.size(); p++) {
                    PersonnelBase personnelBase = personnelBaseList.get(p);
                    String idN = personnelBase.getIdNumber();
                    List<AffairPersonalReward> affairPersonalRewardList = new ArrayList<>();
                    affairPersonalRewardList = affairPersonalRewardService.selectAllRewardYear(idN,yearT,yearL);
                    for (int a = 0; a < affairPersonalRewardList.size(); a++) {
                        AffairPersonalReward affairPersonalReward = affairPersonalRewardList.get(a);
                        String rewardName = affairPersonalReward.getRewardName();
                        String level = affairPersonalReward.getLevel();
                        examAutoEvaluation.setType("2");
                        examAutoEvaluation.setEvalType("2");
                        examAutoEvaluation.setPeriod("2");
                        examAutoEvaluation.setYear(year);

                        examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考评公共加分标准");
                        examAutoEvaluation.setModelId("d3cd787886e44edb95e0f7b4dd3de389");
                        examAutoEvaluation.setFromSys("智慧政工");

                        if (name.contains("南宁")){
                            examAutoEvaluation.setUnit("南宁处政治处宣传教育室（民警训练基地）");
                            examAutoEvaluation.setUnitId("800901370000");
                            examAutoEvaluation.setEvaluationId("a4e40825e3b34c37895ee2ed168f24a0");
                        }
                        /*if (name.contains("柳州")){
                            examAutoEvaluation.setUnit("柳州处政治处宣传教育室（民警训练基地）");
                            examAutoEvaluation.setUnitId("800902370000");
                            examAutoEvaluation.setEvaluationId("94ccb0bdb21441f997c72268b4d882db");
                        }
                        if (name.contains("北海")){
                            examAutoEvaluation.setUnit("北海处政治处宣传教育室（民警训练基地）");
                            examAutoEvaluation.setUnitId("800903370000");
                            examAutoEvaluation.setUnitId("82f8e9ba1cd7446b99c084d5b4b5c038");
                        }*/

                        //民警被评为厅（局）级岗位标兵，每人加0.1分；
                        //民警被评为全路、全区优秀人民警察，每人加0.2分；
                        if ("8".equals(rewardName) && "7".equals(level)){
                            details1.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                            numSum1++;
                        }
                        //民警被评为全国优秀人民警察 每人加0.3分；
                        if (("1".equals(level) || "2".equals(level)) && "8".equals(rewardName)){
                            details2.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                            numSum2++;
                        }
                        //省部级先进加0.3分；
                        if (("4".equals(level) || "3".equals(level) || "5".equals(level) || "6".equals(level)) && ("20".equals(rewardName) || "9".equals(rewardName))){
                            details3.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                            numSum3++;
                        }
                        //荣立个人二等功的0.3分；
                        if ("2".equals(rewardName)){
                            details4.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                            numSum4++;
                        }
                        //民警被评为全国级先进 每人加0.5分；
                        if (("1".equals(level) || "2".equals(level)) && ("20".equals(rewardName) || "9".equals(rewardName))){
                            details5.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                            numSum5++;
                        }
                        //省部级劳模；每人加0.5分；
                        if (("4".equals(level) || "3".equals(level) || "5".equals(level) || "6".equals(level)) && ("10".equals(rewardName))){
                            details6.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                            numSum6++;
                        }
                        //荣立个人一等功的，每人加0.5分；
                        if ("1".equals(rewardName)){
                            details7.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                            numSum7++;
                        }
                        //民警被评为特级优秀人民警察、，每人加1.2分；
                        if ("7".equals(rewardName)){
                            details8.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                            numSum8++;
                        }
                        //二级英模每人加1.2分；
                        if ("6".equals(rewardName)){
                            details9.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                            numSum9++;
                        }
                        //全国级劳模每人加1.2分；
                        if ("10".equals(rewardName) && ("1".equals(level) || "2".equals(level))){
                            details10.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                            numSum10++;
                        }
                        //民警被评为一级英模，每人加1.5分
                        if ("5".equals(rewardName)){
                            details11.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                            numSum11++;
                        }
                }
            }
            if (numSum1 > 0){
                examAutoEvaluation.setDetails(details1 + "被评为全路，全区优秀人民警察，加0.2分；");
                examAutoEvaluation.setScore("0.2");
                examAutoEvaluation.setOption("民警被评为全路、全区优秀人民警察");
                examAutoEvaluation.setOptionId("398cdb00482c4596a990d834e8dd83c1");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为全路、全区优秀人民警察");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (numSum2 > 0){
                examAutoEvaluation.setDetails(details2 + "被评为全国优秀人民警察，每次加1.5分；");
                examAutoEvaluation.setScore("0.3");
                examAutoEvaluation.setOption("民警被评为全国特级优秀人民警察");
                examAutoEvaluation.setOptionId("12f7a79d6f24470d8abebf8c277ec298");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为全国特级优秀人民警察");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (numSum3 > 0){
                examAutoEvaluation.setDetails(details3 + "被评为省部级先进，每次加1.5分；");
                examAutoEvaluation.setScore("0.3");
                examAutoEvaluation.setOption("民警被评为省部级先进");
                examAutoEvaluation.setOptionId("ad126a9f2784421298512ee5ca0fb77a");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为省部级先进");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (numSum4 > 0){
                examAutoEvaluation.setDetails(details4 + "荣立个人二等功，每次加1.5分；");
                examAutoEvaluation.setScore("0.3");
                examAutoEvaluation.setOption("民警获得个人二等功");
                examAutoEvaluation.setOptionId("f4e5f3d60a814c958e7a631af0557215");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警获得个人二等功");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (numSum5 > 0){
                examAutoEvaluation.setDetails(details5 + "被评为全国级先进，每次加2.5分；");
                examAutoEvaluation.setScore("0.5");
                examAutoEvaluation.setOption("民警被评为全国级先进");
                examAutoEvaluation.setOptionId("f446cf72c77f4e2a9b6140ad0d8eb0a1");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为全国级先进");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (numSum6 > 0){
                examAutoEvaluation.setDetails(details6 + "被评为省部级劳模，每次加2.5分；");
                examAutoEvaluation.setScore("0.5");
                examAutoEvaluation.setOption("民警被评为省部级劳模");
                examAutoEvaluation.setOptionId("e90aca9e4e6745a39669e530ed636533");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为全国级劳模");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (numSum7 > 0){
                examAutoEvaluation.setDetails(details7 + "荣立个人一等功的，每次加2.5分；");
                examAutoEvaluation.setScore("0.5");
                examAutoEvaluation.setOption("民警获得个人一等功");
                examAutoEvaluation.setOptionId("eb137cabd739459f8dacfdae9666b8a2");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警获得个人一等功");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (numSum8 > 0){
                examAutoEvaluation.setDetails(details8 + "特级优秀人民警察，每次加1.2分；");
                examAutoEvaluation.setScore("1.2");
                examAutoEvaluation.setOption("民警被评为全国特级优秀人民警察");
                examAutoEvaluation.setOptionId("f96f77051aff4e28b1169352d8ef2e76");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为全国特级优秀人民警察");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (numSum9 > 0){
                examAutoEvaluation.setDetails(details9 + "二级英模，每次加1.2分；");
                examAutoEvaluation.setScore("6");
                examAutoEvaluation.setOption("民警被评为二级英模");
                examAutoEvaluation.setOptionId("7e939def5d724aa78b6bb208be4bc535");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为二级英模");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (numSum10 > 0){
                examAutoEvaluation.setDetails(details10 + "全国级劳模，每次加1.2分；");
                examAutoEvaluation.setScore("1.2");
                examAutoEvaluation.setOption("民警被评为全国级劳模");
                examAutoEvaluation.setOptionId("0ef4bc408eac4beb92b8cbf592959c65");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为全国级劳模");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (numSum11 > 0){
                examAutoEvaluation.setDetails(details11 + "被评为一级英模，每次加1.5分；");
                examAutoEvaluation.setScore("7");
                examAutoEvaluation.setOption("民警被评为一级英模");
                examAutoEvaluation.setOptionId("58b3fcdb365e4a8daed0dac532a52b45");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为一级英模");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
        }
        for (int o = 0; o < lzcPartyList.size(); o++) {


            StringBuilder details1 = new StringBuilder();
            StringBuilder details2 = new StringBuilder();
            StringBuilder details3 = new StringBuilder();
            StringBuilder details4 = new StringBuilder();
            StringBuilder details5 = new StringBuilder();
            StringBuilder details6 = new StringBuilder();
            StringBuilder details7 = new StringBuilder();
            StringBuilder details8 = new StringBuilder();
            StringBuilder details9 = new StringBuilder();
            StringBuilder details10 = new StringBuilder();
            StringBuilder details11 = new StringBuilder();

            int numSum1 = 0;
            int numSum2 = 0;
            int numSum3 = 0;
            int numSum4 = 0;
            int numSum5 = 0;
            int numSum6 = 0;
            int numSum7 = 0;
            int numSum8 = 0;
            int numSum9 = 0;
            int numSum10 = 0;
            int numSum11 = 0;


            Office office = lzcPartyList.get(o);
            //公安处名称
            String name = office.getName();
            //公安处id
            String unitId = office.getId();

            /*
             * 下属民警获奖加分
             * */
            List<PersonnelBase> personnelBaseList = new ArrayList<>();
            personnelBaseList = examAutoEvaluationDao.selectAllPeopleMessage(unitId);
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

            for (int p = 0; p < personnelBaseList.size(); p++) {
                PersonnelBase personnelBase = personnelBaseList.get(p);
                String idN = personnelBase.getIdNumber();
                List<AffairPersonalReward> affairPersonalRewardList = new ArrayList<>();
                affairPersonalRewardList = affairPersonalRewardService.selectAllRewardYear(idN,yearT,yearL);
                for (int a = 0; a < affairPersonalRewardList.size(); a++) {
                    AffairPersonalReward affairPersonalReward = affairPersonalRewardList.get(a);
                    String rewardName = affairPersonalReward.getRewardName();
                    String level = affairPersonalReward.getLevel();
                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("2");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);

                    examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("d3cd787886e44edb95e0f7b4dd3de389");
                    examAutoEvaluation.setFromSys("智慧政工");

                    /*if (name.contains("南宁")){
                        examAutoEvaluation.setUnit("南宁处政治处宣传教育室（民警训练基地）");
                        examAutoEvaluation.setUnitId("800901370000");
                        examAutoEvaluation.setEvaluationId("a4e40825e3b34c37895ee2ed168f24a0");
                    }*/
                    if (name.contains("柳州")){
                        examAutoEvaluation.setUnit("柳州处政治处宣传教育室（民警训练基地）");
                        examAutoEvaluation.setUnitId("800902370000");
                        examAutoEvaluation.setEvaluationId("94ccb0bdb21441f997c72268b4d882db");
                    }
                    /*if (name.contains("北海")){
                        examAutoEvaluation.setUnit("北海处政治处宣传教育室（民警训练基地）");
                        examAutoEvaluation.setUnitId("800903370000");
                        examAutoEvaluation.setUnitId("82f8e9ba1cd7446b99c084d5b4b5c038");
                    }*/

                    //民警被评为厅（局）级岗位标兵，每人加0.1分；
                    //民警被评为全路、全区优秀人民警察，每人加0.2分；
                    if ("8".equals(rewardName) && "7".equals(level)){
                        details1.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum1++;
                    }
                    //民警被评为全国优秀人民警察 每人加0.3分；
                    if (("1".equals(level) || "2".equals(level)) && "8".equals(rewardName)){
                        details2.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum2++;
                    }
                    //省部级先进加0.3分；
                    if (("4".equals(level) || "3".equals(level) || "5".equals(level) || "6".equals(level)) && ("20".equals(rewardName) || "9".equals(rewardName))){
                        details3.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum3++;
                    }
                    //荣立个人二等功的0.3分；
                    if ("2".equals(rewardName)){
                        details4.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum4++;
                    }
                    //民警被评为全国级先进 每人加0.5分；
                    if (("1".equals(level) || "2".equals(level)) && ("20".equals(rewardName) || "9".equals(rewardName))){
                        details5.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum5++;
                    }
                    //省部级劳模；每人加0.5分；
                    if (("4".equals(level) || "3".equals(level) || "5".equals(level) || "6".equals(level)) && ("10".equals(rewardName))){
                        details6.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum6++;
                    }
                    //荣立个人一等功的，每人加0.5分；
                    if ("1".equals(rewardName)){
                        details7.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum7++;
                    }
                    //民警被评为特级优秀人民警察、，每人加1.2分；
                    if ("7".equals(rewardName)){
                        details8.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum8++;
                    }
                    //二级英模每人加1.2分；
                    if ("6".equals(rewardName)){
                        details9.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum9++;
                    }
                    //全国级劳模每人加1.2分；
                    if ("10".equals(rewardName) && ("1".equals(level) || "2".equals(level))){
                        details10.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum10++;
                    }
                    //民警被评为一级英模，每人加1.5分
                    if ("5".equals(rewardName)){
                        details11.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum11++;
                    }
                }
            }
            if (numSum1 > 0){
                examAutoEvaluation.setDetails(details1 + "被评为全路，全区优秀人民警察，加0.2分；");
                examAutoEvaluation.setScore("0.2");
                examAutoEvaluation.setOption("民警被评为全路、全区优秀人民警察");
                examAutoEvaluation.setOptionId("398cdb00482c4596a990d834e8dd83c1");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为全路、全区优秀人民警察");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (numSum2 > 0){
                examAutoEvaluation.setDetails(details2 + "被评为全国优秀人民警察，每次加1.5分；");
                examAutoEvaluation.setScore("0.3");
                examAutoEvaluation.setOption("民警被评为全国特级优秀人民警察");
                examAutoEvaluation.setOptionId("12f7a79d6f24470d8abebf8c277ec298");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为全国优秀人民警察");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (numSum3 > 0){
                examAutoEvaluation.setDetails(details3 + "被评为省部级先进，每次加1.5分；");
                examAutoEvaluation.setScore("0.3");
                examAutoEvaluation.setOption("民警被评为省部级先进");
                examAutoEvaluation.setOptionId("ad126a9f2784421298512ee5ca0fb77a");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为省部级先进");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (numSum4 > 0){
                examAutoEvaluation.setDetails(details4 + "荣立个人二等功，每次加1.5分；");
                examAutoEvaluation.setScore("0.3");
                examAutoEvaluation.setOption("民警获得个人二等功");
                examAutoEvaluation.setOptionId("f4e5f3d60a814c958e7a631af0557215");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警获得个人二等功");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (numSum5 > 0){
                examAutoEvaluation.setDetails(details5 + "被评为全国级先进，每次加2.5分；");
                examAutoEvaluation.setScore("0.5");
                examAutoEvaluation.setOption("民警被评为全国级先进");
                examAutoEvaluation.setOptionId("f446cf72c77f4e2a9b6140ad0d8eb0a1");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为全国级先进");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (numSum6 > 0){
                examAutoEvaluation.setDetails(details6 + "被评为省部级劳模，每次加2.5分；");
                examAutoEvaluation.setScore("0.5");
                examAutoEvaluation.setOption("民警被评为省部级劳模");
                examAutoEvaluation.setOptionId("e90aca9e4e6745a39669e530ed636533");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为省部级劳模");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (numSum7 > 0){
                examAutoEvaluation.setDetails(details7 + "荣立个人一等功的，每次加2.5分；");
                examAutoEvaluation.setScore("0.5");
                examAutoEvaluation.setOption("民警获得个人一等功");
                examAutoEvaluation.setOptionId("eb137cabd739459f8dacfdae9666b8a2");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警获得个人一等功");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (numSum8 > 0){
                examAutoEvaluation.setDetails(details8 + "被评为特级优秀人民警察，每次加1.2分；");
                examAutoEvaluation.setScore("1.2");
                examAutoEvaluation.setOption("民警被评为全国特级优秀人民警察");
                examAutoEvaluation.setOptionId("f96f77051aff4e28b1169352d8ef2e76");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为全国特级优秀人民警察");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (numSum9 > 0){
                examAutoEvaluation.setDetails(details9 + "被评为二级英模，每次加1.2分；");
                examAutoEvaluation.setScore("6");
                examAutoEvaluation.setOption("民警被评为二级英模");
                examAutoEvaluation.setOptionId("7e939def5d724aa78b6bb208be4bc535");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为二级英模");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (numSum10 > 0){
                examAutoEvaluation.setDetails(details10 + "被评为全国级劳模，每次加1.2分；");
                examAutoEvaluation.setScore("1.2");
                examAutoEvaluation.setOption("民警被评为全国级劳模");
                examAutoEvaluation.setOptionId("0ef4bc408eac4beb92b8cbf592959c65");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为全国级劳模");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (numSum11 > 0){
                examAutoEvaluation.setDetails(details11 + "被评为一级英模，每次加1.5分；");
                examAutoEvaluation.setScore("7");
                examAutoEvaluation.setOption("民警被评为一级英模");
                examAutoEvaluation.setOptionId("58b3fcdb365e4a8daed0dac532a52b45");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为一级英模");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
        }
        for (int o = 0; o < bhcPartyList.size(); o++) {


            StringBuilder details1 = new StringBuilder();
            StringBuilder details2 = new StringBuilder();
            StringBuilder details3 = new StringBuilder();
            StringBuilder details4 = new StringBuilder();
            StringBuilder details5 = new StringBuilder();
            StringBuilder details6 = new StringBuilder();
            StringBuilder details7 = new StringBuilder();
            StringBuilder details8 = new StringBuilder();
            StringBuilder details9 = new StringBuilder();
            StringBuilder details10 = new StringBuilder();
            StringBuilder details11 = new StringBuilder();

            int numSum1 = 0;
            int numSum2 = 0;
            int numSum3 = 0;
            int numSum4 = 0;
            int numSum5 = 0;
            int numSum6 = 0;
            int numSum7 = 0;
            int numSum8 = 0;
            int numSum9 = 0;
            int numSum10 = 0;
            int numSum11 = 0;


            Office office = bhcPartyList.get(o);
            //公安处名称
            String name = office.getName();
            //公安处id
            String unitId = office.getId();

            /*
             * 下属民警获奖加分
             * */
            List<PersonnelBase> personnelBaseList = new ArrayList<>();
            personnelBaseList = examAutoEvaluationDao.selectAllPeopleMessage(unitId);
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

            for (int p = 0; p < personnelBaseList.size(); p++) {
                PersonnelBase personnelBase = personnelBaseList.get(p);
                String idN = personnelBase.getIdNumber();
                List<AffairPersonalReward> affairPersonalRewardList = new ArrayList<>();
                affairPersonalRewardList = affairPersonalRewardService.selectAllRewardYear(idN,yearT,yearL);
                for (int a = 0; a < affairPersonalRewardList.size(); a++) {
                    AffairPersonalReward affairPersonalReward = affairPersonalRewardList.get(a);
                    String rewardName = affairPersonalReward.getRewardName();
                    String level = affairPersonalReward.getLevel();
                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("2");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);

                    examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("d3cd787886e44edb95e0f7b4dd3de389");
                    examAutoEvaluation.setFromSys("智慧政工");

                    /*if (name.contains("南宁")){
                        examAutoEvaluation.setUnit("南宁处政治处宣传教育室（民警训练基地）");
                        examAutoEvaluation.setUnitId("800901370000");
                        examAutoEvaluation.setEvaluationId("a4e40825e3b34c37895ee2ed168f24a0");
                    }
                    if (name.contains("柳州")){
                        examAutoEvaluation.setUnit("柳州处政治处宣传教育室（民警训练基地）");
                        examAutoEvaluation.setUnitId("800902370000");
                        examAutoEvaluation.setEvaluationId("94ccb0bdb21441f997c72268b4d882db");
                    }*/
                    if (name.contains("北海")){
                        examAutoEvaluation.setUnit("北海处政治处宣传教育室（民警训练基地）");
                        examAutoEvaluation.setUnitId("800903370000");
                        examAutoEvaluation.setUnitId("82f8e9ba1cd7446b99c084d5b4b5c038");
                    }

                    //民警被评为厅（局）级岗位标兵，每人加0.1分；
                    //民警被评为全路、全区优秀人民警察，每人加0.2分；
                    if ("8".equals(rewardName) && "7".equals(level)){
                        details1.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum1++;
                    }
                    //民警被评为全国优秀人民警察 每人加0.3分；
                    if (("1".equals(level) || "2".equals(level)) && "8".equals(rewardName)){
                        details2.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum2++;
                    }
                    //省部级先进加0.3分；
                    if (("4".equals(level) || "3".equals(level) || "5".equals(level) || "6".equals(level)) && ("20".equals(rewardName) || "9".equals(rewardName))){
                        details3.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum3++;
                    }
                    //荣立个人二等功的0.3分；
                    if ("2".equals(rewardName)){
                        details4.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum4++;
                    }
                    //民警被评为全国级先进 每人加0.5分；
                    if (("1".equals(level) || "2".equals(level)) && ("20".equals(rewardName) || "9".equals(rewardName))){
                        details5.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum5++;
                    }
                    //省部级劳模；每人加0.5分；
                    if (("4".equals(level) || "3".equals(level) || "5".equals(level) || "6".equals(level)) && ("10".equals(rewardName))){
                        details6.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum6++;
                    }
                    //荣立个人一等功的，每人加0.5分；
                    if ("1".equals(rewardName)){
                        details7.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum7++;
                    }
                    //民警被评为特级优秀人民警察、，每人加1.2分；
                    if ("7".equals(rewardName)){
                        details8.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum8++;
                    }
                    //二级英模每人加1.2分；
                    if ("6".equals(rewardName)){
                        details9.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum9++;
                    }
                    //全国级劳模每人加1.2分；
                    if ("10".equals(rewardName) && ("1".equals(level) || "2".equals(level))){
                        details10.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum10++;
                    }
                    //民警被评为一级英模，每人加1.5分
                    if ("5".equals(rewardName)){
                        details11.append(",").append(name).append(DateUtils.formatDate(affairPersonalReward.getDate()));
                        numSum11++;
                    }
                }
            }
            if (numSum1 > 0){
                examAutoEvaluation.setDetails(details1 + "被评为全路，全区优秀人民警察，加0.2分；");
                examAutoEvaluation.setScore("0.2");
                examAutoEvaluation.setOption("民警被评为全路、全区优秀人民警察");
                examAutoEvaluation.setOptionId("398cdb00482c4596a990d834e8dd83c1");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为全路、全区优秀人民警察");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (numSum2 > 0){
                examAutoEvaluation.setDetails(details2 + "被评为全国优秀人民警察，每次加1.5分；");
                examAutoEvaluation.setScore("0.3");
                examAutoEvaluation.setOption("民警被评为全国特级优秀人民警察");
                examAutoEvaluation.setOptionId("12f7a79d6f24470d8abebf8c277ec298");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为全国特级优秀人民警察");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (numSum3 > 0){
                examAutoEvaluation.setDetails(details3 + "被评为省部级先进，每次加1.5分；");
                examAutoEvaluation.setScore("0.3");
                examAutoEvaluation.setOption("民警被评为省部级先进");
                examAutoEvaluation.setOptionId("ad126a9f2784421298512ee5ca0fb77a");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为省部级先进");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (numSum4 > 0){
                examAutoEvaluation.setDetails(details4 + "荣立个人二等功，每次加1.5分；");
                examAutoEvaluation.setScore("0.3");
                examAutoEvaluation.setOption("民警获得个人二等功");
                examAutoEvaluation.setOptionId("f4e5f3d60a814c958e7a631af0557215");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警获得个人二等功");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (numSum5 > 0){
                examAutoEvaluation.setDetails(details5 + "被评为全国级先进，每次加2.5分；");
                examAutoEvaluation.setScore("0.5");
                examAutoEvaluation.setOption("民警被评为全国级先进");
                examAutoEvaluation.setOptionId("f446cf72c77f4e2a9b6140ad0d8eb0a1");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为全国级先进");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (numSum6 > 0){
                examAutoEvaluation.setDetails(details6 + "被评为省部级劳模，每次加2.5分；");
                examAutoEvaluation.setScore("0.5");
                examAutoEvaluation.setOption("民警被评为省部级劳模");
                examAutoEvaluation.setOptionId("e90aca9e4e6745a39669e530ed636533");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为省部级劳模");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (numSum7 > 0){
                examAutoEvaluation.setDetails(details7 + "荣立个人一等功的，每次加2.5分；");
                examAutoEvaluation.setScore("0.5");
                examAutoEvaluation.setOption("民警获得个人一等功");
                examAutoEvaluation.setOptionId("eb137cabd739459f8dacfdae9666b8a2");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警获得个人一等功");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (numSum8 > 0){
                examAutoEvaluation.setDetails(details8 + "被评为特级优秀人民警察，每次加1.2分；");
                examAutoEvaluation.setScore("1.2");
                examAutoEvaluation.setOption("民警被评为全国特级优秀人民警察");
                examAutoEvaluation.setOptionId("f96f77051aff4e28b1169352d8ef2e76");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为全国特级优秀人民警察");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (numSum9 > 0){
                examAutoEvaluation.setDetails(details9 + "被评为二级英模，每次加1.2分；");
                examAutoEvaluation.setScore("6");
                examAutoEvaluation.setOption("民警被评为二级英模");
                examAutoEvaluation.setOptionId("7e939def5d724aa78b6bb208be4bc535");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为二级英模");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (numSum10 > 0){
                examAutoEvaluation.setDetails(details10 + "被评为全国级劳模，每次加1.2分；");
                examAutoEvaluation.setScore("1.2");
                examAutoEvaluation.setOption("民警被评为全国级劳模");
                examAutoEvaluation.setOptionId("0ef4bc408eac4beb92b8cbf592959c65");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为全国级劳模");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (numSum11 > 0){
                examAutoEvaluation.setDetails(details11 + "被评为一级英模，每次加1.5分；");
                examAutoEvaluation.setScore("7");
                examAutoEvaluation.setOption("民警被评为一级英模");
                examAutoEvaluation.setOptionId("58b3fcdb365e4a8daed0dac532a52b45");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"立功创模_民警被评为一级英模");
                examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
        }
    }


    @Transactional(readOnly = false)
    public void dyjkjSxfx(String checkTime) {

        List<AffairGeneralSituation> jjgPartyList = affairGeneralSituationService.getJJGPartyBranch();


        String year = checkTime.substring(0, 4);
        int y = Integer.valueOf(year);
        String lastYear = String.valueOf(y - 1);

        String month = checkTime.substring(checkTime.length() - 2);

        Map<String, String> timeMap = jdTime(checkTime);
        String yearL = timeMap.get("yearL");
        String yearT = timeMap.get("yearT");
        String jd = timeMap.get("jd");

        if (StringUtils.isNotBlank(jd) && "01".equals(jd)){
            for (int i = 0; i < jjgPartyList.size(); i++) {
            AffairGeneralSituation affairGeneralSituation = jjgPartyList.get(i);
            String idNumber = affairGeneralSituation.getId();
            String name = affairGeneralSituation.getPartyOrganization();

            Integer number = affairIdeaAnalysisService.selectNumber(yearL, yearT, idNumber);
            if (number < 1) {
                List<String> evId = examAutoEvaluationDao.selectEvId(idNumber);
                for (int e = 0; e < evId.size(); e++) {

                    String evI = evId.get(e);

                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("2");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(lastYear);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(name + lastYear + "年" + jd + "季度" + "党员队伍思想分析未按时录入");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(idNumber);

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队月度绩效考核公共扣分标准");
                    examAutoEvaluation.setModelId("a2d709f2d572410da4c3dba66298ebab");
                    examAutoEvaluation.setOption("相关工作未按要求抓好落实的");
                    examAutoEvaluation.setOptionId("ebeb08fe095f44ce82ca3e47c910e538");
                    examAutoEvaluation.setScore("3");
                    examAutoEvaluation.setEvaluationId(evI);
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党员队伍思想分析");
                    this.summaryStandard(examAutoEvaluation,3.0,name + year + "年，党员队伍思想分析未按时录入");
                    this.save(examAutoEvaluation);

                }
            }
        }
    }
        else if (StringUtils.isNotBlank(jd) && ("04".equals(jd) || "07".equals(jd) || "10".equals(jd))){
            for (int i = 0; i < jjgPartyList.size(); i++) {
                AffairGeneralSituation affairGeneralSituation = jjgPartyList.get(i);
                String idNumber = affairGeneralSituation.getId();
                String name = affairGeneralSituation.getPartyOrganization();

                Integer number = affairIdeaAnalysisService.selectNumber(yearL, yearT, idNumber);
                if (number < 1) {
                    List<String> evId = examAutoEvaluationDao.selectEvId(idNumber);
                    for (int e = 0; e < evId.size(); e++) {

                        String evI = evId.get(e);

                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("2");
                        examAutoEvaluation.setEvalType("2");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails(name + year + "年" + jd + "季度" + "党员队伍思想分析未按时录入");
                        examAutoEvaluation.setUnit(name);
                        examAutoEvaluation.setUnitId(idNumber);

                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队月度绩效考核公共扣分标准");
                        examAutoEvaluation.setModelId("a2d709f2d572410da4c3dba66298ebab");
                        examAutoEvaluation.setOption("相关工作未按要求抓好落实的");
                        examAutoEvaluation.setOptionId("ebeb08fe095f44ce82ca3e47c910e538");
                        examAutoEvaluation.setScore("3");
                        examAutoEvaluation.setEvaluationId(evI);
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党员队伍思想分析");
                        this.summaryStandard(examAutoEvaluation,3.0,name + year + "年" + jd + "季度，党员队伍思想分析未按时录入");

                        this.save(examAutoEvaluation);

                    }
                }
            }
        }
    }

    @Transactional(readOnly = false)
    public void dyjkjSxfxYear(String year) {


        List<AffairGeneralSituation> jjgPartyList = affairGeneralSituationService.getJJGPartyBranch();

        Map<String, String> timeMap = this.yearTime(year);
        String yearL = timeMap.get("yearL");
        String yearT = timeMap.get("yearT");

        for (int i = 0; i < jjgPartyList.size(); i++) {
            AffairGeneralSituation affairGeneralSituation = jjgPartyList.get(i);
            String idNumber = affairGeneralSituation.getId();
            String name = affairGeneralSituation.getPartyOrganization();

            List<String> evId = examAutoEvaluationDao.selectEvId(idNumber);
            for (int e = 0; e < evId.size(); e++) {

                String evI = evId.get(e);
                Integer yearNumber = affairIdeaAnalysisService.selectNumber(yearL,yearT,idNumber);
                if (yearNumber < 4) {
                    int num = 4 - yearNumber;
                    int nu = 2 * num;
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("5");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + "党员队伍思想分析未按时录入");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(idNumber);
                    examAutoEvaluation.setEvaluationId(idNumber);//被考评对象id
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队年度绩效考核公共扣分标准");
                    examAutoEvaluation.setModelId("2d6862618de247418672a0ecee04a180");
                    examAutoEvaluation.setOption("相关工作未按要求抓好落实的");
                    examAutoEvaluation.setOptionId("fad23593a3764cb096123b52770b6e03");
                    examAutoEvaluation.setScore(String.valueOf(nu));
                    examAutoEvaluation.setEvaluationId(evI);

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党员队伍思想分析");
                    this.summaryStandard(examAutoEvaluation,Double.valueOf(nu),name + year + "年，党员队伍思想分析未按时录入");
                    this.save(examAutoEvaluation);
                }
            }
        }
    }

    @Transactional(readOnly = false)
    public void dyckcSxfxQuarter(String checkTime) {

        List<AffairGeneralSituation> nncPartyList = affairGeneralSituationService.getChuPartyBranch("34", "1");
        List<AffairGeneralSituation> lzcPartyList = affairGeneralSituationService.getChuPartyBranch("95", "1");
        List<AffairGeneralSituation> bhcPartyList = affairGeneralSituationService.getChuPartyBranch("156", "1");

        String year = checkTime.substring(0, 4);
        int y = Integer.valueOf(year);
        String lastYear = String.valueOf(y - 1);
        String month = checkTime.substring(checkTime.length() - 2);

        Map<String, String> timeMap = jdTime(checkTime);
        String yearL = timeMap.get("yearL");
        String yearT = timeMap.get("yearT");
        String jd = timeMap.get("jd");
        if (StringUtils.isNotBlank(jd) && "01".equals(jd)){
            for (int i = 0; i < nncPartyList.size(); i++) {

            AffairGeneralSituation affairGeneralSituation = nncPartyList.get(i);
            String idNumber = affairGeneralSituation.getId();
            String name = affairGeneralSituation.getPartyOrganization();

            Integer number = affairIdeaAnalysisService.selectNumber(yearL,yearT, idNumber);
            List<String> evId = examAutoEvaluationDao.selectEvId(idNumber);
            for (int e = 0; e < evId.size(); e++) {

                String evI = evId.get(e);
                if (number < 1) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(lastYear);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(name + lastYear + "年" + jd + "季度党员队伍思想分析相关工作未按要求抓好落实的，每次扣公共分3分。");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(idNumber);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("2020年月度南宁处对各单位重点工作扣分标准（直接扣大分）");
                    examAutoEvaluation.setModelId("4039253675e7495a8583ac9173345a96");
                    examAutoEvaluation.setEvaluationId(evI);//被考评对象id
                    examAutoEvaluation.setOption("未按照铁路公安局政治部《关于积极运用“学习强国”学习平台推进铁路公安机关理论学习常态化制度化的通知》（铁公传〔2019〕62号）的要求，落实好相关工作。被公安局检查出来的");
                    examAutoEvaluation.setOptionId("2331a386ccb1474798bc2320b3c1db27");
                    examAutoEvaluation.setScore("0.6");

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","党员队伍思想分析");
                    this.summaryStandard(examAutoEvaluation,0.6,name + year + "年，党员队伍思想分析未按时录入");
                    this.save(examAutoEvaluation);

                }
            }
        }
            for (int i = 0; i < lzcPartyList.size(); i++) {

            AffairGeneralSituation affairGeneralSituation = lzcPartyList.get(i);
            String idNumber = affairGeneralSituation.getId();
            String name = affairGeneralSituation.getPartyOrganization();

            Integer number = affairIdeaAnalysisService.selectNumber(yearL,yearT, idNumber);
            List<String> evId = examAutoEvaluationDao.selectEvId(idNumber);
            for (int e = 0; e < evId.size(); e++) {

                String evI = evId.get(e);
                if (number < 1) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(lastYear);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(name + lastYear + "年" + jd + "季度党员队伍思想分析相关工作未按要求抓好落实的，每次扣公共分3分。");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(idNumber);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("柳州处对单位（部门）2020年月度重点工作绩效考核评分标准（反恐、信息化、党建）");
                    examAutoEvaluation.setModelId("24e18007a8b942b7947f581b7cb9370e");
                    examAutoEvaluation.setEvaluationId(evI);//被考评对象id
                    examAutoEvaluation.setOption("未按照铁路公安局政治部《关于积极运用“学习强国”学习平台推进铁路公安机关理论学习常态化制度化的通知》（铁公传〔2019〕62号）的要求，落实好相关工作，被检查出来的");
                    examAutoEvaluation.setOptionId("7042c9c3fcdf4f3cb2b48a3e2bf1b993");
                    examAutoEvaluation.setScore("0.6");

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","党员队伍思想分析");
                    this.summaryStandard(examAutoEvaluation,0.6,name + year + "年，党员队伍思想分析未按时录入");
                    this.save(examAutoEvaluation);

                }
            }
        }
            for (int i = 0; i < bhcPartyList.size(); i++) {

            AffairGeneralSituation affairGeneralSituation = bhcPartyList.get(i);
            String idNumber = affairGeneralSituation.getId();
            String name = affairGeneralSituation.getPartyOrganization();

            Integer number = affairIdeaAnalysisService.selectNumber(yearL,yearT, idNumber);
            List<String> evId = examAutoEvaluationDao.selectEvId(idNumber);
            for (int e = 0; e < evId.size(); e++) {

                String evI = evId.get(e);
                if (number < 1) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(lastYear);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(name + year + "年" + jd + "季度党员队伍思想分析相关工作未按要求抓好落实的，每次扣公共分3分。");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(idNumber);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队重点工作扣分标准（直接扣大分）");
                    examAutoEvaluation.setModelId("6f09b86236ed4745a89e97db3f2869aa");
                    examAutoEvaluation.setEvaluationId(evI);//被考评对象id
                    examAutoEvaluation.setOption("未按照铁路公安局政治部《关于积极运用“学习强国”学习平台推进铁路公安机关理论学习常态化制度化的通知》（铁公传〔2019〕62号）的要求，落实好相关工作。被公安局检查出来的");
                    examAutoEvaluation.setOptionId("986bd084406b4ed1acbb178f02a68747");
                    examAutoEvaluation.setScore("0.6");

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","党员队伍思想分析");
                    this.summaryStandard(examAutoEvaluation,0.6,name + year + "年，党员队伍思想分析未按时录入");
                    this.save(examAutoEvaluation);

                    }
                }
            }
        }
        else if (StringUtils.isNotBlank(jd) && ("04".equals(jd) || "07".equals(jd) || "10".equals(jd))){
            for (int i = 0; i < nncPartyList.size(); i++) {

                AffairGeneralSituation affairGeneralSituation = nncPartyList.get(i);
                String idNumber = affairGeneralSituation.getId();
                String name = affairGeneralSituation.getPartyOrganization();

                Integer number = affairIdeaAnalysisService.selectNumber(yearL,yearT, idNumber);
                List<String> evId = examAutoEvaluationDao.selectEvId(idNumber);
                for (int e = 0; e < evId.size(); e++) {

                    String evI = evId.get(e);
                    if (number < 1) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("4");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails(name + year + "年" + jd + "季度党员队伍思想分析相关工作未按要求抓好落实的，每次扣公共分3分。");

                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setUnit(name);
                        examAutoEvaluation.setUnitId(idNumber);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("2020年月度南宁处对各单位重点工作扣分标准（直接扣大分）");
                        examAutoEvaluation.setModelId("4039253675e7495a8583ac9173345a96");
                        examAutoEvaluation.setEvaluationId(evI);//被考评对象id
                        examAutoEvaluation.setOption("未按照铁路公安局政治部《关于积极运用“学习强国”学习平台推进铁路公安机关理论学习常态化制度化的通知》（铁公传〔2019〕62号）的要求，落实好相关工作。被公安局检查出来的");
                        examAutoEvaluation.setOptionId("2331a386ccb1474798bc2320b3c1db27");
                        examAutoEvaluation.setScore("0.6");

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","党员队伍思想分析");
                        this.summaryStandard(examAutoEvaluation,0.6,name + year + "年，党员队伍思想分析未按时录入");
                        this.save(examAutoEvaluation);

                    }
                }
            }
            for (int i = 0; i < lzcPartyList.size(); i++) {

                AffairGeneralSituation affairGeneralSituation = lzcPartyList.get(i);
                String idNumber = affairGeneralSituation.getId();
                String name = affairGeneralSituation.getPartyOrganization();

                Integer number = affairIdeaAnalysisService.selectNumber(yearL,yearT, idNumber);
                List<String> evId = examAutoEvaluationDao.selectEvId(idNumber);
                for (int e = 0; e < evId.size(); e++) {

                    String evI = evId.get(e);
                    if (number < 1) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("4");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails(name + year + "年" + month + "季度党员队伍思想分析相关工作未按要求抓好落实的，每次扣公共分3分。");

                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setUnit(name);
                        examAutoEvaluation.setUnitId(idNumber);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("柳州处对单位（部门）2020年月度重点工作绩效考核评分标准（反恐、信息化、党建）");
                        examAutoEvaluation.setModelId("24e18007a8b942b7947f581b7cb9370e");
                        examAutoEvaluation.setEvaluationId(evI);//被考评对象id
                        examAutoEvaluation.setOption("未按照铁路公安局政治部《关于积极运用“学习强国”学习平台推进铁路公安机关理论学习常态化制度化的通知》（铁公传〔2019〕62号）的要求，落实好相关工作，被检查出来的");
                        examAutoEvaluation.setOptionId("7042c9c3fcdf4f3cb2b48a3e2bf1b993");
                        examAutoEvaluation.setScore("0.6");

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","党员队伍思想分析");
                        this.summaryStandard(examAutoEvaluation,0.6,name + year + "年，党员队伍思想分析未按时录入");
                        this.save(examAutoEvaluation);

                    }
                }
            }
            for (int i = 0; i < bhcPartyList.size(); i++) {

                AffairGeneralSituation affairGeneralSituation = bhcPartyList.get(i);
                String idNumber = affairGeneralSituation.getId();
                String name = affairGeneralSituation.getPartyOrganization();

                Integer number = affairIdeaAnalysisService.selectNumber(yearL,yearT, idNumber);
                List<String> evId = examAutoEvaluationDao.selectEvId(idNumber);
                for (int e = 0; e < evId.size(); e++) {

                    String evI = evId.get(e);
                    if (number < 1) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("4");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails(name + year + "年" + month + "季度党员队伍思想分析相关工作未按要求抓好落实的，每次扣公共分3分。");

                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setUnit(name);
                        examAutoEvaluation.setUnitId(idNumber);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队重点工作扣分标准（直接扣大分）");
                        examAutoEvaluation.setModelId("6f09b86236ed4745a89e97db3f2869aa");
                        examAutoEvaluation.setEvaluationId(evI);//被考评对象id
                        examAutoEvaluation.setOption("未按照铁路公安局政治部《关于积极运用“学习强国”学习平台推进铁路公安机关理论学习常态化制度化的通知》（铁公传〔2019〕62号）的要求，落实好相关工作。被公安局检查出来的");
                        examAutoEvaluation.setOptionId("986bd084406b4ed1acbb178f02a68747");
                        examAutoEvaluation.setScore("0.6");

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","党员队伍思想分析");
                        this.summaryStandard(examAutoEvaluation,0.6,name + year + "年，党员队伍思想分析未按时录入");
                        this.save(examAutoEvaluation);

                    }
                }
            }
        }
    }

    @Transactional(readOnly = false)
    public void dyckcSxfxYear(String year) {

        List<AffairGeneralSituation> nncPartyList = affairGeneralSituationService.getChuPartyBranch("34", "1");
        List<AffairGeneralSituation> lzcPartyList = affairGeneralSituationService.getChuPartyBranch("95", "1");
        List<AffairGeneralSituation> bhcPartyList = affairGeneralSituationService.getChuPartyBranch("156", "1");

        Integer y = Integer.valueOf(year);
        Integer lastYear = y - 1;
        Map<String, String> timeMap = this.yearTime(year);
        String yearL = timeMap.get("yearL");
        String yearT = timeMap.get("yearT");

        for (int i = 0; i < nncPartyList.size(); i++) {

            AffairGeneralSituation affairGeneralSituation = nncPartyList.get(i);
            String idNumber = affairGeneralSituation.getId();
            String name = affairGeneralSituation.getPartyOrganization();

            Integer yearNumber = affairIdeaAnalysisService.selectNumber(yearL,yearT,idNumber);
            List<String> evId = examAutoEvaluationDao.selectEvId(idNumber);
            for (int e = 0; e < evId.size(); e++) {

                String evI = evId.get(e);
                if (yearNumber < 12) {
                    int num = 12 - yearNumber;
                    double nu = 0.3 * num;
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + year + "年" + "党员队伍思想分析相关工作未按要求抓好落实的，每次扣公共分2分。");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(idNumber);

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("");
                    examAutoEvaluation.setModelId("");
                    examAutoEvaluation.setOption("");
                    examAutoEvaluation.setOptionId("");
                    examAutoEvaluation.setScore(String.valueOf(nu));
                    examAutoEvaluation.setEvaluationId(evI);

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","党员队伍思想分析");
                    this.summaryStandard(examAutoEvaluation,Double.valueOf(nu),name + year + "年，党员队伍思想分析未按时录入");
                    this.save(examAutoEvaluation);

                }
            }
        }
        for (int i = 0; i < lzcPartyList.size(); i++) {

            AffairGeneralSituation affairGeneralSituation = lzcPartyList.get(i);
            String idNumber = affairGeneralSituation.getId();
            String name = affairGeneralSituation.getPartyOrganization();

            Integer yearNumber = affairIdeaAnalysisService.selectNumber(yearL,yearT,idNumber);
            List<String> evId = examAutoEvaluationDao.selectEvId(idNumber);
            for (int e = 0; e < evId.size(); e++) {

                String evI = evId.get(e);
                if (yearNumber < 12) {
                    int num = 12 - yearNumber;
                    double nu = 0.3 * num;
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + year + "年" + "党员队伍思想分析相关工作未按要求抓好落实的，每次扣公共分2分。");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(idNumber);

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("柳州处对单位（部门）2020年年度重点工作绩效考核评分标准（反恐、信息化、党建）");
                    examAutoEvaluation.setModelId("c228f93dde1143d7980cfff7da9a9ba8");
                    examAutoEvaluation.setOption("未按照铁路公安局政治部《关于积极运用“学习强国”学习平台推进铁路公安机关理论学习常态化制度化的通知》（铁公传〔2019〕62号）的要求，落实好相关工作，被检查出来的");
                    examAutoEvaluation.setOptionId("2f5835f2e276460fb6c8bad79bbf5775");
                    examAutoEvaluation.setScore(String.valueOf(nu));
                    examAutoEvaluation.setEvaluationId(evI);

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","党员队伍思想分析");
                    this.summaryStandard(examAutoEvaluation,Double.valueOf(nu),name + year + "年，党员队伍思想分析未按时录入");
                    this.save(examAutoEvaluation);

                }
            }
        }
        for (int i = 0; i < bhcPartyList.size(); i++) {

            AffairGeneralSituation affairGeneralSituation = bhcPartyList.get(i);
            String idNumber = affairGeneralSituation.getId();
            String name = affairGeneralSituation.getPartyOrganization();

            Integer yearNumber = affairIdeaAnalysisService.selectNumber(yearL,yearT,idNumber);
            List<String> evId = examAutoEvaluationDao.selectEvId(idNumber);
            for (int e = 0; e < evId.size(); e++) {

                String evI = evId.get(e);
                if (yearNumber < 12) {
                    int num = 12 - yearNumber;
                    double nu = 0.3 * num;
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + year + "年" + "党员队伍思想分析相关工作未按要求抓好落实的，每次扣公共分2分。");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(idNumber);

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("2020年年度北海处对机关科室绩效考核扣分标准(业务部分)");
                    examAutoEvaluation.setModelId("01bcee76bf194541b89220959b83b09a");
                    examAutoEvaluation.setOption("不按时向公安局上报季度队伍思想分析报告（最后一个月20日前上报），不真实反映民警队伍中存在的问题(既有定性分析，又有定量分析，既有情况介绍，又有对策研究。要求以党委文件形式上报)，每少一次的");
                    examAutoEvaluation.setOptionId("e4e848f74c39437aa5d699ad8b7c79c1");
                    examAutoEvaluation.setScore(String.valueOf(nu));
                    examAutoEvaluation.setEvaluationId(evI);

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","党员队伍思想分析");
                    this.summaryStandard(examAutoEvaluation,Double.valueOf(nu),name + year + "年，党员队伍思想分析未按时录入");
                    this.save(examAutoEvaluation);

                }
            }
        }
    }

    @Transactional(readOnly = false)
    public void dyckpcSxfxQuarter(String checkTime) {

        List<AffairGeneralSituation> nncPartyList = affairGeneralSituationService.getChuPartyBranch("34", "2");
        List<AffairGeneralSituation> lzcPartyList = affairGeneralSituationService.getChuPartyBranch("95", "2");
        List<AffairGeneralSituation> bhcPartyList = affairGeneralSituationService.getChuPartyBranch("156", "2");
        String year = checkTime.substring(0, 4);
        int y = Integer.valueOf(year);
        String lastYear = String.valueOf(y - 1);
        String month = checkTime.substring(checkTime.length() - 2);

        Map<String, String> timeMap = jdTime(checkTime);
        String yearL = timeMap.get("yearL");
        String yearT = timeMap.get("yearT");
        String jd = timeMap.get("jd");


        if (StringUtils.isNotBlank(jd) && "01".equals(jd)) {
            for (int n = 0; n < nncPartyList.size(); n++) {
                AffairGeneralSituation affairGeneralSituation = nncPartyList.get(n);
                String idNumber = affairGeneralSituation.getId();
                String name = affairGeneralSituation.getPartyOrganization();

                Integer threeNumber = affairIdeaAnalysisService.selectNumber(yearL, yearT, idNumber);
                List<String> evId = examAutoEvaluationDao.selectEvId(idNumber);
                for (int e = 0; e < evId.size(); e++) {

                    String evI = evId.get(e);
                    if (threeNumber < 1) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(lastYear);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails(name + lastYear + "年" + jd + "季度党员队伍思想分析相关工作未按要求抓好落实的，每次扣公共分3分。");
                        examAutoEvaluation.setUnit(name);

                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setUnitId(idNumber);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setModelId("");
                        examAutoEvaluation.setOption("");
                        examAutoEvaluation.setOptionId("");
                        examAutoEvaluation.setScore("0.6");
                        examAutoEvaluation.setEvaluationId(evI);

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","党员队伍思想分析");
                        this.summaryStandard(examAutoEvaluation,0.6,name + year + "年，党员队伍思想分析未按时录入");
                        this.save(examAutoEvaluation);

                    }
                }
            }
            for (int n = 0; n < lzcPartyList.size(); n++) {
                AffairGeneralSituation affairGeneralSituation = lzcPartyList.get(n);
                String idNumber = affairGeneralSituation.getId();
                String name = affairGeneralSituation.getPartyOrganization();

                Integer threeNumber = affairIdeaAnalysisService.selectNumber(yearL, yearT, idNumber);
                List<String> evId = examAutoEvaluationDao.selectEvId(idNumber);
                for (int e = 0; e < evId.size(); e++) {

                    String evI = evId.get(e);
                    if (threeNumber < 1) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(lastYear);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails(name + lastYear + "年" + jd + "季度，党员队伍思想分析相关工作未按要求抓好落实的，每次扣公共分3分。");
                        examAutoEvaluation.setUnit(name);

                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setUnitId(idNumber);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("柳州处对派出所2020年月度重点工作绩效考核扣分标准（反恐、信息化、党建）");
                        examAutoEvaluation.setModelId("39a15e9baf8b4967b58c476c585e9898");
                        examAutoEvaluation.setOption("未按照铁路公安局政治部《关于积极运用“学习强国”学习平台推进铁路公安机关理论学习常态化制度化的通知》（铁公传〔2019〕62号）的要求，落实好相关工作，被检查出来的");
                        examAutoEvaluation.setOptionId("1ab96873794b40dc9c9c41d63d5a5a22");
                        examAutoEvaluation.setScore("0.6");
                        examAutoEvaluation.setEvaluationId(evI);

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","党员队伍思想分析");
                        this.summaryStandard(examAutoEvaluation,0.6,name + year + "年，党员队伍思想分析未按时录入");
                        this.save(examAutoEvaluation);

                    }
                }
            }
            for (int n = 0; n < bhcPartyList.size(); n++) {
                AffairGeneralSituation affairGeneralSituation = bhcPartyList.get(n);
                String idNumber = affairGeneralSituation.getId();
                String name = affairGeneralSituation.getPartyOrganization();

                Integer threeNumber = affairIdeaAnalysisService.selectNumber(yearL, yearT, idNumber);
                List<String> evId = examAutoEvaluationDao.selectEvId(idNumber);
                for (int e = 0; e < evId.size(); e++) {

                    String evI = evId.get(e);
                    if (threeNumber < 1) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(lastYear);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails(name + lastYear + "年" + jd + "季度，党员队伍思想分析相关工作未按要求抓好落实的，每次扣公共分3分。");
                        examAutoEvaluation.setUnit(name);

                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setUnitId(idNumber);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("2020年月度北海处对派出所、刑警三大队重点工作扣分标准（直接扣大分）");
                        examAutoEvaluation.setModelId("f0a9d645e2a6465f8ceb5847d1b32525");
                        examAutoEvaluation.setOption("未按照铁路公安局政治部《关于积极运用“学习强国”学习平台推进铁路公安机关理论学习常态化制度化的通知》（铁公传〔2019〕62号）的要求，落实好相关工作。被上级单位检查出来的");
                        examAutoEvaluation.setOptionId("d25ce6bef1454828b9dc7d2e0a0ac6d0");
                        examAutoEvaluation.setScore("0.6");
                        examAutoEvaluation.setEvaluationId(evI);

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","党员队伍思想分析");
                        this.summaryStandard(examAutoEvaluation,0.6,name + year + "年，党员队伍思想分析未按时录入");
                        this.save(examAutoEvaluation);


                    }
                }
            }
        }
        else if (StringUtils.isNotBlank(jd) && ("04".equals(jd) || "07".equals(jd) || "10".equals(jd))) {
            for (int n = 0; n < nncPartyList.size(); n++) {
                AffairGeneralSituation affairGeneralSituation = nncPartyList.get(n);
                String idNumber = affairGeneralSituation.getId();
                String name = affairGeneralSituation.getPartyOrganization();

                Integer threeNumber = affairIdeaAnalysisService.selectNumber(yearL, yearT, idNumber);
                List<String> evId = examAutoEvaluationDao.selectEvId(idNumber);
                for (int e = 0; e < evId.size(); e++) {

                    String evI = evId.get(e);
                    if (threeNumber < 1) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails(name + year + "年" + jd + "季度党员队伍思想分析相关工作未按要求抓好落实的，每次扣公共分3分。");
                        examAutoEvaluation.setUnit(name);

                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setUnitId(idNumber);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setModelId("");
                        examAutoEvaluation.setOption("");
                        examAutoEvaluation.setOptionId("");
                        examAutoEvaluation.setScore("0.6");
                        examAutoEvaluation.setEvaluationId(evI);

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","党员队伍思想分析");
                        this.summaryStandard(examAutoEvaluation,0.6,name + year + "年，党员队伍思想分析未按时录入");
                        this.save(examAutoEvaluation);

                    }
                }
            }
            for (int n = 0; n < lzcPartyList.size(); n++) {
                AffairGeneralSituation affairGeneralSituation = lzcPartyList.get(n);
                String idNumber = affairGeneralSituation.getId();
                String name = affairGeneralSituation.getPartyOrganization();

                Integer threeNumber = affairIdeaAnalysisService.selectNumber(yearL, yearT, idNumber);
                List<String> evId = examAutoEvaluationDao.selectEvId(idNumber);
                for (int e = 0; e < evId.size(); e++) {

                    String evI = evId.get(e);
                    if (threeNumber < 1) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails(name + year + "年" + jd + "季度，党员队伍思想分析相关工作未按要求抓好落实的，每次扣公共分3分。");
                        examAutoEvaluation.setUnit(name);

                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setUnitId(idNumber);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("柳州处对派出所2020年月度重点工作绩效考核扣分标准（反恐、信息化、党建）");
                        examAutoEvaluation.setModelId("39a15e9baf8b4967b58c476c585e9898");
                        examAutoEvaluation.setOption("未按照铁路公安局政治部《关于积极运用“学习强国”学习平台推进铁路公安机关理论学习常态化制度化的通知》（铁公传〔2019〕62号）的要求，落实好相关工作，被检查出来的");
                        examAutoEvaluation.setOptionId("1ab96873794b40dc9c9c41d63d5a5a22");
                        examAutoEvaluation.setScore("0.6");
                        examAutoEvaluation.setEvaluationId(evI);

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","党员队伍思想分析");
                        this.summaryStandard(examAutoEvaluation,0.6,name + year + "年，党员队伍思想分析未按时录入");
                        this.save(examAutoEvaluation);

                    }
                }
            }
            for (int n = 0; n < bhcPartyList.size(); n++) {
                AffairGeneralSituation affairGeneralSituation = bhcPartyList.get(n);
                String idNumber = affairGeneralSituation.getId();
                String name = affairGeneralSituation.getPartyOrganization();

                Integer threeNumber = affairIdeaAnalysisService.selectNumber(yearL, yearT, idNumber);
                List<String> evId = examAutoEvaluationDao.selectEvId(idNumber);
                for (int e = 0; e < evId.size(); e++) {

                    String evI = evId.get(e);
                    if (threeNumber < 1) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails(name + year + "年" + jd + "季度，党员队伍思想分析相关工作未按要求抓好落实的，每次扣公共分3分。");
                        examAutoEvaluation.setUnit(name);

                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setUnitId(idNumber);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("2020年月度北海处对派出所、刑警三大队重点工作扣分标准（直接扣大分）");
                        examAutoEvaluation.setModelId("f0a9d645e2a6465f8ceb5847d1b32525");
                        examAutoEvaluation.setOption("未按照铁路公安局政治部《关于积极运用“学习强国”学习平台推进铁路公安机关理论学习常态化制度化的通知》（铁公传〔2019〕62号）的要求，落实好相关工作。被上级单位检查出来的");
                        examAutoEvaluation.setOptionId("d25ce6bef1454828b9dc7d2e0a0ac6d0");
                        examAutoEvaluation.setScore("0.6");
                        examAutoEvaluation.setEvaluationId(evI);

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","党员队伍思想分析");
                        this.summaryStandard(examAutoEvaluation,0.6,name + year + "年，党员队伍思想分析未按时录入");
                        this.save(examAutoEvaluation);


                    }
                }
            }
        }
    }

    @Transactional(readOnly = false)
    public void dyckpcSxfxYear(String year) {

        Map<String, String> timeMap = this.yearTime(year);
        String yearL = timeMap.get("yearL");
        String yearT = timeMap.get("yearT");

        List<AffairGeneralSituation> nncPartyList = affairGeneralSituationService.getChuPartyBranch("34", "2");
        List<AffairGeneralSituation> lzcPartyList = affairGeneralSituationService.getChuPartyBranch("95", "2");
        List<AffairGeneralSituation> bhcPartyList = affairGeneralSituationService.getChuPartyBranch("156", "2");
        for (int n = 0; n < nncPartyList.size(); n++) {
            AffairGeneralSituation affairGeneralSituation = nncPartyList.get(n);
            String idNumber = affairGeneralSituation.getId();
            String name = affairGeneralSituation.getPartyOrganization();
            Integer y = Integer.valueOf(year);
                Integer lastYear = y - 1;
                Integer yearNumber = affairIdeaAnalysisService.selectNumber(yearL,yearT,idNumber);

                    if (yearNumber < 12) {
                        int num = 12 - yearNumber;
                        double nu = 0.3 * num;
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("2");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setDetails(name + year + "年" + "党员队伍思想分析相关工作未按要求抓好落实的，每次扣公共分2分。");
                        examAutoEvaluation.setUnit(name);
                        examAutoEvaluation.setUnitId(idNumber);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");

                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setModel("2020年年度南宁处对派出所重点工作考核扣分标准（直接扣大分）");
                        examAutoEvaluation.setModelId("825da0762357481a846a56230a316f3b");
                        examAutoEvaluation.setOption("未按照铁路公安局政治部《关于积极运用“学习强国”学习平台推进铁路公安机关理论学习常态化制度化的通知》（铁公传〔2019〕62号）的要求，落实好相关工作的");
                        examAutoEvaluation.setOptionId("2effc23d3b4b4fa6b192f4aaad130a5b");
                        examAutoEvaluation.setScore(String.valueOf(nu));
                        examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectUserId(idNumber));

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","党员队伍思想分析");
                        this.summaryStandard(examAutoEvaluation,Double.valueOf(nu),name + year + "年，党员队伍思想分析未按时录入");
                        this.save(examAutoEvaluation);
            }
        }
        for (int n = 0; n < lzcPartyList.size(); n++) {
            AffairGeneralSituation affairGeneralSituation = lzcPartyList.get(n);
            String idNumber = affairGeneralSituation.getId();
            String name = affairGeneralSituation.getPartyOrganization();
            Integer y = Integer.valueOf(year);
                Integer lastYear = y - 1;

                Integer yearNumber = affairIdeaAnalysisService.selectNumber(yearL,yearT,idNumber);

                    if (yearNumber < 12) {
                        int num = 12 - yearNumber;
                        double nu = 0.3 * num;
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("2");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setDetails(name + year + "年" + "党员队伍思想分析相关工作未按要求抓好落实的，每次扣公共分2分。");
                        examAutoEvaluation.setUnit(name);
                        examAutoEvaluation.setUnitId(idNumber);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");

                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setModel("柳州处对派出所2020年年度重点工作绩效考核扣分标准（反恐、信息化、党建）");
                        examAutoEvaluation.setModelId("97a2266f262443afa51a378ba259372a");
                        examAutoEvaluation.setOption("未按照铁路公安局政治部《关于积极运用“学习强国”学习平台推进铁路公安机关理论学习常态化制度化的通知》（铁公传〔2019〕62号）的要求，落实好相关工作，被检查出来的");
                        examAutoEvaluation.setOptionId("031ee47bcfb44938a6255b688292ef4a");
                        examAutoEvaluation.setScore(String.valueOf(nu));
                        examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectUserId(idNumber));

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","党员队伍思想分析");
                        this.summaryStandard(examAutoEvaluation,Double.valueOf(nu),name + year + "年，党员队伍思想分析未按时录入");
                        this.save(examAutoEvaluation);


            }
        }
        for (int n = 0; n < bhcPartyList.size(); n++) {
            AffairGeneralSituation affairGeneralSituation = bhcPartyList.get(n);
            String idNumber = affairGeneralSituation.getId();
            String name = affairGeneralSituation.getPartyOrganization();
            Integer y = Integer.valueOf(year);
                Integer lastYear = y - 1;

                Integer yearNumber = affairIdeaAnalysisService.selectNumber(yearL,yearT,idNumber);

                    if (yearNumber < 12) {
                        int num = 12 - yearNumber;
                        double nu = 0.3 * num;
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("2");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setDetails(name + year + "年" + "党员队伍思想分析相关工作未按要求抓好落实的，每次扣公共分2分。");
                        examAutoEvaluation.setUnit(name);
                        examAutoEvaluation.setUnitId(idNumber);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");

                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setModel("2020年年度北海处对派出所重点工作考核扣分标准（直接扣大分）");
                        examAutoEvaluation.setModelId("ae2adcfc3ba745bc95ea925e00a0a119");
                        examAutoEvaluation.setOption("未按照铁路公安局政治部《关于积极运用“学习强国”学习平台推进铁路公安机关理论学习常态化制度化的通知》（铁公传〔2019〕62号）的要求，落实好相关工作的");
                        examAutoEvaluation.setOptionId("f5f2f474bafc4629a7cd0d4d96d907ea");
                        examAutoEvaluation.setScore(String.valueOf(nu));
                        examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectUserId(idNumber));

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","党员队伍思想分析");
                        this.summaryStandard(examAutoEvaluation,Double.valueOf(nu),name + year + "年，党员队伍思想分析未按时录入");
                        this.save(examAutoEvaluation);



            }
        }
    }

    /*
     * 党员队伍思想分析，未按时录入
     *
     * 公安处领导班子考核（局）   季度
     * */
    @Transactional(readOnly = false)
    public void gacSxfxQuarter(String checkTime) {

        //所有的公安处领导身份证

        String chuRoleId = "230e916609a349e68f7186f784e11419";

        ExamWorkflowDefine define = new ExamWorkflowDefine();
        define.setName(chuRoleId);
        List<User> chuList = examWorkflowSegmentsDefineService.queryPoliceDatas(define);

        String year = checkTime.substring(0, 4);
        int y = Integer.valueOf(year);
        String lastYear = String.valueOf(y - 1);
        String month = checkTime.substring(checkTime.length() - 2);

        Map<String, String> timeMap = jdTime(checkTime);
        String yearL = timeMap.get("yearL");
        String yearT = timeMap.get("yearT");
        String jd = timeMap.get("jd");

        if (StringUtils.isNotBlank(jd) && "01".equals(jd)){
            for (int i = 0; i < chuList.size(); i++) {
                User user = chuList.get(i);
                String name = user.getName();
                String idN = user.getNo();

                Integer threeNumber = affairIdeaAnalysisService.selectNumber(yearL,yearT,idN);
                if (threeNumber < 1) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(lastYear);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(name + lastYear + "年" + jd + "季度党员队伍思想分析相关工作未按要求抓好落实的，每次扣公共分3分。");

                    examAutoEvaluation.setName(name);
                    examAutoEvaluation.setIdNumber(idN);
                    examAutoEvaluation.setFromSys("智慧政工");

                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("2020年对公安处领导班子成员公共扣分标准（月度）");
                    examAutoEvaluation.setModelId("cdf22fb372094a629642f5c5d7a61df8");
                    examAutoEvaluation.setOption("上级部署的各时期党建工作要求，落实不到位的");
                    examAutoEvaluation.setOptionId("5e3dfebc770c4000b1ae137819fbfd7c");
                    examAutoEvaluation.setScore("3");
                    examAutoEvaluation.setEvaluationId(idN);

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党员队伍思想分析");
                    this.summaryStandard(examAutoEvaluation,3.0,name + year + "年，党员队伍思想分析未按时录入");
                    this.save(examAutoEvaluation);


                }
            }
        }
        else if (StringUtils.isNotBlank(jd) && ("04".equals(jd) || "07".equals(jd) || "10".equals(jd))){
            for (int i = 0; i < chuList.size(); i++) {
                User user = chuList.get(i);
                String name = user.getName();
                String idN = user.getNo();

                Integer threeNumber = affairIdeaAnalysisService.selectNumber(yearL,yearT,idN);
                if (threeNumber < 1) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(name + year + "年" + jd + "季度党员队伍思想分析相关工作未按要求抓好落实的，每次扣公共分3分。");

                    examAutoEvaluation.setName(name);
                    examAutoEvaluation.setIdNumber(idN);
                    examAutoEvaluation.setFromSys("智慧政工");

                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("2020年对公安处领导班子成员公共扣分标准（月度）");
                    examAutoEvaluation.setModelId("cdf22fb372094a629642f5c5d7a61df8");
                    examAutoEvaluation.setOption("上级部署的各时期党建工作要求，落实不到位的");
                    examAutoEvaluation.setOptionId("5e3dfebc770c4000b1ae137819fbfd7c");
                    examAutoEvaluation.setScore("3");
                    examAutoEvaluation.setEvaluationId(idN);

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党员队伍思想分析");
                    this.summaryStandard(examAutoEvaluation,3.0,name + year + "年，党员队伍思想分析未按时录入");
                    this.save(examAutoEvaluation);


                }
            }
        }
    }
    /*
     * 党员队伍思想分析，未按时录入
     *
     * 公安处领导班子考核（局）
     *
     * 年度
     * */
    @Transactional(readOnly = false)
    public void gacSxfxYear(String year) {

        Integer y = Integer.valueOf(year);
        Integer lastYear = y - 1;
        Map<String, String> timeMap = this.yearTime(year);
        String yearL = timeMap.get("yearL");
        String yearT = timeMap.get("yearT");
        //所有的公安处领导身份证

        String chuRoleId = "230e916609a349e68f7186f784e11419";

        ExamWorkflowDefine define = new ExamWorkflowDefine();
        define.setName(chuRoleId);
        List<User> chuList = examWorkflowSegmentsDefineService.queryPoliceDatas(define);

        for (int i = 0; i < chuList.size(); i++) {
            User user = chuList.get(i);
            String idNumber = user.getNo();
            //领导所在单位的id
            String unitId = personnelBaseDao.selectUnitId(idNumber);

            //领导所在单位
            String unit = personnelBaseDao.selectUnitName(idNumber);

            Integer yearNumber = affairIdeaAnalysisService.selectNumber(yearL,yearT,idNumber);

                if (yearNumber < 12) {
                    int num = 12 - yearNumber;
                    int nu = 2 * num;
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(unit + year + "年" + "党员队伍思想分析相关工作未按要求抓好落实的，每次扣公共分2分。");
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setModel("2020年对公安处领导班子成员公共扣分标准（年度）");
                    examAutoEvaluation.setModelId("1da0aa8d45ee4869ac6cf59e1687b167");
                    examAutoEvaluation.setOption("上级部署的各时期党建工作要求，落实不到位的");
                    examAutoEvaluation.setOptionId("fa7827e242a34e9b9a7959e13ecf84a5");
                    examAutoEvaluation.setScore(String.valueOf(nu));

                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党员队伍思想分析");
                    this.summaryStandard(examAutoEvaluation,Double.valueOf(nu),unit + year + "年，党员队伍思想分析未按时录入");
                    this.save(examAutoEvaluation);


            }
        }
    }

    /*
     * 党员队伍思想分析，未按时录入
     *
     * 中基层领导班子考核   季度
     * */
    @Transactional(readOnly = false)
    public void zjcSxfxQuarter(String checkTime) {

        //所有的中基层领导班子身份证
        String juJiGuanRoleId = "13bac520ae4d4160b595384691b443fd";
        String chuJiGuanRoleId = "62cf6aaea0184d3b8cfbce1700ad0e38";
        String suoduiJiGuanRoleId = "ff24c3288860447d867d08d462a2a2b9";

        String[] zhongJiCeng = new String[3];
        zhongJiCeng[0] = chuJiGuanRoleId;
        zhongJiCeng[1] = juJiGuanRoleId;
        zhongJiCeng[2] = suoduiJiGuanRoleId;
        String companyId = "156";
        List<User> zjcList = new ArrayList<>();
        /*Arrays.stream(zhongJiCeng).forEach(s -> {
            ExamWorkflowDefine zhongDefine = new ExamWorkflowDefine();
            zhongDefine.setName(s);
            if (companyId.equals("1")) {
                zhongDefine.getSqlMap().put("dsf", "and u.company_id = '" + companyId + "' and u.office_id not in ('34','95','156')");
            } else {
                zhongDefine.getSqlMap().put("dsf", "and u.company_id = '" + companyId + "'");
            }
            zjcList.addAll(examWorkflowSegmentsDefineService.queryPoliceDatas(zhongDefine));
        });*/
        Arrays.stream(zhongJiCeng).forEach(s -> {
            ExamWorkflowDefine zhongDefine = new ExamWorkflowDefine();
            zhongDefine.setName(s);
            zjcList.addAll(examWorkflowSegmentsDefineService.queryPoliceDatas(zhongDefine));
        });
        String year = checkTime.substring(0, 4);
        int y = Integer.valueOf(year);
        String lastYear = String.valueOf(y - 1);
        String month = checkTime.substring(checkTime.length() - 2);

        Map<String, String> timeMap = jdTime(checkTime);
        String yearL = timeMap.get("yearL");
        String yearT = timeMap.get("yearT");
        String jd = timeMap.get("jd");


        if (StringUtils.isNotBlank(jd) && "01".equals(jd)) {
            for (int i = 0; i < zjcList.size(); i++) {
                User user = zjcList.get(i);
                String idNumber = user.getNo();

                //中基层领导所在单位名称
                String unitName = personnelBaseDao.selectUnitName(idNumber);
                //中基层领导所在单位id
                String unitId = personnelBaseDao.selectUnitId(idNumber);
                //单位书记
                String SJName = affairGeneralSituationService.selectSJName(unitName);
                //书记身份证号
                String SJId = userDao.selectUserIdNumber(SJName);
                //非书记名单
                List<String> nameList = affairPartyMemberService.selectNoSJNameList(SJName, unitId);

                Integer threeNumber = affairIdeaAnalysisService.selectNumber(yearL, yearT, idNumber);
                List<String> evId = examAutoEvaluationDao.selectEvId(unitId);
                for (int e = 0; e < evId.size(); e++) {

                    String evI = evId.get(e);
                    if (threeNumber < 1) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("2");
                        examAutoEvaluation.setEvalType("6");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(lastYear);
                        examAutoEvaluation.setMonth("");
                        examAutoEvaluation.setDetails(SJName + lastYear + "年" + jd + "季度党员队伍思想分析相关工作未按要求抓好落实的，每次扣公共分2分。");
                        examAutoEvaluation.setName(SJName);
                        examAutoEvaluation.setIdNumber(SJId);

                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("2020年月度对全局中层和基层领导干部考核公共扣分标准 (公安处领导班子成员除外)");
                        examAutoEvaluation.setModelId("d498bf52ce334e3da66851fc57143639");
                        examAutoEvaluation.setOption("不按规定上报“民警思想状况分析报告”或未完成队伍建设和工作经验材料的（每少1篇加扣分管领导1分）");
                        examAutoEvaluation.setOptionId("d3280b7b672749099d8db7503e42a2df");
                        examAutoEvaluation.setScore("3");
                        examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党员队伍思想分析");
                        this.summaryStandard(examAutoEvaluation,3.0,SJName + year + "年，党员队伍思想分析未按时录入");
                        this.save(examAutoEvaluation);

                        for (int n = 0; n < nameList.size(); n++) {
                            String name = nameList.get(n);
                            String idN = userDao.selectUserIdNumber(name);
                            ExamAutoEvaluation examAutoEvaluation1 = new ExamAutoEvaluation();
                            examAutoEvaluation1.setType("2");
                            examAutoEvaluation1.setEvalType("6");
                            examAutoEvaluation1.setPeriod("1");
                            examAutoEvaluation1.setYear(year);
                            examAutoEvaluation1.setMonth("");

                            examAutoEvaluation1.setFromSys("智慧政工");
                            examAutoEvaluation1.setDetails(name + lastYear + "年" + jd + "季度党员队伍思想分析相关工作未按要求抓好落实的，每次扣公共分2分。");
                            examAutoEvaluation1.setName(name);
                            examAutoEvaluation1.setIdNumber(idN);
                            examAutoEvaluation1.setAssess("");
                            examAutoEvaluation1.setAssessId("");
                            examAutoEvaluation1.setModel("2020年月度对全局中层和基层领导干部考核公共扣分标准 (公安处领导班子成员除外)");
                            examAutoEvaluation1.setModelId("d498bf52ce334e3da66851fc57143639");
                            examAutoEvaluation1.setOption("不按规定上报“民警思想状况分析报告”或未完成队伍建设和工作经验材料的（每少1篇加扣分管领导1分）");
                            examAutoEvaluation1.setOptionId("d3280b7b672749099d8db7503e42a2df");
                            examAutoEvaluation1.setScore("3");
                            examAutoEvaluation1.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));

                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation1,null,"党员队伍思想分析");
                            this.summaryStandard(examAutoEvaluation,3.0,name + year + "年，党员队伍思想分析未按时录入");
                            this.save(examAutoEvaluation1);

                        }
                    }
                }
            }
        }
        else if (StringUtils.isNotBlank(jd) && "04".equals(jd) || "07".equals(jd) || "10".equals(jd)) {
            for (int i = 0; i < zjcList.size(); i++) {
                User user = zjcList.get(i);
                String idNumber = user.getNo();

                //中基层领导所在单位名称
                String unitName = personnelBaseDao.selectUnitName(idNumber);
                //中基层领导所在单位id
                String unitId = personnelBaseDao.selectUnitId(idNumber);
                //单位书记
                String SJName = affairGeneralSituationService.selectSJName(unitName);
                //书记身份证号
                String SJId = userDao.selectUserIdNumber(SJName);
                //非书记名单
                List<String> nameList = affairPartyMemberService.selectNoSJNameList(SJName, unitId);

                Integer threeNumber = affairIdeaAnalysisService.selectNumber(yearL, yearT, idNumber);
                List<String> evId = examAutoEvaluationDao.selectEvId(unitId);
                for (int e = 0; e < evId.size(); e++) {

                    String evI = evId.get(e);
                    if (threeNumber < 1) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("2");
                        examAutoEvaluation.setEvalType("6");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth("");
                        examAutoEvaluation.setDetails(SJName + year + "年" + jd + "季度党员队伍思想分析相关工作未按要求抓好落实的，每次扣公共分2分。");
                        examAutoEvaluation.setName(SJName);
                        examAutoEvaluation.setIdNumber(SJId);

                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("2020年月度对全局中层和基层领导干部考核公共扣分标准 (公安处领导班子成员除外)");
                        examAutoEvaluation.setModelId("d498bf52ce334e3da66851fc57143639");
                        examAutoEvaluation.setOption("不按规定上报“民警思想状况分析报告”或未完成队伍建设和工作经验材料的（每少1篇加扣分管领导1分）");
                        examAutoEvaluation.setOptionId("d3280b7b672749099d8db7503e42a2df");
                        examAutoEvaluation.setScore("3");
                        examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党员队伍思想分析");
                        this.summaryStandard(examAutoEvaluation,3.0,SJName + year + "年，党员队伍思想分析未按时录入");
                        this.save(examAutoEvaluation);

                        for (int n = 0; n < nameList.size(); n++) {
                            String name = nameList.get(n);
                            String idN = userDao.selectUserIdNumber(name);
                            ExamAutoEvaluation examAutoEvaluation1 = new ExamAutoEvaluation();
                            examAutoEvaluation1.setType("2");
                            examAutoEvaluation1.setEvalType("6");
                            examAutoEvaluation1.setPeriod("1");
                            examAutoEvaluation1.setYear(year);
                            examAutoEvaluation1.setMonth("");

                            examAutoEvaluation1.setFromSys("智慧政工");
                            examAutoEvaluation1.setDetails(name + year + "年" + month + "季度党员队伍思想分析相关工作未按要求抓好落实的，每次扣公共分2分。");
                            examAutoEvaluation1.setName(name);
                            examAutoEvaluation1.setIdNumber(idN);
                            examAutoEvaluation1.setAssess("");
                            examAutoEvaluation1.setAssessId("");
                            examAutoEvaluation1.setModel("2020年月度对全局中层和基层领导干部考核公共扣分标准 (公安处领导班子成员除外)");
                            examAutoEvaluation1.setModelId("d498bf52ce334e3da66851fc57143639");
                            examAutoEvaluation1.setOption("不按规定上报“民警思想状况分析报告”或未完成队伍建设和工作经验材料的（每少1篇加扣分管领导1分）");
                            examAutoEvaluation1.setOptionId("d3280b7b672749099d8db7503e42a2df");
                            examAutoEvaluation1.setScore("3");
                            examAutoEvaluation1.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));

                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation1,null,"党员队伍思想分析");
                            this.summaryStandard(examAutoEvaluation,3.0,name + year + "年，党员队伍思想分析未按时录入");
                            this.save(examAutoEvaluation1);

                        }
                    }
                }
            }
        }
    }
    /*
     * 党员队伍思想分析，未按时录入
     *
     * 中基层领导班子考核
     *
     * 年度
     * */
    @Transactional(readOnly = false)
    public void zjcSxfxYear(String year) {

        Integer y = Integer.valueOf(year);
        Integer lastYear = y - 1;
        Map<String, String> timeMap = this.yearTime(year);
        String yearL = timeMap.get("yearL");
        String yearT = timeMap.get("yearT");

        //所有的中基层领导班子身份证
        String juJiGuanRoleId = "13bac520ae4d4160b595384691b443fd";
        String chuJiGuanRoleId = "62cf6aaea0184d3b8cfbce1700ad0e38";
        String suoduiJiGuanRoleId = "ff24c3288860447d867d08d462a2a2b9";

        String[] zhongJiCeng = new String[3];
        zhongJiCeng[0] = chuJiGuanRoleId;
        zhongJiCeng[1] = juJiGuanRoleId;
        zhongJiCeng[2] = suoduiJiGuanRoleId;
        String companyId = "156";
        List<User> zjcList = new ArrayList<>();
        /*Arrays.stream(zhongJiCeng).forEach(s -> {
            ExamWorkflowDefine zhongDefine = new ExamWorkflowDefine();
            zhongDefine.setName(s);
            if (companyId.equals("1")) {
                zhongDefine.getSqlMap().put("dsf", "and u.company_id = '" + companyId + "' and u.office_id not in ('34','95','156')");
            } else {
                zhongDefine.getSqlMap().put("dsf", "and u.company_id = '" + companyId + "'");
            }
            zjcList.addAll(examWorkflowSegmentsDefineService.queryPoliceDatas(zhongDefine));
        });*/

        Arrays.stream(zhongJiCeng).forEach(s -> {
            ExamWorkflowDefine zhongDefine = new ExamWorkflowDefine();
            zhongDefine.setName(s);
            zjcList.addAll(examWorkflowSegmentsDefineService.queryPoliceDatas(zhongDefine));
        });
        for (int i = 0; i < zjcList.size(); i++) {
            User user = zjcList.get(i);
            String idNumber = user.getNo();

            //中基层领导所在单位名称
            String unitName = personnelBaseDao.selectUnitName(idNumber);
            //中基层领导所在单位id
            String unitId = personnelBaseDao.selectUnitId(idNumber);
            //单位书记
            String SJName = affairGeneralSituationService.selectSJName(unitName);
            //书记身份证号
            String SJId = userDao.selectUserIdNumber(SJName);
            //非书记名单
            List<String> nameList = affairPartyMemberService.selectNoSJNameList(SJName, unitId);

            //年度数量
            Integer yearNumber = affairIdeaAnalysisService.selectNumber(yearL,yearT,idNumber);
            List<String> evId = examAutoEvaluationDao.selectEvId(unitId);
            for (int e = 0; e < evId.size(); e++) {

                String evI = evId.get(e);
                if (yearNumber < 12) {
                    int num = 12 - yearNumber;
                    int nu = 2 * num;
                    ExamAutoEvaluation examAutoEvaluation1 = new ExamAutoEvaluation();
                    examAutoEvaluation1.setType("2");
                    examAutoEvaluation1.setEvalType("6");
                    examAutoEvaluation1.setPeriod("2");
                    examAutoEvaluation1.setYear(year);
                    examAutoEvaluation1.setDetails(SJName + year + "年" + "党员队伍思想分析相关工作未按要求抓好落实的，每次扣公共分2分。");
                    examAutoEvaluation1.setName(SJName);
                    examAutoEvaluation1.setIdNumber(SJId);

                    examAutoEvaluation1.setFromSys("智慧政工");
                    examAutoEvaluation1.setAssess("");
                    examAutoEvaluation1.setAssessId("");
                    examAutoEvaluation1.setEvaluationId(SJId);//被考评对象id
                    examAutoEvaluation1.setModel("2020年年度全局中层和基层领导干部考核公共扣分标准(公安处领导班子成员除外)");
                    examAutoEvaluation1.setModelId("c00cebbbc62c48d888316206d38e02c7");
                    examAutoEvaluation1.setOption("不按规定上报“民警思想状况分析报告”或未完成队伍建设和工作经验材料的（每少1篇加扣分管领导1分）");
                    examAutoEvaluation1.setOptionId("c0043249ae6444058bf9209bf6218443");
                    examAutoEvaluation1.setScore(String.valueOf(nu));

                    examAutoEvaluation1.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation1,null,"党员队伍思想分析");
                    this.summaryStandard(examAutoEvaluation1,Double.valueOf(nu),SJName + year + "年，党员队伍思想分析未按时录入");
                    this.save(examAutoEvaluation1);

                    for (int n = 0; n < nameList.size(); n++) {
                        String name = nameList.get(n);
                        String idN = userDao.selectUserIdNumber(name);
                        ExamAutoEvaluation examAutoEvaluation2 = new ExamAutoEvaluation();
                        examAutoEvaluation2.setType("2");
                        examAutoEvaluation2.setEvalType("6");
                        examAutoEvaluation2.setPeriod("2");
                        examAutoEvaluation2.setYear(year);
                        examAutoEvaluation2.setDetails(name + "党员队伍思想分析相关工作未按要求抓好落实的，每次扣公共分2分。");
                        examAutoEvaluation2.setName(name);
                        examAutoEvaluation2.setIdNumber(idN);

                        examAutoEvaluation2.setFromSys("智慧政工");
                        examAutoEvaluation2.setAssess("");
                        examAutoEvaluation2.setAssessId("");
                        examAutoEvaluation2.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));
                        examAutoEvaluation2.setModel("2020年年度全局中层和基层领导干部考核公共扣分标准(公安处领导班子成员除外)");
                        examAutoEvaluation2.setModelId("c00cebbbc62c48d888316206d38e02c7");
                        examAutoEvaluation2.setOption("不按规定上报“民警思想状况分析报告”或未完成队伍建设和工作经验材料的（每少1篇加扣分管领导1分）");
                        examAutoEvaluation2.setOptionId("c0043249ae6444058bf9209bf6218443");
                        examAutoEvaluation2.setScore("1");
                        examAutoEvaluation2.setEvaluationId(evI);

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation2,null,"党员队伍思想分析");
                        this.summaryStandard(examAutoEvaluation2,1.0,name + year + "年，党员队伍思想分析未按时录入");
                        this.save(examAutoEvaluation2);

                    }
                }
            }
        }
    }

    @Transactional(readOnly = false)
    public void ckpcsYsxt(String year) {

        Integer y = Integer.valueOf(year);
        Integer lastYear = y - 1;
        String yearL = lastYear + "-" + "12-02";
        String yearT = year + "-" + "12-01";

        //所有单位名称
        List<String> nameList = affairGeneralSituationService.selectAllName();

        for (int n = 0; n < nameList.size(); n++) {
            String name = nameList.get(n);
            if (name.contains("支队") || name.contains("大队") || name.contains("派出所")) {
                String unitId = affairGeneralSituationService.selectUnitId(name);
                Integer number = affairIdeologyService.selectNumber(yearL,yearT, unitId);
                if (number < 12) {
                    List<String> evId = examAutoEvaluationDao.selectEvId(unitId);
                    for (int e = 0; e < evId.size(); e++) {
                        String evI = evId.get(e);
                        int num = 12 - number;
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("2");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setDetails(name + year + "年" + "意识形态相关工作未按要求抓好落实的，每次扣公共分2分。");
                        examAutoEvaluation.setUnit(name);

                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setUnitId(unitId);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setModelId("");
                        examAutoEvaluation.setEvaluationId(unitId);//被考评对象id
                        examAutoEvaluation.setOption(" ");
                        examAutoEvaluation.setOptionId(" ");
                        examAutoEvaluation.setScore(String.valueOf(num));
                        examAutoEvaluation.setEvaluationId(evI);
                        this.save(examAutoEvaluation);
                    }
                }
            }
        }
    }

    @Transactional(readOnly = false)
    public void jkjWechar(String checkTime) throws ParseException {

        List<Office> officeList = examAutoEvaluationDao.selectJjgUnit();

        String year = checkTime.substring(0, 4);
        Integer y = Integer.valueOf(year);
        String month = checkTime.substring(checkTime.length() - 2);
        Integer m = Integer.valueOf(month);
        Integer lastMonth = m - 1;
        Integer lastYear = y - 1;
        String yearL = null;
        if (m == 1){
            yearL = lastYear + "-12-26";
        }else {
            yearL = year + "-" + lastMonth + "-26";
        }
        String yearT = year + "-" + month +  "-25";

        for (int i = 0; i < officeList.size(); i++) {

            /*
             * 报警月度
             * */
            Office office = officeList.get(i);
            String name = office.getName();
            String idNum = office.getId();
            String code = office.getCode();

            /*
            * 接警月度
            * */
            List<String> un = examAutoEvaluationDao.selectUnitIdById(idNum);
            List<TPoliceMessage> tPoliceMessageList = tPoliceMessageService.selectAllList(yearL,yearT);

            for (int tp = 0; tp < tPoliceMessageList.size(); tp++) {


                TPoliceMessage tPoliceMessage = new TPoliceMessage();
                tPoliceMessage = tPoliceMessageList.get(tp);


                String unit = personnelBaseDao.selectUnit(tPoliceMessage.getProcessPeople());
                if (StringUtils.isNotBlank(unit)) {
                        if (unit.equals(name)) {
                            DateFormat format = new SimpleDateFormat("yyyyMMddHHmmssSSS");
                            Date sdate = format.parse(tPoliceMessage.getCreateTime());
                            Date edate = format.parse(tPoliceMessage.getProcessTime());
                            Calendar c1 = Calendar.getInstance();
                            Calendar c2 = Calendar.getInstance();

                            c1.setTime(sdate);
                            c2.setTime(edate);


                            int i1 = c2.get(Calendar.MINUTE);

                            int i2 = c1.get(Calendar.MINUTE);

                            int timeL = i2 - i1;

                            if (timeL > 5) {
                                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                examAutoEvaluation.setType("1");
                                examAutoEvaluation.setEvalType("2");
                                examAutoEvaluation.setPeriod("1");
                                examAutoEvaluation.setYear(year);
                                examAutoEvaluation.setMonth(month);
                                examAutoEvaluation.setDetails(tPoliceMessage.getProcessOrganization() + "微信报警接警不及时、处警不及时的，扣3");
                                examAutoEvaluation.setUnit(tPoliceMessage.getProcessOrganization());
                                examAutoEvaluation.setUnitId("");
                                examAutoEvaluation.setAssess("");
                                examAutoEvaluation.setFromSys("微信报警");
                                examAutoEvaluation.setAssessId("");
                                examAutoEvaluation.setModel("2020年公安局对局机关各处室直属支队月度绩效考核扣分标准");
                                examAutoEvaluation.setModelId("abc515db7d16435f8a90705cabcc75bb");
                                examAutoEvaluation.setOption("微信报警接警不及时、处警不及时的");
                                examAutoEvaluation.setOptionId("cc53211e9c2a430089126e9130a68b68");
                                examAutoEvaluation.setScore("3");

                                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"微信报警");
                                examAutoEvaluation.setEvaluationId(userDao.selectUserId(office.getCode()));
                                this.save(examAutoEvaluation);

                        }
                    }
                }
            }

            /*
             * 出警月度
             * */
            List<TFeedback> tFeedbackList = new ArrayList<>();
            for (int u = 0; u < un.size(); u++) {
                String u1 = un.get(u);
                tFeedbackList = tFeedbackService.selectAll(checkTime, u1);

                for (int tf = 0; tf < tFeedbackList.size(); tf++) {

                    TFeedback tFeedback = tFeedbackList.get(tf);

                    //创建时间
                    Date createTime = tFeedback.getCreateTime();

                    long create = createTime.getTime();

                    //出警时间
                    Date processTime = tFeedback.getToPoliceTime();

                    long process = processTime.getTime();

                    //创建时间和受理时间的间隔
                    long hour = process - create;

                    if (1 < hour && hour < 1.5) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("2");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);

                        examAutoEvaluation.setFromSys("微信报警");
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails(tFeedback.getToPoliceOrganization() + "微信报警接警不及时、处警不及时的，扣3");
                        examAutoEvaluation.setUnit(tFeedback.getToPoliceOrganization());
                        examAutoEvaluation.setUnitId("");
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("2020年公安局对局机关各处室直属支队月度绩效考核扣分标准");
                        examAutoEvaluation.setModelId("abc515db7d16435f8a90705cabcc75bb");
                        examAutoEvaluation.setOption("微信报警接警不及时、处警不及时的");
                        examAutoEvaluation.setOptionId("cc53211e9c2a430089126e9130a68b68");
                        examAutoEvaluation.setScore("3");

                        examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));
                        this.save(examAutoEvaluation);
                    } else if (hour > 1.5) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("2");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails("微信报警接警不及时、处警不及时的，扣3");

                        examAutoEvaluation.setFromSys("微信报警");
                        examAutoEvaluation.setUnit(""/* 处 */);
                        examAutoEvaluation.setUnitId("");
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("2020年公安局对局机关各处室直属支队月度绩效考核扣分标准");
                        examAutoEvaluation.setModelId("abc515db7d16435f8a90705cabcc75bb");
                        examAutoEvaluation.setOption("微信报警接警不及时、处警不及时的");
                        examAutoEvaluation.setOptionId("cc53211e9c2a430089126e9130a68b68");
                        examAutoEvaluation.setScore("5");

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"微信报警");
                        examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));
                        this.save(examAutoEvaluation);
                    }
                }

            }

        }

    }

    @Transactional(readOnly = false)
    public void jkjWecharYear(String year) throws ParseException {

        List<Office> jjgPartyList = examAutoEvaluationDao.selectJjgUnit();


        Integer m = Integer.valueOf(year);
        Integer lastYear = m - 1;
        String yearL = lastYear + "-" + "12-02";
        String yearT = year + "-" +"12-01";
        for (int n = 0; n < jjgPartyList.size(); n++) {
            Office office = jjgPartyList.get(n);
            String name = office.getName();
            String idNum = office.getId();
            String code = office.getCode();
            /*
             * 报警年度
             * */
            List<TPoliceMessage> tPoliceMessageYearList = new ArrayList<>();
            tPoliceMessageYearList = tPoliceMessageService.selectAllList(yearL,yearT);
            List<String> un = examAutoEvaluationDao.selectUnitIdById(idNum);

            for (int tp = 0; tp < tPoliceMessageYearList.size(); tp++) {

                TPoliceMessage tPoliceMessage = tPoliceMessageYearList.get(tp);
                if (StringUtils.isNotBlank(tPoliceMessage.getProcessPeople())) {
                    String unit = personnelBaseDao.selectUnit(tPoliceMessage.getProcessPeople());
                    for (int u = 0; u < un.size(); u++) {
                        String una = un.get(u);
                        if (StringUtils.isNotBlank(una) && StringUtils.isNotBlank(unit)) {

                            if (unit.equals(una)) {
                                DateFormat format = new SimpleDateFormat("yyyyMMddHHmmssSSS");
                                Date sdate = format.parse(tPoliceMessage.getCreateTime());
                                Date edate = format.parse(tPoliceMessage.getProcessTime());
                                Calendar c1 = Calendar.getInstance();
                                Calendar c2 = Calendar.getInstance();

                                c1.setTime(sdate);
                                c2.setTime(edate);


                                int i1 = c2.get(Calendar.MINUTE);

                                int i2 = c1.get(Calendar.MINUTE);

                                int timeL = i2 - i1;

                                if (timeL > 5) {
                                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                    examAutoEvaluation.setType("1");
                                    examAutoEvaluation.setEvalType("2");
                                    examAutoEvaluation.setPeriod("2");
                                    examAutoEvaluation.setYear(year);
                                    examAutoEvaluation.setDetails(tPoliceMessage.getProcessOrganization() + "微信报警接警不及时、处警不及时的，扣1");
                                    examAutoEvaluation.setUnit(tPoliceMessage.getProcessOrganization());

                                    examAutoEvaluation.setFromSys("微信报警");
                                    examAutoEvaluation.setUnitId("");
                                    examAutoEvaluation.setAssess("");
                                    examAutoEvaluation.setAssessId("");
                                    examAutoEvaluation.setModel("2020年公安局对局机关各处室直属支队年度绩效考核扣分标准");
                                    examAutoEvaluation.setModelId("db6adcddf3ec4015bd11e542fe6ce985");
                                    examAutoEvaluation.setOption("微信报警接警不及时、处警不及时的");
                                    examAutoEvaluation.setOptionId("a5426893a3d94ecf925d3c4b41083369");
                                    examAutoEvaluation.setScore("1");

                                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"微信报警");
                                    examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));
                                    this.save(examAutoEvaluation);
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    @Transactional(readOnly = false)
    public void ckcWechar(String checkTime) throws ParseException {

        List<Office> nncPartyList = officeDao.getChuUnit("34", "1");
        List<Office> lzcPartyList = officeDao.getChuUnit("95", "1");
        List<Office> bhcPartyList = officeDao.getChuUnit("156", "1");

        String year = checkTime.substring(0, 4);
        Integer y = Integer.valueOf(year);
        String month = checkTime.substring(checkTime.length() - 2);
        Integer m = Integer.valueOf(month);
        Integer lastMonth = m - 1;
        Integer lastYear = y - 1;
        String yearL = null;
        if (m == 1){
            yearL = lastYear + "-12-26";
        }else {
            yearL = year + "-" + lastMonth + "-26";
        }
        String yearT = year + "-" + month +  "-25";

        for (int i = 0; i < nncPartyList.size(); i++) {
            Office office = nncPartyList.get(i);
            String id = office.getId();
            String name = office.getName();
            String code = office.getCode();
            /*
             * 报警月度
             * */
            List<TPoliceMessage> tPoliceMessageList = new ArrayList<>();
            tPoliceMessageList = tPoliceMessageService.selectAllList(yearL,yearT);

            for (int tp = 0; tp < tPoliceMessageList.size(); tp++) {

                TPoliceMessage tPoliceMessage = new TPoliceMessage();
                tPoliceMessage = tPoliceMessageList.get(tp);
                if (StringUtils.isNotBlank(tPoliceMessage.getProcessPeople())) {
                    String unit = personnelBaseDao.selectUnit(tPoliceMessage.getProcessPeople());
                    if (StringUtils.isNotBlank(unit)) {
                        List<String> list = examAutoEvaluationDao.selectUnitIdById(id);
                        for (int u = 0; u < list.size(); u++) {

                            String unm = list.get(u);

                            if (unit.equals(unm)) {
                                DateFormat format = new SimpleDateFormat("yyyyMMddHHmmssSSS");
                                Date sdate = format.parse(tPoliceMessage.getCreateTime());
                                Date edate = format.parse(tPoliceMessage.getProcessTime());
                                Calendar c1 = Calendar.getInstance();
                                Calendar c2 = Calendar.getInstance();

                                c1.setTime(sdate);
                                c2.setTime(edate);


                                int i1 = c2.get(Calendar.MINUTE);

                                int i2 = c1.get(Calendar.MINUTE);

                                int timeL = i2 - i1;

                                if (timeL > 5) {
                                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                    examAutoEvaluation.setType("1");
                                    examAutoEvaluation.setEvalType("4");
                                    examAutoEvaluation.setPeriod("1");
                                    examAutoEvaluation.setYear(year);

                                    examAutoEvaluation.setFromSys("微信报警");
                                    examAutoEvaluation.setMonth(month);
                                    examAutoEvaluation.setDetails(tPoliceMessage.getProcessOrganization() + "微信报警接警不及时、处警不及时的，扣4");
                                    examAutoEvaluation.setUnit(tPoliceMessage.getProcessOrganization());
                                    examAutoEvaluation.setUnitId("");
                                    examAutoEvaluation.setAssess("");
                                    examAutoEvaluation.setAssessId("");
                                    examAutoEvaluation.setModel("2020年月度南宁处对指挥中心扣分标准");
                                    examAutoEvaluation.setModelId("cf016c6f08ac44d299bc0798a5ffef67");
                                    examAutoEvaluation.setOption("微信报警接警不及时、处警不及时的");
                                    examAutoEvaluation.setOptionId("dd1612deaae149d1a38c5416b570c126");
                                    examAutoEvaluation.setScore("4");
                                    examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));
                                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","微信报警");
                                    this.save(examAutoEvaluation);
                                }
                            }
                        }
                    }
                }
            }
        }
        for (int n = 0; n < nncPartyList.size(); n++) {
            /*
             * 出警月度
             * */
            List<TFeedback> tFeedbackList = new ArrayList<>();
            Office office = nncPartyList.get(n);
            String unitId = office.getId();
            String name = office.getName();
            String code = office.getCode();
            List<String> unitN = examAutoEvaluationDao.selectUnitIdById(unitId);

            for (int un = 0; un < unitN.size(); un++) {
                String unn = unitN.get(un);
                tFeedbackList = tFeedbackService.selectAll(checkTime, unn);

                for (int tf = 0; tf < tFeedbackList.size(); tf++) {

                    TFeedback tFeedback = tFeedbackList.get(tf);

                    //创建时间
                    Date createTime = tFeedback.getCreateTime();

                    long create = createTime.getTime();

                    //出警时间
                    Date processTime = tFeedback.getToPoliceTime();

                    long process = processTime.getTime();

                    //创建时间和受理时间的间隔
                    long hour = process - create;

                    if (1 < hour && hour < 1.5) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("4");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails(tFeedback.getToPoliceOrganization() + "微信报警接警不及时、处警不及时的，扣4");
                        examAutoEvaluation.setUnit(tFeedback.getToPoliceOrganization());
                        examAutoEvaluation.setUnitId("");
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");

                        examAutoEvaluation.setFromSys("微信报警");
                        examAutoEvaluation.setModel("2020年月度南宁处对指挥中心扣分标准");
                        examAutoEvaluation.setModelId("cf016c6f08ac44d299bc0798a5ffef67");
                        examAutoEvaluation.setOption("微信报警接警不及时、处警不及时的");
                        examAutoEvaluation.setOptionId("dd1612deaae149d1a38c5416b570c126");
                        examAutoEvaluation.setScore("4");
                        examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","微信报警");
                        this.save(examAutoEvaluation);
                    } else if (hour > 1.5) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("4");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);

                        examAutoEvaluation.setFromSys("微信报警");
                        examAutoEvaluation.setDetails("微信报警接警不及时、处警不及时的，扣3");
                        examAutoEvaluation.setUnit(""/* 处 */);
                        examAutoEvaluation.setUnitId("");
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("2020年月度南宁处对指挥中心扣分标准");
                        examAutoEvaluation.setModelId("cf016c6f08ac44d299bc0798a5ffef67");
                        examAutoEvaluation.setOption("微信报警接警不及时、处警不及时的");
                        examAutoEvaluation.setOptionId("dd1612deaae149d1a38c5416b570c126");
                        examAutoEvaluation.setScore("3");

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","微信报警");
                        examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));
                        this.save(examAutoEvaluation);
                    }
                }
            }
        }
        for (int n = 0; n < nncPartyList.size(); n++) {

            Office office = nncPartyList.get(n);
            String name = office.getName();
            String code = office.getCode();
            List<TFeedback> tFeedbackYearList = new ArrayList<>();
            tFeedbackYearList = tFeedbackService.selectAll(year,name);

                tFeedbackYearList = tFeedbackService.selectAll(checkTime, name);

                for (int tf = 0; tf < tFeedbackYearList.size(); tf++) {

                    TFeedback tFeedback = tFeedbackYearList.get(tf);

                    //创建时间
                    Date createTime = tFeedback.getCreateTime();

                    long create = createTime.getTime();

                    //出警时间
                    Date processTime = tFeedback.getToPoliceTime();

                    long process = processTime.getTime();

                    //创建时间和受理时间的间隔
                    long hour = process - create;

                    if (1 < hour && hour < 1.5) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("4");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails(tFeedback.getToPoliceOrganization() + "微信报警接警不及时、处警不及时的，扣4");
                        examAutoEvaluation.setUnit(tFeedback.getToPoliceOrganization());

                        examAutoEvaluation.setFromSys("微信报警");
                        examAutoEvaluation.setUnitId("");
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("2020年月度南宁处对指挥中心扣分标准");
                        examAutoEvaluation.setModelId("cf016c6f08ac44d299bc0798a5ffef67");
                        examAutoEvaluation.setOption("微信报警接警不及时、处警不及时的");
                        examAutoEvaluation.setOptionId("dd1612deaae149d1a38c5416b570c126");
                        examAutoEvaluation.setScore("4");
                        examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","微信报警");
                        this.save(examAutoEvaluation);
                    } else if (hour > 1.5) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("4");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);

                        examAutoEvaluation.setFromSys("微信报警");
                        examAutoEvaluation.setDetails("微信报警接警不及时、处警不及时的，扣4");
                        examAutoEvaluation.setUnit(""/* 处 */);
                        examAutoEvaluation.setUnitId("");
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("2020年月度南宁处对指挥中心扣分标准");
                        examAutoEvaluation.setModelId("cf016c6f08ac44d299bc0798a5ffef67");
                        examAutoEvaluation.setOption("微信报警接警不及时、处警不及时的");
                        examAutoEvaluation.setOptionId("dd1612deaae149d1a38c5416b570c126");
                        examAutoEvaluation.setScore("4");

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","微信报警");
                        examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));
                        this.save(examAutoEvaluation);

                }
            }
        }

        for (int i = 0; i < lzcPartyList.size(); i++) {
            Office office = lzcPartyList.get(i);
            String id = office.getId();
            String code = office.getCode();
            /*
             * 报警月度
             * */
            List<TPoliceMessage> tPoliceMessageList = new ArrayList<>();
            tPoliceMessageList = tPoliceMessageService.selectAllList(yearL,yearT);

            for (int tp = 0; tp < tPoliceMessageList.size(); tp++) {

                TPoliceMessage tPoliceMessage = new TPoliceMessage();
                tPoliceMessage = tPoliceMessageList.get(tp);
                if (StringUtils.isNotBlank(tPoliceMessage.getProcessPeople())) {
                    String unit = personnelBaseDao.selectUnit(tPoliceMessage.getProcessPeople());
                    if (StringUtils.isNotBlank(unit)) {
                        List<String> list = examAutoEvaluationDao.selectUnitIdById(id);
                        for (int u = 0; u < list.size(); u++) {

                            String unm = list.get(u);

                            if (unit.equals(unm)) {
                                DateFormat format = new SimpleDateFormat("yyyyMMddHHmmssSSS");
                                Date sdate = format.parse(tPoliceMessage.getCreateTime());
                                Date edate = format.parse(tPoliceMessage.getProcessTime());
                                Calendar c1 = Calendar.getInstance();
                                Calendar c2 = Calendar.getInstance();

                                c1.setTime(sdate);
                                c2.setTime(edate);


                                int i1 = c2.get(Calendar.MINUTE);

                                int i2 = c1.get(Calendar.MINUTE);

                                int timeL = i2 - i1;

                                if (timeL > 5) {
                                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                    examAutoEvaluation.setType("1");
                                    examAutoEvaluation.setEvalType("4");
                                    examAutoEvaluation.setPeriod("1");
                                    examAutoEvaluation.setYear(year);

                                    examAutoEvaluation.setFromSys("微信报警");
                                    examAutoEvaluation.setMonth(month);
                                    examAutoEvaluation.setDetails(tPoliceMessage.getProcessOrganization() + "微信报警接警不及时、处警不及时的，扣4");
                                    examAutoEvaluation.setUnit(tPoliceMessage.getProcessOrganization());
                                    examAutoEvaluation.setUnitId("");
                                    examAutoEvaluation.setAssess("");
                                    examAutoEvaluation.setAssessId("");
                                    examAutoEvaluation.setModel("柳州处对指挥中心月度绩效考核评分标准（业务部分）");
                                    examAutoEvaluation.setModelId("75062fb8c81c490f8fd3f3aabdc3a0fa");
                                    examAutoEvaluation.setOption("微信报警接警不及时、处警不及时的");
                                    examAutoEvaluation.setOptionId("892e1b0ead6d41f6b22036333ab31401");
                                    examAutoEvaluation.setScore("4");
                                    examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));
                                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","微信报警");
                                    this.save(examAutoEvaluation);
                                }
                            }
                        }
                    }
                }
            }
        }
        for (int n = 0; n < lzcPartyList.size(); n++) {
            /*
             * 出警月度
             * */
            List<TFeedback> tFeedbackList = new ArrayList<>();
            Office office = lzcPartyList.get(n);
            String unitId = office.getId();
            String name = office.getName();
            String code = office.getCode();

                tFeedbackList = tFeedbackService.selectAll(checkTime, name);

                for (int tf = 0; tf < tFeedbackList.size(); tf++) {

                    TFeedback tFeedback = tFeedbackList.get(tf);

                    //创建时间
                    Date createTime = tFeedback.getCreateTime();

                    long create = createTime.getTime();

                    //出警时间
                    Date processTime = tFeedback.getToPoliceTime();

                    long process = processTime.getTime();

                    //创建时间和受理时间的间隔
                    long hour = process - create;

                    if (1 < hour && hour < 1.5) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("4");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails(tFeedback.getToPoliceOrganization() + "微信报警接警不及时、处警不及时的，扣4");
                        examAutoEvaluation.setUnit(tFeedback.getToPoliceOrganization());
                        examAutoEvaluation.setUnitId("");
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");

                        examAutoEvaluation.setFromSys("微信报警");
                        examAutoEvaluation.setModel("柳州处对指挥中心月度绩效考核评分标准（业务部分）");
                        examAutoEvaluation.setModelId("75062fb8c81c490f8fd3f3aabdc3a0fa");
                        examAutoEvaluation.setOption("微信报警接警不及时、处警不及时的");
                        examAutoEvaluation.setOptionId("892e1b0ead6d41f6b22036333ab31401");
                        examAutoEvaluation.setScore("4");

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","微信报警");
                        examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));
                        this.save(examAutoEvaluation);
                    } else if (hour > 1.5) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("4");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);

                        examAutoEvaluation.setFromSys("微信报警");
                        examAutoEvaluation.setDetails("微信报警接警不及时、处警不及时的，扣3");
                        examAutoEvaluation.setUnit(""/* 处 */);
                        examAutoEvaluation.setUnitId("");
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("柳州处对指挥中心月度绩效考核评分标准（业务部分）");
                        examAutoEvaluation.setModelId("75062fb8c81c490f8fd3f3aabdc3a0fa");
                        examAutoEvaluation.setOption("微信报警接警不及时、处警不及时的");
                        examAutoEvaluation.setOptionId("892e1b0ead6d41f6b22036333ab31401");
                        examAutoEvaluation.setScore("3");

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","微信报警");
                        examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));
                        this.save(examAutoEvaluation);

                }
            }
        }
        for (int n = 0; n < lzcPartyList.size(); n++) {

            Office office = lzcPartyList.get(n);
            String name = office.getName();
            String code = office.getCode();
            List<TFeedback> tFeedbackYearList = new ArrayList<>();
            tFeedbackYearList = tFeedbackService.selectAll(year,name);

                tFeedbackYearList = tFeedbackService.selectAll(checkTime, name);

                for (int tf = 0; tf < tFeedbackYearList.size(); tf++) {

                    TFeedback tFeedback = tFeedbackYearList.get(tf);

                    //创建时间
                    Date createTime = tFeedback.getCreateTime();

                    long create = createTime.getTime();

                    //出警时间
                    Date processTime = tFeedback.getToPoliceTime();

                    long process = processTime.getTime();

                    //创建时间和受理时间的间隔
                    long hour = process - create;

                    if (1 < hour && hour < 1.5) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("4");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails(tFeedback.getToPoliceOrganization() + "微信报警接警不及时、处警不及时的，扣4");
                        examAutoEvaluation.setUnit(tFeedback.getToPoliceOrganization());

                        examAutoEvaluation.setFromSys("微信报警");
                        examAutoEvaluation.setUnitId("");
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("柳州处对指挥中心月度绩效考核评分标准（业务部分）");
                        examAutoEvaluation.setModelId("75062fb8c81c490f8fd3f3aabdc3a0fa");
                        examAutoEvaluation.setOption("微信报警接警不及时、处警不及时的");
                        examAutoEvaluation.setOptionId("892e1b0ead6d41f6b22036333ab31401");
                        examAutoEvaluation.setScore("4");
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","微信报警");
                        examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));
                     this.save(examAutoEvaluation);
                    } else if (hour > 1.5) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("2");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);

                        examAutoEvaluation.setFromSys("微信报警");
                        examAutoEvaluation.setDetails("微信报警接警不及时、处警不及时的，扣4");
                        examAutoEvaluation.setUnit(""/* 处 */);
                        examAutoEvaluation.setUnitId("");
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("柳州处对指挥中心月度绩效考核评分标准（业务部分）");
                        examAutoEvaluation.setModelId("75062fb8c81c490f8fd3f3aabdc3a0fa");
                        examAutoEvaluation.setOption("微信报警接警不及时、处警不及时的");
                        examAutoEvaluation.setOptionId("892e1b0ead6d41f6b22036333ab31401");
                        examAutoEvaluation.setScore("4");

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","微信报警");
                        examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));
                        this.save(examAutoEvaluation);

                }
            }
        }

        for (int i = 0; i < bhcPartyList.size(); i++) {
            Office office = bhcPartyList.get(i);
            String id = office.getId();
            String name = office.getName();
            String code = office.getCode();
            /*
             * 报警月度
             * */
            List<TPoliceMessage> tPoliceMessageList = new ArrayList<>();
            tPoliceMessageList = tPoliceMessageService.selectAllList(yearL,yearT);

            for (int tp = 0; tp < tPoliceMessageList.size(); tp++) {

                TPoliceMessage tPoliceMessage = new TPoliceMessage();
                tPoliceMessage = tPoliceMessageList.get(tp);
                if (StringUtils.isNotBlank(tPoliceMessage.getProcessPeople())) {
                    String unit = personnelBaseDao.selectUnit(tPoliceMessage.getProcessPeople());
                    if (StringUtils.isNotBlank(unit)) {

                            if (unit.equals(name)) {
                                DateFormat format = new SimpleDateFormat("yyyyMMddHHmmssSSS");
                                Date sdate = format.parse(tPoliceMessage.getCreateTime());
                                Date edate = format.parse(tPoliceMessage.getProcessTime());
                                Calendar c1 = Calendar.getInstance();
                                Calendar c2 = Calendar.getInstance();

                                c1.setTime(sdate);
                                c2.setTime(edate);


                                int i1 = c2.get(Calendar.MINUTE);

                                int i2 = c1.get(Calendar.MINUTE);

                                int timeL = i2 - i1;

                                if (timeL > 5) {
                                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                    examAutoEvaluation.setType("1");
                                    examAutoEvaluation.setEvalType("4");
                                    examAutoEvaluation.setPeriod("1");
                                    examAutoEvaluation.setYear(year);

                                    examAutoEvaluation.setFromSys("微信报警");
                                    examAutoEvaluation.setMonth(month);
                                    examAutoEvaluation.setDetails(tPoliceMessage.getProcessOrganization() + "微信报警接警不及时、处警不及时的，扣4");
                                    examAutoEvaluation.setUnit(tPoliceMessage.getProcessOrganization());
                                    examAutoEvaluation.setUnitId("");
                                    examAutoEvaluation.setAssess("");
                                    examAutoEvaluation.setAssessId("");
                                    examAutoEvaluation.setModel("2020年月度北海处对指挥中心扣分标准");
                                    examAutoEvaluation.setModelId("6ccf6ccf763647c8920c6ffed912b48b");
                                    examAutoEvaluation.setOption("微信报警接警不及时、处警不及时的");
                                    examAutoEvaluation.setOptionId("e6a56fdec6fc4562832850ebddccc11d");
                                    examAutoEvaluation.setScore("4");
                                    examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));
                                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","微信报警");
                                    this.save(examAutoEvaluation);

                            }
                        }
                    }
                }
            }
        }
        for (int n = 0; n < bhcPartyList.size(); n++) {
            /*
             * 出警月度
             * */
            List<TFeedback> tFeedbackList = new ArrayList<>();
            Office office = bhcPartyList.get(n);
            String unitId = office.getId();
            String name = office.getName();
            String code = office.getCode();

                tFeedbackList = tFeedbackService.selectAll(checkTime, name);

                for (int tf = 0; tf < tFeedbackList.size(); tf++) {

                    TFeedback tFeedback = tFeedbackList.get(tf);

                    //创建时间
                    Date createTime = tFeedback.getCreateTime();

                    long create = createTime.getTime();

                    //出警时间
                    Date processTime = tFeedback.getToPoliceTime();

                    long process = processTime.getTime();

                    //创建时间和受理时间的间隔
                    long hour = process - create;

                    if (1 < hour && hour < 1.5) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("4");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails(tFeedback.getToPoliceOrganization() + "微信报警接警不及时、处警不及时的，扣4");
                        examAutoEvaluation.setUnit(tFeedback.getToPoliceOrganization());
                        examAutoEvaluation.setUnitId("");
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");

                        examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));
                        examAutoEvaluation.setFromSys("微信报警");
                        examAutoEvaluation.setModel("2020年月度北海处对指挥中心扣分标准");
                        examAutoEvaluation.setModelId("6ccf6ccf763647c8920c6ffed912b48b");
                        examAutoEvaluation.setOption("微信报警接警不及时、处警不及时的");
                        examAutoEvaluation.setOptionId("e6a56fdec6fc4562832850ebddccc11d");
                        examAutoEvaluation.setScore("4");

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","微信报警");
                        this.save(examAutoEvaluation);
                    } else if (hour > 1.5) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("2");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);

                        examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));
                        examAutoEvaluation.setFromSys("微信报警");
                        examAutoEvaluation.setDetails("微信报警接警不及时、处警不及时的，扣3");
                        examAutoEvaluation.setUnit(""/* 处 */);
                        examAutoEvaluation.setUnitId("");
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("2020年月度北海处对指挥中心扣分标准");
                        examAutoEvaluation.setModelId("6ccf6ccf763647c8920c6ffed912b48b");
                        examAutoEvaluation.setOption("微信报警接警不及时、处警不及时的");
                        examAutoEvaluation.setOptionId("e6a56fdec6fc4562832850ebddccc11d");
                        examAutoEvaluation.setScore("3");

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","微信报警");
                        this.save(examAutoEvaluation);

                }
            }
        }
        for (int n = 0; n < bhcPartyList.size(); n++) {

            Office office = bhcPartyList.get(n);
            String name = office.getName();
            String code = office.getCode();
            List<TFeedback> tFeedbackYearList = new ArrayList<>();
            tFeedbackYearList = tFeedbackService.selectAll(year,name);
            String unitId = affairGeneralSituationService.selectUnitId(name);

                tFeedbackYearList = tFeedbackService.selectAll(checkTime, name);

                for (int tf = 0; tf < tFeedbackYearList.size(); tf++) {

                    TFeedback tFeedback = tFeedbackYearList.get(tf);

                    //创建时间
                    Date createTime = tFeedback.getCreateTime();

                    long create = createTime.getTime();

                    //出警时间
                    Date processTime = tFeedback.getToPoliceTime();

                    long process = processTime.getTime();

                    //创建时间和受理时间的间隔
                    long hour = process - create;

                    if (1 < hour && hour < 1.5) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("4");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails(tFeedback.getToPoliceOrganization() + "微信报警接警不及时、处警不及时的，扣4");
                        examAutoEvaluation.setUnit(tFeedback.getToPoliceOrganization());

                        examAutoEvaluation.setFromSys("微信报警");
                        examAutoEvaluation.setUnitId("");
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("2020年月度北海处对指挥中心扣分标准");
                        examAutoEvaluation.setModelId("6ccf6ccf763647c8920c6ffed912b48b");
                        examAutoEvaluation.setOption("微信报警接警不及时、处警不及时的");
                        examAutoEvaluation.setOptionId("e6a56fdec6fc4562832850ebddccc11d");
                        examAutoEvaluation.setScore("4");

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","微信报警");
                        examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));
                        this.save(examAutoEvaluation);
                    } else if (hour > 1.5) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("2");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);

                        examAutoEvaluation.setFromSys("微信报警");
                        examAutoEvaluation.setDetails("微信报警接警不及时、处警不及时的，扣4");
                        examAutoEvaluation.setUnit("");
                        examAutoEvaluation.setUnitId("");
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("2020年月度北海处对指挥中心扣分标准");
                        examAutoEvaluation.setModelId("6ccf6ccf763647c8920c6ffed912b48b");
                        examAutoEvaluation.setOption("微信报警接警不及时、处警不及时的");
                        examAutoEvaluation.setOptionId("e6a56fdec6fc4562832850ebddccc11d");
                        examAutoEvaluation.setScore("4");

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","微信报警");
                        examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));
                        this.save(examAutoEvaluation);

                }
            }
        }
    }

    @Transactional(readOnly = false)
    public void ckcWecharYear(String year) throws ParseException {

        List<Office> nncPartyList = officeDao.getChuUnit("34", "1");
        List<Office> lzcPartyList = officeDao.getChuUnit("95", "1");
        List<Office> bhcPartyList = officeDao.getChuUnit("156", "1");

        Integer m = Integer.valueOf(year);
        Integer lastYear = m - 1;
        String yearL = lastYear + "-" + "12-02";
        String yearT = year + "-" +"12-01";

        for (int n = 0; n < nncPartyList.size(); n++) {

            Office office = nncPartyList.get(n);
            String id = office.getId();
            String name = office.getName();
            String code = office.getCode();
            /*
             * 报警年度
             * */
            List<TPoliceMessage> tPoliceMessageYearList = new ArrayList<>();
            tPoliceMessageYearList = tPoliceMessageService.selectAllList(yearL,yearT);

            for (int tp = 0; tp < tPoliceMessageYearList.size(); tp++) {

                TPoliceMessage tPoliceMessage = tPoliceMessageYearList.get(tp);

                    if (StringUtils.isNotBlank(tPoliceMessage.getProcessPeople())) {
                        String unit = personnelBaseDao.selectUnit(tPoliceMessage.getProcessPeople());
                        if (StringUtils.isNotBlank(unit)) {
                            if (unit.equals(name)) {
                                DateFormat format = new SimpleDateFormat("yyyyMMddHHmmssSSS");
                                Date sdate = format.parse(tPoliceMessage.getCreateTime());
                                Date edate = format.parse(tPoliceMessage.getProcessTime());
                                Calendar c1 = Calendar.getInstance();
                                Calendar c2 = Calendar.getInstance();

                                c1.setTime(sdate);
                                c2.setTime(edate);


                                int i1 = c2.get(Calendar.MINUTE);

                                int i2 = c1.get(Calendar.MINUTE);

                                int timeL = i2 - i1;

                                if (timeL > 5) {
                                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                    examAutoEvaluation.setType("1");
                                    examAutoEvaluation.setEvalType("4");
                                    examAutoEvaluation.setPeriod("2");
                                    examAutoEvaluation.setYear(year);
                                    examAutoEvaluation.setDetails(tPoliceMessage.getProcessOrganization() + "微信报警接警不及时、处警不及时的，扣2");
                                    examAutoEvaluation.setUnit(tPoliceMessage.getProcessOrganization());
                                    examAutoEvaluation.setUnitId("");
                                    examAutoEvaluation.setAssess("");
                                    examAutoEvaluation.setAssessId("");
                                    examAutoEvaluation.setFromSys("微信报警");
                                    examAutoEvaluation.setModel("2020年年度南宁处对各单位（部门）绩效考核扣分标准(队伍建设)");
                                    examAutoEvaluation.setModelId("13ea683844d644cb8aa15e00fb07f825");
                                    examAutoEvaluation.setOption("微信报警接警不及时、处警不及时的");
                                    examAutoEvaluation.setOptionId("a013e0d0f29a4bb2b22b1d22d5d74270");
                                    examAutoEvaluation.setScore("2");
                                    examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));
                                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","微信报警");
                                    this.save(examAutoEvaluation);

                            }
                        }
                    }
                }
            }
        }
        for (int n = 0; n < lzcPartyList.size(); n++) {

            Office office = nncPartyList.get(n);
            String id = office.getId();
            String name = office.getName();
            String code = office.getCode();
            /*
             * 报警年度
             * */
            List<TPoliceMessage> tPoliceMessageYearList = new ArrayList<>();
            tPoliceMessageYearList = tPoliceMessageService.selectAllList(yearL,yearT);

            for (int tp = 0; tp < tPoliceMessageYearList.size(); tp++) {

                TPoliceMessage tPoliceMessage = tPoliceMessageYearList.get(tp);

                    if (StringUtils.isNotBlank(tPoliceMessage.getProcessPeople())) {
                        String unit = personnelBaseDao.selectUnit(tPoliceMessage.getProcessPeople());
                        if (StringUtils.isNotBlank(unit)) {
                            if (unit.equals(name)) {
                                DateFormat format = new SimpleDateFormat("yyyyMMddHHmmssSSS");
                                Date sdate = format.parse(tPoliceMessage.getCreateTime());
                                Date edate = format.parse(tPoliceMessage.getProcessTime());
                                Calendar c1 = Calendar.getInstance();
                                Calendar c2 = Calendar.getInstance();

                                c1.setTime(sdate);
                                c2.setTime(edate);


                                int i1 = c2.get(Calendar.MINUTE);

                                int i2 = c1.get(Calendar.MINUTE);

                                int timeL = i2 - i1;

                                if (timeL > 5) {
                                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                    examAutoEvaluation.setType("1");
                                    examAutoEvaluation.setEvalType("4");
                                    examAutoEvaluation.setPeriod("2");
                                    examAutoEvaluation.setYear(year);
                                    examAutoEvaluation.setDetails(tPoliceMessage.getProcessOrganization() + "微信报警接警不及时、处警不及时的，扣2");
                                    examAutoEvaluation.setUnit(tPoliceMessage.getProcessOrganization());
                                    examAutoEvaluation.setUnitId("");
                                    examAutoEvaluation.setAssess("");
                                    examAutoEvaluation.setAssessId("");
                                    examAutoEvaluation.setModel("柳州处对指挥中心年度绩效考核评分标准（业务部分）");
                                    examAutoEvaluation.setFromSys("微信报警");
                                    examAutoEvaluation.setModelId("916618b2e4c340a29d84ca7d1926d6c7");
                                    examAutoEvaluation.setOption("微信报警接警不及时、处警不及时的");
                                    examAutoEvaluation.setOptionId("cda7b91be5e34c68979074e2bd9a4548");
                                    examAutoEvaluation.setScore("2");
                                    examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));
                                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","微信报警");
                                    this.save(examAutoEvaluation);

                            }
                        }
                    }
                }
            }
        }
        for (int n = 0; n < bhcPartyList.size(); n++) {

            Office office = bhcPartyList.get(n);
            String name = office.getName();
            String id = office.getId();
            /*
             * 报警年度
             * */
            List<TPoliceMessage> tPoliceMessageYearList = new ArrayList<>();
            tPoliceMessageYearList = tPoliceMessageService.selectAllList(yearL,yearT);

            for (int tp = 0; tp < tPoliceMessageYearList.size(); tp++) {

                TPoliceMessage tPoliceMessage = tPoliceMessageYearList.get(tp);

                    if (StringUtils.isNotBlank(tPoliceMessage.getProcessPeople())) {
                        String unit = personnelBaseDao.selectUnit(tPoliceMessage.getProcessPeople());
                        if (StringUtils.isNotBlank(unit)) {
                            if (unit.equals(name)) {
                                DateFormat format = new SimpleDateFormat("yyyyMMddHHmmssSSS");
                                Date sdate = format.parse(tPoliceMessage.getCreateTime());
                                Date edate = format.parse(tPoliceMessage.getProcessTime());
                                Calendar c1 = Calendar.getInstance();
                                Calendar c2 = Calendar.getInstance();

                                c1.setTime(sdate);
                                c2.setTime(edate);


                                int i1 = c2.get(Calendar.MINUTE);

                                int i2 = c1.get(Calendar.MINUTE);

                                int timeL = i2 - i1;

                                if (timeL > 5) {
                                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                    examAutoEvaluation.setType("1");
                                    examAutoEvaluation.setEvalType("4");
                                    examAutoEvaluation.setPeriod("2");
                                    examAutoEvaluation.setYear(year);
                                    examAutoEvaluation.setDetails(tPoliceMessage.getProcessOrganization() + "微信报警接警不及时、处警不及时的，扣2");
                                    examAutoEvaluation.setUnit(tPoliceMessage.getProcessOrganization());
                                    examAutoEvaluation.setUnitId("");
                                    examAutoEvaluation.setAssess("");
                                    examAutoEvaluation.setAssessId("");
                                    examAutoEvaluation.setFromSys("微信报警");
                                    examAutoEvaluation.setModel("2020年年度北海处对指挥中心扣分标准");
                                    examAutoEvaluation.setModelId("608d5301847745afb25a815fe103b707");
                                    examAutoEvaluation.setOption("微信报警接警不及时、处警不及时的");
                                    examAutoEvaluation.setOptionId("5ee9fa256265464298089ab051c0e7b9");
                                    examAutoEvaluation.setScore("2");
                                    examAutoEvaluation.setEvaluationId(userDao.selectUserId(office.getCode()));
                                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","微信报警");
                                    this.save(examAutoEvaluation);

                            }
                        }
                    }
                }
            }
        }
    }

    @Transactional(readOnly = false)
    public void ckpcsWechar(String checkTime) throws ParseException {

        List<Office> nncPartyList = officeDao.getChuUnit("34", "2");
        List<Office> lzcPartyList = officeDao.getChuUnit("95", "2");
        List<Office> bhcPartyList = officeDao.getChuUnit("156", "2");


        String year = checkTime.substring(0, 4);
        String month = checkTime.substring(checkTime.length() - 2);
        Integer m = Integer.valueOf(month);
        Integer lastMonth = m - 1;
        String yearL = year + "-" + lastMonth + "-26";
        String yearT = year + "-" + month + "-25";

        for (int i = 0; i < nncPartyList.size(); i++) {
            Office office = nncPartyList.get(i);
            String name = office.getName();
            String id = office.getId();
            String code = office.getCode();

            /*
             * 报警月度
             * */
            List<TPoliceMessage> tPoliceMessageList = new ArrayList<>();
            tPoliceMessageList = tPoliceMessageService.selectAllList(yearL, yearT);
            for (int tp = 0; tp < tPoliceMessageList.size(); tp++) {

                TPoliceMessage tPoliceMessage = new TPoliceMessage();
                tPoliceMessage = tPoliceMessageList.get(tp);
                if (StringUtils.isNotBlank(tPoliceMessage.getProcessPeople())) {
                    String unit = personnelBaseDao.selectUnit(tPoliceMessage.getProcessPeople());


                    if (StringUtils.isNotBlank(unit)) {
                        if (unit.equals(name)) {
                            DateFormat format = new SimpleDateFormat("yyyyMMddHHmmssSSS");
                            Date sdate = format.parse(tPoliceMessage.getCreateTime());
                            Date edate = format.parse(tPoliceMessage.getProcessTime());
                            Calendar c1 = Calendar.getInstance();
                            Calendar c2 = Calendar.getInstance();

                            c1.setTime(sdate);
                            c2.setTime(edate);


                            int i1 = c2.get(Calendar.MINUTE);

                            int i2 = c1.get(Calendar.MINUTE);

                            int timeL = i2 - i1;

                            if (timeL > 5) {
                                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                examAutoEvaluation.setType("1");
                                examAutoEvaluation.setEvalType("3");
                                examAutoEvaluation.setPeriod("1");
                                examAutoEvaluation.setYear(year);
                                examAutoEvaluation.setMonth(month);
                                examAutoEvaluation.setDetails(tPoliceMessage.getProcessOrganization() + "微信报警接警不及时、处警不及时的，扣8");
                                examAutoEvaluation.setUnit(tPoliceMessage.getProcessOrganization());
                                examAutoEvaluation.setUnitId("");
                                examAutoEvaluation.setAssess("");
                                examAutoEvaluation.setAssessId("");
                                examAutoEvaluation.setFromSys("微信报警");
                                examAutoEvaluation.setModel("南宁公安处月度对派出所2020年度绩效考核评分标准（队伍建设）");
                                examAutoEvaluation.setModelId("ddc6d6dd210e4f428b3a5361f27389fa");
                                examAutoEvaluation.setOption("微信报警接警不及时、处警不及时的");
                                examAutoEvaluation.setOptionId("48ee3939ac3e433b87e685bdc35c9780");
                                examAutoEvaluation.setScore("8");

                                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","微信报警");
                                this.save(examAutoEvaluation);

                            }
                        }
                    }
                }
            }
            List<TFeedback> tFeedbackList = new ArrayList<>();
            /*
             * 出警月度
             * */
            tFeedbackList = tFeedbackService.selectAll(checkTime, name);
            for (int tf = 0; tf < tFeedbackList.size(); tf++) {

                TFeedback tFeedback = tFeedbackList.get(tf);

                //创建时间
                Date createTime = tFeedback.getCreateTime();

                long create = createTime.getTime();

                //出警时间
                Date processTime = tFeedback.getToPoliceTime();

                long process = processTime.getTime();

                //创建时间和受理时间的间隔
                long hour = process - create;

                if (1 < hour && hour < 1.5) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(tFeedback.getToPoliceOrganization() + "微信报警接警不及时、处警不及时的，扣8");
                    examAutoEvaluation.setUnit(tFeedback.getToPoliceOrganization());
                    examAutoEvaluation.setUnitId("");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setFromSys("微信报警");
                    examAutoEvaluation.setModel("南宁公安处月度对派出所2020年度绩效考核评分标准（队伍建设）");
                    examAutoEvaluation.setModelId("ddc6d6dd210e4f428b3a5361f27389fa");
                    examAutoEvaluation.setOption("微信报警接警不及时、处警不及时的");
                    examAutoEvaluation.setOptionId("48ee3939ac3e433b87e685bdc35c9780");
                    examAutoEvaluation.setScore("8");
                    examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"微信报警");
                    this.save(examAutoEvaluation);
                } else if (hour > 1.5) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails("微信报警接警不及时、处警不及时的，扣8");
                    examAutoEvaluation.setUnit(""/* 处 */);
                    examAutoEvaluation.setUnitId("");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setFromSys("微信报警");
                    examAutoEvaluation.setModel("南宁公安处月度对派出所2020年度绩效考核评分标准（队伍建设）");
                    examAutoEvaluation.setModelId("ddc6d6dd210e4f428b3a5361f27389fa");
                    examAutoEvaluation.setOption("微信报警接警不及时、处警不及时的");
                    examAutoEvaluation.setOptionId("48ee3939ac3e433b87e685bdc35c9780");
                    examAutoEvaluation.setScore("10");

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","微信报警");
                    examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));
                    this.save(examAutoEvaluation);

                }
            }
            List<TFeedback> tFeedbackYearList = new ArrayList<>();
            tFeedbackYearList = tFeedbackService.selectAll(checkTime, name);

            for (int tf = 0; tf < tFeedbackYearList.size(); tf++) {

                TFeedback tFeedback = tFeedbackYearList.get(tf);

                //创建时间
                Date createTime = tFeedback.getCreateTime();

                long create = createTime.getTime();

                //出警时间
                Date processTime = tFeedback.getToPoliceTime();

                long process = processTime.getTime();

                //创建时间和受理时间的间隔
                long hour = process - create;

                if (1 < hour && hour < 1.5) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(tFeedback.getToPoliceOrganization() + "微信报警接警不及时、处警不及时的，扣8");
                    examAutoEvaluation.setUnit(tFeedback.getToPoliceOrganization());
                    examAutoEvaluation.setUnitId("");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setFromSys("微信报警");
                    examAutoEvaluation.setModel("南宁公安处月度对派出所2020年度绩效考核评分标准（队伍建设）");
                    examAutoEvaluation.setModelId("ddc6d6dd210e4f428b3a5361f27389fa");
                    examAutoEvaluation.setOption("微信报警接警不及时、处警不及时的");
                    examAutoEvaluation.setOptionId("48ee3939ac3e433b87e685bdc35c9780");
                    examAutoEvaluation.setScore("8");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","微信报警");
                    examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));
                    this.save(examAutoEvaluation);
                } else if (hour > 1.5) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails("微信报警接警不及时、处警不及时的，扣8");
                    examAutoEvaluation.setUnit(""/* 处 */);
                    examAutoEvaluation.setUnitId("");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setFromSys("微信报警");
                    examAutoEvaluation.setModel("南宁公安处月度对派出所2020年度绩效考核评分标准（队伍建设）");
                    examAutoEvaluation.setModelId("ddc6d6dd210e4f428b3a5361f27389fa");
                    examAutoEvaluation.setOption("微信报警接警不及时、处警不及时的");
                    examAutoEvaluation.setOptionId("48ee3939ac3e433b87e685bdc35c9780");
                    examAutoEvaluation.setScore("8");

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","微信报警");
                    examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));
                    this.save(examAutoEvaluation);


                }
            }
        }
        for (int l = 0; l < lzcPartyList.size(); l++) {
            Office office = lzcPartyList.get(l);
            String name1 = office.getName();
            String uid = office.getId();
            String code = office.getCode();
            List<TPoliceMessage> tPoliceMessageList = new ArrayList<>();
            /*
             * 出警月度
             * */
            List<TFeedback> tFeedbackList = new ArrayList<>();
            /*
             * 出警月度
             * */
            List<TFeedback> tFeedbackYearList = new ArrayList<>();
            /*
             * 出警月度
             * */
            tFeedbackList = tFeedbackService.selectAll(checkTime, name1);
            /*
             * 报警月度
             * */
            tPoliceMessageList = tPoliceMessageService.selectAllList(yearL,yearT);

            for (int tp = 0; tp < tPoliceMessageList.size(); tp++) {

                TPoliceMessage tPoliceMessage = new TPoliceMessage();
                tPoliceMessage = tPoliceMessageList.get(tp);
                if (StringUtils.isNotBlank(tPoliceMessage.getProcessPeople())) {
                    String unit = personnelBaseDao.selectUnit(tPoliceMessage.getProcessPeople());
                        if (StringUtils.isNotBlank(unit)) {
                            if (unit.equals(name1)) {
                                DateFormat format = new SimpleDateFormat("yyyyMMddHHmmssSSS");
                                Date sdate = format.parse(tPoliceMessage.getCreateTime());
                                Date edate = format.parse(tPoliceMessage.getProcessTime());
                                Calendar c1 = Calendar.getInstance();
                                Calendar c2 = Calendar.getInstance();

                                c1.setTime(sdate);
                                c2.setTime(edate);


                                int i1 = c2.get(Calendar.MINUTE);

                                int i2 = c1.get(Calendar.MINUTE);

                                int timeL = i2 - i1;

                                if (timeL > 5) {
                                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                    examAutoEvaluation.setType("1");
                                    examAutoEvaluation.setEvalType("3");
                                    examAutoEvaluation.setPeriod("1");
                                    examAutoEvaluation.setYear(year);
                                    examAutoEvaluation.setMonth(month);
                                    examAutoEvaluation.setDetails(tPoliceMessage.getProcessOrganization() + "微信报警接警不及时、处警不及时的，扣8");
                                    examAutoEvaluation.setUnit(tPoliceMessage.getProcessOrganization());
                                    examAutoEvaluation.setUnitId("");
                                    examAutoEvaluation.setAssess("");
                                    examAutoEvaluation.setAssessId("");
                                    examAutoEvaluation.setFromSys("微信报警");
                                    examAutoEvaluation.setModel("南宁公安处月度对派出所2020年度绩效考核评分标准（队伍建设）");
                                    examAutoEvaluation.setModelId("ddc6d6dd210e4f428b3a5361f27389fa");
                                    examAutoEvaluation.setOption("微信报警接警不及时、处警不及时的");
                                    examAutoEvaluation.setOptionId("48ee3939ac3e433b87e685bdc35c9780");
                                    examAutoEvaluation.setScore("8");
                                    examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));
                                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","微信报警");
                                    this.save(examAutoEvaluation);

                            }
                        }
                    }
                }
            }

                for (int tf = 0; tf < tFeedbackList.size(); tf++) {

                    TFeedback tFeedback = tFeedbackList.get(tf);

                    //创建时间
                    Date createTime = tFeedback.getCreateTime();

                    long create = createTime.getTime();

                    //出警时间
                    Date processTime = tFeedback.getToPoliceTime();

                    long process = processTime.getTime();

                    //创建时间和受理时间的间隔
                    long hour = process - create;

                    if (1 < hour && hour < 1.5) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails(tFeedback.getToPoliceOrganization() + "微信报警接警不及时、处警不及时的，扣8");
                        examAutoEvaluation.setUnit(tFeedback.getToPoliceOrganization());
                        examAutoEvaluation.setUnitId("");
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setFromSys("微信报警");
                        examAutoEvaluation.setModel("南宁公安处月度对派出所2020年度绩效考核评分标准（队伍建设）");
                        examAutoEvaluation.setModelId("ddc6d6dd210e4f428b3a5361f27389fa");
                        examAutoEvaluation.setOption("微信报警接警不及时、处警不及时的");
                        examAutoEvaluation.setOptionId("48ee3939ac3e433b87e685bdc35c9780");
                        examAutoEvaluation.setScore("8");
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","微信报警");
                        examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));

                        this.save(examAutoEvaluation);
                    } else if (hour > 1.5) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails("微信报警接警不及时、处警不及时的，扣8");
                        examAutoEvaluation.setUnit(""/* 处 */);
                        examAutoEvaluation.setUnitId("");
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setFromSys("微信报警");
                        examAutoEvaluation.setModel("南宁公安处月度对派出所2020年度绩效考核评分标准（队伍建设）");
                        examAutoEvaluation.setModelId("ddc6d6dd210e4f428b3a5361f27389fa");
                        examAutoEvaluation.setOption("微信报警接警不及时、处警不及时的");
                        examAutoEvaluation.setOptionId("48ee3939ac3e433b87e685bdc35c9780");
                        examAutoEvaluation.setScore("10");

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","微信报警");
                        examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));
                        this.save(examAutoEvaluation);
                    }
                }

                tFeedbackYearList = tFeedbackService.selectAll(checkTime, name1);

                for (int tf = 0; tf < tFeedbackYearList.size(); tf++) {

                    TFeedback tFeedback = tFeedbackYearList.get(tf);

                    //创建时间
                    Date createTime = tFeedback.getCreateTime();

                    long create = createTime.getTime();

                    //出警时间
                    Date processTime = tFeedback.getToPoliceTime();

                    long process = processTime.getTime();

                    //创建时间和受理时间的间隔
                    long hour = process - create;

                    if (1 < hour && hour < 1.5) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails(tFeedback.getToPoliceOrganization() + "微信报警接警不及时、处警不及时的，扣8");
                        examAutoEvaluation.setUnit(tFeedback.getToPoliceOrganization());
                        examAutoEvaluation.setUnitId("");
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setFromSys("微信报警");
                        examAutoEvaluation.setModel("南宁公安处月度对派出所2020年度绩效考核评分标准（队伍建设）");
                        examAutoEvaluation.setModelId("ddc6d6dd210e4f428b3a5361f27389fa");
                        examAutoEvaluation.setOption("微信报警接警不及时、处警不及时的");
                        examAutoEvaluation.setOptionId("48ee3939ac3e433b87e685bdc35c9780");
                        examAutoEvaluation.setScore("8");

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","微信报警");
                        examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));
                        this.save(examAutoEvaluation);
                    } else if (hour > 1.5) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails("微信报警接警不及时、处警不及时的，扣8");
                        examAutoEvaluation.setUnit(""/* 处 */);
                        examAutoEvaluation.setUnitId("");
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setFromSys("微信报警");
                        examAutoEvaluation.setModel("南宁公安处月度对派出所2020年度绩效考核评分标准（队伍建设）");
                        examAutoEvaluation.setModelId("ddc6d6dd210e4f428b3a5361f27389fa");
                        examAutoEvaluation.setOption("微信报警接警不及时、处警不及时的");
                        examAutoEvaluation.setOptionId("48ee3939ac3e433b87e685bdc35c9780");
                        examAutoEvaluation.setScore("8");

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","微信报警");
                        examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));
                        this.save(examAutoEvaluation);


                }
            }
        }
        for (int i = 0; i < bhcPartyList.size(); i++) {
            Office office = bhcPartyList.get(i);
            String name = office.getName();
            String uid = office.getId();
            String code = office.getCode();

            /*
             * 报警月度
             * */
            List<TPoliceMessage> tPoliceMessageList = new ArrayList<>();
            tPoliceMessageList = tPoliceMessageService.selectAllList(yearL,yearT);

            for (int tp = 0; tp < tPoliceMessageList.size(); tp++) {

                TPoliceMessage tPoliceMessage = new TPoliceMessage();
                tPoliceMessage = tPoliceMessageList.get(tp);
                if (StringUtils.isNotBlank(tPoliceMessage.getProcessPeople())) {
                    String unit = personnelBaseDao.selectUnit(tPoliceMessage.getProcessPeople());
                        if (StringUtils.isNotBlank(unit)) {
                            if (unit.equals(name)) {
                                DateFormat format = new SimpleDateFormat("yyyyMMddHHmmssSSS");
                                Date sdate = format.parse(tPoliceMessage.getCreateTime());
                                Date edate = format.parse(tPoliceMessage.getProcessTime());
                                Calendar c1 = Calendar.getInstance();
                                Calendar c2 = Calendar.getInstance();

                                c1.setTime(sdate);
                                c2.setTime(edate);


                                int i1 = c2.get(Calendar.MINUTE);

                                int i2 = c1.get(Calendar.MINUTE);

                                int timeL = i2 - i1;

                                if (timeL > 5) {
                                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                    examAutoEvaluation.setType("1");
                                    examAutoEvaluation.setEvalType("3");
                                    examAutoEvaluation.setPeriod("1");
                                    examAutoEvaluation.setYear(year);
                                    examAutoEvaluation.setMonth(month);
                                    examAutoEvaluation.setDetails(tPoliceMessage.getProcessOrganization() + "微信报警接警不及时、处警不及时的，扣8");
                                    examAutoEvaluation.setUnit(tPoliceMessage.getProcessOrganization());
                                    examAutoEvaluation.setUnitId("");
                                    examAutoEvaluation.setAssess("");
                                    examAutoEvaluation.setAssessId("");
                                    examAutoEvaluation.setFromSys("微信报警");
                                    examAutoEvaluation.setModel("2020年月度北海处对派出所、刑警三大队扣分标准(业务部分)");
                                    examAutoEvaluation.setModelId("a9e6fbb8773d470d897319cd6f17fa2b");
                                    examAutoEvaluation.setOption("微信报警接警不及时、处警不及时的");
                                    examAutoEvaluation.setOptionId("905237c4414041ea83c24f35a818691f");
                                    examAutoEvaluation.setScore("8");
                                    examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));
                                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","微信报警");
                                    this.save(examAutoEvaluation);

                            }
                        }
                    }
                }
            }

            List<TFeedback> tFeedbackList = new ArrayList<>();

                /*
                 * 出警月度
                 * */
                tFeedbackList = tFeedbackService.selectAll(checkTime, name);
                for (int tf = 0; tf < tFeedbackList.size(); tf++) {

                    TFeedback tFeedback = tFeedbackList.get(tf);

                    //创建时间
                    Date createTime = tFeedback.getCreateTime();

                    long create = createTime.getTime();

                    //出警时间
                    Date processTime = tFeedback.getToPoliceTime();

                    long process = processTime.getTime();

                    //创建时间和受理时间的间隔
                    long hour = process - create;

                    if (1 < hour && hour < 1.5) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails(tFeedback.getToPoliceOrganization() + "微信报警接警不及时、处警不及时的，扣8");
                        examAutoEvaluation.setUnit(tFeedback.getToPoliceOrganization());
                        examAutoEvaluation.setUnitId("");
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setFromSys("微信报警");
                        examAutoEvaluation.setModel("2020年月度北海处对派出所、刑警三大队扣分标准(业务部分)");
                        examAutoEvaluation.setModelId("a9e6fbb8773d470d897319cd6f17fa2b");
                        examAutoEvaluation.setOption("微信报警接警不及时、处警不及时的");
                        examAutoEvaluation.setOptionId("905237c4414041ea83c24f35a818691f");
                        examAutoEvaluation.setScore("8");
                        examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","微信报警");
                        this.save(examAutoEvaluation);
                    } else if (hour > 1.5) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("2");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails("微信报警接警不及时、处警不及时的，扣8");
                        examAutoEvaluation.setUnit(""/* 处 */);
                        examAutoEvaluation.setUnitId("");
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setFromSys("微信报警");
                        examAutoEvaluation.setModel("2020年月度北海处对派出所、刑警三大队扣分标准(业务部分)");
                        examAutoEvaluation.setModelId("a9e6fbb8773d470d897319cd6f17fa2b");
                        examAutoEvaluation.setOption("微信报警接警不及时、处警不及时的");
                        examAutoEvaluation.setOptionId("905237c4414041ea83c24f35a818691f");
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","微信报警");
                        examAutoEvaluation.setScore("10");

                        examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));
                        this.save(examAutoEvaluation);

                }
            }

            List<TFeedback> tFeedbackYearList = new ArrayList<>();

                tFeedbackYearList = tFeedbackService.selectAll(checkTime, name);

                for (int tf = 0; tf < tFeedbackYearList.size(); tf++) {

                    TFeedback tFeedback = tFeedbackYearList.get(tf);

                    //创建时间
                    Date createTime = tFeedback.getCreateTime();

                    long create = createTime.getTime();

                    //出警时间
                    Date processTime = tFeedback.getToPoliceTime();

                    long process = processTime.getTime();

                    //创建时间和受理时间的间隔
                    long hour = process - create;

                    if (1 < hour && hour < 1.5) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails(tFeedback.getToPoliceOrganization() + "微信报警接警不及时、处警不及时的，扣8");
                        examAutoEvaluation.setUnit(tFeedback.getToPoliceOrganization());
                        examAutoEvaluation.setUnitId("");
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setFromSys("微信报警");
                        examAutoEvaluation.setModel("2020年月度北海处对派出所、刑警三大队扣分标准(业务部分)");
                        examAutoEvaluation.setModelId("a9e6fbb8773d470d897319cd6f17fa2b");
                        examAutoEvaluation.setOption("微信报警接警不及时、处警不及时的");
                        examAutoEvaluation.setOptionId("905237c4414041ea83c24f35a818691f");
                        examAutoEvaluation.setScore("8");

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","微信报警");
                        examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));
                        this.save(examAutoEvaluation);
                    } else if (hour > 1.5) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails("微信报警接警不及时、处警不及时的，扣8");
                        examAutoEvaluation.setUnit(""/* 处 */);
                        examAutoEvaluation.setUnitId("");
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setFromSys("微信报警");
                        examAutoEvaluation.setModel("2020年月度北海处对派出所、刑警三大队扣分标准(业务部分)");
                        examAutoEvaluation.setModelId("a9e6fbb8773d470d897319cd6f17fa2b");
                        examAutoEvaluation.setOption("微信报警接警不及时、处警不及时的");
                        examAutoEvaluation.setOptionId("905237c4414041ea83c24f35a818691f");
                        examAutoEvaluation.setScore("8");
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","微信报警");

                        examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));
                        this.save(examAutoEvaluation);


                }
            }
        }
    }

    @Transactional(readOnly = false)
    public void ckpcsWecharYear(String year) throws ParseException {
        Integer m = Integer.valueOf(year);
        Integer lastYear = m - 1;
        String yearL = lastYear + "-" + "12-02";
        String yearT = year + "-" +"12-01";

        List<Office> nncPartyList = officeDao.getChuUnit("34", "2");
        List<Office> lzcPartyList = officeDao.getChuUnit("95", "2");
        List<Office> bhcPartyList = officeDao.getChuUnit("156", "2");

        for (int i = 0; i < nncPartyList.size(); i++) {
            Office office = nncPartyList.get(i);
            String name = office.getName();
            String code = office.getCode();


            /*
                 * 报警年度
                 * */
                List<TPoliceMessage> tPoliceMessageYearList = new ArrayList<>();
                tPoliceMessageYearList = tPoliceMessageService.selectAllList(yearL,yearT);

                for (int tp = 0; tp < tPoliceMessageYearList.size(); tp++) {

                    TPoliceMessage tPoliceMessage = tPoliceMessageYearList.get(tp);
                    if (!("系统管理员").equals(tPoliceMessage.getProcessPeople()) && StringUtils.isNotBlank(tPoliceMessage.getProcessPeople())) {
                        if (StringUtils.isNotBlank(tPoliceMessage.getProcessPeople())) {
                            String unit = personnelBaseDao.selectUnit(tPoliceMessage.getProcessPeople());
                            if (StringUtils.isNotBlank(unit)) {
                                if (unit.equals(name)) {
                                    DateFormat format = new SimpleDateFormat("yyyyMMddHHmmssSSS");
                                    Date sdate = format.parse(tPoliceMessage.getCreateTime());
                                    Date edate = format.parse(tPoliceMessage.getProcessTime());
                                    Calendar c1 = Calendar.getInstance();
                                    Calendar c2 = Calendar.getInstance();

                                    c1.setTime(sdate);
                                    c2.setTime(edate);


                                    int i1 = c2.get(Calendar.MINUTE);

                                    int i2 = c1.get(Calendar.MINUTE);

                                    int timeL = i2 - i1;

                                    if (timeL > 5) {
                                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                        examAutoEvaluation.setType("1");
                                        examAutoEvaluation.setEvalType("3");
                                        examAutoEvaluation.setPeriod("2");
                                        examAutoEvaluation.setYear(year);
                                        examAutoEvaluation.setDetails(tPoliceMessage.getProcessOrganization() + "微信报警接警不及时、处警不及时的，扣3");
                                        examAutoEvaluation.setUnit(tPoliceMessage.getProcessOrganization());
                                        examAutoEvaluation.setUnitId("");
                                        examAutoEvaluation.setAssess("");
                                        examAutoEvaluation.setFromSys("微信报警");
                                        examAutoEvaluation.setAssessId("");
                                        examAutoEvaluation.setModel("2020年年度南宁处对派出所绩效考核扣分标准(队伍建设)");
                                        examAutoEvaluation.setModelId("f43cb06efe6b42acb625d2cef27bad1e");
                                        examAutoEvaluation.setOption("微信报警接警不及时、处警不及时的");
                                        examAutoEvaluation.setOptionId("edec414eb4364f7e95a8872bd8907e42");
                                        examAutoEvaluation.setScore("3");
                                        examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));
                                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","微信报警");
                                        this.save(examAutoEvaluation);

                                }
                            }
                        }
                    }
                }
            }
        }
        for (int i = 0; i < lzcPartyList.size(); i++) {
            Office office = lzcPartyList.get(i);
            String name = office.getName();
            String code = office.getCode();
            /*
             * 报警年度
             * */
            List<TPoliceMessage> tPoliceMessageYearList = new ArrayList<>();
            tPoliceMessageYearList = tPoliceMessageService.selectAllList(yearL,yearT);

            for (int tp = 0; tp < tPoliceMessageYearList.size(); tp++) {

                TPoliceMessage tPoliceMessage = tPoliceMessageYearList.get(tp);
                if (!("系统管理员").equals(tPoliceMessage.getProcessPeople()) && StringUtils.isNotBlank(tPoliceMessage.getProcessPeople())) {
                    if (StringUtils.isNotBlank(tPoliceMessage.getProcessPeople())) {
                        String unit = personnelBaseDao.selectUnit(tPoliceMessage.getProcessPeople());
                        if (StringUtils.isNotBlank(unit)) {
                            if (unit.equals(name)) {
                                DateFormat format = new SimpleDateFormat("yyyyMMddHHmmssSSS");
                                Date sdate = format.parse(tPoliceMessage.getCreateTime());
                                Date edate = format.parse(tPoliceMessage.getProcessTime());
                                Calendar c1 = Calendar.getInstance();
                                Calendar c2 = Calendar.getInstance();

                                c1.setTime(sdate);
                                c2.setTime(edate);


                                int i1 = c2.get(Calendar.MINUTE);

                                int i2 = c1.get(Calendar.MINUTE);

                                int timeL = i2 - i1;

                                if (timeL > 5) {
                                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                    examAutoEvaluation.setType("1");
                                    examAutoEvaluation.setEvalType("3");
                                    examAutoEvaluation.setPeriod("2");
                                    examAutoEvaluation.setYear(year);
                                    examAutoEvaluation.setDetails(tPoliceMessage.getProcessOrganization() + "微信报警接警不及时、处警不及时的，扣3");
                                    examAutoEvaluation.setUnit(tPoliceMessage.getProcessOrganization());
                                    examAutoEvaluation.setUnitId("");
                                    examAutoEvaluation.setAssess("");
                                    examAutoEvaluation.setFromSys("微信报警");
                                    examAutoEvaluation.setAssessId("");
                                    examAutoEvaluation.setModel("");
                                    examAutoEvaluation.setModelId("");
                                    examAutoEvaluation.setOption(" ");
                                    examAutoEvaluation.setOptionId(" ");
                                    examAutoEvaluation.setScore("3");
                                    examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));
                                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","微信报警");
                                    this.save(examAutoEvaluation);

                                }
                            }
                        }
                    }
                }
            }
        }
        for (int i = 0; i < bhcPartyList.size(); i++) {
            Office office = bhcPartyList.get(i);
            String name = office.getName();
            String code = office.getCode();


            /*
             * 报警年度
             * */
            List<TPoliceMessage> tPoliceMessageYearList = new ArrayList<>();
            tPoliceMessageYearList = tPoliceMessageService.selectAllList(yearL,yearT);

            for (int tp = 0; tp < tPoliceMessageYearList.size(); tp++) {

                TPoliceMessage tPoliceMessage = tPoliceMessageYearList.get(tp);
                if (!("系统管理员").equals(tPoliceMessage.getProcessPeople()) && StringUtils.isNotBlank(tPoliceMessage.getProcessPeople())) {
                    if (StringUtils.isNotBlank(tPoliceMessage.getProcessPeople())) {
                        String unit = personnelBaseDao.selectUnit(tPoliceMessage.getProcessPeople());
                        if (StringUtils.isNotBlank(unit)) {
                            if (unit.equals(name)) {
                                DateFormat format = new SimpleDateFormat("yyyyMMddHHmmssSSS");
                                Date sdate = format.parse(tPoliceMessage.getCreateTime());
                                Date edate = format.parse(tPoliceMessage.getProcessTime());
                                Calendar c1 = Calendar.getInstance();
                                Calendar c2 = Calendar.getInstance();

                                c1.setTime(sdate);
                                c2.setTime(edate);


                                int i1 = c2.get(Calendar.MINUTE);

                                int i2 = c1.get(Calendar.MINUTE);

                                int timeL = i2 - i1;

                                if (timeL > 5) {
                                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                    examAutoEvaluation.setType("1");
                                    examAutoEvaluation.setEvalType("3");
                                    examAutoEvaluation.setPeriod("2");
                                    examAutoEvaluation.setYear(year);
                                    examAutoEvaluation.setDetails(tPoliceMessage.getProcessOrganization() + "微信报警接警不及时、处警不及时的，扣3");
                                    examAutoEvaluation.setUnit(tPoliceMessage.getProcessOrganization());
                                    examAutoEvaluation.setUnitId("");
                                    examAutoEvaluation.setAssess("");
                                    examAutoEvaluation.setFromSys("微信报警");
                                    examAutoEvaluation.setAssessId("");
                                    examAutoEvaluation.setModel("2020年年度北海处对派出所、刑警三大队绩效考核扣分标准(业务部分)");
                                    examAutoEvaluation.setModelId("ebbe5612a316481586636fef3fb8840d");
                                    examAutoEvaluation.setOption("微信报警接警不及时、处警不及时的");
                                    examAutoEvaluation.setOptionId("7baae996c3db45d3bc75a2f2da98ce4e");
                                    examAutoEvaluation.setScore("3");

                                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","微信报警");
                                    examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));
                                    this.save(examAutoEvaluation);

                                }
                            }
                        }
                    }
                }
            }
        }
    }

    @Transactional(readOnly = false)
    public void ckpcsGtws(String checkTime) throws Exception {

        String year = checkTime.substring(0, 4);
        Integer y = Integer.valueOf(year);
        String month = checkTime.substring(checkTime.length() - 2);
        Integer m = Integer.valueOf(month);
        Integer lastMonth = m - 1;
        Integer lastYear = y - 1;
        String yearL = null;
        if (m == 1){
            yearL = lastYear + "-12-26";
        }else {
            String Lmonth = "";
            if(String.valueOf(lastMonth).length() ==1){
                Lmonth = "0" + lastMonth;
            }
            yearL = year + "-" + Lmonth + "-26";
        }
        String yearT = year + "-" + month +  "-25";

        List<Office> nncPartyList = officeDao.getChuUnit("34", "2");
        List<Office> lzcPartyList = officeDao.getChuUnit("95", "2");
        List<Office> bhcPartyList = officeDao.getChuUnit("156", "2");


        for (int i = 0; i < nncPartyList.size(); i++) {
            Office office = nncPartyList.get(i);
            String name = office.getName();
            String unitId = office.getId();
            String code = office.getCode();
            String unitCode = userDao.selectUnitId(code);
                List<Patrolrecord> patrolrecordList = new ArrayList<>();
                patrolrecordList = patrolrecordService.selectAllExcption(code, yearL,yearT);

                for (int p = 0; p < patrolrecordList.size(); p++) {
                    Patrolrecord patrolrecord = patrolrecordList.get(p);
                    DateFormat format = new SimpleDateFormat("yyyyMMddHHmmssSSS");
                    Date sdate = format.parse(patrolrecord.getDate());
                    Date edate = format.parse(patrolrecord.getReviewtime());
                    Calendar c1 = Calendar.getInstance();
                    Calendar c2 = Calendar.getInstance();

                    c1.setTime(sdate);
                    c2.setTime(edate);


                    int i1 = c2.get(Calendar.HOUR);

                    int i2 = c1.get(Calendar.HOUR);

                    int timeL = i2 - i1;

                    if (timeL > 2) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails(name + year + "年" + month + "月" + "异常打卡点、隐患、警情未及时审核，扣分（收到信息2小时内审核）");
                        examAutoEvaluation.setUnit(name);
                        examAutoEvaluation.setUnitId(unitId);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setFromSys("高铁安保卫士");
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setModelId("");
                        examAutoEvaluation.setOption(" ");
                        examAutoEvaluation.setOptionId(" ");
                        examAutoEvaluation.setScore("2");
                        examAutoEvaluation.setEvaluationId(unitCode);
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","高铁卫士");
                        //汇总一样标准的数据
                        this.summaryStandard(examAutoEvaluation,2.0,name + year + "年" + month + "月" + "异常打卡点、隐患、警情未及时审核，扣分（收到信息2小时内审核）");
                        this.save(examAutoEvaluation);

                    }
                }
                //隐患未及时审核
                List<AcSaftyAudit> acSaftyAuditList = new ArrayList<>();
                acSaftyAuditList = acSaftyAuditService.selectAllExcption(name, checkTime);

                for (int p = 0; p < acSaftyAuditList.size(); p++) {
                    AcSaftyAudit acSaftyAudit = acSaftyAuditList.get(p);
                    Date date = acSaftyAudit.getCjsj();
                    Date reviewtime = acSaftyAudit.getShsj();

                    long firstDateMilliSeconds = date.getTime();
                    long secondDateMilliSeconds = reviewtime.getTime();

                    long firstMinusSecond = firstDateMilliSeconds - secondDateMilliSeconds;

                    //毫秒转为秒
                    long milliSeconds = firstMinusSecond;
                    int totalSeconds = (int) (milliSeconds / 1000);

                    int daysRemains = totalSeconds % (3600 * 24);

                    int hours = daysRemains / 3600;

                    if (hours > 2) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails(name + "隐患未及时审核，扣2分");
                        examAutoEvaluation.setUnit(name);
                        examAutoEvaluation.setUnitId(unitId);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setFromSys("高铁安保卫士");
                        examAutoEvaluation.setModelId("");
                        examAutoEvaluation.setOption(" ");
                        examAutoEvaluation.setOptionId(" ");
                        examAutoEvaluation.setScore("2");
                        examAutoEvaluation.setEvaluationId(unitCode);
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","高铁卫士");
                        //汇总一样标准的数据
                        this.summaryStandard(examAutoEvaluation,2.0,name + "隐患未及时审核，扣2分");
                        this.save(examAutoEvaluation);
                    }
                }

                //警情未及时审核
                List<AcMobileData> acMobileDataList = new ArrayList<>();
                acMobileDataList = acMobileDataService.selectAllExcption(name, checkTime);

                for (int p = 0; p < acMobileDataList.size(); p++) {
                    AcMobileData acMobileData = acMobileDataList.get(p);
                    String date = acMobileData.getAcDate();
                    String reviewtime = acMobileData.getCjsj();

                    Date date1 = new Date(date);
                    Date date2 = new Date(reviewtime);

                    long firstDateMilliSeconds = date1.getTime();
                    long secondDateMilliSeconds = date2.getTime();

                    long firstMinusSecond = firstDateMilliSeconds - secondDateMilliSeconds;

                    //毫秒转为秒
                    long milliSeconds = firstMinusSecond;
                    int totalSeconds = (int) (milliSeconds / 1000);

                    int daysRemains = totalSeconds % (3600 * 24);

                    int hours = daysRemains / 3600;

                    if (hours > 2) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails(name + "警情未及时审核，扣2分");
                        examAutoEvaluation.setUnit(name);
                        examAutoEvaluation.setUnitId(unitId);
                        examAutoEvaluation.setFromSys("高铁安保卫士");
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setModelId("");
                        examAutoEvaluation.setOption(" ");
                        examAutoEvaluation.setOptionId(" ");
                        examAutoEvaluation.setScore("2");
                        examAutoEvaluation.setEvaluationId(unitCode);
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","高铁卫士");
                        //汇总一样标准的数据
                        this.summaryStandard(examAutoEvaluation,2.0,name + "警情未及时审核，扣2分");
                        this.save(examAutoEvaluation);

                }
            }
        }
        for (int i = 0; i < lzcPartyList.size(); i++) {
            Office office = lzcPartyList.get(i);
            String name = office.getName();
            String unitId = office.getId();
            String code = office.getCode();
            String unitCode = userDao.selectUserId(code);
            List<Patrolrecord> patrolrecordList = new ArrayList<>();
            patrolrecordList = patrolrecordService.selectAllExcption(code, yearL,yearT);

            for (int p = 0; p < patrolrecordList.size(); p++) {
                Patrolrecord patrolrecord = patrolrecordList.get(p);
                DateFormat format = new SimpleDateFormat("yyyyMMddHHmmssSSS");
                Date sdate = format.parse(patrolrecord.getDate());
                Date edate = format.parse(patrolrecord.getReviewtime());
                Calendar c1 = Calendar.getInstance();
                Calendar c2 = Calendar.getInstance();

                c1.setTime(sdate);
                c2.setTime(edate);


                int i1 = c2.get(Calendar.HOUR);

                int i2 = c1.get(Calendar.HOUR);

                int timeL = i2 - i1;

                if (timeL > 2) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(name + year + "年" + month + "月" + "异常打卡点、隐患、警情未及时审核，扣分（收到信息2小时内审核）");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setFromSys("高铁安保卫士");
                    examAutoEvaluation.setModel("");
                    examAutoEvaluation.setModelId("");
                    examAutoEvaluation.setOption(" ");
                    examAutoEvaluation.setOptionId(" ");
                    examAutoEvaluation.setScore("2");
                    examAutoEvaluation.setEvaluationId(unitCode);

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","高铁卫士");
                    //汇总一样标准的数据
                    this.summaryStandard(examAutoEvaluation,2.0,name + year + "年" + month + "月" + "异常打卡点、隐患、警情未及时审核，扣分（收到信息2小时内审核）");
                    this.save(examAutoEvaluation);

                }
            }
            //隐患未及时审核
            List<AcSaftyAudit> acSaftyAuditList = new ArrayList<>();
            acSaftyAuditList = acSaftyAuditService.selectAllExcption(name, checkTime);

            for (int p = 0; p < acSaftyAuditList.size(); p++) {
                AcSaftyAudit acSaftyAudit = acSaftyAuditList.get(p);
                Date date = acSaftyAudit.getCjsj();
                Date reviewtime = acSaftyAudit.getShsj();

                long firstDateMilliSeconds = date.getTime();
                long secondDateMilliSeconds = reviewtime.getTime();

                long firstMinusSecond = firstDateMilliSeconds - secondDateMilliSeconds;

                //毫秒转为秒
                long milliSeconds = firstMinusSecond;
                int totalSeconds = (int) (milliSeconds / 1000);

                int daysRemains = totalSeconds % (3600 * 24);

                int hours = daysRemains / 3600;

                if (hours > 2) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(name + "隐患未及时审核，扣2分");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("");
                    examAutoEvaluation.setFromSys("高铁安保卫士");
                    examAutoEvaluation.setModelId("");
                    examAutoEvaluation.setOption(" ");
                    examAutoEvaluation.setOptionId(" ");
                    examAutoEvaluation.setScore("2");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","高铁卫士");
                    examAutoEvaluation.setEvaluationId(unitCode);
                    //汇总一样标准的数据
                    this.summaryStandard(examAutoEvaluation,2.0,name + "隐患未及时审核，扣2分");
                    this.save(examAutoEvaluation);
                }
            }

            //警情未及时审核
            List<AcMobileData> acMobileDataList = new ArrayList<>();
            acMobileDataList = acMobileDataService.selectAllExcption(name, checkTime);

            for (int p = 0; p < acMobileDataList.size(); p++) {
                AcMobileData acMobileData = acMobileDataList.get(p);
                String date = acMobileData.getAcDate();
                String reviewtime = acMobileData.getCjsj();

                Date date1 = new Date(date);
                Date date2 = new Date(reviewtime);

                long firstDateMilliSeconds = date1.getTime();
                long secondDateMilliSeconds = date2.getTime();

                long firstMinusSecond = firstDateMilliSeconds - secondDateMilliSeconds;

                //毫秒转为秒
                long milliSeconds = firstMinusSecond;
                int totalSeconds = (int) (milliSeconds / 1000);

                int daysRemains = totalSeconds % (3600 * 24);

                int hours = daysRemains / 3600;

                if (hours > 2) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(name + "警情未及时审核，扣2分");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setFromSys("高铁安保卫士");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("");
                    examAutoEvaluation.setModelId("");
                    examAutoEvaluation.setOption(" ");
                    examAutoEvaluation.setOptionId(" ");
                    examAutoEvaluation.setScore("2");
                    examAutoEvaluation.setEvaluationId(unitCode);

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","高铁卫士");
                    //汇总一样标准的数据
                    this.summaryStandard(examAutoEvaluation,2.0,name + "警情未及时审核，扣2分");
                    this.save(examAutoEvaluation);

                }
            }
        }
        for (int i = 0; i < bhcPartyList.size(); i++) {
            Office office = bhcPartyList.get(i);
            String name = office.getName();
            String unitId = office.getId();
            String code = office.getCode();
            String unitCode = userDao.selectUserId(code);
            List<Patrolrecord> patrolrecordList = new ArrayList<>();
            patrolrecordList = patrolrecordService.selectAllExcption(code, yearL,yearT);

            for (int p = 0; p < patrolrecordList.size(); p++) {
                Patrolrecord patrolrecord = patrolrecordList.get(p);
                DateFormat format = new SimpleDateFormat("yyyyMMddHHmmssSSS");
                Date sdate = format.parse(patrolrecord.getDate());
                Date edate = format.parse(patrolrecord.getReviewtime());
                Calendar c1 = Calendar.getInstance();
                Calendar c2 = Calendar.getInstance();

                c1.setTime(sdate);
                c2.setTime(edate);


                int i1 = c2.get(Calendar.HOUR);

                int i2 = c1.get(Calendar.HOUR);

                int timeL = i2 - i1;

                if (timeL > 2) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(name + year + "年" + month + "月" + "异常打卡点、隐患、警情未及时审核，扣分（收到信息2小时内审核）");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setFromSys("高铁安保卫士");
                    examAutoEvaluation.setModel("2020年月度北海处对派出所、刑警三大队扣分标准(业务部分)");
                    examAutoEvaluation.setModelId("a9e6fbb8773d470d897319cd6f17fa2b");
                    examAutoEvaluation.setOption("检查发现“高铁安保卫士”管理使用存在问题的（以通报为准）");
                    examAutoEvaluation.setOptionId("3019f19167ee43b89ef6403d9937a7a5");
                    examAutoEvaluation.setScore("2");
                    examAutoEvaluation.setEvaluationId(unitCode);

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","高铁卫士");
                    //汇总一样标准的数据
                    this.summaryStandard(examAutoEvaluation,2.0,name + year + "年" + month + "月" + "异常打卡点、隐患、警情未及时审核，扣分（收到信息2小时内审核）");
                    this.save(examAutoEvaluation);

                }
            }
            //隐患未及时审核
            List<AcSaftyAudit> acSaftyAuditList = new ArrayList<>();
            acSaftyAuditList = acSaftyAuditService.selectAllExcption(name, checkTime);

            for (int p = 0; p < acSaftyAuditList.size(); p++) {
                AcSaftyAudit acSaftyAudit = acSaftyAuditList.get(p);
                Date date = acSaftyAudit.getCjsj();
                Date reviewtime = acSaftyAudit.getShsj();

                long firstDateMilliSeconds = date.getTime();
                long secondDateMilliSeconds = reviewtime.getTime();

                long firstMinusSecond = firstDateMilliSeconds - secondDateMilliSeconds;

                //毫秒转为秒
                long milliSeconds = firstMinusSecond;
                int totalSeconds = (int) (milliSeconds / 1000);

                int daysRemains = totalSeconds % (3600 * 24);

                int hours = daysRemains / 3600;

                if (hours > 2) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(name + "隐患未及时审核，扣2分");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setFromSys("高铁安保卫士");
                    examAutoEvaluation.setModel("2020年月度北海处对派出所、刑警三大队扣分标准(业务部分)");
                    examAutoEvaluation.setModelId("a9e6fbb8773d470d897319cd6f17fa2b");
                    examAutoEvaluation.setOption("检查发现“高铁安保卫士”管理使用存在问题的（以通报为准）");
                    examAutoEvaluation.setOptionId("3019f19167ee43b89ef6403d9937a7a5");
                    examAutoEvaluation.setScore("2");
                    examAutoEvaluation.setEvaluationId(unitCode);
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","高铁卫士");
                    //汇总一样标准的数据
                    this.summaryStandard(examAutoEvaluation,2.0,name + "隐患未及时审核，扣2分");
                    this.save(examAutoEvaluation);
                }
            }

            //警情未及时审核
            List<AcMobileData> acMobileDataList = new ArrayList<>();
            acMobileDataList = acMobileDataService.selectAllExcption(name, checkTime);

            for (int p = 0; p < acMobileDataList.size(); p++) {
                AcMobileData acMobileData = acMobileDataList.get(p);
                String date = acMobileData.getAcDate();
                String reviewtime = acMobileData.getCjsj();

                Date date1 = new Date(date);
                Date date2 = new Date(reviewtime);

                long firstDateMilliSeconds = date1.getTime();
                long secondDateMilliSeconds = date2.getTime();

                long firstMinusSecond = firstDateMilliSeconds - secondDateMilliSeconds;

                //毫秒转为秒
                long milliSeconds = firstMinusSecond;
                int totalSeconds = (int) (milliSeconds / 1000);

                int daysRemains = totalSeconds % (3600 * 24);

                int hours = daysRemains / 3600;

                if (hours > 2) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(name + "警情未及时审核，扣2分");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setFromSys("高铁安保卫士");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("2020年月度北海处对派出所、刑警三大队扣分标准(业务部分)");
                    examAutoEvaluation.setModelId("a9e6fbb8773d470d897319cd6f17fa2b");
                    examAutoEvaluation.setOption("检查发现“高铁安保卫士”管理使用存在问题的（以通报为准）");
                    examAutoEvaluation.setOptionId("3019f19167ee43b89ef6403d9937a7a5");
                    examAutoEvaluation.setScore("2");
                    examAutoEvaluation.setEvaluationId(unitCode);
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","高铁卫士");
                    //汇总一样标准的数据
                    this.summaryStandard(examAutoEvaluation,2.0,name + "警情未及时审核，扣2分");
                    this.save(examAutoEvaluation);

                }
            }
        }
    }

    @Transactional(readOnly = false)
    public void ckpcsGtwsYear(String year) throws Exception {

        List<Office> nncPartyList = officeDao.getChuUnit("34", "2");
        List<Office> lzcPartyList = officeDao.getChuUnit("95", "2");
        List<Office> bhcPartyList = officeDao.getChuUnit("156", "2");

        Integer m = Integer.valueOf(year);
        Integer lastYear = m - 1;
        String yearL = lastYear + "-" + "12-02";
        String yearT = year + "-" +"12-01";


        //异常打卡
        //所有单位名称
        for (int i = 0; i < nncPartyList.size(); i++) {
            Office office = nncPartyList.get(i);
            String unitId = office.getId();
            String name = office.getName();
            String code = office.getCode();
            String unitCode = userDao.selectUserId(code);
                List<Patrolrecord> patrolrecordList = new ArrayList<>();
                patrolrecordList = patrolrecordService.selectAllExcption(code,yearL,yearT);

                for (int p = 0; p < patrolrecordList.size(); p++) {
                    Patrolrecord patrolrecord = patrolrecordList.get(p);
                    String date = patrolrecord.getDate();
                    String reviewtime = patrolrecord.getReviewtime();
                    int hours = subDateTime(date, reviewtime);

                    if (hours > 2) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("2");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setDetails(name + year + "年" + "异常打卡点、隐患、警情未及时审核，扣分（收到信息2小时内审核）");
                        examAutoEvaluation.setUnit(name);
                        examAutoEvaluation.setUnitId(unitId);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setFromSys("高铁安保卫士");
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setModelId("");
                        examAutoEvaluation.setOption(" ");
                        examAutoEvaluation.setOptionId(" ");
                        examAutoEvaluation.setScore("2");
                        examAutoEvaluation.setEvaluationId(unitCode);
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","高铁卫士");
                        //汇总一样标准的数据
                        this.summaryStandard(examAutoEvaluation,2.0,name + year + "年" + "异常打卡点、隐患、警情未及时审核，扣分（收到信息2小时内审核）");
                        this.save(examAutoEvaluation);

                    }
                }
                //隐患未及时审核
                List<AcSaftyAudit> acSaftyAuditList = new ArrayList<>();
                acSaftyAuditList = acSaftyAuditService.selectAllExcption(name, year);

                for (int p = 0; p < acSaftyAuditList.size(); p++) {
                    AcSaftyAudit acSaftyAudit = acSaftyAuditList.get(p);
                    Date date = acSaftyAudit.getCjsj();
                    Date reviewtime = acSaftyAudit.getShsj();

                    long firstDateMilliSeconds = date.getTime();
                    long secondDateMilliSeconds = reviewtime.getTime();

                    long firstMinusSecond = firstDateMilliSeconds - secondDateMilliSeconds;

                    //毫秒转为秒
                    long milliSeconds = firstMinusSecond;
                    int totalSeconds = (int) (milliSeconds / 1000);

                    int daysRemains = totalSeconds % (3600 * 24);

                    int hours = daysRemains / 3600;

                    if (hours > 2) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("2");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setDetails(name + "隐患未及时审核，扣2分");
                        examAutoEvaluation.setUnit(name);
                        examAutoEvaluation.setUnitId(unitId);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setFromSys("高铁安保卫士");
                        examAutoEvaluation.setModelId("");
                        examAutoEvaluation.setOption(" ");
                        examAutoEvaluation.setOptionId(" ");
                        examAutoEvaluation.setScore("2");
                        examAutoEvaluation.setEvaluationId(unitCode);

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","高铁卫士");
                        //汇总一样标准的数据
                        this.summaryStandard(examAutoEvaluation,2.0,name + "隐患未及时审核，扣2分");
                        this.save(examAutoEvaluation);
                    }
                }

                //警情未及时审核
                List<AcMobileData> acMobileDataList = new ArrayList<>();
                acMobileDataList = acMobileDataService.selectAllExcption(name, year);

                for (int p = 0; p < acMobileDataList.size(); p++) {
                    AcMobileData acMobileData = acMobileDataList.get(p);
                    String date = acMobileData.getAcDate();
                    String reviewtime = acMobileData.getCjsj();

                    Date date1 = new Date(date);
                    Date date2 = new Date(reviewtime);

                    long firstDateMilliSeconds = date1.getTime();
                    long secondDateMilliSeconds = date2.getTime();

                    long firstMinusSecond = firstDateMilliSeconds - secondDateMilliSeconds;

                    //毫秒转为秒
                    long milliSeconds = firstMinusSecond;
                    int totalSeconds = (int) (milliSeconds / 1000);

                    int daysRemains = totalSeconds % (3600 * 24);

                    int hours = daysRemains / 3600;

                    if (hours > 2) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("2");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setDetails(name + "警情未及时审核，扣2分");
                        examAutoEvaluation.setUnit(name);
                        examAutoEvaluation.setUnitId(unitId);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setFromSys("高铁安保卫士");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setModelId("");
                        examAutoEvaluation.setOption(" ");
                        examAutoEvaluation.setOptionId(" ");
                        examAutoEvaluation.setScore("2");
                        examAutoEvaluation.setEvaluationId(unitCode);
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","高铁卫士");
                        //汇总一样标准的数据
                        this.summaryStandard(examAutoEvaluation,2.0,name + "警情未及时审核，扣2分");
                        this.save(examAutoEvaluation);

                }
            }
        }
        for (int i = 0; i < lzcPartyList.size(); i++) {
            Office office = lzcPartyList.get(i);
            String unitId = office.getId();
            String name = office.getName();
            String code = office.getCode();
            String unitCode = userDao.selectUserId(code);
            List<Patrolrecord> patrolrecordList = new ArrayList<>();
            patrolrecordList = patrolrecordService.selectAllExcption(code,yearL,yearT);

            for (int p = 0; p < patrolrecordList.size(); p++) {
                Patrolrecord patrolrecord = patrolrecordList.get(p);
                String date = patrolrecord.getDate();
                String reviewtime = patrolrecord.getReviewtime();
                int hours = subDateTime(date, reviewtime);

                if (hours > 2) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + year + "年" + "异常打卡点、隐患、警情未及时审核，扣分（收到信息2小时内审核）");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setFromSys("高铁安保卫士");
                    examAutoEvaluation.setModel("");
                    examAutoEvaluation.setModelId("");
                    examAutoEvaluation.setOption(" ");
                    examAutoEvaluation.setOptionId(" ");
                    examAutoEvaluation.setScore("2");
                    examAutoEvaluation.setEvaluationId(unitCode);
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","高铁卫士");
                    //汇总一样标准的数据
                    this.summaryStandard(examAutoEvaluation,2.0,name + year + "年" + "异常打卡点、隐患、警情未及时审核，扣分（收到信息2小时内审核）");
                    this.save(examAutoEvaluation);

                }
            }
            //隐患未及时审核
            List<AcSaftyAudit> acSaftyAuditList = new ArrayList<>();
            acSaftyAuditList = acSaftyAuditService.selectAllExcption(name, year);

            for (int p = 0; p < acSaftyAuditList.size(); p++) {
                AcSaftyAudit acSaftyAudit = acSaftyAuditList.get(p);
                Date date = acSaftyAudit.getCjsj();
                Date reviewtime = acSaftyAudit.getShsj();

                long firstDateMilliSeconds = date.getTime();
                long secondDateMilliSeconds = reviewtime.getTime();

                long firstMinusSecond = firstDateMilliSeconds - secondDateMilliSeconds;

                //毫秒转为秒
                long milliSeconds = firstMinusSecond;
                int totalSeconds = (int) (milliSeconds / 1000);

                int daysRemains = totalSeconds % (3600 * 24);

                int hours = daysRemains / 3600;

                if (hours > 2) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + "隐患未及时审核，扣2分");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("");
                    examAutoEvaluation.setFromSys("高铁安保卫士");
                    examAutoEvaluation.setModelId("");
                    examAutoEvaluation.setOption(" ");
                    examAutoEvaluation.setOptionId(" ");
                    examAutoEvaluation.setScore("2");
                    examAutoEvaluation.setEvaluationId(unitCode);
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","高铁卫士");
                    //汇总一样标准的数据
                    this.summaryStandard(examAutoEvaluation,2.0,name + "隐患未及时审核，扣2分");
                    this.save(examAutoEvaluation);
                }
            }

            //警情未及时审核
            List<AcMobileData> acMobileDataList = new ArrayList<>();
            acMobileDataList = acMobileDataService.selectAllExcption(name, year);

            for (int p = 0; p < acMobileDataList.size(); p++) {
                AcMobileData acMobileData = acMobileDataList.get(p);
                String date = acMobileData.getAcDate();
                String reviewtime = acMobileData.getCjsj();

                Date date1 = new Date(date);
                Date date2 = new Date(reviewtime);

                long firstDateMilliSeconds = date1.getTime();
                long secondDateMilliSeconds = date2.getTime();

                long firstMinusSecond = firstDateMilliSeconds - secondDateMilliSeconds;

                //毫秒转为秒
                long milliSeconds = firstMinusSecond;
                int totalSeconds = (int) (milliSeconds / 1000);

                int daysRemains = totalSeconds % (3600 * 24);

                int hours = daysRemains / 3600;

                if (hours > 2) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + "警情未及时审核，扣2分");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setFromSys("高铁安保卫士");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("");
                    examAutoEvaluation.setModelId("");
                    examAutoEvaluation.setOption(" ");
                    examAutoEvaluation.setOptionId(" ");
                    examAutoEvaluation.setScore("2");
                    examAutoEvaluation.setEvaluationId(unitCode);
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","高铁卫士");
                    //汇总一样标准的数据
                    this.summaryStandard(examAutoEvaluation,2.0,name + "警情未及时审核，扣2分");
                    this.save(examAutoEvaluation);

                }
            }
        }
        for (int i = 0; i < bhcPartyList.size(); i++) {
            Office office = bhcPartyList.get(i);
            String unitId = office.getId();
            String name = office.getName();
            String code = office.getCode();
            String unitCode = userDao.selectUserId(code);
            List<Patrolrecord> patrolrecordList = new ArrayList<>();
            patrolrecordList = patrolrecordService.selectAllExcption(code,yearL,yearT);

            for (int p = 0; p < patrolrecordList.size(); p++) {
                Patrolrecord patrolrecord = patrolrecordList.get(p);
                String date = patrolrecord.getDate();
                String reviewtime = patrolrecord.getReviewtime();
                int hours = subDateTime(date, reviewtime);

                if (hours > 2) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + year + "年" + "异常打卡点、隐患、警情未及时审核，扣分（收到信息2小时内审核）");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setFromSys("高铁安保卫士");
                    examAutoEvaluation.setModel("2020年年度北海处对派出所、刑警三大队绩效考核扣分标准(业务部分)");
                    examAutoEvaluation.setModelId("ebbe5612a316481586636fef3fb8840d");
                    examAutoEvaluation.setOption("检查发现“高铁安保卫士”管理使用存在问题的（以通报为准）");
                    examAutoEvaluation.setOptionId("b340ba772a8c4bab85049096c1974e37");
                    examAutoEvaluation.setScore("2");
                    examAutoEvaluation.setEvaluationId(unitCode);
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","高铁卫士");
                    //汇总一样标准的数据
                    this.summaryStandard(examAutoEvaluation,2.0,name + year + "年" + "异常打卡点、隐患、警情未及时审核，扣分（收到信息2小时内审核）");
                    this.save(examAutoEvaluation);

                }
            }
            //隐患未及时审核
            List<AcSaftyAudit> acSaftyAuditList = new ArrayList<>();
            acSaftyAuditList = acSaftyAuditService.selectAllExcption(name, year);

            for (int p = 0; p < acSaftyAuditList.size(); p++) {
                AcSaftyAudit acSaftyAudit = acSaftyAuditList.get(p);
                Date date = acSaftyAudit.getCjsj();
                Date reviewtime = acSaftyAudit.getShsj();

                long firstDateMilliSeconds = date.getTime();
                long secondDateMilliSeconds = reviewtime.getTime();

                long firstMinusSecond = firstDateMilliSeconds - secondDateMilliSeconds;

                //毫秒转为秒
                long milliSeconds = firstMinusSecond;
                int totalSeconds = (int) (milliSeconds / 1000);

                int daysRemains = totalSeconds % (3600 * 24);

                int hours = daysRemains / 3600;

                if (hours > 2) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + "隐患未及时审核，扣2分");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setFromSys("高铁安保卫士");
                    examAutoEvaluation.setModel("2020年年度北海处对派出所、刑警三大队绩效考核扣分标准(业务部分)");
                    examAutoEvaluation.setModelId("ebbe5612a316481586636fef3fb8840d");
                    examAutoEvaluation.setOption("检查发现“高铁安保卫士”管理使用存在问题的（以通报为准）");
                    examAutoEvaluation.setOptionId("b340ba772a8c4bab85049096c1974e37");
                    examAutoEvaluation.setScore("2");
                    examAutoEvaluation.setEvaluationId(unitCode);

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","高铁卫士");
                    //汇总一样标准的数据
                    this.summaryStandard(examAutoEvaluation,2.0,name + "隐患未及时审核，扣2分");
                    this.save(examAutoEvaluation);
                }
            }

            //警情未及时审核
            List<AcMobileData> acMobileDataList = new ArrayList<>();
            acMobileDataList = acMobileDataService.selectAllExcption(name, year);

            for (int p = 0; p < acMobileDataList.size(); p++) {
                AcMobileData acMobileData = acMobileDataList.get(p);
                String date = acMobileData.getAcDate();
                String reviewtime = acMobileData.getCjsj();

                Date date1 = new Date(date);
                Date date2 = new Date(reviewtime);

                long firstDateMilliSeconds = date1.getTime();
                long secondDateMilliSeconds = date2.getTime();

                long firstMinusSecond = firstDateMilliSeconds - secondDateMilliSeconds;

                //毫秒转为秒
                long milliSeconds = firstMinusSecond;
                int totalSeconds = (int) (milliSeconds / 1000);

                int daysRemains = totalSeconds % (3600 * 24);

                int hours = daysRemains / 3600;

                if (hours > 2) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + "警情未及时审核，扣2分");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setFromSys("高铁安保卫士");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("2020年年度北海处对派出所、刑警三大队绩效考核扣分标准(业务部分)");
                    examAutoEvaluation.setModelId("ebbe5612a316481586636fef3fb8840d");
                    examAutoEvaluation.setOption("检查发现“高铁安保卫士”管理使用存在问题的（以通报为准）");
                    examAutoEvaluation.setOptionId("b340ba772a8c4bab85049096c1974e37");
                    examAutoEvaluation.setScore("2");
                    examAutoEvaluation.setEvaluationId(unitCode);
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","高铁卫士");
                    //汇总一样标准的数据
                    this.summaryStandard(examAutoEvaluation,2.0,name + "警情未及时审核，扣2分");
                    this.save(examAutoEvaluation);

                }
            }
        }
    }

    @Transactional(readOnly = false)
    public void ckpcsHf(String checkTime) {

        String year = checkTime.substring(0, 4);
        Integer y = Integer.valueOf(year);
        String month = checkTime.substring(checkTime.length() - 2);
        Integer m = Integer.valueOf(month);
        Integer lastMonth = m - 1;
        Integer lastYear = y - 1;
        Map<String, String> time = monthTime(checkTime);
        String yearL = time.get("yearL");
        String yearT = time.get("yearT");
        List<Office> nncPartyList = officeDao.getChuUnit("34", "2");
        List<Office> lzcPartyList = officeDao.getChuUnit("95", "2");
        List<Office> bhcPartyList = officeDao.getChuUnit("156", "2");

        for (int n = 0; n < nncPartyList.size(); n++) {
            Office office = nncPartyList.get(n);
            String name = office.getName();
            String unitId = office.getId();
            String code = office.getCode();
            //本单位下所有需要回访的患者
                List<Ren001> ren001List = new ArrayList<>();
                String dj = "一级";
                ren001List = ren001Service.selectAllPeople(code, dj);

                for (int r = 0; r < ren001List.size(); r++) {
                    Ren001 ren001 = ren001List.get(r);
                    //患者id
                    String id = ren001.getId();
                    List<String> acIdList = new ArrayList<>();
                    acIdList = tAcVisitLinkRenService.selectAllRecode(id);
                    for (int i = 0; i < acIdList.size(); i++) {
                        String acId = acIdList.get(i);
                        Integer num = acMobileDataService.selectNum(acId,yearL,yearT);
                        if (num == 0) {
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("3");
                            examAutoEvaluation.setPeriod("1");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setMonth(month);
                            examAutoEvaluation.setDetails(name + "检查发现派出所未按时对精神病患者等重点人员防控等级进行回访，扣2分");
                            examAutoEvaluation.setUnit(name);
                            examAutoEvaluation.setUnitId(unitId);
                            examAutoEvaluation.setAssess("");
                            examAutoEvaluation.setAssessId("");
                            examAutoEvaluation.setModel("");
                            examAutoEvaluation.setModelId("");
                            examAutoEvaluation.setOption(" ");
                            examAutoEvaluation.setOptionId(" ");
                            examAutoEvaluation.setScore("2");
                            examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","高铁卫士对精神病回访");
                            this.summaryStandard(examAutoEvaluation,2.0,name + "检查发现派出所未按时对精神病患者等重点人员防控等级进行回访，扣2分");
                            this.save(examAutoEvaluation);

                    }
                }
            }
        }
        for (int n = 0; n < lzcPartyList.size(); n++) {
            Office office = lzcPartyList.get(n);
            String name = office.getName();
            String unitId = office.getId();
            String code = office.getCode();
            //本单位下所有需要回访的患者
            List<Ren001> ren001List = new ArrayList<>();
            String dj = "一级";
            ren001List = ren001Service.selectAllPeople(code, dj);

            for (int r = 0; r < ren001List.size(); r++) {
                Ren001 ren001 = ren001List.get(r);
                //患者id
                String id = ren001.getId();
                List<String> acIdList = new ArrayList<>();
                acIdList = tAcVisitLinkRenService.selectAllRecode(id);
                for (int i = 0; i < acIdList.size(); i++) {
                    String acId = acIdList.get(i);
                    Integer num = acMobileDataService.selectNum(acId,yearL,yearT);
                    if (num == 0) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails(name + "检查发现派出所未按时对精神病患者等重点人员防控等级进行回访，扣2分");
                        examAutoEvaluation.setUnit(name);
                        examAutoEvaluation.setUnitId(unitId);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setModelId("");
                        examAutoEvaluation.setOption(" ");
                        examAutoEvaluation.setOptionId(" ");
                        examAutoEvaluation.setScore("2");

                        examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","高铁卫士对精神病回访");
                        this.summaryStandard(examAutoEvaluation,2.0,name + "检查发现派出所未按时对精神病患者等重点人员防控等级进行回访，扣2分");
                        this.save(examAutoEvaluation);

                    }
                }
            }
        }
        for (int n = 0; n < bhcPartyList.size(); n++) {
            Office office = bhcPartyList.get(n);
            String name = office.getName();
            String unitId = office.getId();
            String code = office.getCode();
            //本单位下所有需要回访的患者
            List<Ren001> ren001List = new ArrayList<>();
            String dj = "一级";
            ren001List = ren001Service.selectAllPeople(code, dj);

            for (int r = 0; r < ren001List.size(); r++) {
                Ren001 ren001 = ren001List.get(r);
                //患者id
                String id = ren001.getId();
                List<String> acIdList = new ArrayList<>();
                acIdList = tAcVisitLinkRenService.selectAllRecode(id);
                for (int i = 0; i < acIdList.size(); i++) {
                    String acId = acIdList.get(i);
                    Integer num = acMobileDataService.selectNum(acId,yearL,yearT);
                    if (num == 0) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails(name + "检查发现派出所未按时对精神病患者等重点人员防控等级进行回访，扣2分");
                        examAutoEvaluation.setUnit(name);
                        examAutoEvaluation.setUnitId(unitId);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setModelId("");
                        examAutoEvaluation.setOption(" ");
                        examAutoEvaluation.setOptionId(" ");
                        examAutoEvaluation.setScore("2");

                        examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","高铁卫士对精神病回访");
                        this.summaryStandard(examAutoEvaluation,2.0,name + "检查发现派出所未按时对精神病患者等重点人员防控等级进行回访，扣2分");
                        this.save(examAutoEvaluation);

                    }
                }
            }
        }
    }

    @Transactional(readOnly = false)
    public void ckpcsHfQuarter(String checkTime) {

        String year = checkTime.substring(0, 4);
        String month = checkTime.substring(checkTime.length() - 2);

        String yearL = null;
        String yearT = null;
        if (month.equals("01")) {
            int ly = Integer.valueOf(year);
            int lastYear = ly - 1;
            yearL = lastYear + "-12-26";
            yearT = year + "-03-25";
        } else if (month.equals("02")) {
            yearL = year + "-03-26";
            yearT = year + "-06-25";
        } else if (month.equals("03")) {
            yearL = year + "-06-26";
            yearT = year + "-09-25";
        } else if (month.equals("04")) {
            yearL = year + "-09-26";
            yearT = year + "-12-25";
        }

        List<Office> nncPartyList = officeDao.getChuUnit("34", "2");
        List<Office> lzcPartyList = officeDao.getChuUnit("95", "2");
        List<Office> bhcPartyList = officeDao.getChuUnit("156", "2");

        for (int n = 0; n < nncPartyList.size(); n++) {
            Office office = nncPartyList.get(n);
            String name = office.getName();
            String unitId = office.getId();
            String code = office.getCode();

            //本单位下所有需要回访的患者
                List<Ren001> ren001List = new ArrayList<>();
                String dj = "二级";
                ren001List = ren001Service.selectAllPeople(code, dj);

                for (int r = 0; r < ren001List.size(); r++) {
                    Ren001 ren001 = ren001List.get(r);
                    //患者id
                    String id = ren001.getId();
                    List<String> acIdList = new ArrayList<>();
                    acIdList = tAcVisitLinkRenService.selectAllRecode(id);
                    for (int i = 0; i < acIdList.size(); i++) {
                        String acId = acIdList.get(i);
                        Integer num = acMobileDataService.selectNum(acId,yearL,yearT);
                        if (num == 0) {
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("3");
                            examAutoEvaluation.setPeriod("1");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setMonth(month);
                            examAutoEvaluation.setDetails(name + "检查发现派出所未按时对精神病患者等重点人员防控等级进行回访，扣2分");
                            examAutoEvaluation.setUnit(name);
                            examAutoEvaluation.setUnitId(unitId);
                            examAutoEvaluation.setAssess("");
                            examAutoEvaluation.setAssessId("");
                            examAutoEvaluation.setModel("");
                            examAutoEvaluation.setModelId("");
                            examAutoEvaluation.setOption(" ");
                            examAutoEvaluation.setOptionId(" ");
                            examAutoEvaluation.setScore("2");

                            examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","高铁卫士对精神病回访");


                            this.save(examAutoEvaluation);

                    }
                }
            }
        }
        for (int n = 0; n < lzcPartyList.size(); n++) {
            Office office = lzcPartyList.get(n);
            String name = office.getName();
            String unitId = office.getId();
            String code = office.getCode();

            //本单位下所有需要回访的患者
            List<Ren001> ren001List = new ArrayList<>();
            String dj = "二级";
            ren001List = ren001Service.selectAllPeople(code, dj);

            for (int r = 0; r < ren001List.size(); r++) {
                Ren001 ren001 = ren001List.get(r);
                //患者id
                String id = ren001.getId();
                List<String> acIdList = new ArrayList<>();
                acIdList = tAcVisitLinkRenService.selectAllRecode(id);
                for (int i = 0; i < acIdList.size(); i++) {
                    String acId = acIdList.get(i);
                    Integer num = acMobileDataService.selectNum(acId,yearL,yearT);
                    if (num == 0) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails(name + "检查发现派出所未按时对精神病患者等重点人员防控等级进行回访，扣2分");
                        examAutoEvaluation.setUnit(name);
                        examAutoEvaluation.setUnitId(unitId);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setModelId("");
                        examAutoEvaluation.setOption(" ");
                        examAutoEvaluation.setOptionId(" ");
                        examAutoEvaluation.setScore("2");

                        examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","高铁卫士对精神病回访");
                        this.save(examAutoEvaluation);

                    }
                }
            }
        }
        for (int n = 0; n < bhcPartyList.size(); n++) {
            Office office = bhcPartyList.get(n);
            String name = office.getName();
            String unitId = office.getId();
            String code = office.getCode();

            //本单位下所有需要回访的患者
            List<Ren001> ren001List = new ArrayList<>();
            String dj = "二级";
            ren001List = ren001Service.selectAllPeople(code, dj);

            for (int r = 0; r < ren001List.size(); r++) {
                Ren001 ren001 = ren001List.get(r);
                //患者id
                String id = ren001.getId();
                List<String> acIdList = new ArrayList<>();
                acIdList = tAcVisitLinkRenService.selectAllRecode(id);
                for (int i = 0; i < acIdList.size(); i++) {
                    String acId = acIdList.get(i);
                    Integer num = acMobileDataService.selectNum(acId,yearL,yearT);
                    if (num == 0) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails(name + "检查发现派出所未按时对精神病患者等重点人员防控等级进行回访，扣2分");
                        examAutoEvaluation.setUnit(name);
                        examAutoEvaluation.setUnitId(unitId);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setModelId("");
                        examAutoEvaluation.setOption(" ");
                        examAutoEvaluation.setOptionId(" ");
                        examAutoEvaluation.setScore("2");

                        examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","高铁卫士对精神病回访");
                        this.save(examAutoEvaluation);

                    }
                }
            }
        }
    }

    @Transactional(readOnly = false)
    public void ckpcsHfHalf(String checkTime) {

        String year = checkTime.substring(0, 4);
        String lastNum = checkTime.substring(checkTime.length() - 2);


        String lastYear = String.valueOf(Integer.valueOf(year) - 1);
        String yearL = lastYear + "-12" + "-26";
        String yearT = year + "-06" + "-25";


        List<Office> nncPartyList = officeDao.getChuUnit("34", "2");
        List<Office> lzcPartyList = officeDao.getChuUnit("95", "2");
        List<Office> bhcPartyList = officeDao.getChuUnit("156", "2");

        for (int n = 0; n < nncPartyList.size(); n++) {
            Office office = nncPartyList.get(n);
            String unitId = office.getId();
            String code = office.getCode();
            String name = office.getName();

            //本单位下所有需要回访的患者
            List<Ren001> ren001List = new ArrayList<>();
            String dj = "三级";
            ren001List = ren001Service.selectAllPeople(code, dj);

            for (int r = 0; r < ren001List.size(); r++) {
                Ren001 ren001 = ren001List.get(r);
                //患者id
                String id = ren001.getId();
                List<String> acIdList = new ArrayList<>();
                acIdList = tAcVisitLinkRenService.selectAllRecode(id);
                for (int i = 0; i < acIdList.size(); i++) {
                    String acId = acIdList.get(i);
                    Integer num = acMobileDataService.selectNum(acId,yearL,yearT);
                    if (num == 0) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(lastNum);
                        examAutoEvaluation.setDetails(name + "检查发现派出所未按时对精神病患者等重点人员防控等级进行回访，扣2分");
                        examAutoEvaluation.setUnit(name);
                        examAutoEvaluation.setUnitId(unitId);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setModelId("");
                        examAutoEvaluation.setOption(" ");
                        examAutoEvaluation.setOptionId(" ");
                        examAutoEvaluation.setScore("2");

                        examAutoEvaluation.setEvaluationId(code);
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","高铁卫士对精神病回访");
                        this.save(examAutoEvaluation);

                    }
                }
            }
        }
        for (int n = 0; n < lzcPartyList.size(); n++) {
            Office office = lzcPartyList.get(n);
            String unitId = office.getId();
            String code = office.getCode();
            String name = office.getName();

            //本单位下所有需要回访的患者
            List<Ren001> ren001List = new ArrayList<>();
            String dj = "三级";
            ren001List = ren001Service.selectAllPeople(code, dj);

            for (int r = 0; r < ren001List.size(); r++) {
                Ren001 ren001 = ren001List.get(r);
                //患者id
                String id = ren001.getId();
                List<String> acIdList = new ArrayList<>();
                acIdList = tAcVisitLinkRenService.selectAllRecode(id);
                for (int i = 0; i < acIdList.size(); i++) {
                    String acId = acIdList.get(i);
                    Integer num = acMobileDataService.selectNum(acId,yearL,yearT);
                    if (num == 0) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(lastNum);
                        examAutoEvaluation.setDetails(name + "检查发现派出所未按时对精神病患者等重点人员防控等级进行回访，扣2分");
                        examAutoEvaluation.setUnit(name);
                        examAutoEvaluation.setUnitId(unitId);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setModelId("");
                        examAutoEvaluation.setOption(" ");
                        examAutoEvaluation.setOptionId(" ");
                        examAutoEvaluation.setScore("2");

                        examAutoEvaluation.setEvaluationId(code);
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","高铁卫士对精神病回访");
                        this.save(examAutoEvaluation);

                    }
                }
            }
        }
        for (int n = 0; n < bhcPartyList.size(); n++) {
            Office office = bhcPartyList.get(n);
            String unitId = office.getId();
            String code = office.getCode();
            String name = office.getName();

            //本单位下所有需要回访的患者
            List<Ren001> ren001List = new ArrayList<>();
            String dj = "三级";
            ren001List = ren001Service.selectAllPeople(code, dj);

            for (int r = 0; r < ren001List.size(); r++) {
                Ren001 ren001 = ren001List.get(r);
                //患者id
                String id = ren001.getId();
                List<String> acIdList = new ArrayList<>();
                acIdList = tAcVisitLinkRenService.selectAllRecode(id);
                for (int i = 0; i < acIdList.size(); i++) {
                    String acId = acIdList.get(i);
                    Integer num = acMobileDataService.selectNum(acId,yearL,yearT);
                    if (num == 0) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(lastNum);
                        examAutoEvaluation.setDetails(name + "检查发现派出所未按时对精神病患者等重点人员防控等级进行回访，扣2分");
                        examAutoEvaluation.setUnit(name);
                        examAutoEvaluation.setUnitId(unitId);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setModelId("");
                        examAutoEvaluation.setOption(" ");
                        examAutoEvaluation.setOptionId(" ");
                        examAutoEvaluation.setScore("2");

                        examAutoEvaluation.setEvaluationId(code);
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","高铁卫士对精神病回访");
                        this.save(examAutoEvaluation);

                    }
                }
            }
        }
    }

    @Transactional(readOnly = false)
    public void ckpcsHfYear(String year) {

        String lastYear = String.valueOf(Integer.valueOf(year) - 1);
        String yearL = lastYear + "-12" + "-02";
        String yearT = year + "-12" + "-01";

        List<Office> nncPartyList = officeDao.getChuUnit("34", "2");
        List<Office> lzcPartyList = officeDao.getChuUnit("95", "2");
        List<Office> bhcPartyList = officeDao.getChuUnit("156", "2");

        for (int n = 0; n < nncPartyList.size(); n++) {
            Office office = nncPartyList.get(n);
            String name = office.getName();
            String unitId = office.getId();
            String code = office.getCode();

            //本单位下所有需要回访的患者
            List<Ren001> ren001List = new ArrayList<>();
            String dj = "四级";
            ren001List = ren001Service.selectAllPeople(code, dj);

            for (int r = 0; r < ren001List.size(); r++) {
                Ren001 ren001 = ren001List.get(r);
                //患者id
                String id = ren001.getId();
                List<String> acIdList = new ArrayList<>();
                acIdList = tAcVisitLinkRenService.selectAllRecode(id);
                for (int i = 0; i < acIdList.size(); i++) {
                    String acId = acIdList.get(i);
                    Integer num = acMobileDataService.selectNum(acId,yearL,yearT);
                    if (num == 0) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setDetails(name + "检查发现派出所未按时对精神病患者等重点人员防控等级进行回访（以通报为准），每次扣2分。 ");
                        examAutoEvaluation.setUnit(name);
                        examAutoEvaluation.setUnitId(unitId);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setModelId("");
                        examAutoEvaluation.setOption(" ");
                        examAutoEvaluation.setOptionId(" ");
                        examAutoEvaluation.setScore("2");

                        examAutoEvaluation.setEvaluationId(code);
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","高铁卫士对精神病回访");
                        this.save(examAutoEvaluation);

                    }
                }
            }
        }
        for (int n = 0; n < lzcPartyList.size(); n++) {
            Office office = lzcPartyList.get(n);
            String name = office.getName();
            String unitId = office.getId();
            String code = office.getCode();

            //本单位下所有需要回访的患者
            List<Ren001> ren001List = new ArrayList<>();
            String dj = "四级";
            ren001List = ren001Service.selectAllPeople(code, dj);

            for (int r = 0; r < ren001List.size(); r++) {
                Ren001 ren001 = ren001List.get(r);
                //患者id
                String id = ren001.getId();
                List<String> acIdList = new ArrayList<>();
                acIdList = tAcVisitLinkRenService.selectAllRecode(id);
                for (int i = 0; i < acIdList.size(); i++) {
                    String acId = acIdList.get(i);
                    Integer num = acMobileDataService.selectNum(acId,yearL,yearT);
                    if (num == 0) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setDetails(name + "检查发现派出所未按时对精神病患者等重点人员防控等级进行回访（以通报为准），每次扣2分。 ");
                        examAutoEvaluation.setUnit(name);
                        examAutoEvaluation.setUnitId(unitId);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setModelId("");
                        examAutoEvaluation.setOption(" ");
                        examAutoEvaluation.setOptionId(" ");
                        examAutoEvaluation.setScore("2");

                        examAutoEvaluation.setEvaluationId(code);
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","高铁卫士对精神病回访");
                        this.save(examAutoEvaluation);

                    }
                }
            }
        }
        for (int n = 0; n < bhcPartyList.size(); n++) {
            Office office = bhcPartyList.get(n);
            String name = office.getName();
            String unitId = office.getId();
            String code = office.getCode();

            //本单位下所有需要回访的患者
            List<Ren001> ren001List = new ArrayList<>();
            String dj = "四级";
            ren001List = ren001Service.selectAllPeople(code, dj);

            for (int r = 0; r < ren001List.size(); r++) {
                Ren001 ren001 = ren001List.get(r);
                //患者id
                String id = ren001.getId();
                List<String> acIdList = new ArrayList<>();
                acIdList = tAcVisitLinkRenService.selectAllRecode(id);
                for (int i = 0; i < acIdList.size(); i++) {
                    String acId = acIdList.get(i);
                    Integer num = acMobileDataService.selectNum(acId,yearL,yearT);
                    if (num == 0) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setDetails(name + "检查发现派出所未按时对精神病患者等重点人员防控等级进行回访（以通报为准），每次扣2分。 ");
                        examAutoEvaluation.setUnit(name);
                        examAutoEvaluation.setUnitId(unitId);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setModelId("");
                        examAutoEvaluation.setOption(" ");
                        examAutoEvaluation.setOptionId(" ");
                        examAutoEvaluation.setScore("2");

                        examAutoEvaluation.setEvaluationId(code);
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","高铁卫士对精神病回访");
                        this.save(examAutoEvaluation);

                    }
                }
            }
        }
    }

    /*
     * 局考处
     *
     * 对精神病患回访
     * */
    @Transactional(readOnly = false)
    public void jkcHf(String checkTime) {

        String year = checkTime.substring(0, 4);
        String month = checkTime.substring(checkTime.length() - 2);

        Integer m = Integer.valueOf(month);
        Integer lastMonth = m - 1;
        String yearL = year + "-" + lastMonth + "-26";
        String yearT = year + "-" + month + "-25";

        //公安处
        List<Office> nncPartyList = officeDao.selectChuUnitList("34");
        List<Office> lzcPartyList = officeDao.selectChuUnitList("95");
        List<Office> bhcPartyList = officeDao.selectChuUnitList("156");

        StringBuilder nncDeatils = new StringBuilder();
        StringBuilder lzcDeatils = new StringBuilder();
        StringBuilder bhcDeatils = new StringBuilder();

        int nncSum = 0;
        int lzcSum = 0;
        int bhcSum = 0;

        for (int o = 0; o < nncPartyList.size(); o++) {
            Office office = nncPartyList.get(o);

            //公安处名称
            String name = office.getName();
            String code = office.getCode();
            //公安处id
            String unitId = office.getId();
            //本单位下所有需要回访的患者
            List<Ren001> ren001List = new ArrayList<>();
            String dj = "一级";
            ren001List = ren001Service.selectAllPeople(code, dj);

            for (int r = 0; r < ren001List.size(); r++) {
                Ren001 ren001 = ren001List.get(r);
                //患者id
                String id = ren001.getId();
                List<String> acIdList = new ArrayList<>();
                acIdList = tAcVisitLinkRenService.selectAllRecode(id);
                for (int i = 0; i < acIdList.size(); i++) {
                    String acId = acIdList.get(i);
                    Integer num = acMobileDataService.selectNum(acId,yearL,yearT);
                    if (num == 0) {
                        nncSum++;
                        nncDeatils.append(name).append(",");
                    }
                }
            }
        }
        if (nncSum > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("3");
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setDetails(nncDeatils + "检查发现派出所未按时对精神病患者等重点人员防控等级进行回访，扣2分");
            examAutoEvaluation.setUnit("南宁处治安支队");
            examAutoEvaluation.setUnitId("45");
            examAutoEvaluation.setEvaluationId("aab30465f28547a4bdc69fd652ff8a4c");
            examAutoEvaluation.setAssess("");
            examAutoEvaluation.setAssessId("");
            examAutoEvaluation.setModel("");
            examAutoEvaluation.setModelId("");
            examAutoEvaluation.setOption(" ");
            examAutoEvaluation.setOptionId(" ");
            examAutoEvaluation.setScore("2");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"高铁卫士对精神病回访");

            this.summaryStandard(examAutoEvaluation,2.0,nncDeatils+"检查发现派出所未按时对精神病患者等重点人员防控等级进行回访，扣2分");
            this.save(examAutoEvaluation);

        }
        for (int o = 0; o < lzcPartyList.size(); o++) {
            Office office = lzcPartyList.get(o);

            //公安处名称
            String name = office.getName();
            String code = office.getCode();
            //公安处id
            String unitId = office.getId();
            //本单位下所有需要回访的患者
            List<Ren001> ren001List = new ArrayList<>();
            String dj = "一级";
            ren001List = ren001Service.selectAllPeople(code, dj);

            for (int r = 0; r < ren001List.size(); r++) {
                Ren001 ren001 = ren001List.get(r);
                //患者id
                String id = ren001.getId();
                List<String> acIdList = new ArrayList<>();
                acIdList = tAcVisitLinkRenService.selectAllRecode(id);
                for (int i = 0; i < acIdList.size(); i++) {
                    String acId = acIdList.get(i);
                    Integer num = acMobileDataService.selectNum(acId,yearL,yearT);
                    if (num == 0) {
                        lzcSum++;
                        lzcDeatils.append(name).append(",");
                    }
                }
            }
        }
        if (lzcSum > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("3");
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setDetails(lzcDeatils + "检查发现派出所未按时对精神病患者等重点人员防控等级进行回访，扣2分");
            examAutoEvaluation.setUnit("柳州处治安支队");
            examAutoEvaluation.setUnitId("160");
            examAutoEvaluation.setEvaluationId("f6461092f65243f9837b4a7fd3e46210");
            examAutoEvaluation.setAssess("");
            examAutoEvaluation.setAssessId("");
            examAutoEvaluation.setModel("");
            examAutoEvaluation.setModelId("");
            examAutoEvaluation.setOption(" ");
            examAutoEvaluation.setOptionId(" ");
            examAutoEvaluation.setScore("2");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"高铁卫士对精神病回访");
            this.summaryStandard(examAutoEvaluation,2.0,lzcDeatils+"检查发现派出所未按时对精神病患者等重点人员防控等级进行回访，扣2分");

            this.save(examAutoEvaluation);

        }
        for (int o = 0; o < bhcPartyList.size(); o++) {
            Office office = bhcPartyList.get(o);

            //公安处名称
            String name = office.getName();
            String code = office.getCode();
            //公安处id
            String unitId = office.getId();
            //本单位下所有需要回访的患者
            List<Ren001> ren001List = new ArrayList<>();
            String dj = "一级";
            ren001List = ren001Service.selectAllPeople(code, dj);

            for (int r = 0; r < ren001List.size(); r++) {
                Ren001 ren001 = ren001List.get(r);
                //患者id
                String id = ren001.getId();
                List<String> acIdList = new ArrayList<>();
                acIdList = tAcVisitLinkRenService.selectAllRecode(id);
                for (int i = 0; i < acIdList.size(); i++) {
                    String acId = acIdList.get(i);
                    Integer num = acMobileDataService.selectNum(acId,yearL,yearT);
                    if (num == 0) {
                        bhcSum++;
                        bhcDeatils.append(name).append(",");
                    }
                }
            }
        }
        if (bhcSum > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("3");
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setDetails(bhcDeatils + "检查发现派出所未按时对精神病患者等重点人员防控等级进行回访，扣2分");
            examAutoEvaluation.setUnit("北海处治安支队");
            examAutoEvaluation.setUnitId("272");
            examAutoEvaluation.setEvaluationId("b309552b4eb64c78b2540c52daa91b7f");
            examAutoEvaluation.setAssess("");
            examAutoEvaluation.setAssessId("");
            examAutoEvaluation.setModel("");
            examAutoEvaluation.setModelId("");
            examAutoEvaluation.setOption(" ");
            examAutoEvaluation.setOptionId(" ");
            examAutoEvaluation.setScore("2");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"高铁卫士对精神病回访");
            this.summaryStandard(examAutoEvaluation,2.0,bhcDeatils+"检查发现派出所未按时对精神病患者等重点人员防控等级进行回访，扣2分");

            this.save(examAutoEvaluation);

        }
    }

    /*
     * 局考处
     *
     * 对精神病患回访
     * */
    @Transactional(readOnly = false)
    public void jkcHfQuarter(String checkTime) {

        String year = checkTime.substring(0, 4);
        String month = checkTime.substring(checkTime.length() - 2);

        String yearL = null;
        String yearT = null;
        if ("03".equals(month)) {
            int ly = Integer.valueOf(year);
            int lastYear = ly - 1;
            yearL = lastYear + "-12-26";
            yearT = year + "-03-25";
        } else if ("06".equals(month)) {
            yearL = year + "-03-26";
            yearT = year + "-06-25";
        } else if ("09".equals(month)) {
            yearL = year + "-06-26";
            yearT = year + "-09-25";
        } else if ("12".equals(month)) {
            yearL = year + "-09-26";
            yearT = year + "-12-25";
        }

        //公安处
        List<Office> nncPartyList = officeDao.selectChuUnitList("34");
        List<Office> lzcPartyList = officeDao.selectChuUnitList("95");
        List<Office> bhcPartyList = officeDao.selectChuUnitList("156");

        StringBuilder nncDeatils = new StringBuilder();
        StringBuilder lzcDeatils = new StringBuilder();
        StringBuilder bhcDeatils = new StringBuilder();

        int nncSum = 0;
        int lzcSum = 0;
        int bhcSum = 0;

        for (int o = 0; o < nncPartyList.size(); o++) {
            Office office = nncPartyList.get(o);

            //公安处名称
            String name = office.getName();

            //公安处id
            String unitId = office.getId();
            String code = office.getCode();
            //本单位下所有需要回访的患者
            List<Ren001> ren001List = new ArrayList<>();
            String dj = "二级";
            ren001List = ren001Service.selectAllPeople(code, dj);

            for (int r = 0; r < ren001List.size(); r++) {
                Ren001 ren001 = ren001List.get(r);
                //患者id
                String id = ren001.getId();
                List<String> acIdList = new ArrayList<>();
                acIdList = tAcVisitLinkRenService.selectAllRecode(id);
                for (int i = 0; i < acIdList.size(); i++) {
                    String acId = acIdList.get(i);
                    Integer num = acMobileDataService.selectNum(acId,yearL,yearT);
                    if (num == 0) {
                        nncSum++;
                        nncDeatils.append(name).append(",");
                    }
                }
            }
        }
        if (nncSum > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("3");
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setDetails(nncDeatils + "检查发现派出所未按时对精神病患者等重点人员防控等级进行回访，扣2分");
            examAutoEvaluation.setUnit("南宁处治安支队");
            examAutoEvaluation.setUnitId("45");
            examAutoEvaluation.setEvaluationId("aab30465f28547a4bdc69fd652ff8a4c");
            examAutoEvaluation.setAssess("");
            examAutoEvaluation.setAssessId("");
            examAutoEvaluation.setModel("");
            examAutoEvaluation.setModelId("");
            examAutoEvaluation.setOption(" ");
            examAutoEvaluation.setOptionId(" ");
            examAutoEvaluation.setScore("2");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"高铁卫士对精神病回访");
            this.summaryStandard(examAutoEvaluation,2.0,nncDeatils+"检查发现派出所未按时对精神病患者等重点人员防控等级进行回访（以通报为准），每次扣1分。");
            this.save(examAutoEvaluation);
        }
        for (int o = 0; o < lzcPartyList.size(); o++) {
            Office office = lzcPartyList.get(o);

            //公安处名称
            String name = office.getName();
            String code = office.getCode();
            //公安处id
            String unitId = office.getId();
            //本单位下所有需要回访的患者
            List<Ren001> ren001List = new ArrayList<>();
            String dj = "二级";
            ren001List = ren001Service.selectAllPeople(code, dj);

            for (int r = 0; r < ren001List.size(); r++) {
                Ren001 ren001 = ren001List.get(r);
                //患者id
                String id = ren001.getId();
                List<String> acIdList = new ArrayList<>();
                acIdList = tAcVisitLinkRenService.selectAllRecode(id);
                for (int i = 0; i < acIdList.size(); i++) {
                    String acId = acIdList.get(i);
                    Integer num = acMobileDataService.selectNum(acId,yearL,yearT);
                    if (num == 0) {
                        lzcSum++;
                        lzcDeatils.append(name).append(",");
                    }
                }
            }
        }
        if (lzcSum > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("3");
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setDetails(lzcDeatils + "检查发现派出所未按时对精神病患者等重点人员防控等级进行回访，扣2分");
            examAutoEvaluation.setUnit("柳州处治安支队");
            examAutoEvaluation.setUnitId("160");
            examAutoEvaluation.setEvaluationId("f6461092f65243f9837b4a7fd3e46210");
            examAutoEvaluation.setAssess("");
            examAutoEvaluation.setAssessId("");
            examAutoEvaluation.setModel("");
            examAutoEvaluation.setModelId("");
            examAutoEvaluation.setOption(" ");
            examAutoEvaluation.setOptionId(" ");
            examAutoEvaluation.setScore("2");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"高铁卫士对精神病回访");
            this.summaryStandard(examAutoEvaluation,2.0,lzcDeatils+"检查发现派出所未按时对精神病患者等重点人员防控等级进行回访（以通报为准），每次扣1分。");
            this.save(examAutoEvaluation);
        }
        for (int o = 0; o < bhcPartyList.size(); o++) {
            Office office = bhcPartyList.get(o);

            //公安处名称
            String name = office.getName();
            String code = office.getCode();
            //公安处id
            String unitId = office.getId();
            //本单位下所有需要回访的患者
            List<Ren001> ren001List = new ArrayList<>();
            String dj = "二级";
            ren001List = ren001Service.selectAllPeople(code, dj);

            for (int r = 0; r < ren001List.size(); r++) {
                Ren001 ren001 = ren001List.get(r);
                //患者id
                String id = ren001.getId();
                List<String> acIdList = new ArrayList<>();
                acIdList = tAcVisitLinkRenService.selectAllRecode(id);
                for (int i = 0; i < acIdList.size(); i++) {
                    String acId = acIdList.get(i);
                    Integer num = acMobileDataService.selectNum(acId,yearL,yearT);
                    if (num == 0) {
                        bhcSum++;
                        bhcDeatils.append(name).append(",");
                    }
                }
            }
        }
        if (bhcSum > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("3");
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setDetails(bhcDeatils + "检查发现派出所未按时对精神病患者等重点人员防控等级进行回访，扣2分");
            examAutoEvaluation.setUnit("北海处治安支队");
            examAutoEvaluation.setUnitId("272");
            examAutoEvaluation.setEvaluationId("b309552b4eb64c78b2540c52daa91b7f");
            examAutoEvaluation.setAssess("");
            examAutoEvaluation.setAssessId("");
            examAutoEvaluation.setModel("");
            examAutoEvaluation.setModelId("");
            examAutoEvaluation.setOption(" ");
            examAutoEvaluation.setOptionId(" ");
            examAutoEvaluation.setScore("2");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"高铁卫士对精神病回访");
            this.summaryStandard(examAutoEvaluation,2.0,bhcDeatils+"检查发现派出所未按时对精神病患者等重点人员防控等级进行回访（以通报为准），每次扣1分。");
            this.save(examAutoEvaluation);
        }
    }

    /*
     * 局考处
     *
     * 对精神病患回访
     * */
    @Transactional(readOnly = false)
    public void jkcHfHalf(String checkTime) {

        String year = checkTime.substring(0, 4);
        String lastNum = checkTime.substring(checkTime.length() - 2);


        String lastYear = String.valueOf(Integer.valueOf(year) - 1);
        String yearL = lastYear + "-12" + "-26";
        String yearT = year + "-06" + "-25";


        //公安处
        List<Office> nncPartyList = officeDao.selectChuUnitList("34");
        List<Office> lzcPartyList = officeDao.selectChuUnitList("95");
        List<Office> bhcPartyList = officeDao.selectChuUnitList("156");

        StringBuilder nncDeatils = new StringBuilder();
        StringBuilder lzcDeatils = new StringBuilder();
        StringBuilder bhcDeatils = new StringBuilder();

        int nncSum = 0;
        int lzcSum = 0;
        int bhcSum = 0;

        for (int o = 0; o < nncPartyList.size(); o++) {
            Office office = nncPartyList.get(o);

            //公安处名称
            String name = office.getName();
            String code = office.getCode();
            //公安处id
            String unitId = office.getId();
            //本单位下所有需要回访的患者
            List<Ren001> ren001List = new ArrayList<>();
            String dj = "三级";
            ren001List = ren001Service.selectAllPeople(code, dj);

            for (int r = 0; r < ren001List.size(); r++) {
                Ren001 ren001 = ren001List.get(r);
                //患者id
                String id = ren001.getId();
                List<String> acIdList = new ArrayList<>();
                acIdList = tAcVisitLinkRenService.selectAllRecode(id);
                for (int i = 0; i < acIdList.size(); i++) {
                    String acId = acIdList.get(i);
                    Integer num = acMobileDataService.selectNum(acId,yearL,yearT);
                    if (num == 0) {
                        nncSum++;
                        nncDeatils.append(name).append(",");
                    }
                }
            }
        }
        if (nncSum > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("3");
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setMonth(lastNum);
            examAutoEvaluation.setDetails(nncDeatils + "检查发现派出所未按时对精神病患者等重点人员防控等级进行回访，扣2分");
            examAutoEvaluation.setUnit("南宁处治安支队");
            examAutoEvaluation.setUnitId("45");
            examAutoEvaluation.setEvaluationId("aab30465f28547a4bdc69fd652ff8a4c");
            examAutoEvaluation.setAssess("");
            examAutoEvaluation.setAssessId("");
            examAutoEvaluation.setModel("");
            examAutoEvaluation.setModelId("");
            examAutoEvaluation.setOption(" ");
            examAutoEvaluation.setOptionId(" ");
            examAutoEvaluation.setScore("2");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"高铁卫士对精神病回访");
            this.summaryStandard(examAutoEvaluation,2.0,nncDeatils+"检查发现派出所未按时对精神病患者等重点人员防控等级进行回访，扣2分");
            this.save(examAutoEvaluation);
        }
        for (int o = 0; o < lzcPartyList.size(); o++) {
            Office office = lzcPartyList.get(o);

            //公安处名称
            String name = office.getName();
            String code = office.getCode();
            //公安处id
            String unitId = office.getId();
            //本单位下所有需要回访的患者
            List<Ren001> ren001List = new ArrayList<>();
            String dj = "三级";
            ren001List = ren001Service.selectAllPeople(code, dj);

            for (int r = 0; r < ren001List.size(); r++) {
                Ren001 ren001 = ren001List.get(r);
                //患者id
                String id = ren001.getId();
                List<String> acIdList = new ArrayList<>();
                acIdList = tAcVisitLinkRenService.selectAllRecode(id);
                for (int i = 0; i < acIdList.size(); i++) {
                    String acId = acIdList.get(i);
                    Integer num = acMobileDataService.selectNum(acId,yearL,yearT);
                    if (num == 0) {
                        lzcSum++;
                        lzcDeatils.append(name).append(",");
                    }
                }
            }
        }
        if (lzcSum > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("3");
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setMonth(lastNum);
            examAutoEvaluation.setDetails(lzcDeatils + "检查发现派出所未按时对精神病患者等重点人员防控等级进行回访，扣2分");
            examAutoEvaluation.setUnit("柳州处治安支队");
            examAutoEvaluation.setUnitId("160");
            examAutoEvaluation.setEvaluationId("f6461092f65243f9837b4a7fd3e46210");
            examAutoEvaluation.setAssess("");
            examAutoEvaluation.setAssessId("");
            examAutoEvaluation.setModel("");
            examAutoEvaluation.setModelId("");
            examAutoEvaluation.setOption(" ");
            examAutoEvaluation.setOptionId(" ");
            examAutoEvaluation.setScore("2");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"高铁卫士对精神病回访");
            this.summaryStandard(examAutoEvaluation,2.0,lzcDeatils+"检查发现派出所未按时对精神病患者等重点人员防控等级进行回访，扣2分");
            this.save(examAutoEvaluation);
        }
        for (int o = 0; o < bhcPartyList.size(); o++) {
            Office office = bhcPartyList.get(o);

            //公安处名称
            String name = office.getName();
            String code = office.getCode();
            //公安处id
            String unitId = office.getId();
            //本单位下所有需要回访的患者
            List<Ren001> ren001List = new ArrayList<>();
            String dj = "三级";
            ren001List = ren001Service.selectAllPeople(code, dj);

            for (int r = 0; r < ren001List.size(); r++) {
                Ren001 ren001 = ren001List.get(r);
                //患者id
                String id = ren001.getId();
                List<String> acIdList = new ArrayList<>();
                acIdList = tAcVisitLinkRenService.selectAllRecode(id);
                for (int i = 0; i < acIdList.size(); i++) {
                    String acId = acIdList.get(i);
                    Integer num = acMobileDataService.selectNum(acId,yearL,yearT);
                    if (num == 0) {
                        bhcSum++;
                        bhcDeatils.append(name).append(",");
                    }
                }
            }
        }
        if (bhcSum > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("3");
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setMonth(lastNum);
            examAutoEvaluation.setDetails(bhcDeatils + "检查发现派出所未按时对精神病患者等重点人员防控等级进行回访，扣2分");
            examAutoEvaluation.setUnit("北海处治安支队");
            examAutoEvaluation.setUnitId("272");
            examAutoEvaluation.setEvaluationId("b309552b4eb64c78b2540c52daa91b7f");
            examAutoEvaluation.setAssess("");
            examAutoEvaluation.setAssessId("");
            examAutoEvaluation.setModel("");
            examAutoEvaluation.setModelId("");
            examAutoEvaluation.setOption(" ");
            examAutoEvaluation.setOptionId(" ");
            examAutoEvaluation.setScore("2");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"高铁卫士对精神病回访");
            this.summaryStandard(examAutoEvaluation,2.0,bhcDeatils+"检查发现派出所未按时对精神病患者等重点人员防控等级进行回访，扣2分");
            this.save(examAutoEvaluation);
        }
    }

    /*
     * 局考处
     *
     * 对精神病患回访
     * */
    @Transactional(readOnly = false)
    public void jkcHfYear(String year) {

        String lastYear = String.valueOf(Integer.valueOf(year) - 1);
        String yearL = lastYear + "-12" + "-02";
        String yearT = year + "-12" + "-01";

        //公安处
        List<Office> nncPartyList = officeDao.selectChuUnitList("34");
        List<Office> lzcPartyList = officeDao.selectChuUnitList("95");
        List<Office> bhcPartyList = officeDao.selectChuUnitList("156");

        StringBuilder nncDeatils = new StringBuilder();
        StringBuilder lzcDeatils = new StringBuilder();
        StringBuilder bhcDeatils = new StringBuilder();

        int nncSum = 0;
        int lzcSum = 0;
        int bhcSum = 0;

        for (int o = 0; o < nncPartyList.size(); o++) {
            Office office = nncPartyList.get(o);

            //公安处名称
            String name = office.getName();
            String code = office.getCode();
            //公安处id
            String unitId = office.getId();
            //本单位下所有需要回访的患者
            List<Ren001> ren001List = new ArrayList<>();
            String dj = "四级";
            ren001List = ren001Service.selectAllPeople(code, dj);

            for (int r = 0; r < ren001List.size(); r++) {
                Ren001 ren001 = ren001List.get(r);
                //患者id
                String id = ren001.getId();
                List<String> acIdList = new ArrayList<>();
                acIdList = tAcVisitLinkRenService.selectAllRecode(id);
                for (int i = 0; i < acIdList.size(); i++) {
                    String acId = acIdList.get(i);
                    Integer num = acMobileDataService.selectNum(acId,yearL,yearT);
                    if (num == 0) {
                        nncSum++;
                        nncDeatils.append(name).append(",");
                    }
                }
            }
        }
        if (nncSum > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("3");
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setDetails(nncDeatils + "检查发现派出所未按时对精神病患者等重点人员防控等级进行回访（以通报为准），每次扣1分。 ");
            examAutoEvaluation.setUnit("南宁处治安支队");
            examAutoEvaluation.setUnitId("45");
            examAutoEvaluation.setEvaluationId("aab30465f28547a4bdc69fd652ff8a4c");
            examAutoEvaluation.setAssess("");
            examAutoEvaluation.setAssessId("");
            examAutoEvaluation.setModel("");
            examAutoEvaluation.setModelId("");
            examAutoEvaluation.setOption(" ");
            examAutoEvaluation.setOptionId(" ");
            examAutoEvaluation.setScore("1");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"高铁卫士对精神病回访");
            this.summaryStandard(examAutoEvaluation,1.0,nncDeatils+"检查发现派出所未按时对精神病患者等重点人员防控等级进行回访，扣2分");

            this.save(examAutoEvaluation);
        }
        for (int o = 0; o < lzcPartyList.size(); o++) {
            Office office = lzcPartyList.get(o);

            //公安处名称
            String name = office.getName();
            String code = office.getCode();
            //公安处id
            String unitId = office.getId();
            //本单位下所有需要回访的患者
            List<Ren001> ren001List = new ArrayList<>();
            String dj = "四级";
            ren001List = ren001Service.selectAllPeople(code, dj);

            for (int r = 0; r < ren001List.size(); r++) {
                Ren001 ren001 = ren001List.get(r);
                //患者id
                String id = ren001.getId();
                List<String> acIdList = new ArrayList<>();
                acIdList = tAcVisitLinkRenService.selectAllRecode(id);
                for (int i = 0; i < acIdList.size(); i++) {
                    String acId = acIdList.get(i);
                    Integer num = acMobileDataService.selectNum(acId,yearL,yearT);
                    if (num == 0) {
                        lzcSum++;
                        lzcDeatils.append(name).append(",");
                    }
                }
            }
        }
        if (lzcSum > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("3");
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setDetails(lzcDeatils + "检查发现派出所未按时对精神病患者等重点人员防控等级进行回访（以通报为准），每次扣1分。 ");
            examAutoEvaluation.setUnit("柳州处治安支队");
            examAutoEvaluation.setUnitId("160");
            examAutoEvaluation.setEvaluationId("f6461092f65243f9837b4a7fd3e46210");
            examAutoEvaluation.setAssess("");
            examAutoEvaluation.setAssessId("");
            examAutoEvaluation.setModel("");
            examAutoEvaluation.setModelId("");
            examAutoEvaluation.setOption(" ");
            examAutoEvaluation.setOptionId(" ");
            examAutoEvaluation.setScore("1");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"高铁卫士对精神病回访");
            this.summaryStandard(examAutoEvaluation,1.0,lzcDeatils+"检查发现派出所未按时对精神病患者等重点人员防控等级进行回访，扣2分");

            this.save(examAutoEvaluation);
        }
        for (int o = 0; o < bhcPartyList.size(); o++) {
            Office office = bhcPartyList.get(o);

            //公安处名称
            String name = office.getName();
            String code = office.getCode();
            //公安处id
            String unitId = office.getId();
            //本单位下所有需要回访的患者
            List<Ren001> ren001List = new ArrayList<>();
            String dj = "四级";
            ren001List = ren001Service.selectAllPeople(code, dj);

            for (int r = 0; r < ren001List.size(); r++) {
                Ren001 ren001 = ren001List.get(r);
                //患者id
                String id = ren001.getId();
                List<String> acIdList = new ArrayList<>();
                acIdList = tAcVisitLinkRenService.selectAllRecode(id);
                for (int i = 0; i < acIdList.size(); i++) {
                    String acId = acIdList.get(i);
                    Integer num = acMobileDataService.selectNum(acId,yearL,yearT);
                    if (num == 0) {
                        bhcSum++;
                        bhcDeatils.append(name).append(",");
                    }
                }
            }
        }
        if (bhcSum > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("3");
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setDetails(bhcDeatils + "检查发现派出所未按时对精神病患者等重点人员防控等级进行回访（以通报为准），每次扣1分。 ");
            examAutoEvaluation.setUnit("北海处治安支队");
            examAutoEvaluation.setUnitId("272");
            examAutoEvaluation.setEvaluationId("b309552b4eb64c78b2540c52daa91b7f");
            examAutoEvaluation.setAssess("");
            examAutoEvaluation.setAssessId("");
            examAutoEvaluation.setModel("");
            examAutoEvaluation.setModelId("");
            examAutoEvaluation.setOption(" ");
            examAutoEvaluation.setOptionId(" ");
            examAutoEvaluation.setScore("1");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"高铁卫士对精神病回访");
            this.summaryStandard(examAutoEvaluation,1.0,bhcDeatils+"检查发现派出所未按时对精神病患者等重点人员防控等级进行回访，扣2分");

            this.save(examAutoEvaluation);
        }
    }




    /**
     * 109联侦平台
     * <p>
     * 处考派出所  月度
     *
     * @param checkTime
     */
    @Transactional(readOnly = false)
    public void ckpcsLianZhenMonth(String checkTime) {
        String year = checkTime.substring(0, 4);
        String month = checkTime.substring(checkTime.length() - 2);
        //查所有的派出所
        List<Map<String, Object>> allpcs = examAutoEvaluationDao.findAllpcs();
        //Integer num = 0;
        if (allpcs != null && allpcs.size() > 0) {
            for (Map<String, Object> tempMap : allpcs) {
                String parentId = ((String) tempMap.get("parent_id"));
                //柳州处
                if (!parentId.equals("") && parentId.equals("95")) {
                    //获取民警数量
                    String officeId = ((String) tempMap.get("id"));
                    String unitName = ((String) tempMap.get("name"));
                    String code = ((String) tempMap.get("code"));
                    Integer integer = examAutoEvaluationDao.findpcsPolice(officeId);
                    String userId = examAutoEvaluationDao.findUserId(code);
                    //num+=integer;
                    //算法规则：（总民警数/100）*120
                    float inte = (integer / 100F) * 120F;//应该完成的数量
                    /**
                     * 提供的数据中   unit的数据值是和office中code的值是一致的
                     *
                     * 需要作一下关联
                     */
                    Integer gatherSum = examAutoEvaluationDao.findGatherSum(code, month);
                    float ger = inte - gatherSum;
                    Float score = (ger / 120F) * 100F;

                    //使用未完成数量/120*100  得到扣分数
                    if (gatherSum < inte) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails(unitName + "未完成预期目标任务数的，按百分比扣分，月度");
                        examAutoEvaluation.setUnit(unitName);
                        examAutoEvaluation.setUnitId(officeId);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setModelId("");
                        examAutoEvaluation.setOption("");
                        examAutoEvaluation.setOptionId("");
                        examAutoEvaluation.setEvaluationId(userId);
                        examAutoEvaluation.setScore(score.toString());//待扣分添加数据
                        examAutoEvaluation.setFromSys("宁铁公安109联侦平台");//数据来源
                        this.save(examAutoEvaluation);
                    }
                }
                //南宁处
                if (!parentId.equals("") && parentId.equals("34")) {
                    //获取民警数量
                    String officeId = ((String) tempMap.get("id"));
                    String code = ((String) tempMap.get("code"));
                    String unitName = ((String) tempMap.get("name"));
                    Integer integer = examAutoEvaluationDao.findpcsPolice(officeId);
                    String userId = examAutoEvaluationDao.findUserId(code);
                    //num+=integer;
                    //算法规则：（总民警数/100）*120
                    float inte = (integer / 100F) * 120F;//应该完成的数量
                    Integer gatherSum = examAutoEvaluationDao.findGatherSum(code, month);
                    float ger = inte - gatherSum;
                    Float score = (ger / 120F) * 100F;
                    //使用未完成数量/120*100  得到扣分数
                    if (gatherSum < inte) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails(unitName + "未完成预期目标任务数的，按百分比扣分，月度");
                        examAutoEvaluation.setUnit(unitName);
                        examAutoEvaluation.setUnitId(officeId);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setModelId("");
                        examAutoEvaluation.setOption("");
                        examAutoEvaluation.setOptionId("");
                        examAutoEvaluation.setEvaluationId(userId);
                        examAutoEvaluation.setScore(score.toString());//待扣分添加数据
                        examAutoEvaluation.setFromSys("宁铁公安109联侦平台");//数据来源

                        this.save(examAutoEvaluation);
                    }
                }
                //北海处
                if (!parentId.equals("") && parentId.equals("156")) {
                    //获取民警数量
                    String officeId = ((String) tempMap.get("id"));
                    String code = ((String) tempMap.get("code"));
                    String unitName = ((String) tempMap.get("name"));
                    Integer integer = examAutoEvaluationDao.findpcsPolice(officeId);
                    String userId = examAutoEvaluationDao.findUserId(code);
                    //num+=integer;
                    //算法规则：（总民警数/100）*120
                    float inte = (integer / 100F) * 120F;//应该完成的数量
                    Integer gatherSum = examAutoEvaluationDao.findGatherSum(code, month);
                    float ger = inte - gatherSum;
                    Float score = (ger / 120F) * 100F;
                    //使用未完成数量/120*100  得到扣分数
                    if (gatherSum < inte) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails(unitName + "未完成预期目标任务数的，按百分比扣分，月度");
                        examAutoEvaluation.setUnit(unitName);
                        examAutoEvaluation.setUnitId(officeId);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setModelId("");
                        examAutoEvaluation.setOption("");
                        examAutoEvaluation.setOptionId("");
                        examAutoEvaluation.setEvaluationId(userId);
                        examAutoEvaluation.setScore(score.toString());//待扣分添加数据
                        examAutoEvaluation.setFromSys("宁铁公安109联侦平台");//数据来源

                        this.save(examAutoEvaluation);

                    }
                }
            }
        }

    }

    /**
     * 109联侦平台
     * <p>
     * 处考派出所  年度
     *
     * @param year
     */
    @Transactional(readOnly = false)
    public void ckpcsLianZhenYear(String year) {
        //查所有的派出所
        List<Map<String, Object>> allpcs = examAutoEvaluationDao.findAllpcs();
        //Integer num = 0;
        if (allpcs != null && allpcs.size() > 0) {
            for (Map<String, Object> tempMap : allpcs) {
                String parentId = ((String) tempMap.get("parent_id"));
                //柳州处
                if (!parentId.equals("") && parentId.equals("95")) {
                    //获取民警数量
                    String officeId = ((String) tempMap.get("id"));
                    String unitName = ((String) tempMap.get("name"));
                    String code = ((String) tempMap.get("code"));
                    Integer integer = examAutoEvaluationDao.findpcsPolice(officeId);
                    String userId = examAutoEvaluationDao.findUserId(code);
                    //num+=integer;
                    //算法规则：（总民警数/100）*120
                    float inte = (integer / 100F) * 120F;//应该完成的数量
                    /**
                     * 提供的数据中   unit的数据值是和office中code的值是一致的
                     *
                     * 需要作一下关联
                     */
                    Integer gatherSum = examAutoEvaluationDao.findGatherSumYear(code, year);
                    float ger = inte - gatherSum;
                    Float score = (ger / 120F) * 100F;
                    //使用未完成数量/120*100  得到扣分数
                    if (gatherSum < inte) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setDetails(unitName + "未完成预期目标任务数的，按百分比扣分，年度");
                        examAutoEvaluation.setUnit(unitName);
                        examAutoEvaluation.setUnitId(officeId);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setModelId("");
                        examAutoEvaluation.setOption("");
                        examAutoEvaluation.setOptionId("");
                        examAutoEvaluation.setEvaluationId(userId);
                        examAutoEvaluation.setScore(score.toString());//待扣分添加数据
                        examAutoEvaluation.setFromSys("宁铁公安109联侦平台");//数据来源

                        this.save(examAutoEvaluation);
                    }
                }
                //南宁处
                if (!parentId.equals("") && parentId.equals("34")) {
                    //获取民警数量
                    String officeId = ((String) tempMap.get("id"));
                    String code = ((String) tempMap.get("code"));
                    String unitName = ((String) tempMap.get("name"));
                    Integer integer = examAutoEvaluationDao.findpcsPolice(officeId);
                    String userId = examAutoEvaluationDao.findUserId(code);
                    //num+=integer;
                    //算法规则：（总民警数/100）*120
                    float inte = (integer / 100F) * 120F;//应该完成的数量
                    Integer gatherSum = examAutoEvaluationDao.findGatherSumYear(code, year);
                    float ger = inte - gatherSum;
                    Float score = (ger / 120F) * 100F;
                    //使用未完成数量/120*100  得到扣分数
                    if (gatherSum < inte) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setDetails(unitName + "未完成预期目标任务数的，按百分比扣分，年度");
                        examAutoEvaluation.setUnit(unitName);
                        examAutoEvaluation.setUnitId(officeId);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setModelId("");
                        examAutoEvaluation.setOption("");
                        examAutoEvaluation.setOptionId("");
                        examAutoEvaluation.setEvaluationId(userId);
                        examAutoEvaluation.setScore(score.toString());//待扣分添加数据
                        examAutoEvaluation.setFromSys("宁铁公安109联侦平台");//数据来源

                        this.save(examAutoEvaluation);
                    }
                }
                //北海处
                if (!parentId.equals("") && parentId.equals("156")) {
                    //获取民警数量
                    String officeId = ((String) tempMap.get("id"));
                    String code = ((String) tempMap.get("code"));
                    String unitName = ((String) tempMap.get("name"));
                    Integer integer = examAutoEvaluationDao.findpcsPolice(officeId);
                    String userId = examAutoEvaluationDao.findUserId(code);
                    //num+=integer;
                    //算法规则：（总民警数/100）*120
                    float inte = (integer / 100F) * 120F;//应该完成的数量
                    Integer gatherSum = examAutoEvaluationDao.findGatherSumYear(code, year);
                    float ger = inte - gatherSum;
                    Float score = (ger / 120) * 100;
                    //使用未完成数量/120*100  得到扣分数
                    if (gatherSum < inte) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setDetails(unitName + "未完成预期目标任务数的，按百分比扣分，年度");
                        examAutoEvaluation.setUnit(unitName);
                        examAutoEvaluation.setUnitId(officeId);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setModelId("");
                        examAutoEvaluation.setOption("");
                        examAutoEvaluation.setOptionId("");
                        examAutoEvaluation.setEvaluationId(userId);
                        examAutoEvaluation.setScore(score.toString());//待扣分添加数据
                        examAutoEvaluation.setFromSys("宁铁公安109联侦平台");//数据来源

                        this.save(examAutoEvaluation);

                    }
                }
            }
        }

    }

    /**
     * 109联侦平台
     * <p>
     * 公安处领导班子考核（局）  年度
     *
     * @param year
     */
    @Transactional(readOnly = false)
    public void gacldbzLianZhenYear(String year) {

        //所有的民警
        List<Map<String, Object>> polices = examAutoEvaluationDao.findPolices();
        //查询各处  处长、副处长、政委
        List<Map<String, Object>> chuLeads = examAutoEvaluationDao.findChuLeads();
        //Integer num = 0;
        int nncsum = 0;
        int lzcsum = 0;
        int bhcsum = 0;
        for (int j = 0; j < polices.size(); j++) {
            String companyId = ((String) polices.get(j).get("company_id"));
            if (!companyId.equals("") && companyId.equals("95")) {//柳州处
                lzcsum++;
            } else if (!companyId.equals("") && companyId.equals("34")) {//南宁处
                nncsum++;
            } else if (!companyId.equals("") && companyId.equals("156")) {//北海处
                bhcsum++;
            }
        }
        for (int i = 0; i < chuLeads.size(); i++) {
            String workunitName = ((String) chuLeads.get(i).get("workunit_name"));
            if (workunitName.contains("柳州公安处") || workunitName.contains("柳州处")) {
                String jobAbbreviation = (String) chuLeads.get(i).get("job_abbreviation");
                String code = ((String) chuLeads.get(i).get("unit_code"));
                Integer gatherSum = examAutoEvaluationDao.findGatherSumYear(code, year);
                String userId = examAutoEvaluationDao.findUserId(code);
                //算法规则：（总民警数/100）*120
                float inte = (lzcsum / 100F) * 120F;//应该完成的数量
                if (gatherSum < inte) {
                    if (!"".equals(jobAbbreviation) && "处长".equals(jobAbbreviation)) {
                        String name = (String) chuLeads.get(i).get("name");
                        String idNumber = (String) chuLeads.get(i).get("id_number");
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("2");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setDetails("未完成信息平台基础数据采集及上传工作要求的，处长扣2分，政委扣1分，副处长扣2分");
                        examAutoEvaluation.setName(name);
                        examAutoEvaluation.setIdNumber(idNumber);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setModelId("");
                        examAutoEvaluation.setOption("");
                        examAutoEvaluation.setOptionId("");
                        examAutoEvaluation.setScore("2");
                        examAutoEvaluation.setEvaluationId(userId);
                        examAutoEvaluation.setFromSys("宁铁公安109联侦平台");//数据来源
                        this.save(examAutoEvaluation);
                    } else if (!"".equals(jobAbbreviation) && "副处长".equals(jobAbbreviation)) {
                        String name = (String) chuLeads.get(i).get("name");
                        String idNumber = (String) chuLeads.get(i).get("id_number");
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("2");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setDetails("未完成信息平台基础数据采集及上传工作要求的，处长扣2分，政委扣1分，副处长扣2分");
                        examAutoEvaluation.setName(name);
                        examAutoEvaluation.setIdNumber(idNumber);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setModelId("");
                        examAutoEvaluation.setOption("");
                        examAutoEvaluation.setOptionId("");
                        examAutoEvaluation.setScore("2");
                        examAutoEvaluation.setEvaluationId(userId);
                        examAutoEvaluation.setFromSys("宁铁公安109联侦平台");//数据来源
                        this.save(examAutoEvaluation);
                    } else if (!"".equals(jobAbbreviation) && "政委".equals(jobAbbreviation)) {
                        String name = (String) chuLeads.get(i).get("name");
                        String idNumber = (String) chuLeads.get(i).get("id_number");
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("2");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setDetails("未完成信息平台基础数据采集及上传工作要求的，处长扣2分，政委扣1分，副处长扣2分");
                        examAutoEvaluation.setName(name);
                        examAutoEvaluation.setIdNumber(idNumber);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setModelId("");
                        examAutoEvaluation.setOption("");
                        examAutoEvaluation.setOptionId("");
                        examAutoEvaluation.setScore("1");
                        examAutoEvaluation.setEvaluationId(userId);
                        examAutoEvaluation.setFromSys("宁铁公安109联侦平台");//数据来源
                        this.save(examAutoEvaluation);
                    }
                }
            } else if (workunitName.contains("南宁公安处") || workunitName.contains("南宁处")) {
                String jobAbbreviation = (String) chuLeads.get(i).get("job_abbreviation");
                String code = ((String) chuLeads.get(i).get("unit_code"));
                Integer gatherSum = examAutoEvaluationDao.findGatherSumYear(code, year);
                String userId = examAutoEvaluationDao.findUserId(code);
                //算法规则：（总民警数/100）*120
                float inte = (nncsum / 100F) * 120F;//应该完成的数量
                if (gatherSum < inte) {
                    if (!"".equals(jobAbbreviation) && "处长".equals(jobAbbreviation)) {
                        String name = (String) chuLeads.get(i).get("name");
                        String idNumber = (String) chuLeads.get(i).get("id_number");
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("2");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setDetails("未完成信息平台基础数据采集及上传工作要求的，处长扣2分，政委扣1分，副处长扣2分");
                        examAutoEvaluation.setName(name);
                        examAutoEvaluation.setIdNumber(idNumber);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setModelId("");
                        examAutoEvaluation.setOption("");
                        examAutoEvaluation.setOptionId("");
                        examAutoEvaluation.setScore("2");
                        examAutoEvaluation.setEvaluationId(userId);
                        examAutoEvaluation.setFromSys("宁铁公安109联侦平台");//数据来源
                        this.save(examAutoEvaluation);
                    } else if (!"".equals(jobAbbreviation) && "副处长".equals(jobAbbreviation)) {
                        String name = (String) chuLeads.get(i).get("name");
                        String idNumber = (String) chuLeads.get(i).get("id_number");
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("2");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setDetails("未完成信息平台基础数据采集及上传工作要求的，处长扣2分，政委扣1分，副处长扣2分");
                        examAutoEvaluation.setName(name);
                        examAutoEvaluation.setIdNumber(idNumber);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setModelId("");
                        examAutoEvaluation.setOption("");
                        examAutoEvaluation.setOptionId("");
                        examAutoEvaluation.setScore("2");
                        examAutoEvaluation.setEvaluationId(userId);
                        examAutoEvaluation.setFromSys("宁铁公安109联侦平台");//数据来源
                        this.save(examAutoEvaluation);
                    } else if (!"".equals(jobAbbreviation) && "政委".equals(jobAbbreviation)) {
                        String name = (String) chuLeads.get(i).get("name");
                        String idNumber = (String) chuLeads.get(i).get("id_number");
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("2");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setDetails("未完成信息平台基础数据采集及上传工作要求的，处长扣2分，政委扣1分，副处长扣2分");
                        examAutoEvaluation.setName(name);
                        examAutoEvaluation.setIdNumber(idNumber);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setModelId("");
                        examAutoEvaluation.setOption("");
                        examAutoEvaluation.setOptionId("");
                        examAutoEvaluation.setScore("1");
                        examAutoEvaluation.setEvaluationId(userId);
                        examAutoEvaluation.setFromSys("宁铁公安109联侦平台");//数据来源
                        this.save(examAutoEvaluation);
                    }
                }
            } else if (workunitName.contains("北海公安处") || workunitName.contains("北海处")) {
                String jobAbbreviation = (String) chuLeads.get(i).get("job_abbreviation");
                String code = ((String) chuLeads.get(i).get("unit_code"));
                Integer gatherSum = examAutoEvaluationDao.findGatherSumYear(code, year);
                String userId = examAutoEvaluationDao.findUserId(code);
                //算法规则：（总民警数/100）*120
                float inte = (bhcsum / 100F) * 120F;//应该完成的数量
                if (gatherSum < inte) {
                    if (!"".equals(jobAbbreviation) && "处长".equals(jobAbbreviation)) {
                        String name = (String) chuLeads.get(i).get("name");
                        String idNumber = (String) chuLeads.get(i).get("id_number");
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("2");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setDetails("未完成信息平台基础数据采集及上传工作要求的，处长扣2分，政委扣1分，副处长扣2分");
                        examAutoEvaluation.setName(name);
                        examAutoEvaluation.setIdNumber(idNumber);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setModelId("");
                        examAutoEvaluation.setOption("");
                        examAutoEvaluation.setOptionId("");
                        examAutoEvaluation.setScore("2");
                        examAutoEvaluation.setEvaluationId(userId);
                        examAutoEvaluation.setFromSys("宁铁公安109联侦平台");//数据来源
                        this.save(examAutoEvaluation);
                    } else if (!"".equals(jobAbbreviation) && "副处长".equals(jobAbbreviation)) {
                        String name = (String) chuLeads.get(i).get("name");
                        String idNumber = (String) chuLeads.get(i).get("id_number");
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("2");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setDetails("未完成信息平台基础数据采集及上传工作要求的，处长扣2分，政委扣1分，副处长扣2分");
                        examAutoEvaluation.setName(name);
                        examAutoEvaluation.setIdNumber(idNumber);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setModelId("");
                        examAutoEvaluation.setOption("");
                        examAutoEvaluation.setOptionId("");
                        examAutoEvaluation.setScore("2");
                        examAutoEvaluation.setEvaluationId(userId);
                        examAutoEvaluation.setFromSys("宁铁公安109联侦平台");//数据来源
                        this.save(examAutoEvaluation);
                    } else if (!"".equals(jobAbbreviation) && "政委".equals(jobAbbreviation)) {
                        String name = (String) chuLeads.get(i).get("name");
                        String idNumber = (String) chuLeads.get(i).get("id_number");
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("2");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setDetails("未完成信息平台基础数据采集及上传工作要求的，处长扣2分，政委扣1分，副处长扣2分");
                        examAutoEvaluation.setName(name);
                        examAutoEvaluation.setIdNumber(idNumber);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setModelId("");
                        examAutoEvaluation.setOption("");
                        examAutoEvaluation.setOptionId("");
                        examAutoEvaluation.setScore("1");
                        examAutoEvaluation.setEvaluationId(userId);
                        examAutoEvaluation.setFromSys("宁铁公安109联侦平台");//数据来源
                        this.save(examAutoEvaluation);
                    }
                }
            }
        }
    }

    /**
     * 109联侦平台
     * <p>
     * 局考处  年度
     *
     * @param year
     */
    @Transactional(readOnly = false)
    public void jkcLianZhenYear(String year) {
        //所有的民警
        List<Map<String, Object>> polices = examAutoEvaluationDao.findPolices();
        //Integer num = 0;
        int nncsum = 0;
        int lzcsum = 0;
        int bhcsum = 0;
        int yljSuml = 0;
        int yljSumn = 0;
        int yljSumb = 0;
        for (int j = 0; j < polices.size(); j++) {
            String companyId = ((String) polices.get(j).get("company_id"));
            if (!companyId.equals("") && companyId.equals("95")) {//柳州处
                lzcsum++;
                String officeId = ((String) polices.get(j).get("office_id"));
                String code = examAutoEvaluationDao.selectCode(officeId);
                int gatherSumYear = examAutoEvaluationDao.findGatherSumYear(code, year);
                String id = "185";
                String userId = examAutoEvaluationDao.selectUserId(id);
                yljSuml += gatherSumYear;
                //算法规则：（总民警数/100）*120
                float inte = (lzcsum / 100F) * 120F;//应该完成的数量
                float ger = inte - yljSuml;
                Float score = (ger / 120F) * 100F;
                if (yljSuml < inte) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("1");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails("百名民警120台，根据人数定指标（总分5分，按百分比扣）");
                    examAutoEvaluation.setUnit("柳州处技术侦察大队");
                    examAutoEvaluation.setUnitId("185");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("");
                    examAutoEvaluation.setModelId("");
                    examAutoEvaluation.setOption("");
                    examAutoEvaluation.setOptionId("");
                    examAutoEvaluation.setScore(score.toString());
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setFromSys("宁铁公安109联侦平台");//数据来源
                    this.save(examAutoEvaluation);
                }
            } else if (!companyId.equals("") && companyId.equals("34")) {//南宁处
                nncsum++;
                String officeId = ((String) polices.get(j).get("office_id"));
                String code = examAutoEvaluationDao.selectCode(officeId);
                int gatherSumYear = examAutoEvaluationDao.findGatherSumYear(code, year);
                String id = "70";
                String userId = examAutoEvaluationDao.selectUserId(id);
                yljSumn += gatherSumYear;
                //算法规则：（总民警数/100）*120
                float inte = (nncsum / 100F) * 120F;//应该完成的数量
                float ger = inte - yljSumn;
                Float score = (ger / 120F) * 100F;
                if (yljSumn < inte) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("1");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails("百名民警120台，根据人数定指标（总分5分，按百分比扣）");
                    examAutoEvaluation.setUnit("南宁处技术侦察大队");
                    examAutoEvaluation.setUnitId("70");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("");
                    examAutoEvaluation.setModelId("");
                    examAutoEvaluation.setOption("");
                    examAutoEvaluation.setOptionId("");
                    examAutoEvaluation.setScore(score.toString());
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setFromSys("宁铁公安109联侦平台");//数据来源
                    this.save(examAutoEvaluation);
                }
            } else if (!companyId.equals("") && companyId.equals("156")) {//北海处
                bhcsum++;
                String officeId = ((String) polices.get(j).get("office_id"));
                String code = examAutoEvaluationDao.selectCode(officeId);
                int gatherSumYear = examAutoEvaluationDao.findGatherSumYear(code, year);
                String id = "285";
                String userId = examAutoEvaluationDao.selectUserId(id);
                yljSumb += gatherSumYear;
                //算法规则：（总民警数/100）*120
                float inte = (bhcsum / 100F) * 120F;//应该完成的数量
                float ger = inte - yljSumb;
                Float score = (ger / 120F) * 100F;
                if (yljSumb < inte) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("1");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails("百名民警120台，根据人数定指标（总分5分，按百分比扣）");
                    examAutoEvaluation.setUnit("北海处技术侦察大队");
                    examAutoEvaluation.setUnitId("285");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("");
                    examAutoEvaluation.setModelId("");
                    examAutoEvaluation.setOption("");
                    examAutoEvaluation.setOptionId("");
                    examAutoEvaluation.setScore(score.toString());
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setFromSys("宁铁公安109联侦平台");//数据来源
                    this.save(examAutoEvaluation);
                }
            }
        }
    }


    /**
     * 换届选举
     */
    public void chuLdElectionYear(String year) {
        IdGen idGen = new IdGen();
        String wyId = idGen.getNextId();
        String zjcId = idGen.getNextId();
        String lastYear = String.valueOf(Integer.valueOf(year) - 1);
        String startYear = lastYear + "-12" + "-11";
        String endYear = year + "-12" + "-10";
        List<AffairElection> list = affairElectionService.findAllInfo(year, startYear, endYear);
        list.forEach(item -> {
            Date date = new Date();
            Date createDate = item.getCreateDate();
            Calendar calendar = Calendar.getInstance();
            calendar.setTime(date);
           /* String year = String.valueOf(calendar.get(Calendar.YEAR));
            String month = String.valueOf(calendar.get(Calendar.MONTH) + 1);*/
            String partyOrganizationName = item.getPartyOrganizationName();
            String partyOrganizationId = item.getPartyOrganizationId();
            Date hjDate = item.getHjDate();
            Date jmDate = item.getJmDate();
            long l = hjDate.getTime() - jmDate.getTime();
            long l1 = l / (1000 * 3600 * 24);
            int election = affairElectionService.isElection(partyOrganizationName, partyOrganizationId, hjDate, year);
            if (l1 > 365) {
                String ldRoleId = "230e916609a349e68f7186f784e11419";
                List<Map<String, String>> chuLdList = new ArrayList<>();
                chuLdList.addAll(userDao.findJcLdByRoleId(ldRoleId));
                /*公安处领导班子*/
                List<Map<String, String>> peopleInfo = affairAssessService.findPeopleInfo(partyOrganizationName, partyOrganizationId);
                peopleInfo.forEach(pList -> {
                    chuLdList.forEach(chu->{
                        if (pList.get("card_num").equals(chu.get("no"))) {
                            String evaluationId = this.findEvaluationId(pList.get("name"), pList.get("card_num"));
                            ExamAutoEvaluation examAutoEvaluationYear = new ExamAutoEvaluation();
                            examAutoEvaluationYear.setName(pList.get("name"));
                            examAutoEvaluationYear.setIdNumber(pList.get("card_num"));
                            examAutoEvaluationYear.setEvaluationId(evaluationId);
                            examAutoEvaluationYear.setType("2");
                            examAutoEvaluationYear.setEvalType("5");
                            examAutoEvaluationYear.setPeriod("2");
                            examAutoEvaluationYear.setYear(year);
                            examAutoEvaluationYear.setDetails("换届选举，未按时完成的扣分（党委、总支、支部委员期满3个月，未及时增补）");
                            examAutoEvaluationYear.setUnit(partyOrganizationName);
                            examAutoEvaluationYear.setUnitId(partyOrganizationId);
                            examAutoEvaluationYear.setAssess("局绩效办");
                            examAutoEvaluationYear.setRemark("每次");
                            examAutoEvaluationYear.setModel("2020年年度对公安处领导班子成员绩效考核公共扣分标准");
                            examAutoEvaluationYear.setModelId("39175e4e4f3a4c498313176dab9f5e10");
                            examAutoEvaluationYear.setOption("上级部署的各时期党建工作要求，落实不到位的");
                            examAutoEvaluationYear.setOptionId("07859fc6a3da4033b2411fb17df16758");
                            examAutoEvaluationYear.setScore("2");
                            examAutoEvaluationYear.setTime(date);
                            examAutoEvaluationYear.setHappenTime(date);
                            examAutoEvaluationYear.setCheckTime(date);
                            examAutoEvaluationYear.setRowNum("45");
                            examAutoEvaluationYear.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluationYear,null,"换届选举");
                            this.summaryStandard(examAutoEvaluationYear,2.0,"换届选举，未按时完成的扣分（党委、总支、支部委员期满3个月，未及时增补）");
                            //this.deleteInfoByMore(examAutoEvaluationYear);
                            this.save(examAutoEvaluationYear);
                        }
                    });
                    /*String job = affairAssessService.peopleJob(pList.get("name"), pList.get("card_num"));
                    if (StringUtils.isNotBlank(job)) {
                        if (job.contains("处长") || job.contains("政委")) {
                            *//*月度公安处领导班子考评*//*
                        }
                    }*/
                });
            }
        });
    }

    public void chuLdElectionMonth(String year, String month) {
        IdGen idGen = new IdGen();
        String wyId = idGen.getNextId();
        String zjcId = idGen.getNextId();
        String lastYear = String.valueOf(Integer.valueOf(year) - 1);
        String startYear = lastYear + "-12" + "-11";
        String endYear = year + "-12" + "-10";
        List<AffairElection> list = affairElectionService.findAllInfo(year, startYear, endYear);
        list.forEach(item -> {
            Date date = new Date();
            Date createDate = item.getCreateDate();
            Calendar calendar = Calendar.getInstance();
            calendar.setTime(date);
           /* String year = String.valueOf(calendar.get(Calendar.YEAR));
            String month = String.valueOf(calendar.get(Calendar.MONTH) + 1);*/
            String partyOrganizationName = item.getPartyOrganizationName();
            String partyOrganizationId = item.getPartyOrganizationId();
            Date hjDate = item.getHjDate();
            Date jmDate = item.getJmDate();
            long l = hjDate.getTime() - jmDate.getTime();
            long l1 = l / (1000 * 3600 * 24);
            int election = affairElectionService.isElection(partyOrganizationName, partyOrganizationId, hjDate, year);
            if (l1 > 365) {
                String ldRoleId = "230e916609a349e68f7186f784e11419";
                List<Map<String, String>> chuLdList = new ArrayList<>();
                chuLdList.addAll(userDao.findJcLdByRoleId(ldRoleId));
                /*公安处领导班子*/
                List<Map<String, String>> peopleInfo = affairAssessService.findPeopleInfo(partyOrganizationName, partyOrganizationId);
                peopleInfo.forEach(pList -> {
                    chuLdList.forEach(chu-> {
                        if (pList.get("card_num").equals(chu.get("no"))) {
                            String evaluationId = this.findEvaluationId(pList.get("name"), pList.get("card_num"));
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setName(pList.get("name"));
                            examAutoEvaluation.setIdNumber(pList.get("card_num"));
                            examAutoEvaluation.setEvaluationId(evaluationId);
                            examAutoEvaluation.setType("2");
                            examAutoEvaluation.setEvalType("5");
                            examAutoEvaluation.setPeriod("1");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setMonth(month);
                            examAutoEvaluation.setDetails("换届选举，未按时完成的扣分（党委、总支、支部委员期满3个月，未及时增补）");
                            examAutoEvaluation.setUnit(partyOrganizationName);
                            examAutoEvaluation.setUnitId(partyOrganizationId);
                            examAutoEvaluation.setAssess("局绩效办");
                            examAutoEvaluation.setRemark("每次");
                            examAutoEvaluation.setModel("2020年月度对公安处领导班子成员绩效考核公共扣分标准");
                            examAutoEvaluation.setModelId("93f0ce15f62b4c479e5681a93ccb248b");
                            examAutoEvaluation.setOption("上级部署的各时期党建工作要求，落实不到位的");
                            examAutoEvaluation.setOptionId("1de5008443364f5d818390bbd4088d18");
                            examAutoEvaluation.setScore("5");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("44");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"换届选举");
                            this.summaryStandard(examAutoEvaluation,5.0,"换届选举，未按时完成的扣分（党委、总支、支部委员期满3个月，未及时增补）");
                            this.save(examAutoEvaluation);
                        }
                    });
                    /*String job = affairAssessService.peopleJob(pList.get("name"), pList.get("card_num"));
                    if (StringUtils.isNotBlank(job)) {
                        if (job.contains("处长") || job.contains("政委")) {
                            *//*月度公安处领导班子考评*//*
                        }
                    }*/
                });
            }
        });
    }

    public void jiLdElectionYear(String year) {
        IdGen idGen = new IdGen();
        String wyId = idGen.getNextId();
        String zjcId = idGen.getNextId();
        String lastYear = String.valueOf(Integer.valueOf(year) - 1);
        String startYear = lastYear + "-12" + "-11";
        String endYear = year + "-12" + "-10";
        List<AffairElection> list = affairElectionService.findAllInfo(year, startYear, endYear);
        list.forEach(item -> {
            Date date = new Date();
            Date createDate = item.getCreateDate();
            Calendar calendar = Calendar.getInstance();
            calendar.setTime(date);
           /* String year = String.valueOf(calendar.get(Calendar.YEAR));
            String month = String.valueOf(calendar.get(Calendar.MONTH) + 1);*/
            String partyOrganizationName = item.getPartyOrganizationName();
            String partyOrganizationId = item.getPartyOrganizationId();
            Date hjDate = item.getHjDate();
            Date jmDate = item.getJmDate();
            long l = hjDate.getTime() - jmDate.getTime();
            long l1 = l / (1000 * 3600 * 24);
            int election = affairElectionService.isElection(partyOrganizationName, partyOrganizationId, hjDate, year);
            if (l1 > 365) {
                /*中基层领导考评*/
                String juJiGuanRoleId = "13bac520ae4d4160b595384691b443fd";
                String chuJiGuanRoleId = "62cf6aaea0184d3b8cfbce1700ad0e38";
                String suoduiJiGuanRoleId = "ff24c3288860447d867d08d462a2a2b9";

                String[] zhongJiCeng = new String[3];
                zhongJiCeng[0] = chuJiGuanRoleId;
                zhongJiCeng[1] = juJiGuanRoleId;
                zhongJiCeng[2] = suoduiJiGuanRoleId;
                List<Map<String, String>> jcLdList = new ArrayList<>();
                Arrays.stream(zhongJiCeng).forEach(s -> {
                    jcLdList.addAll(userDao.findJcLdByRoleId(s));
                });
                String name = affairGeneralSituationService.findNameByOrg(partyOrganizationName);
                List<Map<String, String>> peopleList = affairPartyMemberService.peopleList(partyOrganizationName);
                jcLdList.forEach(jc -> {
                    peopleList.forEach(people -> {
                        if (people.get("name").equals(jc.get("name"))) {
                            if (people.get("name").equals(name)) {
                                String evaluationId = this.findEvaluationId(people.get("name"), people.get("card_num"));
                                //年度自动考评
                                ExamAutoEvaluation examAutoEvaluationYear = new ExamAutoEvaluation();
                                //被考评对象id
                                examAutoEvaluationYear.setName(people.get("name"));
                                examAutoEvaluationYear.setIdNumber(people.get("card_num"));
                                //                        examAutoEvaluationYear.setId(zjcId);
                                examAutoEvaluationYear.setEvaluationId(evaluationId);
                                examAutoEvaluationYear.setType("2");
                                examAutoEvaluationYear.setEvalType("6");
                                examAutoEvaluationYear.setPeriod("2");
                                examAutoEvaluationYear.setYear(year);
                                examAutoEvaluationYear.setDetails(year+"年"+partyOrganizationName+"换届选举，未按时完成");
                                examAutoEvaluationYear.setUnit(partyOrganizationName);
                                examAutoEvaluationYear.setUnitId(partyOrganizationId);
                                examAutoEvaluationYear.setAssess("机关考评小组");
                                examAutoEvaluationYear.setModel("2020年年度全局中层和基层领导干部考核公共扣分标准 (公安处领导班子成员除外)");
                                examAutoEvaluationYear.setModelId("c00cebbbc62c48d888316206d38e02c7");
                                examAutoEvaluationYear.setOption("支部委员会任届期满未换届选举、支委成员缺位不按规定要求改选、补选的，应设支委未设支委的");
                                examAutoEvaluationYear.setOptionId("7261a762836842f3945ba72cf2630b3b");
                                examAutoEvaluationYear.setScore("3");
                                examAutoEvaluationYear.setTime(date);
                                examAutoEvaluationYear.setHappenTime(date);
                                examAutoEvaluationYear.setCheckTime(date);
                                examAutoEvaluationYear.setRowNum("67");
                                examAutoEvaluationYear.setFromSys("智慧政工");
                                //this.deleteInfoByMore(examAutoEvaluationYear);
                                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluationYear,null,"换届选举");
                                this.summaryStandard(examAutoEvaluationYear,3.0,year+"年"+partyOrganizationName+"换届选举，未按时完成");
                                this.save(examAutoEvaluationYear);
                            } /*else {
                                // 获取被考评对象id
                                String evaluationId = this.findEvaluationId(people.get("name"), people.get("card_num"));
                                ExamAutoEvaluation examAutoEvaluationYear = new ExamAutoEvaluation();
                                //被考评对象id
                                examAutoEvaluationYear.setName(people.get("name"));
                                examAutoEvaluationYear.setIdNumber(people.get("card_num"));
                                //                        examAutoEvaluationYear.setId(wyId);
                                examAutoEvaluationYear.setEvaluationId(evaluationId);
                                examAutoEvaluationYear.setType("2");
                                examAutoEvaluationYear.setEvalType("6");
                                examAutoEvaluationYear.setPeriod("2");
                                examAutoEvaluationYear.setYear(year);
                                examAutoEvaluationYear.setDetails("党日活动，未按时录入扣分（每月1次，以支部第1次录入时间为主，每月时间相对固定，次月录入时间前后不超过5天）");
                                examAutoEvaluationYear.setUnit(partyOrganizationName);
                                examAutoEvaluationYear.setUnitId(partyOrganizationId);
                                examAutoEvaluationYear.setAssess("机关考评小组");
                                examAutoEvaluationYear.setModel("2020年年度全局中层和基层领导干部考核公共扣分标准 (公安处领导班子成员除外)");
                                examAutoEvaluationYear.setModelId("c00cebbbc62c48d888316206d38e02c7");
                                examAutoEvaluationYear.setOption("支部委员会任届期满未换届选举、支委成员缺位不按规定要求改选、补选的，应设支委未设支委的");
                                examAutoEvaluationYear.setOptionId("7261a762836842f3945ba72cf2630b3b");
                                examAutoEvaluationYear.setScore("1");
                                examAutoEvaluationYear.setTime(date);
                                examAutoEvaluationYear.setHappenTime(date);
                                examAutoEvaluationYear.setCheckTime(date);
                                examAutoEvaluationYear.setRowNum("67");
                                examAutoEvaluationYear.setFromSys("智慧政工");
                                this.deleteInfoByMore(examAutoEvaluationYear);
                                this.save(examAutoEvaluationYear);
                            }*/
                        }
                    });
                });
            }
        });
    }

    public void jiLdElectionMonth(String year, String month) {
        IdGen idGen = new IdGen();
        String wyId = idGen.getNextId();
        String zjcId = idGen.getNextId();
        String lastYear = String.valueOf(Integer.valueOf(year) - 1);
        String startYear = lastYear + "-12" + "-11";
        String endYear = year + "-12" + "-10";
        List<AffairElection> list = affairElectionService.findAllInfo(year, startYear, endYear);
        list.forEach(item -> {
            Date date = new Date();
            Date createDate = item.getCreateDate();
            Calendar calendar = Calendar.getInstance();
            calendar.setTime(date);
           /* String year = String.valueOf(calendar.get(Calendar.YEAR));
            String month = String.valueOf(calendar.get(Calendar.MONTH) + 1);*/
            String partyOrganizationName = item.getPartyOrganizationName();
            String partyOrganizationId = item.getPartyOrganizationId();
            Date hjDate = item.getHjDate();
            Date jmDate = item.getJmDate();
            long l = hjDate.getTime() - jmDate.getTime();
            long l1 = l / (1000 * 3600 * 24);
            int election = affairElectionService.isElection(partyOrganizationName, partyOrganizationId, hjDate, year);
            if (l1 > 365) {
                /*中基层领导考评*/
                String juJiGuanRoleId = "13bac520ae4d4160b595384691b443fd";
                String chuJiGuanRoleId = "62cf6aaea0184d3b8cfbce1700ad0e38";
                String suoduiJiGuanRoleId = "ff24c3288860447d867d08d462a2a2b9";

                String[] zhongJiCeng = new String[3];
                zhongJiCeng[0] = chuJiGuanRoleId;
                zhongJiCeng[1] = juJiGuanRoleId;
                zhongJiCeng[2] = suoduiJiGuanRoleId;
                List<Map<String, String>> jcLdList = new ArrayList<>();
                Arrays.stream(zhongJiCeng).forEach(s -> {
                    jcLdList.addAll(userDao.findJcLdByRoleId(s));
                });
                String name = affairGeneralSituationService.findNameByOrg(partyOrganizationName);
                List<Map<String, String>> peopleList = affairPartyMemberService.peopleList(partyOrganizationName);
                jcLdList.forEach(jc -> {
                    peopleList.forEach(people -> {
                        if (people.get("name").equals(jc.get("name"))) {
                            if (people.get("name").equals(name)) {
                                /*月度中基层领导-书记考评*/
                                // 获取被考评对象id
                                String evaluationId = this.findEvaluationId(people.get("name"), people.get("card_num"));
                                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                examAutoEvaluation.setName(people.get("name"));
                                examAutoEvaluation.setIdNumber(people.get("card_num"));
                                examAutoEvaluation.setEvaluationId(evaluationId);
                                examAutoEvaluation.setType("2");
                                examAutoEvaluation.setEvalType("6");
                                examAutoEvaluation.setPeriod("1");
                                examAutoEvaluation.setYear(year);
                                examAutoEvaluation.setMonth(month);
                                examAutoEvaluation.setDetails(year+"年"+month+"月"+partyOrganizationName+"换届选举，未按时完成");
                                examAutoEvaluation.setUnit(partyOrganizationName);
                                examAutoEvaluation.setUnitId(partyOrganizationId);
                                examAutoEvaluation.setAssess("组干部门");
                                examAutoEvaluation.setRemark("每次");
                                examAutoEvaluation.setModel("2020年年度全局中层和基层领导干部考核公共扣分标准(公安处领导班子成员除外)");
                                examAutoEvaluation.setModelId("c00cebbbc62c48d888316206d38e02c7 ");
                                examAutoEvaluation.setOption("支部委员会任届期满未换届选举、支委成员缺位不按规定要求改选、补选的，应设支委未设支委的");
                                examAutoEvaluation.setOptionId("7261a762836842f3945ba72cf2630b3b");
                                examAutoEvaluation.setScore("8");
                                examAutoEvaluation.setTime(date);
                                examAutoEvaluation.setHappenTime(date);
                                examAutoEvaluation.setCheckTime(date);
                                examAutoEvaluation.setRowNum("60");
                                examAutoEvaluation.setFromSys("智慧政工");
                                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"换届选举");
                                this.summaryStandard(examAutoEvaluation,8.0,year+"年"+month+"月"+partyOrganizationName+"换届选举，未按时完成");
                                this.save(examAutoEvaluation);
                            } /*else {
                                *//*月度中基层领导考评-其他委员*//*
                                // 获取被考评对象id
                                String evaluationId = this.findEvaluationId(people.get("name"), people.get("card_num"));
                                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                examAutoEvaluation.setName(people.get("name"));
                                examAutoEvaluation.setIdNumber(people.get("card_num"));
                                examAutoEvaluation.setEvaluationId(evaluationId);
                                examAutoEvaluation.setType("2");
                                examAutoEvaluation.setEvalType("6");
                                examAutoEvaluation.setPeriod("1");
                                examAutoEvaluation.setYear(year);
                                examAutoEvaluation.setMonth(month);
                                examAutoEvaluation.setDetails("换届选举，未按时完成的扣分（党委、总支、支部委员期满3个月，未及时增补）");
                                examAutoEvaluation.setUnit(partyOrganizationName);
                                examAutoEvaluation.setUnitId(partyOrganizationId);
                                examAutoEvaluation.setAssess("组干部门");
                                examAutoEvaluation.setRemark("每次");
                                examAutoEvaluation.setModel("2020年月度对全局中层和基层领导干部考核公共扣分标准 (公安处领导班子成员除外)");
                                examAutoEvaluation.setModelId("d498bf52ce334e3da66851fc57143639");
                                examAutoEvaluation.setOption("支部委员会任届期满未换届选举、支委成员缺位不按规定要求改选、补选的，应设支委未设支委的");
                                examAutoEvaluation.setOptionId("acfc561b09dc42fba5c025e8437afbcf");
                                examAutoEvaluation.setScore("4");
                                examAutoEvaluation.setTime(date);
                                examAutoEvaluation.setHappenTime(date);
                                examAutoEvaluation.setCheckTime(date);
                                examAutoEvaluation.setRowNum("60");
                                examAutoEvaluation.setFromSys("智慧政工");
                                this.deleteInfoByMore(examAutoEvaluation);
                                this.save(examAutoEvaluation);

                            }*/
                        }
                    });

                });
            }
        });
    }

    public void juUnitElectionYear(String year) {
        IdGen idGen = new IdGen();
        String wyId = idGen.getNextId();
        String zjcId = idGen.getNextId();
        String lastYear = String.valueOf(Integer.valueOf(year) - 1);
        String startYear = lastYear + "-12" + "-11";
        String endYear = year + "-12" + "-10";
        List<AffairElection> list = affairElectionService.findAllInfo(year, startYear, endYear);
        list.forEach(item -> {
            Date date = new Date();
            Date createDate = item.getCreateDate();
            Calendar calendar = Calendar.getInstance();
            calendar.setTime(date);
           /* String year = String.valueOf(calendar.get(Calendar.YEAR));
            String month = String.valueOf(calendar.get(Calendar.MONTH) + 1);*/
            String partyOrganizationName = item.getPartyOrganizationName();
            String partyOrganizationId = item.getPartyOrganizationId();
            Date hjDate = item.getHjDate();
            Date jmDate = item.getJmDate();
            long l = hjDate.getTime() - jmDate.getTime();
            long l1 = l / (1000 * 3600 * 24);
            int election = affairElectionService.isElection(partyOrganizationName, partyOrganizationId, hjDate, year);
            if (l1 > 365) {
                /*单位自动考评*/
                // 局考局机关
                if (partyOrganizationName.contains("南宁公安局")||partyOrganizationName.contains("公安局")) {
                    //获取被考评对象id
                    List<String> unitId = affairElectionService.findUnitId(partyOrganizationId);
                    for (int i = 0; i < unitId.size(); i++) {
                        String userId = affairElectionService.findUserId(unitId.get(i));
                        ExamAutoEvaluation examAutoEvaluationYear = new ExamAutoEvaluation();
                        //被考评对象id
                        examAutoEvaluationYear.setEvaluationId(userId);
                        examAutoEvaluationYear.setType("1");
                        examAutoEvaluationYear.setEvalType("2");
                        examAutoEvaluationYear.setPeriod("2");
                        examAutoEvaluationYear.setYear(year);
                        examAutoEvaluationYear.setDetails("换届选举，未按时完成的扣分（党委、总支、支部委员期满3个月，未及时增补）");
                        examAutoEvaluationYear.setUnit(partyOrganizationName);
                        examAutoEvaluationYear.setUnitId(partyOrganizationId);
                        examAutoEvaluationYear.setAssess("组干处");
                        examAutoEvaluationYear.setRemark("每发现1次");
                        examAutoEvaluationYear.setModel("2020年公安局对局机关各处室及直属支队年度绩效考核公共 扣分标准");
                        examAutoEvaluationYear.setModelId("653c088f3e754adcaa659a3706d304b9");
                        examAutoEvaluationYear.setOption("相关工作未按要求抓好落实的");
                        examAutoEvaluationYear.setOptionId("6913bfecc3c94e7bb3ce1b04d95b2ab5");
                        examAutoEvaluationYear.setScore("2");
                        examAutoEvaluationYear.setTime(date);
                        examAutoEvaluationYear.setHappenTime(date);
                        examAutoEvaluationYear.setCheckTime(date);
                        examAutoEvaluationYear.setRowNum("19");
                        examAutoEvaluationYear.setFromSys("智慧政工");
                        //this.deleteInfoByMore(examAutoEvaluationYear);
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluationYear,null,"换届选举");
                        this.summaryStandard(examAutoEvaluationYear,2.0,"换届选举，未按时完成的扣分（党委、总支、支部委员期满3个月，未及时增补）");
                        this.save(examAutoEvaluationYear);
                    }
                }
            }
        });
    }

    public void juUnitElectionMonth(String year, String month) {
        IdGen idGen = new IdGen();
        String wyId = idGen.getNextId();
        String zjcId = idGen.getNextId();
        String lastYear = String.valueOf(Integer.valueOf(year) - 1);
        String startYear = lastYear + "-12" + "-11";
        String endYear = year + "-12" + "-10";
        List<AffairElection> list = affairElectionService.findAllInfo(year, startYear, endYear);
        list.forEach(item -> {
            Date date = new Date();
            Date createDate = item.getCreateDate();
            Calendar calendar = Calendar.getInstance();
            calendar.setTime(date);
           /* String year = String.valueOf(calendar.get(Calendar.YEAR));
            String month = String.valueOf(calendar.get(Calendar.MONTH) + 1);*/
            String partyOrganizationName = item.getPartyOrganizationName();
            String partyOrganizationId = item.getPartyOrganizationId();
            Date hjDate = item.getHjDate();
            Date jmDate = item.getJmDate();
            long l = hjDate.getTime() - jmDate.getTime();
            long l1 = l / (1000 * 3600 * 24);
            int election = affairElectionService.isElection(partyOrganizationName, partyOrganizationId, hjDate, year);
            if (l1 > 365) {
                /*单位自动考评*/
                // 局考局机关
                if (partyOrganizationName.contains("南宁公安局")||partyOrganizationName.contains("公安局")) {
                    //获取被考评对象id
                    List<String> unitId = affairElectionService.findUnitId(partyOrganizationId);
                    for (int i = 0; i < unitId.size(); i++) {
                        String userId = affairElectionService.findUserId(unitId.get(i));
                        //月度自动考评
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        //被考评对象id
                        examAutoEvaluation.setEvaluationId(userId);
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("2");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails("换届选举，未按时完成的扣分（党委、总支、支部委员期满3个月，未及时增补）");
                        examAutoEvaluation.setUnit(partyOrganizationName);
                        examAutoEvaluation.setUnitId(partyOrganizationId);
                        examAutoEvaluation.setAssess("组干处");
                        examAutoEvaluation.setRemark("每发现1次");
                        examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队月度绩效考核公共扣分标准");
                        examAutoEvaluation.setModelId("e8aa72ffe54a4118aeae9077ff7898ec");
                        examAutoEvaluation.setOption("相关工作未按要求抓好落实的");
                        examAutoEvaluation.setOptionId("6649b0b55ee348bd9df3f07a35bb6197");
                        examAutoEvaluation.setScore("3");
                        examAutoEvaluation.setTime(date);
                        examAutoEvaluation.setHappenTime(date);
                        examAutoEvaluation.setCheckTime(date);
                        examAutoEvaluation.setRowNum("22");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"换届选举");
                        this.summaryStandard(examAutoEvaluation,3.0,"换届选举，未按时完成的扣分（党委、总支、支部委员期满3个月，未及时增补）");
                        this.save(examAutoEvaluation);
                    }
                }
            }
        });
    }

    public void chuElectionYear(String year) {
        IdGen idGen = new IdGen();
        String wyId = idGen.getNextId();
        String zjcId = idGen.getNextId();
        String lastYear = String.valueOf(Integer.valueOf(year) - 1);
        String startYear = lastYear + "-12" + "-11";
        String endYear = year + "-12" + "-10";
        List<AffairElection> list = affairElectionService.findAllInfo(year, startYear, endYear);
        list.forEach(item -> {
            Date date = new Date();
            Date createDate = item.getCreateDate();
            Calendar calendar = Calendar.getInstance();
            calendar.setTime(date);
           /* String year = String.valueOf(calendar.get(Calendar.YEAR));
            String month = String.valueOf(calendar.get(Calendar.MONTH) + 1);*/
            String partyOrganizationName = item.getPartyOrganizationName();
            String partyOrganizationId = item.getPartyOrganizationId();
            Date hjDate = item.getHjDate();
            Date jmDate = item.getJmDate();
            long l = hjDate.getTime() - jmDate.getTime();
            long l1 = l / (1000 * 3600 * 24);
            int election = affairElectionService.isElection(partyOrganizationName, partyOrganizationId, hjDate, year);
            if (l1 > 365) {
                if (partyOrganizationName.contains("南宁")) {
                    if (partyOrganizationName.contains("公安处") && ((partyOrganizationName.contains("大队") == false) && (partyOrganizationName.contains("派出所") == false))) {
                        //公安处模板没给，具体内容需要修改
                        //获取被考评对象id
                        List<String> unitId = affairElectionService.findUnitId(partyOrganizationId);
                        for (int i = 0; i < unitId.size(); i++) {
                            String userId = affairElectionService.findUserId(unitId.get(i));
                            /*以上是月度，下面是年度*/
                            ExamAutoEvaluation examAutoEvaluationYear = new ExamAutoEvaluation();
                            //被考评对象id
                            examAutoEvaluationYear.setEvaluationId(userId);
                            examAutoEvaluationYear.setType("1");
                            examAutoEvaluationYear.setEvalType("4");
                            examAutoEvaluationYear.setPeriod("2");
                            examAutoEvaluationYear.setYear(year);
                            examAutoEvaluationYear.setDetails("换届选举，未按时完成的扣分（党委、总支、支部委员期满3个月，未及时增补）");
                            examAutoEvaluationYear.setUnit(partyOrganizationName);
                            examAutoEvaluationYear.setUnitId(partyOrganizationId);
                            // 公安处的考评模板没给，暂时设为空
                            examAutoEvaluationYear.setAssess("");
                            examAutoEvaluationYear.setRemark("");
                            examAutoEvaluationYear.setModel("");
                            examAutoEvaluationYear.setModelId("");
                            examAutoEvaluationYear.setOption("");
                            examAutoEvaluationYear.setOptionId("");
                            examAutoEvaluationYear.setScore("0.2");
                            //  以上模板未给
                            examAutoEvaluationYear.setTime(date);
                            examAutoEvaluationYear.setHappenTime(date);
                            examAutoEvaluationYear.setCheckTime(date);
                            examAutoEvaluationYear.setFromSys("智慧政工");
                            //this.deleteInfoByMore(examAutoEvaluationYear);
                            //通过关联自动考评标准关联表
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluationYear,"34","换届选举");
                            this.summaryStandard(examAutoEvaluationYear,0.2,"换届选举，未按时完成的扣分（党委、总支、支部委员期满3个月，未及时增补）");
                            this.save(examAutoEvaluationYear);
                        }
                    }
                } else if (partyOrganizationName.contains("柳州")) {
                    if (partyOrganizationName.contains("公安处") && ((partyOrganizationName.contains("大队") == false) && (partyOrganizationName.contains("派出所") == false))) {
                        //公安处模板没给，具体内容需要修改
                        //获取被考评对象id
                        List<String> unitId = affairElectionService.findUnitId(partyOrganizationId);
                        for (int i = 0; i < unitId.size(); i++) {
                            String userId = affairElectionService.findUserId(unitId.get(i));
                            /*以上是月度，下面是年度*/
                            ExamAutoEvaluation examAutoEvaluationYear = new ExamAutoEvaluation();
                            //被考评对象id
                            examAutoEvaluationYear.setEvaluationId(userId);
                            examAutoEvaluationYear.setType("1");
                            examAutoEvaluationYear.setEvalType("4");
                            examAutoEvaluationYear.setPeriod("2");
                            examAutoEvaluationYear.setYear(year);
                            examAutoEvaluationYear.setDetails("换届选举，未按时完成的扣分（党委、总支、支部委员期满3个月，未及时增补）");
                            examAutoEvaluationYear.setUnit(partyOrganizationName);
                            examAutoEvaluationYear.setUnitId(partyOrganizationId);
                            // 公安处的考评模板没给，暂时设为空
                            examAutoEvaluationYear.setAssess("");
                            examAutoEvaluationYear.setRemark("");
                            examAutoEvaluationYear.setModel("");
                            examAutoEvaluationYear.setModelId("");
                            examAutoEvaluationYear.setOption("");
                            examAutoEvaluationYear.setOptionId("");
                            examAutoEvaluationYear.setScore("0.2");
                            //  以上模板未给
                            examAutoEvaluationYear.setTime(date);
                            examAutoEvaluationYear.setHappenTime(date);
                            examAutoEvaluationYear.setCheckTime(date);
                            examAutoEvaluationYear.setFromSys("智慧政工");
                            //通过关联自动考评标准关联表
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluationYear,"95","换届选举");
                            this.summaryStandard(examAutoEvaluationYear,0.2,"换届选举，未按时完成的扣分（党委、总支、支部委员期满3个月，未及时增补）");
                            this.save(examAutoEvaluationYear);
                        }
                    }
                } else if (partyOrganizationName.contains("北海")) {
                    if (partyOrganizationName.contains("公安处") && ((partyOrganizationName.contains("大队") == false) && (partyOrganizationName.contains("派出所") == false))) {
                        //公安处模板没给，具体内容需要修改
                        //获取被考评对象id
                        List<String> unitId = affairElectionService.findUnitId(partyOrganizationId);
                        for (int i = 0; i < unitId.size(); i++) {
                            String userId = affairElectionService.findUserId(unitId.get(i));
                            /*以上是月度，下面是年度*/
                            ExamAutoEvaluation examAutoEvaluationYear = new ExamAutoEvaluation();
                            //被考评对象id
                            examAutoEvaluationYear.setEvaluationId(userId);
                            examAutoEvaluationYear.setType("1");
                            examAutoEvaluationYear.setEvalType("4");
                            examAutoEvaluationYear.setPeriod("2");
                            examAutoEvaluationYear.setYear(year);
                            examAutoEvaluationYear.setDetails("换届选举，未按时完成的扣分（党委、总支、支部委员期满3个月，未及时增补）");
                            examAutoEvaluationYear.setUnit(partyOrganizationName);
                            examAutoEvaluationYear.setUnitId(partyOrganizationId);
                            // 公安处的考评模板没给，暂时设为空
                            examAutoEvaluationYear.setAssess("");
                            examAutoEvaluationYear.setRemark("");
                            examAutoEvaluationYear.setModel("");
                            examAutoEvaluationYear.setModelId("");
                            examAutoEvaluationYear.setOption("");
                            examAutoEvaluationYear.setOptionId("");
                            examAutoEvaluationYear.setScore("");
                            //  以上模板未给
                            examAutoEvaluationYear.setTime(date);
                            examAutoEvaluationYear.setHappenTime(date);
                            examAutoEvaluationYear.setCheckTime(date);
                            examAutoEvaluationYear.setFromSys("智慧政工");
                            //this.deleteInfoByMore(examAutoEvaluationYear);
                            //通过关联自动考评标准关联表
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluationYear,"156","换届选举");
                            this.summaryStandard(examAutoEvaluationYear,0.2,"换届选举，未按时完成的扣分（党委、总支、支部委员期满3个月，未及时增补）");
                            this.save(examAutoEvaluationYear);
                        }
                    }
                }

            }
        });
    }

    public void chuElectionMonth(String year, String month) {
        IdGen idGen = new IdGen();
        String wyId = idGen.getNextId();
        String zjcId = idGen.getNextId();
        String lastYear = String.valueOf(Integer.valueOf(year) - 1);
        String startYear = lastYear + "-12" + "-11";
        String endYear = year + "-12" + "-10";
        List<AffairElection> list = affairElectionService.findAllInfo(year, startYear, endYear);
        list.forEach(item -> {
            Date date = new Date();
            Date createDate = item.getCreateDate();
            Calendar calendar = Calendar.getInstance();
            calendar.setTime(date);
           /* String year = String.valueOf(calendar.get(Calendar.YEAR));
            String month = String.valueOf(calendar.get(Calendar.MONTH) + 1);*/
            String partyOrganizationName = item.getPartyOrganizationName();
            String partyOrganizationId = item.getPartyOrganizationId();
            Date hjDate = item.getHjDate();
            Date jmDate = item.getJmDate();
            long l = hjDate.getTime() - jmDate.getTime();
            long l1 = l / (1000 * 3600 * 24);
            int election = affairElectionService.isElection(partyOrganizationName, partyOrganizationId, hjDate, year);
            if (l1 > 365) {
                if (partyOrganizationName.contains("南宁")) {
                    if (partyOrganizationName.contains("公安处") && ((partyOrganizationName.contains("大队") == false) && (partyOrganizationName.contains("派出所") == false))) {
                        //获取被考评对象id
                        List<String> unitId = affairElectionService.findUnitId(partyOrganizationId);
                        for (int i = 0; i < unitId.size(); i++) {
                            String userId = affairElectionService.findUserId(unitId.get(i));
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            //被考评对象id
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("4");
                            examAutoEvaluation.setPeriod("1");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setMonth(month);
                            examAutoEvaluation.setDetails("换届选举，未按时完成的扣分（党委、总支、支部委员期满3个月，未及时增补）");
                            examAutoEvaluation.setUnit(partyOrganizationName);
                            examAutoEvaluation.setUnitId(partyOrganizationId);
                            // 公安处的考评模板没给，暂时设为空
                            examAutoEvaluation.setAssess("");
                            examAutoEvaluation.setRemark("");
                            examAutoEvaluation.setModel("");
                            examAutoEvaluation.setModelId("");
                            examAutoEvaluation.setOption("");
                            examAutoEvaluation.setOptionId("");
                            examAutoEvaluation.setScore("0.5");
                            //  以上模板未给
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setFromSys("智慧政工");
                            //this.deleteInfoByMore(examAutoEvaluation);
                            //通过关联自动考评标准关联表
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","换届选举");
                            this.summaryStandard(examAutoEvaluation,0.5,"换届选举，未按时完成的扣分（党委、总支、支部委员期满3个月，未及时增补）");
                            this.save(examAutoEvaluation);
                        }
                    }
                } else if (partyOrganizationName.contains("柳州")) {
                    if (partyOrganizationName.contains("公安处") && ((partyOrganizationName.contains("大队") == false) && (partyOrganizationName.contains("派出所") == false))) {
                        //获取被考评对象id
                        List<String> unitId = affairElectionService.findUnitId(partyOrganizationId);
                        for (int i = 0; i < unitId.size(); i++) {
                            String userId = affairElectionService.findUserId(unitId.get(i));
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            //被考评对象id
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("4");
                            examAutoEvaluation.setPeriod("1");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setMonth(month);
                            examAutoEvaluation.setDetails("换届选举，未按时完成的扣分（党委、总支、支部委员期满3个月，未及时增补）");
                            examAutoEvaluation.setUnit(partyOrganizationName);
                            examAutoEvaluation.setUnitId(partyOrganizationId);
                            // 公安处的考评模板没给，暂时设为空
                            examAutoEvaluation.setAssess("");
                            examAutoEvaluation.setRemark("");
                            examAutoEvaluation.setModel("");
                            examAutoEvaluation.setModelId("");
                            examAutoEvaluation.setOption("");
                            examAutoEvaluation.setOptionId("");
                            examAutoEvaluation.setScore("0.5");
                            //  以上模板未给
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setFromSys("智慧政工");
                            //this.deleteInfoByMore(examAutoEvaluation);
                            //通过关联自动考评标准关联表
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","换届选举");
                            this.summaryStandard(examAutoEvaluation,0.5,"换届选举，未按时完成的扣分（党委、总支、支部委员期满3个月，未及时增补）");
                            this.save(examAutoEvaluation);
                        }
                    }
                } else if (partyOrganizationName.contains("北海")) {
                    if (partyOrganizationName.contains("公安处") && ((partyOrganizationName.contains("大队") == false) && (partyOrganizationName.contains("派出所") == false))) {
                        //获取被考评对象id
                        List<String> unitId = affairElectionService.findUnitId(partyOrganizationId);
                        for (int i = 0; i < unitId.size(); i++) {
                            String userId = affairElectionService.findUserId(unitId.get(i));
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            //被考评对象id
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("4");
                            examAutoEvaluation.setPeriod("1");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setMonth(month);
                            examAutoEvaluation.setDetails("换届选举，未按时完成的扣分（党委、总支、支部委员期满3个月，未及时增补）");
                            examAutoEvaluation.setUnit(partyOrganizationName);
                            examAutoEvaluation.setUnitId(partyOrganizationId);
                            // 公安处的考评模板没给，暂时设为空
                            examAutoEvaluation.setAssess("");
                            examAutoEvaluation.setRemark("");
                            examAutoEvaluation.setModel("");
                            examAutoEvaluation.setModelId("");
                            examAutoEvaluation.setOption("");
                            examAutoEvaluation.setOptionId("");
                            examAutoEvaluation.setScore("0.5");
                            //  以上模板未给
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setFromSys("智慧政工");
                            //this.deleteInfoByMore(examAutoEvaluation);
                            //通过关联自动考评标准关联表
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","换届选举");
                            this.summaryStandard(examAutoEvaluation,0.5,"换届选举，未按时完成的扣分（党委、总支、支部委员期满3个月，未及时增补）");
                            this.save(examAutoEvaluation);
                        }
                    }
                }

            }
        });
    }

    public void duiElectionYear(String year) {
        IdGen idGen = new IdGen();
        String wyId = idGen.getNextId();
        String zjcId = idGen.getNextId();
        String lastYear = String.valueOf(Integer.valueOf(year) - 1);
        String startYear = lastYear + "-12" + "-11";
        String endYear = year + "-12" + "-10";
        List<AffairElection> list = affairElectionService.findAllInfo(year, startYear, endYear);
        list.forEach(item -> {
            Date date = new Date();
            Date createDate = item.getCreateDate();
            Calendar calendar = Calendar.getInstance();
            calendar.setTime(date);
           /* String year = String.valueOf(calendar.get(Calendar.YEAR));
            String month = String.valueOf(calendar.get(Calendar.MONTH) + 1);*/
            String partyOrganizationName = item.getPartyOrganizationName();
            String partyOrganizationId = item.getPartyOrganizationId();
            Date hjDate = item.getHjDate();
            Date jmDate = item.getJmDate();
            long l = hjDate.getTime() - jmDate.getTime();
            long l1 = l / (1000 * 3600 * 24);
            int election = affairElectionService.isElection(partyOrganizationName, partyOrganizationId, hjDate, year);
            if (l1 > 365) {
                if (partyOrganizationName.contains("南宁")) {
                    if (partyOrganizationName.contains("大队") || partyOrganizationName.contains("派出所")) {
                        //公安处模板没给，具体内容需要修改
                        //获取被考评对象id
                        List<String> unitId = affairElectionService.findUnitId(partyOrganizationId);
                        for (int i = 0; i < unitId.size(); i++) {
                            String userId = affairElectionService.findUserId(unitId.get(i));
                            ExamAutoEvaluation examAutoEvaluationYear = new ExamAutoEvaluation();
                            //被考评对象id
                            examAutoEvaluationYear.setEvaluationId(userId);
                            examAutoEvaluationYear.setType("1");
                            examAutoEvaluationYear.setEvalType("3");
                            examAutoEvaluationYear.setPeriod("2");
                            examAutoEvaluationYear.setYear(year);
                            examAutoEvaluationYear.setDetails("换届选举，未按时完成的扣分（党委、总支、支部委员期满3个月，未及时增补）");
                            examAutoEvaluationYear.setUnit(partyOrganizationName);
                            examAutoEvaluationYear.setUnitId(partyOrganizationId);
                            // 公安处的考评模板没给，暂时设为空
                            examAutoEvaluationYear.setAssess("");
                            examAutoEvaluationYear.setRemark("");
                            examAutoEvaluationYear.setModel("");
                            examAutoEvaluationYear.setModelId("");
                            examAutoEvaluationYear.setOption("");
                            examAutoEvaluationYear.setOptionId("");
                            examAutoEvaluationYear.setScore("0.2");
                            //  以上模板未给
                            examAutoEvaluationYear.setTime(date);
                            examAutoEvaluationYear.setHappenTime(date);
                            examAutoEvaluationYear.setCheckTime(date);
                            examAutoEvaluationYear.setFromSys("智慧政工");
                            //this.deleteInfoByMore(examAutoEvaluationYear);
                            //通过关联自动考评标准关联表
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluationYear,"34","换届选举");
                            this.summaryStandard(examAutoEvaluationYear,0.2,"换届选举，未按时完成的扣分（党委、总支、支部委员期满3个月，未及时增补）");
                            this.save(examAutoEvaluationYear);
                        }
                    }
                } else if (partyOrganizationName.contains("柳州")) {
                    if (partyOrganizationName.contains("大队") || partyOrganizationName.contains("派出所")) {
                        //公安处模板没给，具体内容需要修改
                        //获取被考评对象id
                        List<String> unitId = affairElectionService.findUnitId(partyOrganizationId);
                        for (int i = 0; i < unitId.size(); i++) {
                            String userId = affairElectionService.findUserId(unitId.get(i));
                            ExamAutoEvaluation examAutoEvaluationYear = new ExamAutoEvaluation();
                            //被考评对象id
                            examAutoEvaluationYear.setEvaluationId(userId);
                            examAutoEvaluationYear.setType("1");
                            examAutoEvaluationYear.setEvalType("3");
                            examAutoEvaluationYear.setPeriod("2");
                            examAutoEvaluationYear.setYear(year);
                            examAutoEvaluationYear.setDetails("换届选举，未按时完成的扣分（党委、总支、支部委员期满3个月，未及时增补）");
                            examAutoEvaluationYear.setUnit(partyOrganizationName);
                            examAutoEvaluationYear.setUnitId(partyOrganizationId);
                            // 公安处的考评模板没给，暂时设为空
                            examAutoEvaluationYear.setAssess("");
                            examAutoEvaluationYear.setRemark("");
                            examAutoEvaluationYear.setModel("");
                            examAutoEvaluationYear.setModelId("");
                            examAutoEvaluationYear.setOption("");
                            examAutoEvaluationYear.setOptionId("");
                            examAutoEvaluationYear.setScore("0.2");
                            //  以上模板未给
                            examAutoEvaluationYear.setTime(date);
                            examAutoEvaluationYear.setHappenTime(date);
                            examAutoEvaluationYear.setCheckTime(date);
                            examAutoEvaluationYear.setFromSys("智慧政工");
                            //this.deleteInfoByMore(examAutoEvaluationYear);
                            //通过关联自动考评标准关联表
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluationYear,"95","换届选举");
                            this.summaryStandard(examAutoEvaluationYear,0.2,"换届选举，未按时完成的扣分（党委、总支、支部委员期满3个月，未及时增补）");
                            this.save(examAutoEvaluationYear);
                        }
                    }
                } else if (partyOrganizationName.contains("北海")) {
                    if (partyOrganizationName.contains("大队") || partyOrganizationName.contains("派出所")) {
                        //公安处模板没给，具体内容需要修改
                        //获取被考评对象id
                        List<String> unitId = affairElectionService.findUnitId(partyOrganizationId);
                        for (int i = 0; i < unitId.size(); i++) {
                            String userId = affairElectionService.findUserId(unitId.get(i));
                            ExamAutoEvaluation examAutoEvaluationYear = new ExamAutoEvaluation();
                            //被考评对象id
                            examAutoEvaluationYear.setEvaluationId(userId);
                            examAutoEvaluationYear.setType("1");
                            examAutoEvaluationYear.setEvalType("3");
                            examAutoEvaluationYear.setPeriod("2");
                            examAutoEvaluationYear.setYear(year);
                            examAutoEvaluationYear.setDetails("换届选举，未按时完成的扣分（党委、总支、支部委员期满3个月，未及时增补）");
                            examAutoEvaluationYear.setUnit(partyOrganizationName);
                            examAutoEvaluationYear.setUnitId(partyOrganizationId);
                            // 公安处的考评模板没给，暂时设为空
                            examAutoEvaluationYear.setAssess("");
                            examAutoEvaluationYear.setRemark("");
                            examAutoEvaluationYear.setModel("");
                            examAutoEvaluationYear.setModelId("");
                            examAutoEvaluationYear.setOption("");
                            examAutoEvaluationYear.setOptionId("");
                            examAutoEvaluationYear.setScore("0.2");
                            //  以上模板未给
                            examAutoEvaluationYear.setTime(date);
                            examAutoEvaluationYear.setHappenTime(date);
                            examAutoEvaluationYear.setCheckTime(date);
                            examAutoEvaluationYear.setFromSys("智慧政工");
                            //this.deleteInfoByMore(examAutoEvaluationYear);
                            //通过关联自动考评标准关联表
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluationYear,"156","换届选举");
                            this.summaryStandard(examAutoEvaluationYear,0.2,"换届选举，未按时完成的扣分（党委、总支、支部委员期满3个月，未及时增补）");
                            this.save(examAutoEvaluationYear);
                        }
                    }
                }

            }
        });
    }

    public void duiElectionMonth(String year, String month) {
        IdGen idGen = new IdGen();
        String wyId = idGen.getNextId();
        String zjcId = idGen.getNextId();
        String lastYear = String.valueOf(Integer.valueOf(year) - 1);
        String startYear = lastYear + "-12" + "-11";
        String endYear = year + "-12" + "-10";
        List<AffairElection> list = affairElectionService.findAllInfo(year, startYear, endYear);
        list.forEach(item -> {
            Date date = new Date();
            Date createDate = item.getCreateDate();
            Calendar calendar = Calendar.getInstance();
            calendar.setTime(date);
           /* String year = String.valueOf(calendar.get(Calendar.YEAR));
            String month = String.valueOf(calendar.get(Calendar.MONTH) + 1);*/
            String partyOrganizationName = item.getPartyOrganizationName();
            String partyOrganizationId = item.getPartyOrganizationId();
            Date hjDate = item.getHjDate();
            Date jmDate = item.getJmDate();
            long l = hjDate.getTime() - jmDate.getTime();
            long l1 = l / (1000 * 3600 * 24);
            int election = affairElectionService.isElection(partyOrganizationName, partyOrganizationId, hjDate, year);
            if (l1 > 365) {
                if (partyOrganizationName.contains("南宁")) {
                    if (partyOrganizationName.contains("大队") || partyOrganizationName.contains("派出所")) {
                        //公安处模板没给，具体内容需要修改
                        //获取被考评对象id
                        List<String> unitId = affairElectionService.findUnitId(partyOrganizationId);
                        for (int i = 0; i < unitId.size(); i++) {
                            String userId = affairElectionService.findUserId(unitId.get(i));
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            //被考评对象id
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("3");
                            examAutoEvaluation.setPeriod("1");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setMonth(month);
                            examAutoEvaluation.setDetails("换届选举，未按时完成的扣分（党委、总支、支部委员期满3个月，未及时增补）");
                            examAutoEvaluation.setUnit(partyOrganizationName);
                            examAutoEvaluation.setUnitId(partyOrganizationId);
                            // 公安处的考评模板没给，暂时设为空
                            examAutoEvaluation.setAssess("");
                            examAutoEvaluation.setRemark("");
                            examAutoEvaluation.setModel("");
                            examAutoEvaluation.setModelId("");
                            examAutoEvaluation.setOption("");
                            examAutoEvaluation.setOptionId("");
                            examAutoEvaluation.setScore("3.0");
                            //  以上模板未给
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setFromSys("智慧政工");
                            //this.deleteInfoByMore(examAutoEvaluation);
                            //通过关联自动考评标准关联表
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","换届选举");
                            this.summaryStandard(examAutoEvaluation,0.5,"换届选举，未按时完成的扣分（党委、总支、支部委员期满3个月，未及时增补）");
                            this.save(examAutoEvaluation);
                        }
                    }
                } else if (partyOrganizationName.contains("柳州")) {
                    if (partyOrganizationName.contains("大队") || partyOrganizationName.contains("派出所")) {
                        //公安处模板没给，具体内容需要修改
                        //获取被考评对象id
                        List<String> unitId = affairElectionService.findUnitId(partyOrganizationId);
                        for (int i = 0; i < unitId.size(); i++) {
                            String userId = affairElectionService.findUserId(unitId.get(i));
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            //被考评对象id
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("3");
                            examAutoEvaluation.setPeriod("1");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setMonth(month);
                            examAutoEvaluation.setDetails("换届选举，未按时完成的扣分（党委、总支、支部委员期满3个月，未及时增补）");
                            examAutoEvaluation.setUnit(partyOrganizationName);
                            examAutoEvaluation.setUnitId(partyOrganizationId);
                            // 公安处的考评模板没给，暂时设为空
                            examAutoEvaluation.setAssess("");
                            examAutoEvaluation.setRemark("");
                            examAutoEvaluation.setModel("");
                            examAutoEvaluation.setModelId("");
                            examAutoEvaluation.setOption("");
                            examAutoEvaluation.setOptionId("");
                            examAutoEvaluation.setScore("0.5");
                            //  以上模板未给
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setFromSys("智慧政工");
                            //this.deleteInfoByMore(examAutoEvaluation);
                            //通过关联自动考评标准关联表
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","换届选举");
                            this.summaryStandard(examAutoEvaluation,0.5,"换届选举，未按时完成的扣分（党委、总支、支部委员期满3个月，未及时增补）");
                            this.save(examAutoEvaluation);
                        }
                    }
                } else if (partyOrganizationName.contains("北海")) {
                    if (partyOrganizationName.contains("大队") || partyOrganizationName.contains("派出所")) {
                        //公安处模板没给，具体内容需要修改
                        //获取被考评对象id
                        List<String> unitId = affairElectionService.findUnitId(partyOrganizationId);
                        for (int i = 0; i < unitId.size(); i++) {
                            String userId = affairElectionService.findUserId(unitId.get(i));
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            //被考评对象id
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("3");
                            examAutoEvaluation.setPeriod("1");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setMonth(month);
                            examAutoEvaluation.setDetails("换届选举，未按时完成的扣分（党委、总支、支部委员期满3个月，未及时增补）");
                            examAutoEvaluation.setUnit(partyOrganizationName);
                            examAutoEvaluation.setUnitId(partyOrganizationId);
                            // 公安处的考评模板没给，暂时设为空
                            examAutoEvaluation.setAssess("");
                            examAutoEvaluation.setRemark("");
                            examAutoEvaluation.setModel("");
                            examAutoEvaluation.setModelId("");
                            examAutoEvaluation.setOption("");
                            examAutoEvaluation.setOptionId("");
                            examAutoEvaluation.setScore("0.5");
                            //  以上模板未给
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setFromSys("智慧政工");
                            //this.deleteInfoByMore(examAutoEvaluation);
                            //通过关联自动考评标准关联表
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","换届选举");
                            this.summaryStandard(examAutoEvaluation,0.5,"换届选举，未按时完成的扣分（党委、总支、支部委员期满3个月，未及时增补）");
                            this.save(examAutoEvaluation);
                        }
                    }
                }

            }
        });
    }

    public void juChuElectionYear(String year) {
        StringBuffer nncDetail = null;
        StringBuffer lzcDetail = null;
        StringBuffer bhcDetail = null;
        Integer nncCount = 0;
        Integer lzcCount = 0;
        Integer bhcCount = 0;
        Boolean isNnc = false;
        Boolean isLzc = false;
        Boolean isBhc = false;
        String lastYear = String.valueOf(Integer.valueOf(year) - 1);
        String startYear = lastYear + "-12" + "-11";
        String endYear = year + "-12" + "-10";
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        List<AffairElection> list = affairElectionService.findAllInfo(year, startYear, endYear);
        for (int i = 0; i < list.size(); i++) {
            Date createDate = list.get(i).getCreateDate();
            String partyOrganizationName = list.get(i).getPartyOrganizationName();
            String partyOrganizationId = list.get(i).getPartyOrganizationId();
            Date hjDate = list.get(i).getHjDate();
            Date jmDate = list.get(i).getJmDate();
            long l = hjDate.getTime() - jmDate.getTime();
            long l1 = l / (1000 * 3600 * 24);
            int election = affairElectionService.isElection(partyOrganizationName, partyOrganizationId, hjDate, year);
            if(partyOrganizationName.contains("南宁铁路公安处") || partyOrganizationName.contains("南宁公安处")){
                if (l1 > 365) {
                    nncCount = nncCount + 1;
                    isNnc = true;
                    if (nncDetail == null) {
                        nncDetail = new StringBuffer(partyOrganizationName + DateUtils.formatDate(jmDate, "yyyy-MM-dd") + "届次换届选举，未按时完成");
                    } else {
                        nncDetail.append("," + partyOrganizationName + DateUtils.formatDate(jmDate, "yyyy-MM-dd") + "届次换届选举，未按时完成");
                    }
                }
            }else if(partyOrganizationName.contains("柳州铁路公安处") || partyOrganizationName.contains("柳州公安处")){
                if (l < 0) {
                    isLzc = true;
                    lzcCount = lzcCount + 1;
                    if (lzcDetail == null) {
                        lzcDetail = new StringBuffer(partyOrganizationName + DateUtils.formatDate(jmDate, "yyyy-MM-dd") + "届次换届选举，未按时完成");
                    } else {
                        lzcDetail.append("," + partyOrganizationName + DateUtils.formatDate(jmDate, "yyyy-MM-dd") + "届次换届选举，未按时完成");
                    }
                }
            }else if(partyOrganizationName.contains("北海铁路公安处") || partyOrganizationName.contains("北海公安处")){
                if (l < 0) {
                    isBhc = true;
                    bhcCount = bhcCount + 1;
                    if (bhcDetail == null) {
                        bhcDetail = new StringBuffer(partyOrganizationName + DateUtils.formatDate(jmDate, "yyyy-MM-dd") + "届次换届选举，未按时完成");
                    } else {
                        bhcDetail.append("," + partyOrganizationName + DateUtils.formatDate(jmDate, "yyyy-MM-dd") + "届次换届选举，未按时完成");
                    }
                }
            }
        }
        ExamAutoEvaluation examAutoEvaluationYear = new ExamAutoEvaluation();
        examAutoEvaluationYear.setType("1");
        examAutoEvaluationYear.setEvalType("1");
        examAutoEvaluationYear.setPeriod("2");
        examAutoEvaluationYear.setYear(year);
        examAutoEvaluationYear.setAssess("组干处");
        examAutoEvaluationYear.setRemark("每次");
        examAutoEvaluationYear.setModel("2020年月度公安局对公安处重点工作扣分标准（直接扣大分）");
        examAutoEvaluationYear.setModelId("241d14b81fbc43ac9025dbf6599e6b55");
        examAutoEvaluationYear.setOption("未按要求抓好基层党组织按期换届，党委、总支、支部委员出缺超过3个月无特殊原因未及时增补的");
        examAutoEvaluationYear.setOptionId("b788ac71b9614eb9a06edec35bb6c5b2");
        examAutoEvaluationYear.setTime(date);
        examAutoEvaluationYear.setHappenTime(date);
        examAutoEvaluationYear.setCheckTime(date);
        examAutoEvaluationYear.setRowNum("31");
        examAutoEvaluationYear.setFromSys("智慧政工");
        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluationYear,null,"换届选举");
        if (true == isNnc){
            examAutoEvaluationYear.setIsNewRecord(false);
            examAutoEvaluationYear.setId("");
            examAutoEvaluationYear.setEvaluationId("34e8d855cf6b4b1ab5e7e23e7aaba658");
            examAutoEvaluationYear.setUnit("南宁处政治处组织干部室");
            examAutoEvaluationYear.setUnitId("27");
            examAutoEvaluationYear.setScore(String.valueOf(0.2 * nncCount));
            examAutoEvaluationYear.setDetails(String.valueOf(nncDetail));
            //this.deleteInfoByMore(examAutoEvaluationYear);
            this.summaryStandard(examAutoEvaluationYear,0.2 * nncCount,nncDetail.toString());
            this.save(examAutoEvaluationYear);
        }
        if (true == isLzc){
            examAutoEvaluationYear.setIsNewRecord(false);
            examAutoEvaluationYear.setId("");
            examAutoEvaluationYear.setEvaluationId("ec3ba2efdd404f2faa520f6e8a71ec4c");
            examAutoEvaluationYear.setUnit("柳州处政治处组织干部室");
            examAutoEvaluationYear.setUnitId("142");
            examAutoEvaluationYear.setScore(String.valueOf(0.2 * lzcCount));
            examAutoEvaluationYear.setDetails(String.valueOf(lzcDetail));
            this.summaryStandard(examAutoEvaluationYear,0.2 * lzcCount,lzcDetail.toString());
            //this.deleteInfoByMore(examAutoEvaluationYear);
            this.save(examAutoEvaluationYear);
        }
        if (true == isBhc){
            examAutoEvaluationYear.setIsNewRecord(false);
            examAutoEvaluationYear.setId("");
            examAutoEvaluationYear.setEvaluationId("c90918faf2614baa8fa85230482bd43e");
            examAutoEvaluationYear.setUnit("北海处政治处组织干部室");
            examAutoEvaluationYear.setUnitId("264");
            examAutoEvaluationYear.setScore(String.valueOf(0.2 * bhcCount));
            examAutoEvaluationYear.setDetails(String.valueOf(bhcDetail));
            this.summaryStandard(examAutoEvaluationYear,0.2 * bhcCount,bhcDetail.toString());
            //this.deleteInfoByMore(examAutoEvaluationYear);
            this.save(examAutoEvaluationYear);
        }
        /*list.forEach(item -> {
            Date date = new Date();
            Date createDate = item.getCreateDate();
            Calendar calendar = Calendar.getInstance();
            calendar.setTime(date);
           *//* String year = String.valueOf(calendar.get(Calendar.YEAR));
            String month = String.valueOf(calendar.get(Calendar.MONTH) + 1);*//*
            String partyOrganizationName = item.getPartyOrganizationName();
            String partyOrganizationId = item.getPartyOrganizationId();
            Date hjDate = item.getHjDate();
            int election = affairElectionService.isElection(partyOrganizationName, partyOrganizationId, hjDate, year);
            if (election > 0) {
                if(partyOrganizationName.contains("南宁铁路公安处") || partyOrganizationName.contains("南宁公安处")){

                }else if(partyOrganizationName.contains("柳州铁路公安处") || partyOrganizationName.contains("柳州公安处")){

                }else if(partyOrganizationName.contains("北海铁路公安处") || partyOrganizationName.contains("北海公安处")){

                }
               *//* List<String> unitId = affairElectionService.findUnitId(partyOrganizationId);
                for (int i = 0; i < unitId.size(); i++) {
                    String userId = affairElectionService.findUserId(unitId.get(i));*//*
                    ExamAutoEvaluation examAutoEvaluationYear = new ExamAutoEvaluation();
                    //被考评对象id
//                    examAutoEvaluationYear.setEvaluationId(userId);
                    examAutoEvaluationYear.setType("1");
                    examAutoEvaluationYear.setEvalType("1");
                    examAutoEvaluationYear.setPeriod("2");
                    examAutoEvaluationYear.setYear(year);
                    examAutoEvaluationYear.setDetails(partyOrganizationName+hjDate+"换届选举，未按时完成的扣分（党委、总支、支部委员期满3个月，未及时增补）");
                    *//*examAutoEvaluationYear.setUnit(partyOrganizationName);
                    examAutoEvaluationYear.setUnitId(partyOrganizationId);*//*
                    // 公安处的考评模板没给，暂时设为空
                    if(partyOrganizationName.contains("南宁铁路公安处") || partyOrganizationName.contains("南宁公安处")){
                        examAutoEvaluationYear.setEvaluationId("34e8d855cf6b4b1ab5e7e23e7aaba658");
                        examAutoEvaluationYear.setUnit("南宁处政治处组织干部室");
                        examAutoEvaluationYear.setUnitId("27");
                    }else if(partyOrganizationName.contains("柳州铁路公安处") || partyOrganizationName.contains("柳州公安处")){
                        examAutoEvaluationYear.setEvaluationId("ec3ba2efdd404f2faa520f6e8a71ec4c");
                        examAutoEvaluationYear.setUnit("柳州处政治处组织干部室");
                        examAutoEvaluationYear.setUnitId("142");
                    }else if(partyOrganizationName.contains("北海铁路公安处") || partyOrganizationName.contains("北海公安处")){
                        examAutoEvaluationYear.setEvaluationId("c90918faf2614baa8fa85230482bd43e");
                        examAutoEvaluationYear.setUnit("北海处政治处组织干部室");
                        examAutoEvaluationYear.setUnitId("264");
                    }
                    examAutoEvaluationYear.setAssess("组干处");
                    examAutoEvaluationYear.setRemark("每次");
                    examAutoEvaluationYear.setModel("2020年月度公安局对公安处重点工作扣分标准（直接扣大分）");
                    examAutoEvaluationYear.setModelId("241d14b81fbc43ac9025dbf6599e6b55");
                    examAutoEvaluationYear.setOption("未按要求抓好基层党组织按期换届，党委、总支、支部委员出缺超过3个月无特殊原因未及时增补的");
                    examAutoEvaluationYear.setOptionId("b788ac71b9614eb9a06edec35bb6c5b2");
                    examAutoEvaluationYear.setScore("0.2");
                    //  以上模板未给
                    examAutoEvaluationYear.setTime(date);
                    examAutoEvaluationYear.setHappenTime(date);
                    examAutoEvaluationYear.setCheckTime(date);
                    examAutoEvaluationYear.setRowNum("31");
                    examAutoEvaluationYear.setFromSys("智慧政工");
                    this.deleteInfoByMore(examAutoEvaluationYear);
                    this.save(examAutoEvaluationYear);
//                }
            }
        });*/
    }

    public void juChuElectionMonth(String year, String month) {
        StringBuffer nncDetail = null;
        StringBuffer lzcDetail = null;
        StringBuffer bhcDetail = null;
        Boolean isNnc = false;
        Boolean isLzc = false;
        Boolean isBhc = false;
        Integer nncCount = 0;
        Integer lzcCount = 0;
        Integer bhcCount = 0;
        String lastYear = String.valueOf(Integer.valueOf(year) - 1);
        String startYear = lastYear + "-12" + "-11";
        String endYear = year + "-12" + "-10";
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        List<AffairElection> list = affairElectionService.findAllInfo(year, startYear, endYear);
        for (int i = 0; i < list.size(); i++) {
            Date createDate = list.get(i).getCreateDate();
            String partyOrganizationName = list.get(i).getPartyOrganizationName();
            String partyOrganizationId = list.get(i).getPartyOrganizationId();
            Date hjDate = list.get(i).getHjDate();
            Date jmDate = list.get(i).getJmDate();
            long l = hjDate.getTime() - jmDate.getTime();
            long l1 = l / (1000 * 3600 * 24);
            int election = affairElectionService.isElection(partyOrganizationName, partyOrganizationId, hjDate, year);
            if (l1 > 365){
                if(partyOrganizationName.contains("南宁铁路公安处") || partyOrganizationName.contains("南宁公安处")){
                    nncCount = nncCount + 1;
                    isNnc = true;
                    if(nncDetail==null){
                        nncDetail = new StringBuffer(partyOrganizationName+DateUtils.formatDate(jmDate,"yyyy-MM-dd")+"届次换届选举，未按时完成");
                    }else{
                        nncDetail.append(","+partyOrganizationName+DateUtils.formatDate(jmDate,"yyyy-MM-dd")+"届次换届选举，未按时完成");
                    }
                }else if(partyOrganizationName.contains("柳州铁路公安处") || partyOrganizationName.contains("柳州公安处")){
                    lzcCount = lzcCount + 1;
                    isLzc = true;
                    if(lzcDetail==null){
                        lzcDetail = new StringBuffer(partyOrganizationName+DateUtils.formatDate(jmDate,"yyyy-MM-dd")+"届次换届选举，未按时完成");
                    }else{
                        lzcDetail.append(","+partyOrganizationName+DateUtils.formatDate(jmDate,"yyyy-MM-dd")+"届次换届选举，未按时完成");
                    }
                }else if(partyOrganizationName.contains("北海铁路公安处") || partyOrganizationName.contains("北海公安处")){
                    bhcCount = bhcCount + 1;
                    isBhc = true;
                    if(bhcDetail==null){
                        bhcDetail = new StringBuffer(partyOrganizationName+DateUtils.formatDate(jmDate,"yyyy-MM-dd")+"届次换届选举，未按时完成");
                    }else{
                        bhcDetail.append(","+partyOrganizationName+DateUtils.formatDate(jmDate,"yyyy-MM-dd")+"届次换届选举，未按时完成");
                    }
                }
            }
        }
        ExamAutoEvaluation examAutoEvaluationYear = new ExamAutoEvaluation();
        examAutoEvaluationYear.setType("1");
        examAutoEvaluationYear.setEvalType("1");
        examAutoEvaluationYear.setPeriod("1");
        examAutoEvaluationYear.setYear(year);
        examAutoEvaluationYear.setMonth(month);
        examAutoEvaluationYear.setAssess("组干处");
        examAutoEvaluationYear.setRemark("每次");
        examAutoEvaluationYear.setModel("2020年月度公安局对公安处重点工作扣分标准（直接扣大分）");
        examAutoEvaluationYear.setModelId("7b8ae271253c4932b89091efb8ab2e1f");
        examAutoEvaluationYear.setOption("未按要求抓好基层党组织按期换届，党委、总支、支部委员出缺超过3个月无特殊原因未及时增补的");
        examAutoEvaluationYear.setOptionId("5e69246ad15845d199d282fd2acaa71f");
        examAutoEvaluationYear.setTime(date);
        examAutoEvaluationYear.setHappenTime(date);
        examAutoEvaluationYear.setCheckTime(date);
        examAutoEvaluationYear.setRowNum("28");
        examAutoEvaluationYear.setFromSys("智慧政工");
        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluationYear,null,"换届选举");
        if (true == isNnc){
            examAutoEvaluationYear.setIsNewRecord(false);
            examAutoEvaluationYear.setId("");
            examAutoEvaluationYear.setEvaluationId("34e8d855cf6b4b1ab5e7e23e7aaba658");
            examAutoEvaluationYear.setUnit("南宁处政治处组织干部室");
            examAutoEvaluationYear.setUnitId("27");
            examAutoEvaluationYear.setScore(String.valueOf(0.5 * nncCount));
            examAutoEvaluationYear.setDetails(String.valueOf(nncDetail));
            //this.deleteInfoByMore(examAutoEvaluationYear);
            //汇总
            this.summaryStandard(examAutoEvaluationYear,0.5 * nncCount,nncDetail.toString());
            this.save(examAutoEvaluationYear);
        }
        if (true == isLzc){
            examAutoEvaluationYear.setEvaluationId("ec3ba2efdd404f2faa520f6e8a71ec4c");
            examAutoEvaluationYear.setUnit("柳州处政治处组织干部室");
            examAutoEvaluationYear.setUnitId("142");
            examAutoEvaluationYear.setScore(String.valueOf(0.5 * lzcCount));
            examAutoEvaluationYear.setDetails(String.valueOf(lzcDetail));
            //this.deleteInfoByMore(examAutoEvaluationYear);
            //汇总
            this.summaryStandard(examAutoEvaluationYear,0.5 * lzcCount,lzcDetail.toString());
            examAutoEvaluationYear.setIsNewRecord(false);
            examAutoEvaluationYear.setId("");
            this.save(examAutoEvaluationYear);
        }
        if (true == isBhc){
            examAutoEvaluationYear.setEvaluationId("c90918faf2614baa8fa85230482bd43e");
            examAutoEvaluationYear.setUnit("北海处政治处组织干部室");
            examAutoEvaluationYear.setUnitId("264");
            examAutoEvaluationYear.setScore(String.valueOf(0.5 * bhcCount));
            examAutoEvaluationYear.setDetails(String.valueOf(bhcDetail));
            //this.deleteInfoByMore(examAutoEvaluationYear);
            this.summaryStandard(examAutoEvaluationYear,0.5 * bhcCount,bhcDetail.toString());
            examAutoEvaluationYear.setIsNewRecord(false);
            examAutoEvaluationYear.setId("");
            this.save(examAutoEvaluationYear);
        }
       /* list.forEach(item -> {
            Date date = new Date();
            Date createDate = item.getCreateDate();
            Calendar calendar = Calendar.getInstance();
            calendar.setTime(date);
           *//* String year = String.valueOf(calendar.get(Calendar.YEAR));
            String month = String.valueOf(calendar.get(Calendar.MONTH) + 1);*//*
            String partyOrganizationName = item.getPartyOrganizationName();
            String partyOrganizationId = item.getPartyOrganizationId();
            Date hjDate = item.getHjDate();
            int election = affairElectionService.isElection(partyOrganizationName, partyOrganizationId, hjDate, year);
            if (election > 0) {
                List<String> unitId = affairElectionService.findUnitId(partyOrganizationId);
                for (int i = 0; i < unitId.size(); i++) {
                    String userId = affairElectionService.findUserId(unitId.get(i));
                    ExamAutoEvaluation examAutoEvaluationYear = new ExamAutoEvaluation();
                    //被考评对象id
//                    examAutoEvaluationYear.setEvaluationId(userId);
                    examAutoEvaluationYear.setType("1");
                    examAutoEvaluationYear.setEvalType("1");
                    examAutoEvaluationYear.setPeriod("1");
                    examAutoEvaluationYear.setYear(year);
                    examAutoEvaluationYear.setMonth(month);
                    examAutoEvaluationYear.setDetails(partyOrganizationName+"换届选举，未按时完成的扣分（党委、总支、支部委员期满3个月，未及时增补）");
                  *//*  examAutoEvaluationYear.setUnit(partyOrganizationName);
                    examAutoEvaluationYear.setUnitId(partyOrganizationId);*//*
                    if (partyOrganizationName.contains("南宁铁路公安局") || partyOrganizationName.contains("南宁公安局")){
                        examAutoEvaluationYear.setEvaluationId("bfdf74f010c9466dba12c1589ecab7f3");
                        examAutoEvaluationYear.setUnit("公安局政治部组织干部处");
                        examAutoEvaluationYear.setUnitId("4");
                    }else if(partyOrganizationName.contains("南宁铁路公安处") || partyOrganizationName.contains("南宁公安处")){
                        examAutoEvaluationYear.setEvaluationId("34e8d855cf6b4b1ab5e7e23e7aaba658");
                        examAutoEvaluationYear.setUnit("南宁处政治处组织干部室");
                        examAutoEvaluationYear.setUnitId("27");
                    }else if(partyOrganizationName.contains("柳州铁路公安处") || partyOrganizationName.contains("柳州公安处")){
                        examAutoEvaluationYear.setEvaluationId("ec3ba2efdd404f2faa520f6e8a71ec4c");
                        examAutoEvaluationYear.setUnit("柳州处政治处组织干部室");
                        examAutoEvaluationYear.setUnitId("142");
                    }else if(partyOrganizationName.contains("北海铁路公安处") || partyOrganizationName.contains("北海公安处")){
                        examAutoEvaluationYear.setEvaluationId("c90918faf2614baa8fa85230482bd43e");
                        examAutoEvaluationYear.setUnit("北海处政治处组织干部室");
                        examAutoEvaluationYear.setUnitId("264");
                    }
                    // 公安处的考评模板没给，暂时设为空
                    examAutoEvaluationYear.setAssess("组干处");
                    examAutoEvaluationYear.setRemark("每次");
                    examAutoEvaluationYear.setModel("2020年月度公安局对公安处重点工作扣分标准（直接扣大分）");
                    examAutoEvaluationYear.setModelId("7b8ae271253c4932b89091efb8ab2e1f");
                    examAutoEvaluationYear.setOption("未按要求抓好基层党组织按期换届，党委、总支、支部委员出缺超过3个月无特殊原因未及时增补的");
                    examAutoEvaluationYear.setOptionId("5e69246ad15845d199d282fd2acaa71f");
                    examAutoEvaluationYear.setScore("0.5");
                    //  以上模板未给
                    examAutoEvaluationYear.setTime(date);
                    examAutoEvaluationYear.setHappenTime(date);
                    examAutoEvaluationYear.setCheckTime(date);
                    examAutoEvaluationYear.setRowNum("28");
                    examAutoEvaluationYear.setFromSys("智慧政工");
                    this.deleteInfoByMore(examAutoEvaluationYear);
                    this.save(examAutoEvaluationYear);
                }
            }
        });*/
    }

    /**
     * 党日活动自动考评
     */
    public void jiPartyDayActivitiesYear(String year) {
        String lastYear = String.valueOf(Integer.valueOf(year) - 1);
        String startYear = lastYear + "-12" + "-11";
        String endYear = year + "-12" + "-10";
        AffairGeneralSituation affairGeneralSituation = new AffairGeneralSituation();
        List<AffairGeneralSituation> affairGeneralSituationList = affairGeneralSituationService.findList(affairGeneralSituation);
        affairGeneralSituationList.forEach(item -> {
            Date date = new Date();
            Calendar calendar = Calendar.getInstance();
            calendar.setTime(date);
            String partyOrganizationName = item.getPartyOrganization();
            String partyOrganizationId = item.getId();
            int count = affairPartyDayActivitiesService.unitCount(startYear, endYear, partyOrganizationName, partyOrganizationId);
            if (count < 12) {
                String juJiGuanRoleId = "13bac520ae4d4160b595384691b443fd";
                String chuJiGuanRoleId = "62cf6aaea0184d3b8cfbce1700ad0e38";
                String suoduiJiGuanRoleId = "ff24c3288860447d867d08d462a2a2b9";
                String[] zhongJiCeng = new String[3];
                zhongJiCeng[0] = chuJiGuanRoleId;
                zhongJiCeng[1] = juJiGuanRoleId;
                zhongJiCeng[2] = suoduiJiGuanRoleId;
                List<Map<String, String>> jcLdList = new ArrayList<>();
                Arrays.stream(zhongJiCeng).forEach(s -> {
                    jcLdList.addAll(userDao.findJcLdByRoleId(s));
                });
                String name = affairGeneralSituationService.findNameByOrg(partyOrganizationName);
                List<Map<String, String>> peopleList = affairPartyMemberService.peopleList(partyOrganizationName);
                jcLdList.forEach(jc -> {
                    peopleList.forEach(people -> {
                        if (people.get("name").equals(jc.get("name"))) {
                            if (people.get("name").equals(name)) {
                                String evaluationId = this.findEvaluationId(people.get("name"), people.get("card_num"));
                                ExamAutoEvaluation examAutoEvaluationYear = new ExamAutoEvaluation();
                                examAutoEvaluationYear.setName(people.get("name"));
                                examAutoEvaluationYear.setIdNumber(people.get("card_num"));
                                examAutoEvaluationYear.setEvaluationId(evaluationId);
                                examAutoEvaluationYear.setType("2");
                                examAutoEvaluationYear.setEvalType("6");
                                examAutoEvaluationYear.setPeriod("2");
                                examAutoEvaluationYear.setYear(year);
                                examAutoEvaluationYear.setDetails(year+"年"+partyOrganizationName + "支部书记" + "党日活动，未按时录入" + "缺少" + (12 - count) + "次");
                                examAutoEvaluationYear.setUnit(partyOrganizationName);
                                examAutoEvaluationYear.setUnitId(partyOrganizationId);
                                examAutoEvaluationYear.setAssess("机关考评小组");
                                examAutoEvaluationYear.setModel("2020年年度全局中层和基层领导干部考核公共扣分标准(公安处领导班子成员除外)");
                                examAutoEvaluationYear.setModelId("c00cebbbc62c48d888316206d38e02c7");
                                examAutoEvaluationYear.setOption("支部“三会一课”、组织生活会、民主评议党员、两学一做、党日活动等制度未按规定落实的,每缺一项次");
                                examAutoEvaluationYear.setOptionId("5a27b0e8434f4e91ba40071685399a3f");
                                examAutoEvaluationYear.setScore(String.valueOf(2 * (12 - count)));
                                examAutoEvaluationYear.setTime(date);
                                examAutoEvaluationYear.setHappenTime(date);
                                examAutoEvaluationYear.setCheckTime(date);
                                examAutoEvaluationYear.setRowNum("57");
                                examAutoEvaluationYear.setFromSys("智慧政工");

                                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluationYear,null,"党日活动");
                                this.summaryStandard(examAutoEvaluationYear,Double.valueOf(2 * (12 - count)),year+"年"+partyOrganizationName + "支部书记" + "党日活动，未按时录入" + "缺少" + (12 - count) + "次");
                                this.save(examAutoEvaluationYear);
                            } else {
//                                月度中基层领导考评-其他委员
                                String evaluationId = this.findEvaluationId(people.get("name"), people.get("card_num"));
                                ExamAutoEvaluation examAutoEvaluationYear = new ExamAutoEvaluation();
                                examAutoEvaluationYear.setName(people.get("name"));
                                examAutoEvaluationYear.setIdNumber(people.get("card_num"));
                                examAutoEvaluationYear.setEvaluationId(evaluationId);
                                examAutoEvaluationYear.setType("2");
                                examAutoEvaluationYear.setEvalType("6");
                                examAutoEvaluationYear.setPeriod("2");
                                examAutoEvaluationYear.setYear(year);
                                examAutoEvaluationYear.setDetails(year+"年"+partyOrganizationName + "其他委员" + "党日活动，未按时录入" + "缺少" + (12 - count) + "次");
                                examAutoEvaluationYear.setUnit(partyOrganizationName);
                                examAutoEvaluationYear.setUnitId(partyOrganizationId);
                                examAutoEvaluationYear.setAssess("机关考评小组");
                                examAutoEvaluationYear.setModel("2020年年度全局中层和基层领导干部考核公共扣分标准 (公安处领导班子成员除外)");
                                examAutoEvaluationYear.setModelId("bf3cb06770864998bcfd64f4f526f497");
                                examAutoEvaluationYear.setOption("支部“三会一课”、组织生活会、民主评议党员、两学一做、党日活动等制度未按规定落实的,每缺一项次");
                                examAutoEvaluationYear.setOptionId("5a27b0e8434f4e91ba40071685399a3f");
                                examAutoEvaluationYear.setScore(String.valueOf(1 * (12 - count)));
                                examAutoEvaluationYear.setTime(date);
                                examAutoEvaluationYear.setHappenTime(date);
                                examAutoEvaluationYear.setCheckTime(date);
                                examAutoEvaluationYear.setRowNum("57");
                                examAutoEvaluationYear.setFromSys("智慧政工");
                                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluationYear,null,"党日活动");
                                this.summaryStandard(examAutoEvaluationYear,Double.valueOf(1 * (12 - count)),year+"年"+partyOrganizationName + "其他委员" + "党日活动，未按时录入" + "缺少" + (12 - count) + "次");
                                this.save(examAutoEvaluationYear);
                            }
                        }
                    });
                });
            }
        });
    }

    public void jiPartyDayActivitiesMonth(String year, String month){
        String startTime = null;
        String endTime = null;
        if("01".equals(month)){
            String lastYear = String.valueOf(Integer.valueOf(year) - 1);
//            startTime = lastYear + "-12" + "-26";
            startTime = year + month + "-01";
            endTime = year + "-" + month + "-31";
        }else{
            String lastMonth = String.valueOf(Integer.valueOf(month) - 1);
//            startTime = year + "-" + lastMonth + "-26";
            startTime = year + "-" + month + "-01";
            endTime = year + "-" + month + "-31";
        }
        String startDate = startTime;
        String endDate = endTime;
        AffairGeneralSituation affairGeneralSituation = new AffairGeneralSituation();
        List<AffairGeneralSituation> affairGeneralSituationList = affairGeneralSituationService.findList(affairGeneralSituation);
        affairGeneralSituationList.forEach(item->{
            Date date = new Date();
            Calendar calendar = Calendar.getInstance();
            calendar.setTime(date);
            String partyOrganizationName = item.getPartyOrganization();
            String partyOrganizationId = item.getId();
            int count = affairPartyDayActivitiesService.unitCount(startDate, endDate, partyOrganizationName, partyOrganizationId);
            if (count < 1){
                String juJiGuanRoleId = "13bac520ae4d4160b595384691b443fd";
                String chuJiGuanRoleId = "62cf6aaea0184d3b8cfbce1700ad0e38";
                String suoduiJiGuanRoleId = "ff24c3288860447d867d08d462a2a2b9";
                String[] zhongJiCeng = new String[3];
                zhongJiCeng[0] = chuJiGuanRoleId;
                zhongJiCeng[1] = juJiGuanRoleId;
                zhongJiCeng[2] = suoduiJiGuanRoleId;
                List<Map<String, String>> jcLdList = new ArrayList<>();
                Arrays.stream(zhongJiCeng).forEach(s -> {
                    jcLdList.addAll(userDao.findJcLdByRoleId(s));
                });
                String name = affairGeneralSituationService.findNameByOrg(partyOrganizationName);
                List<Map<String, String>> peopleList = affairPartyMemberService.peopleList(partyOrganizationName);
                jcLdList.forEach(jc -> {
                    peopleList.forEach(people -> {
                        if (people.get("name").equals(jc.get("name"))) {
                            if (people.get("name").equals(name)) {
                                String evaluationId = this.findEvaluationId(people.get("name"), people.get("card_num"));
                                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                examAutoEvaluation.setName(people.get("name"));
                                examAutoEvaluation.setIdNumber(people.get("card_num"));
                                examAutoEvaluation.setEvaluationId(evaluationId);
                                examAutoEvaluation.setType("2");
                                examAutoEvaluation.setEvalType("6");
                                examAutoEvaluation.setPeriod("1");
                                examAutoEvaluation.setYear(year);
                                examAutoEvaluation.setMonth(month);
                                examAutoEvaluation.setDetails(year+"年"+month+"月"+partyOrganizationName+"支部书记党日活动，未按时录入");
                                examAutoEvaluation.setUnit(partyOrganizationName);
                                examAutoEvaluation.setUnitId(partyOrganizationId);
                                examAutoEvaluation.setAssess("组干部门");
                                examAutoEvaluation.setRemark("每次");
                                examAutoEvaluation.setModel("（月度）2020年中、基层领导公共扣分标准（月度）");
                                examAutoEvaluation.setModelId("d498bf52ce334e3da66851fc57143639");
                                examAutoEvaluation.setOption("支部“三会一课”、组织生活会、民主评议党员、两学一做、党日活动等制度未按规定落实的,每缺一项次");
                                examAutoEvaluation.setOptionId("bca583d38c29442fa7c73749b1848aa5");
                                examAutoEvaluation.setScore("5");
                                examAutoEvaluation.setTime(date);
                                examAutoEvaluation.setHappenTime(date);
                                examAutoEvaluation.setCheckTime(date);
                                examAutoEvaluation.setRowNum("50");
                                examAutoEvaluation.setFromSys("智慧政工");

                                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党日活动");
                                /*处理考评标准一样，汇总*/
                                this.summaryStandard(examAutoEvaluation,5.0,year+"年"+month+"月"+partyOrganizationName+"支部书记党日活动，未按时录入");
                                this.save(examAutoEvaluation);
                            } else {
                                String evaluationId = this.findEvaluationId(people.get("name"), people.get("card_num"));
                                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                examAutoEvaluation.setName(people.get("name"));
                                examAutoEvaluation.setIdNumber(people.get("card_num"));
                                examAutoEvaluation.setEvaluationId(evaluationId);
                                examAutoEvaluation.setType("2");
                                examAutoEvaluation.setEvalType("6");
                                examAutoEvaluation.setPeriod("1");
                                examAutoEvaluation.setYear(year);
                                examAutoEvaluation.setMonth(month);
                                examAutoEvaluation.setDetails(year+"年"+month+"月"+partyOrganizationName+"其他委员党日活动，未按时录入");
                                examAutoEvaluation.setAssess("组干部门");
                                examAutoEvaluation.setRemark("每次");
                                examAutoEvaluation.setModel("（月度）2020年中、基层领导公共扣分标准（月度）");
                                examAutoEvaluation.setModelId("83e0286c4b9d406094d238700a3f1e6a");
                                examAutoEvaluation.setOption("支部“三会一课”、组织生活会、民主评议党员、两学一做、党日活动等制度未按规定落实的,每缺一项次");
                                examAutoEvaluation.setOptionId("bca583d38c29442fa7c73749b1848aa5");
                                examAutoEvaluation.setScore("2.5");
                                examAutoEvaluation.setTime(date);
                                examAutoEvaluation.setHappenTime(date);
                                examAutoEvaluation.setCheckTime(date);
                                examAutoEvaluation.setRowNum("50");
                                examAutoEvaluation.setFromSys("智慧政工");
                                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党日活动");
                                /*处理考评标准一样，汇总*/
                                this.summaryStandard(examAutoEvaluation,2.5,year+"年"+month+"月"+partyOrganizationName+"其他委员党日活动，未按时录入");
                                this.save(examAutoEvaluation);
                            }
                        }
                    });
                });
            }
        });
    }

    public void juPartyDayActivitiesYear(String year){
        String lastYear = String.valueOf(Integer.valueOf(year) - 1);
        String startYear = lastYear + "-12" + "-11";
        String endYear = year + "-12" + "-10";
//        AffairGeneralSituation affairGeneralSituation = new AffairGeneralSituation();
//        List<AffairGeneralSituation> affairGeneralSituationList = affairGeneralSituationService.findList(affairGeneralSituation);
        List<AffairGeneralSituation> affairGeneralSituationList = affairGeneralSituationService.getJJGPartyBranch();
        affairGeneralSituationList.forEach(item->{
            Date date = new Date();
            Calendar calendar = Calendar.getInstance();
            calendar.setTime(date);
            String partyOrganizationName = item.getPartyOrganization();
            String partyOrganizationId = item.getId();
            int count = affairPartyDayActivitiesService.unitCount(startYear, endYear, partyOrganizationName, partyOrganizationId);
            if (count < 12){
//                if (partyOrganizationName.contains("南宁公安局")) {
                    List<String> unitId = affairElectionService.findUnitId(partyOrganizationId);
                    for (int i = 0; i < unitId.size(); i++) {
                        String userId = affairElectionService.findUserId(unitId.get(i));
                        ExamAutoEvaluation examAutoEvaluationYear = new ExamAutoEvaluation();
                        //被考评对象id
                        examAutoEvaluationYear.setEvaluationId(userId);
                        examAutoEvaluationYear.setType("1");
                        examAutoEvaluationYear.setEvalType("2");
                        examAutoEvaluationYear.setPeriod("2");
                        examAutoEvaluationYear.setYear(year);
                        examAutoEvaluationYear.setDetails(year+"年"+partyOrganizationName+"党日活动，未按时录入"+(12 - count)+"次");
                        examAutoEvaluationYear.setUnit(partyOrganizationName);
                        examAutoEvaluationYear.setUnitId(partyOrganizationId);
                        examAutoEvaluationYear.setAssess("机关考评小组");
                        examAutoEvaluationYear.setModel("2020年公安局对局机关各处室及直属支队年度绩效考核公共扣分标准");
                        examAutoEvaluationYear.setModelId("653c088f3e754adcaa659a3706d304b9");
                        examAutoEvaluationYear.setOption("“三会一课”未达到规定要求，每缺一会或一课的");
                        examAutoEvaluationYear.setOptionId("cf91bc7ae6144488bbf7653fc3032273");
                        examAutoEvaluationYear.setScore(String.valueOf(2 * (12 - count)));
                        examAutoEvaluationYear.setTime(date);
                        examAutoEvaluationYear.setHappenTime(date);
                        examAutoEvaluationYear.setCheckTime(date);
                        examAutoEvaluationYear.setRowNum("24");
                        examAutoEvaluationYear.setFromSys("智慧政工");
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluationYear,null,"党日活动");
                        /*处理考评标准一样，汇总*/
                        this.summaryStandard(examAutoEvaluationYear,Double.valueOf(2 * (12 - count)),year+"年"+partyOrganizationName+"党日活动，未按时录入"+(12 - count)+"次");
                        this.save(examAutoEvaluationYear);
                    }
//                }
            }
        });
    }

    public void juPartyDayActivitiesMonth(String year, String month){
        String startTime = null;
        String endTime = null;
        if("01".equals(month)){
            String lastYear = String.valueOf(Integer.valueOf(year) - 1);
//            startTime = lastYear + "-12" + "-26";
            startTime = year + month + "-01";
            endTime = year + "-" + month + "-31";
        }else{
            String lastMonth = String.valueOf(Integer.valueOf(month) - 1);
//            startTime = year + "-" + lastMonth + "-26";
            startTime = year + "-" + month + "-01";
            endTime = year + "-" + month + "-31";
        }
        String startDate = startTime;
        String endDate = endTime;
        AffairGeneralSituation affairGeneralSituation = new AffairGeneralSituation();
//        List<AffairGeneralSituation> affairGeneralSituationList = affairGeneralSituationService.findList(affairGeneralSituation);
        List<AffairGeneralSituation> affairGeneralSituationList = affairGeneralSituationService.getJJGPartyBranch();
        affairGeneralSituationList.forEach(item->{
            Date date = new Date();
            Calendar calendar = Calendar.getInstance();
            calendar.setTime(date);
            String partyOrganizationName = item.getPartyOrganization();
            String partyOrganizationId = item.getId();
            int count = affairPartyDayActivitiesService.unitCount(startDate, endDate, partyOrganizationName, partyOrganizationId);
            if (count < 1){
                /*if (partyOrganizationName.contains("南宁公安局")) {*/
                    List<String> unitId = affairElectionService.findUnitId(partyOrganizationId);
                    for (int i = 0; i < unitId.size(); i++) {
                        String userId = affairElectionService.findUserId(unitId.get(i));
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setEvaluationId(userId);
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("2");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails(year+"年"+month+"月"+partyOrganizationName+"党日活动，未按时录入");
                        examAutoEvaluation.setUnit(partyOrganizationName);
                        examAutoEvaluation.setUnitId(partyOrganizationId);
                        examAutoEvaluation.setAssess("组干处");
                        examAutoEvaluation.setRemark("每发现1次");
                        examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队月度绩效考核公共扣分标准");
                        examAutoEvaluation.setModelId("e8aa72ffe54a4118aeae9077ff7898ec");
                        examAutoEvaluation.setOption("“三会一课”未达到规定要求，每缺一会或一课的");
                        examAutoEvaluation.setOptionId("0858a666bf7c41a6b629cd575a8e1b48");
                        examAutoEvaluation.setScore("2");
                        examAutoEvaluation.setTime(date);
                        examAutoEvaluation.setHappenTime(date);
                        examAutoEvaluation.setCheckTime(date);
                        examAutoEvaluation.setRowNum("25");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党日活动");
                        /*处理考评标准一样，汇总*/
                        this.summaryStandard(examAutoEvaluation,2.5,year+"年"+month+"月"+partyOrganizationName+"党日活动，未按时录入");
                        this.save(examAutoEvaluation);
                    }
                /*}*/
            }
        });
    }

    public void chuPartyDayActivitiesYear(String year){
        String lastYear = String.valueOf(Integer.valueOf(year) - 1);
        String startYear = lastYear + "-12" + "-11";
        String endYear = year + "-12" + "-10";
        AffairGeneralSituation affairGeneralSituation = new AffairGeneralSituation();
        List<AffairGeneralSituation> affairGeneralSituationList = affairGeneralSituationService.findList(affairGeneralSituation);
        affairGeneralSituationList.forEach(item->{
            Date date = new Date();
            Calendar calendar = Calendar.getInstance();
            calendar.setTime(date);
            String partyOrganizationName = item.getPartyOrganization();
            String partyOrganizationId = item.getId();
            int count = affairPartyDayActivitiesService.unitCount(startYear, endYear, partyOrganizationName, partyOrganizationId);
            if (count < 12){
                if (partyOrganizationName.contains("公安处") && ((partyOrganizationName.contains("大队") == false) && (partyOrganizationName.contains("派出所") == false))) {
                    List<String> unitId = affairElectionService.findUnitId(partyOrganizationId);
                    for (int i = 0; i < unitId.size(); i++) {
                        String userId = affairElectionService.findUserId(unitId.get(i));
                        ExamAutoEvaluation examAutoEvaluationYear = new ExamAutoEvaluation();
                        examAutoEvaluationYear.setEvaluationId(userId);
                        examAutoEvaluationYear.setType("1");
                        examAutoEvaluationYear.setEvalType("4");
                        examAutoEvaluationYear.setPeriod("2");
                        examAutoEvaluationYear.setYear(year);
                        examAutoEvaluationYear.setDetails(year+"年"+partyOrganizationName+"党日活动，未按时录入"+(12 - count)+"次");
                        examAutoEvaluationYear.setUnit(partyOrganizationName);
                        examAutoEvaluationYear.setUnitId(partyOrganizationId);
                        examAutoEvaluationYear.setAssess("");
                        examAutoEvaluationYear.setModel("");
                        examAutoEvaluationYear.setModelId("");
                        examAutoEvaluationYear.setOption("");
                        examAutoEvaluationYear.setOptionId("");
                        examAutoEvaluationYear.setScore("0.2");
                        examAutoEvaluationYear.setTime(date);
                        examAutoEvaluationYear.setHappenTime(date);
                        examAutoEvaluationYear.setCheckTime(date);
                        examAutoEvaluationYear.setFromSys("智慧政工");
                        String parentIds = item.getParentIds();
                        if(StringUtils.isNotBlank(parentIds)){
                            if(parentIds.contains(",34,")){
                                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluationYear,"34","党日活动");
                            }
                            if(parentIds.contains(",95,")){
                                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluationYear,"95","党日活动");
                            }
                            if(parentIds.contains(",156,")){
                                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluationYear,"156","党日活动");
                            }
                        }
                        /*处理考评标准一样，汇总*/
                        this.summaryStandard(examAutoEvaluationYear,0.2,year+"年"+partyOrganizationName+"党日活动，未按时录入"+(12 - count)+"次");
                        this.save(examAutoEvaluationYear);
                    }
                }
            }
        });
    }

    public void chuPartyDayActivitiesMonth(String year, String month){
        String startTime = null;
        String endTime = null;
        if("01".equals(month)){
            String lastYear = String.valueOf(Integer.valueOf(year) - 1);
//            startTime = lastYear + "-12" + "-26";
            startTime = year + month + "-01";
            endTime = year + "-" + month + "-31";
        }else{
            String lastMonth = String.valueOf(Integer.valueOf(month) - 1);
//            startTime = year + "-" + lastMonth + "-26";
            startTime = year + "-" + month + "-01";
            endTime = year + "-" + month + "-31";
        }
        String startDate = startTime;
        String endDate = endTime;
        AffairGeneralSituation affairGeneralSituation = new AffairGeneralSituation();
        List<AffairGeneralSituation> affairGeneralSituationList = affairGeneralSituationService.findList(affairGeneralSituation);
        affairGeneralSituationList.forEach(item->{
            Date date = new Date();
            Calendar calendar = Calendar.getInstance();
            calendar.setTime(date);
            String partyOrganizationName = item.getPartyOrganization();
            String partyOrganizationId = item.getId();
            int count = affairPartyDayActivitiesService.unitCount(startDate, endDate, partyOrganizationName, partyOrganizationId);
            if (count < 1){
                if (partyOrganizationName.contains("公安处") && ((partyOrganizationName.contains("大队") == false) && (partyOrganizationName.contains("派出所") == false))) {
                    List<String> unitId = affairElectionService.findUnitId(partyOrganizationId);
                    for (int i = 0; i < unitId.size(); i++) {
                        String userId = affairElectionService.findUserId(unitId.get(i));
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setEvaluationId(userId);
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("4");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails(year+"年"+month+"月"+partyOrganizationName+"党日活动，未按时录入");
                        examAutoEvaluation.setUnit(partyOrganizationName);
                        examAutoEvaluation.setUnitId(partyOrganizationId);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setRemark("");
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setModelId("");
                        examAutoEvaluation.setOption("");
                        examAutoEvaluation.setOptionId("");
                        examAutoEvaluation.setScore("1.8");
                        examAutoEvaluation.setTime(date);
                        examAutoEvaluation.setHappenTime(date);
                        examAutoEvaluation.setCheckTime(date);
                        examAutoEvaluation.setFromSys("智慧政工");
                        String parentIds = item.getParentIds();
                        if(StringUtils.isNotBlank(parentIds)){
                            if(parentIds.contains(",34,")){
                                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","党日活动");
                            }
                            if(parentIds.contains(",95,")){
                                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","党日活动");
                            }
                            if(parentIds.contains(",156,")){
                                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","党日活动");
                            }
                        }
                        /*处理考评标准一样，汇总*/
                        this.summaryStandard(examAutoEvaluation,1.8,year+"年"+month+"月"+partyOrganizationName+"党日活动，未按时录入");
                        this.save(examAutoEvaluation);
                    }
                }
            }
        });
    }

    public void duiPartyDayActivitiesYear(String year){
        String lastYear = String.valueOf(Integer.valueOf(year) - 1);
        String startYear = lastYear + "-12" + "-11";
        String endYear = year + "-12" + "-10";
        AffairGeneralSituation affairGeneralSituation = new AffairGeneralSituation();
        List<AffairGeneralSituation> affairGeneralSituationList = affairGeneralSituationService.findList(affairGeneralSituation);
        affairGeneralSituationList.forEach(item->{
            Date date = new Date();
            Calendar calendar = Calendar.getInstance();
            calendar.setTime(date);
            String partyOrganizationName = item.getPartyOrganization();
            String partyOrganizationId = item.getId();
            int count = affairPartyDayActivitiesService.unitCount(startYear, endYear, partyOrganizationName, partyOrganizationId);
            if (count < 12){
                if (partyOrganizationName.contains("大队") || partyOrganizationName.contains("派出所")) {
                    List<String> unitId = affairElectionService.findUnitId(partyOrganizationId);
                    for (int i = 0; i < unitId.size(); i++) {
                        String userId = affairElectionService.findUserId(unitId.get(i));
                        ExamAutoEvaluation examAutoEvaluationYear = new ExamAutoEvaluation();
                        examAutoEvaluationYear.setEvaluationId(userId);
                        examAutoEvaluationYear.setType("1");
                        examAutoEvaluationYear.setEvalType("3");
                        examAutoEvaluationYear.setPeriod("2");
                        examAutoEvaluationYear.setYear(year);
                        examAutoEvaluationYear.setDetails(year + "年" + partyOrganizationName + "党日活动，未按时录入"+(12 - count)+"次");
                        examAutoEvaluationYear.setUnit(partyOrganizationName);
                        examAutoEvaluationYear.setUnitId(partyOrganizationId);
                        examAutoEvaluationYear.setAssess("");
                        examAutoEvaluationYear.setModel("");
                        examAutoEvaluationYear.setModelId("");
                        examAutoEvaluationYear.setOption("");
                        examAutoEvaluationYear.setOptionId("");
                        examAutoEvaluationYear.setScore("0.2");
                        examAutoEvaluationYear.setTime(date);
                        examAutoEvaluationYear.setHappenTime(date);
                        examAutoEvaluationYear.setCheckTime(date);
                        examAutoEvaluationYear.setFromSys("智慧政工");
                        //关联自动考评标准关联表设置model ，option相关字段
                        String parentIds = item.getParentIds();
                        if(StringUtils.isNotBlank(parentIds)){
                            if(parentIds.contains(",34,")){
                                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluationYear,"34","党日活动");
                            }
                            if(parentIds.contains(",95,")){
                                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluationYear,"95","党日活动");
                            }
                            if(parentIds.contains(",156,")){
                                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluationYear,"156","党日活动");
                            }
                        }
                        /*处理考评标准一样，汇总*/
                        this.summaryStandard(examAutoEvaluationYear,0.2,year + "年" + partyOrganizationName + "党日活动，未按时录入"+(12 - count)+"次");
                        this.save(examAutoEvaluationYear);
                    }
                }
            }
        });
    }

    public void duiPartyDayActivitiesMonth(String year, String month){
        String startTime = null;
        String endTime = null;
        if("01".equals(month)){
            String lastYear = String.valueOf(Integer.valueOf(year) - 1);
//            startTime = lastYear + "-12" + "-26";
            startTime = year + month + "-01";
            endTime = year + "-" + month + "-31";
        }else{
            String lastMonth = String.valueOf(Integer.valueOf(month) - 1);
//            startTime = year + "-" + lastMonth + "-26";
            startTime = year + "-" + month + "-01";
            endTime = year + "-" + month + "-31";
        }
        String startDate = startTime;
        String endDate = endTime;
        AffairGeneralSituation affairGeneralSituation = new AffairGeneralSituation();
        List<AffairGeneralSituation> affairGeneralSituationList = affairGeneralSituationService.findList(affairGeneralSituation);
        affairGeneralSituationList.forEach(item->{
            Date date = new Date();
            Calendar calendar = Calendar.getInstance();
            calendar.setTime(date);
            String partyOrganizationName = item.getPartyOrganization();
            String partyOrganizationId = item.getId();
            int count = affairPartyDayActivitiesService.unitCount(startDate, endDate, partyOrganizationName, partyOrganizationId);
            if (count < 1){
                if (partyOrganizationName.contains("大队") || partyOrganizationName.contains("派出所")) {
                    List<String> unitId = affairElectionService.findUnitId(partyOrganizationId);
                    for (int i = 0; i < unitId.size(); i++) {
                        String userId = affairElectionService.findUserId(unitId.get(i));
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setEvaluationId(userId);
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails(year+"年"+month+"月"+partyOrganizationName+"党日活动，未按时录入");
                        examAutoEvaluation.setUnit(partyOrganizationName);
                        examAutoEvaluation.setUnitId(partyOrganizationId);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setRemark("");
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setModelId("");
                        examAutoEvaluation.setOption("");
                        examAutoEvaluation.setOptionId("");
                        examAutoEvaluation.setScore("15");
                        examAutoEvaluation.setTime(date);
                        examAutoEvaluation.setHappenTime(date);
                        examAutoEvaluation.setCheckTime(date);
                        examAutoEvaluation.setFromSys("智慧政工");
                        //关联自动考评标准关联表设置model ，option相关字段
                        String parentIds = item.getParentIds();
                        if(StringUtils.isNotBlank(parentIds)){
                            if(parentIds.contains(",34,")){
                                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","党日活动");
                            }
                            if(parentIds.contains(",95,")){
                                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","党日活动");
                            }
                            if(parentIds.contains(",156,")){
                                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","党日活动");
                            }
                        }
                        /*处理考评标准一样，汇总*/
                        this.summaryStandard(examAutoEvaluation,15.0,year+"年"+month+"月"+partyOrganizationName+"党日活动，未按时录入");
                        this.save(examAutoEvaluation);
                    }
                }
            }
        });
    }

    public void juChuPartyDayActivitiesYear(String year){
        String lastYear = String.valueOf(Integer.valueOf(year) - 1);
        String startYear = lastYear + "-12" + "-11";
        String endYear = year + "-12" + "-10";
        StringBuffer nncDetail = null;
        StringBuffer lzcDetail = null;
        StringBuffer bhcDetail = null;
        Boolean isNnc = false;
        Boolean isLzc = false;
        Boolean isBhc = false;
        Integer nncCount = 0;
        Integer lzcCount = 0;
        Integer bhcCount = 0;
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        AffairGeneralSituation affairGeneralSituation = new AffairGeneralSituation();
        List<AffairGeneralSituation> affairGeneralSituationList = affairGeneralSituationService.findList(affairGeneralSituation);
        for (int i = 0; i < affairGeneralSituationList.size(); i++) {
            String partyOrganizationName = affairGeneralSituationList.get(i).getPartyOrganization();
            String partyOrganizationId = affairGeneralSituationList.get(i).getId();
            int count = affairPartyDayActivitiesService.unitCount(startYear, endYear, partyOrganizationName, partyOrganizationId);
            if (count < 12){
                if((partyOrganizationName.contains("南宁铁路公安处") || partyOrganizationName.contains("南宁公安处")) && !partyOrganizationName.contains("党委")){
                    nncCount = nncCount + 1;
                    isNnc = true;
                    if(nncDetail==null){
                        nncDetail = new StringBuffer(year+"年"+partyOrganizationName+"党日活动，未按时录入"+(12 - count)+"次");
                    }else{
                        nncDetail.append(","+year+"年"+partyOrganizationName+"党日活动，未按时录入"+(12 - count)+"次");
                    }
                }else if((partyOrganizationName.contains("柳州铁路公安处") || partyOrganizationName.contains("柳州公安处")) && !partyOrganizationName.contains("党委")){
                    lzcCount = lzcCount + 1;
                    isLzc = true;
                    if(lzcDetail==null){
                        lzcDetail = new StringBuffer(year+"年"+partyOrganizationName+"党日活动，未按时录入"+(12 - count)+"次");
                    }else{
                        lzcDetail.append(","+year+"年"+partyOrganizationName+"党日活动，未按时录入"+(12 - count)+"次");
                    }
                }else if((partyOrganizationName.contains("北海铁路公安处") || partyOrganizationName.contains("北海公安处")) && !partyOrganizationName.contains("党委")){
                    bhcCount = bhcCount + 1;
                    isBhc = true;
                    if(bhcDetail==null){
                        bhcDetail = new StringBuffer(year+"年"+partyOrganizationName+"党日活动，未按时录入"+(12 - count)+"次");
                    }else{
                        bhcDetail.append(","+year+"年"+partyOrganizationName+"党日活动，未按时录入"+(12 - count)+"次");
                    }
                }
            }
        }
        ExamAutoEvaluation examAutoEvaluationYear = new ExamAutoEvaluation();
        examAutoEvaluationYear.setType("1");
        examAutoEvaluationYear.setEvalType("1");
        examAutoEvaluationYear.setPeriod("2");
        examAutoEvaluationYear.setYear(year);
        examAutoEvaluationYear.setAssess("组干处");
        examAutoEvaluationYear.setModel("2020年年度公安局对公安处绩效考核扣分标准(业务部分26项)");
        examAutoEvaluationYear.setModelId("a959d8865ea74bf68cf818adc710c75c");
        examAutoEvaluationYear.setOption("公安处及管内单位党建活动组织不力，被上级检查发现的");
        examAutoEvaluationYear.setOptionId("924dd81816a34620915683d19cc749c1");
        examAutoEvaluationYear.setTime(date);
        examAutoEvaluationYear.setHappenTime(date);
        examAutoEvaluationYear.setCheckTime(date);
        examAutoEvaluationYear.setRowNum("531");
        examAutoEvaluationYear.setFromSys("智慧政工");

        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluationYear,null,"党日活动");

        if (true == isNnc){
            examAutoEvaluationYear.setIsNewRecord(false);
            examAutoEvaluationYear.setId("");
            examAutoEvaluationYear.setEvaluationId("34e8d855cf6b4b1ab5e7e23e7aaba658");
            examAutoEvaluationYear.setUnit("南宁处政治处组织干部室");
            examAutoEvaluationYear.setUnitId("27");
            examAutoEvaluationYear.setScore("2");
            examAutoEvaluationYear.setDetails(String.valueOf(nncDetail));
            //this.deleteInfoByMore(examAutoEvaluationYear);
            /*处理考评标准一样，汇总*/
            this.summaryStandard(examAutoEvaluationYear,2.0,nncDetail.toString());
            this.save(examAutoEvaluationYear);
        }
        if (true == isLzc){
            examAutoEvaluationYear.setIsNewRecord(false);
            examAutoEvaluationYear.setId("");
            examAutoEvaluationYear.setEvaluationId("ec3ba2efdd404f2faa520f6e8a71ec4c");
            examAutoEvaluationYear.setUnit("柳州处政治处组织干部室");
            examAutoEvaluationYear.setUnitId("142");
            examAutoEvaluationYear.setScore("2");
            examAutoEvaluationYear.setDetails(String.valueOf(lzcDetail));
            //this.deleteInfoByMore(examAutoEvaluationYear);
            /*处理考评标准一样，汇总*/
            this.summaryStandard(examAutoEvaluationYear,2.0,lzcDetail.toString());
            this.save(examAutoEvaluationYear);
        }
        if (true == isBhc){
            examAutoEvaluationYear.setIsNewRecord(false);
            examAutoEvaluationYear.setId("");
            examAutoEvaluationYear.setEvaluationId("c90918faf2614baa8fa85230482bd43e");
            examAutoEvaluationYear.setUnit("北海处政治处组织干部室");
            examAutoEvaluationYear.setUnitId("264");
            examAutoEvaluationYear.setScore("2");
            examAutoEvaluationYear.setDetails(String.valueOf(bhcDetail));
            //this.deleteInfoByMore(examAutoEvaluationYear);
            /*处理考评标准一样，汇总*/
            this.summaryStandard(examAutoEvaluationYear,2.0,bhcDetail.toString());
            this.save(examAutoEvaluationYear);
        }

    }

    public void juChuPartyDayActivitiesMonth(String year, String month){
        String startTime = null;
        String endTime = null;
        if("01".equals(month)){
            String lastYear = String.valueOf(Integer.valueOf(year) - 1);
//            startTime = lastYear + "-12" + "-26";
            startTime = year + month + "-01";
            endTime = year + "-" + month + "-31";
        }else{
            String lastMonth = String.valueOf(Integer.valueOf(month) - 1);
//            startTime = year + "-" + lastMonth + "-26";
            startTime = year + "-" + month + "-01";
            endTime = year + "-" + month + "-31";
        }
        String startDate = startTime;
        String endDate = endTime;
        StringBuffer nncDetail = null;
        StringBuffer lzcDetail = null;
        StringBuffer bhcDetail = null;
        Boolean isNnc = false;
        Boolean isLzc = false;
        Boolean isBhc = false;
        Integer nncCount = 0;
        Integer lzcCount = 0;
        Integer bhcCount = 0;
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        AffairGeneralSituation affairGeneralSituation = new AffairGeneralSituation();
        List<AffairGeneralSituation> affairGeneralSituationList = affairGeneralSituationService.findList(affairGeneralSituation);
        for (int i = 0; i < affairGeneralSituationList.size(); i++) {
            String partyOrganizationName = affairGeneralSituationList.get(i).getPartyOrganization();
            String partyOrganizationId = affairGeneralSituationList.get(i).getId();
            int count = affairPartyDayActivitiesService.unitCount(startDate, endDate, partyOrganizationName, partyOrganizationId);
            if (count < 1){
                if((partyOrganizationName.contains("南宁铁路公安处") || partyOrganizationName.contains("南宁公安处")) && !partyOrganizationName.contains("党委")){
                    nncCount = nncCount + 1;
                    isNnc = true;
                    if(nncDetail==null){
                        nncDetail = new StringBuffer(year+"年"+month+"月"+partyOrganizationName+"党日活动，未按时录入");
                    }else{
                        nncDetail.append(","+year+"年"+month+"月"+partyOrganizationName+"党日活动，未按时录入");
                    }
                }else if((partyOrganizationName.contains("柳州铁路公安处") || partyOrganizationName.contains("柳州公安处")) && !partyOrganizationName.contains("党委")){
                    lzcCount = lzcCount + 1;
                    isLzc = true;
                    if(lzcDetail==null){
                        lzcDetail = new StringBuffer(year+"年"+month+"月"+partyOrganizationName+"党日活动，未按时录入");
                    }else{
                        lzcDetail.append(","+year+"年"+month+"月"+partyOrganizationName+"党日活动，未按时录入");
                    }
                }else if((partyOrganizationName.contains("北海铁路公安处") || partyOrganizationName.contains("北海公安处")) && !partyOrganizationName.contains("党委")){
                    bhcCount = bhcCount + 1;
                    isBhc = true;
                    if(bhcDetail==null){
                        bhcDetail = new StringBuffer(year+"年"+month+"月"+partyOrganizationName+"党日活动，未按时录入");
                    }else{
                        bhcDetail.append(","+year+"年"+month+"月"+partyOrganizationName+"党日活动，未按时录入");
                    }
                }
            }
        }
        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
        examAutoEvaluation.setType("1");
        examAutoEvaluation.setEvalType("1");
        examAutoEvaluation.setPeriod("1");//1 月  2年
        examAutoEvaluation.setYear(year);
        examAutoEvaluation.setMonth(month);
        examAutoEvaluation.setAssess("南宁局政治部组织干部处");
        examAutoEvaluation.setAssessId("bfdf74f010c9466dba12c1589ecab7f3");
        examAutoEvaluation.setRemark("每次");
        examAutoEvaluation.setModel("2020年月度公安局对公安处扣分标准(业务部分26项)");
        examAutoEvaluation.setModelId("aef99f1b42054342ba71c25634d0f9fc");
        examAutoEvaluation.setOption("公安处及管内单位党建活动组织不力，被上级检查发现的");
        examAutoEvaluation.setOptionId("69040de171b64154a3026ab7f48c05be");
        examAutoEvaluation.setTime(date);
        examAutoEvaluation.setHappenTime(date);
        examAutoEvaluation.setCheckTime(date);
        examAutoEvaluation.setRowNum("454");
        examAutoEvaluation.setFromSys("智慧政工");

        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党日活动");
        if (true == isNnc){
            examAutoEvaluation.setIsNewRecord(false);
            examAutoEvaluation.setId("");
            examAutoEvaluation.setEvaluationId("34e8d855cf6b4b1ab5e7e23e7aaba658");
            examAutoEvaluation.setUnit("南宁处政治处组织干部室");
            examAutoEvaluation.setUnitId("27");
            examAutoEvaluation.setScore("3");
            examAutoEvaluation.setDetails(String.valueOf(nncDetail));
            //this.deleteInfoByMore(examAutoEvaluation);
            /*处理考评标准一样，汇总*/
            this.summaryStandard(examAutoEvaluation,3.0,nncDetail.toString());
            this.save(examAutoEvaluation);
        }
        if (true == isLzc){
            examAutoEvaluation.setIsNewRecord(false);
            examAutoEvaluation.setId("");
            examAutoEvaluation.setEvaluationId("ec3ba2efdd404f2faa520f6e8a71ec4c");
            examAutoEvaluation.setUnit("柳州处政治处组织干部室");
            examAutoEvaluation.setUnitId("142");
            examAutoEvaluation.setScore("3");
            examAutoEvaluation.setDetails(String.valueOf(lzcDetail));
            //this.deleteInfoByMore(examAutoEvaluation);
            /*处理考评标准一样，汇总*/
            this.summaryStandard(examAutoEvaluation,3.0,lzcDetail.toString());
            this.save(examAutoEvaluation);
        }
        if (true == isBhc){
            examAutoEvaluation.setIsNewRecord(false);
            examAutoEvaluation.setId("");
            examAutoEvaluation.setEvaluationId("c90918faf2614baa8fa85230482bd43e");
            examAutoEvaluation.setUnit("北海处政治处组织干部室");
            examAutoEvaluation.setUnitId("264");
            examAutoEvaluation.setScore("3");
            examAutoEvaluation.setDetails(String.valueOf(bhcDetail));
            //this.deleteInfoByMore(examAutoEvaluation);
            /*处理考评标准一样，汇总*/
            this.summaryStandard(examAutoEvaluation,3.0,bhcDetail.toString());
            this.save(examAutoEvaluation);
        }
    }


    /**
     * 党组织书记测评自动考评
     */
    public void chuLdAssessYear(String year) {
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        String lastYear = String.valueOf(Integer.valueOf(year) - 1);
        String startYear = lastYear + "-12" + "-11";
        String endYear = year + "-12" + "-10";
//        String year = String.valueOf(calendar.get(Calendar.YEAR));
        AffairGeneralSituation affairGeneralSituation = new AffairGeneralSituation();
        List<AffairGeneralSituation> list = affairAssessService.findAllPartyOrg(affairGeneralSituation);
        list.forEach(item -> {
            String ldRoleId = "230e916609a349e68f7186f784e11419";
            List<Map<String, String>> chuLdList = new ArrayList<>();
            chuLdList.addAll(userDao.findJcLdByRoleId(ldRoleId));
            String partyOrganization = item.getPartyOrganization();
            String id = item.getId();
            int count = affairAssessService.findCount(startYear,endYear, partyOrganization, id);
            // 公安处领导班子(处长或者政委)
            List<Map<String, String>> peopleInfo = affairAssessService.findPeopleInfo(partyOrganization, id);
            peopleInfo.forEach(people -> {
                chuLdList.forEach(chu-> {
                    if (people.get("card_num").equals(chu.get("no"))) {
                        if (count == 0) {
                            String evaluationId = this.findEvaluationId(people.get("name"), people.get("card_num"));
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setName(people.get("name"));
                            examAutoEvaluation.setIdNumber(people.get("card_num"));
                            examAutoEvaluation.setEvaluationId(evaluationId);
                            examAutoEvaluation.setType("2");
                            examAutoEvaluation.setEvalType("5");
                            examAutoEvaluation.setPeriod("2");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setDetails(year+"年"+partyOrganization+people.get("name")+"党组织书记测评，未按时录入");
                            examAutoEvaluation.setUnit(partyOrganization);
                            examAutoEvaluation.setUnitId(id);
                            examAutoEvaluation.setAssess("局绩效办");
                            examAutoEvaluation.setRemark("每次");
                            examAutoEvaluation.setModel("2020年年度对公安处领导班子成员绩效考核公共扣分标准");
                            examAutoEvaluation.setModelId("39175e4e4f3a4c498313176dab9f5e10");
                            examAutoEvaluation.setOption("上级部署的各时期党建工作要求，落实不到位的");
                            examAutoEvaluation.setOptionId("07859fc6a3da4033b2411fb17df16758");
                            examAutoEvaluation.setScore("2");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("45");
                            examAutoEvaluation.setFromSys("智慧政工");

                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党组织书记测评");
                            this.summaryStandard(examAutoEvaluation,2.0,year+"年"+partyOrganization+people.get("name")+"党组织书记测评，未按时录入");
                            this.save(examAutoEvaluation);
                        }
                    }
                });
               /* String job = affairAssessService.peopleJob(people.get("name"), people.get("card_num"));
                if (StringUtils.isNotBlank(job)) {
                    if (job.contains("处长") || job.contains("政委")) {

                    }
                }*/
            });
        });
    }

    public void jiAssessYear(String year) {
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        String lastYear = String.valueOf(Integer.valueOf(year) - 1);
        String startYear = lastYear + "-12" + "-11";
        String endYear = year + "-12" + "-10";
//        String year = String.valueOf(calendar.get(Calendar.YEAR));
        AffairGeneralSituation affairGeneralSituation = new AffairGeneralSituation();
        List<AffairGeneralSituation> list = affairAssessService.findAllPartyOrg(affairGeneralSituation);
        list.forEach(item -> {
            String partyOrganization = item.getPartyOrganization();
            String id = item.getId();
            int count = affairAssessService.findCount(startYear,endYear, partyOrganization, id);
            //中基层领导
//            String name = affairGeneralSituationService.findNameByOrg(partyOrganization);
            List<Map<String, String>> peopleList = affairPartyMemberService.peopleList(partyOrganization);
            String juJiGuanRoleId = "13bac520ae4d4160b595384691b443fd";
            String chuJiGuanRoleId = "62cf6aaea0184d3b8cfbce1700ad0e38";
            String suoduiJiGuanRoleId = "ff24c3288860447d867d08d462a2a2b9";

            String[] zhongJiCeng = new String[3];
            zhongJiCeng[0] = chuJiGuanRoleId;
            zhongJiCeng[1] = juJiGuanRoleId;
            zhongJiCeng[2] = suoduiJiGuanRoleId;
            List<Map<String, String>> jcLdList = new ArrayList<>();
            Arrays.stream(zhongJiCeng).forEach(s -> {
                jcLdList.addAll(userDao.findJcLdByRoleId(s));
            });
            peopleList.forEach(pList -> {
                jcLdList.forEach(jc->{
                    if (pList.get("card_num").equals(jc.get("no"))) {
                            if (count == 0) {
                                String evaluationId = this.findEvaluationId(pList.get("name"), pList.get("card_num"));
                                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                examAutoEvaluation.setName(pList.get("name"));
                                examAutoEvaluation.setIdNumber(pList.get("card_num"));
                                examAutoEvaluation.setEvaluationId(evaluationId);
                                examAutoEvaluation.setType("2");
                                examAutoEvaluation.setEvalType("6");
                                examAutoEvaluation.setPeriod("2");
                                examAutoEvaluation.setYear(year);
                                examAutoEvaluation.setDetails(year+"年"+partyOrganization+pList.get("name")+"党日活动，未按时录入");
                                examAutoEvaluation.setUnit(partyOrganization);
                                examAutoEvaluation.setUnitId(id);
                                examAutoEvaluation.setAssess("组干部门");
                                examAutoEvaluation.setRemark("每次");
                                examAutoEvaluation.setModel("2020年年度全局中层和基层领导干部考核公共扣分标准(公安处领导班子成员除外)");
                                examAutoEvaluation.setModelId("c00cebbbc62c48d888316206d38e02c7");
                                examAutoEvaluation.setOption("支部“三会一课”、组织生活会、民主评议党员、两学一做、党日活动等制度未按规定落实的,每缺一项次");
                                examAutoEvaluation.setOptionId("5a27b0e8434f4e91ba40071685399a3f");
                                examAutoEvaluation.setScore("2");
                                examAutoEvaluation.setTime(date);
                                examAutoEvaluation.setHappenTime(date);
                                examAutoEvaluation.setCheckTime(date);
                                examAutoEvaluation.setRowNum("57");
                                examAutoEvaluation.setFromSys("智慧政工");

                                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党组织书记测评");
                                /*处理考评标准一样，汇总*/
                                this.summaryStandard(examAutoEvaluation,2.0,year+"年"+partyOrganization+"党组织书记测评，未按时录入");
                                this.save(examAutoEvaluation);
                            }
                    }

                });
               /* if (pList.get("name") == name) {
                    // 书记
                    // 获取被考评对象id

                } else {
                    *//*月度中基层领导考评-其他委员*//*
                    // 获取被考评对象id
                    if (count == 0) {
                        String evaluationId = this.findEvaluationId(pList.get("name"), pList.get("card_num"));
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setEvaluationId(evaluationId);
                        examAutoEvaluation.setType("2");
                        examAutoEvaluation.setEvalType("6");
                        examAutoEvaluation.setPeriod("2");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setDetails("党日活动，未按时录入扣分（每月1次，以支部第1次录入时间为主，每月时间相对固定，次月录入时间前后不超过5天）");
                        examAutoEvaluation.setUnit(partyOrganization);
                        examAutoEvaluation.setUnitId(id);
                        examAutoEvaluation.setAssess("组干部门");
                        examAutoEvaluation.setRemark("每次");
                        examAutoEvaluation.setModel("2020年年度全局中层和基层领导干部考核公共扣分标准(公安处领导班子成员除外)");
                        examAutoEvaluation.setModelId("bf3cb06770864998bcfd64f4f526f497");
                        examAutoEvaluation.setOption("支部“三会一课”、组织生活会、民主评议党员、两学一做、党日活动等制度未按规定落实的,每缺一项次");
                        examAutoEvaluation.setOptionId("5a27b0e8434f4e91ba40071685399a3f");
                        examAutoEvaluation.setScore("1");
                        examAutoEvaluation.setTime(date);
                        examAutoEvaluation.setHappenTime(date);
                        examAutoEvaluation.setCheckTime(date);
                        examAutoEvaluation.setRowNum("57");
                        examAutoEvaluation.setFromSys("智慧政工");
                        this.save(examAutoEvaluation);
                    }
                }*/
            });
        });
    }

    public void juAssessYear(String year) {
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        String lastYear = String.valueOf(Integer.valueOf(year) - 1);
        String startYear = lastYear + "-12" + "-11";
        String endYear = year + "-12" + "-10";
//        String year = String.valueOf(calendar.get(Calendar.YEAR));
        AffairGeneralSituation affairGeneralSituation = new AffairGeneralSituation();
//        List<AffairGeneralSituation> list = affairAssessService.findAllPartyOrg(affairGeneralSituation);
        //查询局机关党支部
        List<AffairGeneralSituation> list = affairGeneralSituationService.getJJGPartyBranch();
        list.forEach(item -> {
            String partyOrganization = item.getPartyOrganization();
            String id = item.getId();
            int count = affairAssessService.findCount(startYear,endYear, partyOrganization, id);
//            if (partyOrganization.contains("南宁公安局") && !partyOrganization.contains("大队")) {
                if (0 == count) {
                    //获取被考评对象id
                    /*List<String> unitId = affairElectionService.findUnitId(id);
                    for (int i = 0; i < unitId.size(); i++) {*/
//                        String userId = affairElectionService.findUserId(unitId.get(i));
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
//                        examAutoEvaluation.setEvaluationId(userId);
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("2");
                        examAutoEvaluation.setPeriod("2");
                        examAutoEvaluation.setYear(year);
//                        examAutoEvaluation.setUnit(partyOrganization);
//                        examAutoEvaluation.setUnitId(id);
                        examAutoEvaluation.setRemark("每次");
                        examAutoEvaluation.setAssess("机关考评小组");
                        examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队年度绩效考核公共 扣分标准");
                        examAutoEvaluation.setModelId("653c088f3e754adcaa659a3706d304b9");
                        examAutoEvaluation.setOption("相关工作未按要求抓好落实的");
                        examAutoEvaluation.setOptionId("6913bfecc3c94e7bb3ce1b04d95b2ab5");
                        examAutoEvaluation.setScore("2");
                        examAutoEvaluation.setTime(date);
                        examAutoEvaluation.setHappenTime(date);
                        examAutoEvaluation.setCheckTime(date);
                        examAutoEvaluation.setRowNum("19");
                        examAutoEvaluation.setFromSys("智慧政工");

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党组织书记测评");
//                        this.save(examAutoEvaluation);
                        List<User> userList = this.getUserByPartyId(id);
                        for (User user : userList) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setDetails(year+"年"+user.getOffice().getName()+"党组织书记测评，未按时录入");
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            this.summaryStandard(examAutoEvaluation,2.0,year+"年"+partyOrganization+"党组织书记测评，未按时录入");
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId("");
                            examAutoEvaluation.setIsNewRecord(false);
                            this.save(examAutoEvaluation);
//                        }
                    }
                }
//            }
        });
    }

    public void chuAssessYear(String year) {
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        String lastYear = String.valueOf(Integer.valueOf(year) - 1);
        String startYear = lastYear + "-12" + "-11";
        String endYear = year + "-12" + "-10";
//        String year = String.valueOf(calendar.get(Calendar.YEAR));
        AffairGeneralSituation affairGeneralSituation = new AffairGeneralSituation();
        List<AffairGeneralSituation> list = affairAssessService.findAllPartyOrg(affairGeneralSituation);
        list.forEach(item -> {
            String partyOrganization = item.getPartyOrganization();
            String id = item.getId();
            int count = affairAssessService.findCount(startYear,endYear, partyOrganization, id);
            if (partyOrganization.contains("公安处") && ((partyOrganization.contains("大队") == false) && (partyOrganization.contains("派出所") == false))) {
                if (0 == count) {
                    /*List<String> unitId = affairElectionService.findUnitId(id);
                    for (int i = 0; i < unitId.size(); i++) {
                        String userId = affairElectionService.findUserId(unitId.get(i));*/
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
//                        examAutoEvaluation.setEvaluationId(userId);
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("4");
                        examAutoEvaluation.setPeriod("2");
                        examAutoEvaluation.setYear(year);
//                        examAutoEvaluation.setDetails("党组织书记测评，未按时录入扣分（每年1次，年度考）");
//                        examAutoEvaluation.setUnit(partyOrganization);
//                        examAutoEvaluation.setUnitId(id);
                        examAutoEvaluation.setRemark("");
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setModelId("");
                        examAutoEvaluation.setOption("");
                        examAutoEvaluation.setOptionId("");
                        examAutoEvaluation.setScore("0.2");
                        examAutoEvaluation.setTime(date);
                        examAutoEvaluation.setHappenTime(date);
                        examAutoEvaluation.setCheckTime(date);
                        examAutoEvaluation.setFromSys("智慧政工");
//                        this.save(examAutoEvaluation);
                    //关联自动考评标准关联表设置model ，option相关字段
                    String parentIds = item.getParentIds();
                    if(StringUtils.isNotBlank(parentIds)){
                        if(parentIds.contains(",34,")){
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","党组织书记测评");
                        }
                        if(parentIds.contains(",95,")){
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","党组织书记测评");
                        }
                        if(parentIds.contains(",156,")){
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","党组织书记测评");
                        }
                    }
                        List<User> userList = this.getUserByPartyId(id);
                        for (User user : userList) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setDetails(year+"年"+user.getOffice().getName()+"党组织书记测评，未按时录入扣分（每年1次，年度考）");
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            /*处理考评标准一样，汇总*/
                            this.summaryStandard(examAutoEvaluation,0.2,year+"年"+partyOrganization+"党组织书记测评，未按时录入扣分（每年1次，年度考）");
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId("");
                            examAutoEvaluation.setIsNewRecord(false);
                            this.save(examAutoEvaluation);
//                        }
                    }
                }
            }
        });
    }

    public void duiAssessYear(String year) {
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        String lastYear = String.valueOf(Integer.valueOf(year) - 1);
        String startYear = lastYear + "-12" + "-11";
        String endYear = year + "-12" + "-10";
//        String year = String.valueOf(calendar.get(Calendar.YEAR));
        AffairGeneralSituation affairGeneralSituation = new AffairGeneralSituation();
        List<AffairGeneralSituation> list = affairAssessService.findAllPartyOrg(affairGeneralSituation);
        list.forEach(item -> {
            String partyOrganization = item.getPartyOrganization();
            String id = item.getId();
            int count = affairAssessService.findCount(startYear,endYear, partyOrganization, id);
            if (partyOrganization.contains("大队") || partyOrganization.contains("派出所")) {
                if (0 == count) {
                   /* List<String> unitId = affairElectionService.findUnitId(id);
                    for (int i = 0; i < unitId.size(); i++) {
                        String userId = affairElectionService.findUserId(unitId.get(i));*/
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
//                        examAutoEvaluation.setEvaluationId(userId);
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("2");
                        examAutoEvaluation.setYear(year);
//                        examAutoEvaluation.setDetails("党组织书记测评，未按时录入扣分（每年1次，年度考）");
//                        examAutoEvaluation.setUnit(partyOrganization);
//                        examAutoEvaluation.setUnitId(id);
                        examAutoEvaluation.setRemark("");
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setModelId("");
                        examAutoEvaluation.setOption("");
                        examAutoEvaluation.setOptionId("");
                        examAutoEvaluation.setScore("0.2");
                        examAutoEvaluation.setTime(date);
                        examAutoEvaluation.setHappenTime(date);
                        examAutoEvaluation.setCheckTime(date);
                        examAutoEvaluation.setFromSys("智慧政工");

//                        this.save(examAutoEvaluation);
                    //关联自动考评标准关联表设置model ，option相关字段
                    String parentIds = item.getParentIds();
                    if(StringUtils.isNotBlank(parentIds)){
                        if(parentIds.contains(",34,")){
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","党组织书记测评");
                        }
                        if(parentIds.contains(",95,")){
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","党组织书记测评");
                        }
                        if(parentIds.contains(",156,")){
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","党组织书记测评");
                        }
                    }
                        List<User> userList = this.getUserByPartyId(id);
                        for (User user : userList) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setDetails(year+"年"+user.getOffice().getName()+"党组织书记测评，未按时录入扣分（每年1次，年度考）");
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            /*处理考评标准一样，汇总*/
                            this.summaryStandard(examAutoEvaluation,0.2,year+"年"+partyOrganization+"党组织书记测评，未按时录入扣分（每年1次，年度考）");
                            examAutoEvaluation.setId("");
                            examAutoEvaluation.setIsNewRecord(false);
                            this.save(examAutoEvaluation);
//                        }
                    }
                }
            }
        });
    }

    public void juChuAssessYear(String year) {
        StringBuffer nncDetail = null;
        StringBuffer lzcDetail = null;
        StringBuffer bhcDetail = null;
        Boolean isNnc = false;
        Boolean isLzc = false;
        Boolean isBhc = false;
        Integer nncCount = 0;
        Integer lzcCount = 0;
        Integer bhcCount = 0;
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        String lastYear = String.valueOf(Integer.valueOf(year) - 1);
        String startYear = lastYear + "-12" + "-11";
        String endYear = year + "-12" + "-10";
//        String year = String.valueOf(calendar.get(Calendar.YEAR));
        AffairGeneralSituation affairGeneralSituation = new AffairGeneralSituation();
        List<AffairGeneralSituation> list = affairAssessService.findAllPartyOrg(affairGeneralSituation);
        for (int i = 0; i < list.size(); i++) {
            String partyOrganization = list.get(i).getPartyOrganization();
            String id = list.get(i).getId();
            int count = affairAssessService.findCount(startYear,endYear, partyOrganization, id);
            if (0 == count){
                if(partyOrganization.contains("南宁铁路公安处") || partyOrganization.contains("南宁公安处")){
                    nncCount = nncCount + 1;
                    isNnc = true;
                    if(nncDetail==null){
                        nncDetail = new StringBuffer(partyOrganization+year+"年"+"党组织书记测评，未按时录入");
                    }else{
                        nncDetail.append(","+partyOrganization+year+"年"+"党组织书记测评，未按时录入");
                    }
                }else if(partyOrganization.contains("柳州铁路公安处") || partyOrganization.contains("柳州公安处")){
                    lzcCount = lzcCount + 1;
                    isLzc = true;
                    if(lzcDetail==null){
                        lzcDetail = new StringBuffer(partyOrganization+year+"年"+"党组织书记测评，未按时录入");
                    }else{
                        lzcDetail.append(","+partyOrganization+year+"年"+"党组织书记测评，未按时录入");
                    }
                }else if(partyOrganization.contains("北海铁路公安处") || partyOrganization.contains("北海公安处")){
                    bhcCount = bhcCount + 1;
                    isBhc = true;
                    if(bhcDetail==null){
                        bhcDetail = new StringBuffer(partyOrganization+year+"年"+"党组织书记测评，未按时录入");
                    }else{
                        bhcDetail.append(","+partyOrganization+year+"年"+"党组织书记测评，未按时录入");
                    }
                }
            }
        }
        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
//                    examAutoEvaluation.setEvaluationId(userId);
        examAutoEvaluation.setType("1");
        examAutoEvaluation.setEvalType("1");
        examAutoEvaluation.setPeriod("2");
        examAutoEvaluation.setYear(year);
        examAutoEvaluation.setRemark("每次");
        examAutoEvaluation.setAssess("组干处");
        examAutoEvaluation.setModel("2020年年度公安局对公安处重点工作考核扣分标准（直接扣大分）");
        examAutoEvaluation.setModelId("241d14b81fbc43ac9025dbf6599e6b55");
        examAutoEvaluation.setOption("未按要求组织开展党组织书记年度述职评议考核的");
        examAutoEvaluation.setOptionId("33937437988d4ec299ad98dcce87feaf");
        examAutoEvaluation.setTime(date);
        examAutoEvaluation.setHappenTime(date);
        examAutoEvaluation.setCheckTime(date);
        examAutoEvaluation.setRowNum("40");
        examAutoEvaluation.setFromSys("智慧政工");

        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党组织书记测评");
        if (isNnc == true){
            examAutoEvaluation.setIsNewRecord(false);
            examAutoEvaluation.setId("");
            examAutoEvaluation.setEvaluationId("34e8d855cf6b4b1ab5e7e23e7aaba658");
            examAutoEvaluation.setUnit("南宁处政治处组织干部室");
            examAutoEvaluation.setUnitId("27");
            examAutoEvaluation.setScore(String.valueOf(0.1 * nncCount));
            examAutoEvaluation.setDetails(String.valueOf(nncDetail));
            this.summaryStandard(examAutoEvaluation,0.1 * nncCount,nncDetail.toString());
            //this.deleteInfoByMore(examAutoEvaluation);
            this.save(examAutoEvaluation);
        }
        if (isLzc == true){
            examAutoEvaluation.setIsNewRecord(false);
            examAutoEvaluation.setId("");
            examAutoEvaluation.setEvaluationId("ec3ba2efdd404f2faa520f6e8a71ec4c");
            examAutoEvaluation.setUnit("柳州处政治处组织干部室");
            examAutoEvaluation.setUnitId("142");
            examAutoEvaluation.setScore(String.valueOf(0.1 * lzcCount));
            examAutoEvaluation.setDetails(String.valueOf(lzcDetail));
            this.summaryStandard(examAutoEvaluation,0.1 * lzcCount,lzcDetail.toString());
            //this.deleteInfoByMore(examAutoEvaluation);
            this.save(examAutoEvaluation);
        }
        if (isBhc == true){
            examAutoEvaluation.setIsNewRecord(false);
            examAutoEvaluation.setId("");
            examAutoEvaluation.setEvaluationId("c90918faf2614baa8fa85230482bd43e");
            examAutoEvaluation.setUnit("北海处政治处组织干部室");
            examAutoEvaluation.setUnitId("264");
            examAutoEvaluation.setScore(String.valueOf(0.1 * bhcCount));
            examAutoEvaluation.setDetails(String.valueOf(bhcDetail));
            this.summaryStandard(examAutoEvaluation,0.1 * bhcCount,bhcDetail.toString());
            //this.deleteInfoByMore(examAutoEvaluation);
            this.save(examAutoEvaluation);
        }
        /*list.forEach(item -> {
            String partyOrganization = item.getPartyOrganization();
            String id = item.getId();
            int count = affairAssessService.findCount(startYear,endYear, partyOrganization, id);
            if (0 == count) {
                //获取被考评对象id
                List<String> unitId = affairElectionService.findUnitId(id);
                for (int i = 0; i < unitId.size(); i++) {
                    String userId = affairElectionService.findUserId(unitId.get(i));
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
//                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("2");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails("党组织书记测评，未按时录入扣分（每年1次，年度考）");
//                    examAutoEvaluation.setUnit(partyOrganization);
//                    examAutoEvaluation.setUnitId(id);
                    examAutoEvaluation.setRemark("每次");
                    examAutoEvaluation.setAssess("组干处");
                    examAutoEvaluation.setModel("2020年年度公安局对公安处重点工作考核扣分标准（直接扣大分）");
                    examAutoEvaluation.setModelId("241d14b81fbc43ac9025dbf6599e6b55");
                    examAutoEvaluation.setOption("未按要求组织开展党组织书记年度述职评议考核的");
                    examAutoEvaluation.setOptionId("33937437988d4ec299ad98dcce87feaf");
                    examAutoEvaluation.setScore("0.1");
                    examAutoEvaluation.setTime(date);
                    examAutoEvaluation.setHappenTime(date);
                    examAutoEvaluation.setCheckTime(date);
                    examAutoEvaluation.setRowNum("40");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(id);
                    for (User user : userList) {
                       *//* examAutoEvaluation.setUnit(user.getOffice().getName());
                        examAutoEvaluation.setUnitId(user.getOffice().getId());
                        examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id*//*
                        if (partyOrganization.contains("南宁铁路公安局") || partyOrganization.contains("南宁公安局")){
                            examAutoEvaluation.setEvaluationId("bfdf74f010c9466dba12c1589ecab7f3");
                            examAutoEvaluation.setUnit("公安局政治部组织干部处");
                            examAutoEvaluation.setUnitId("4");
                        }else if(partyOrganization.contains("南宁铁路公安处") || partyOrganization.contains("南宁公安处")){
                            examAutoEvaluation.setEvaluationId("34e8d855cf6b4b1ab5e7e23e7aaba658");
                            examAutoEvaluation.setUnit("南宁处政治处组织干部室");
                            examAutoEvaluation.setUnitId("27");
                        }else if(partyOrganization.contains("柳州铁路公安处") || partyOrganization.contains("柳州公安处")){
                            examAutoEvaluation.setEvaluationId("ec3ba2efdd404f2faa520f6e8a71ec4c");
                            examAutoEvaluation.setUnit("柳州处政治处组织干部室");
                            examAutoEvaluation.setUnitId("142");
                        }else if(partyOrganization.contains("北海铁路公安处") || partyOrganization.contains("北海公安处")){
                            examAutoEvaluation.setEvaluationId("c90918faf2614baa8fa85230482bd43e");
                            examAutoEvaluation.setUnit("北海处政治处组织干部室");
                            examAutoEvaluation.setUnitId("264");
                        }
                        //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setIsNewRecord(false);
                        this.save(examAutoEvaluation);
                    }
                }
            }
        });*/
    }

    /**
     * 民警思想分析
     */
    public void juChuThought(String time, String year) {
        StringBuffer nncDetail = null;
        StringBuffer lzcDetail = null;
        StringBuffer bhcDetail = null;
        Boolean isNnc = false;
        Boolean isLzc = false;
        Boolean isBhc = false;
        Integer nncCount = 0;
        Integer lzcCount = 0;
        Integer bhcCount = 0;
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        AffairTwBase nnaffairTwBase = affairTwBaseService.selectTwBeanById("34");
        AffairTwBase lzaffairTwBase = affairTwBaseService.selectTwBeanById("95");
        AffairTwBase bhaffairTwBase = affairTwBaseService.selectTwBeanById("156");
        List<AffairTwBase> allUnit = new ArrayList<>();
        allUnit.add(nnaffairTwBase);
        allUnit.add(lzaffairTwBase);
        allUnit.add(bhaffairTwBase);
        for (int i = 0; i < allUnit.size(); i++) {
            String unit = allUnit.get(i).getName();
            String id = allUnit.get(i).getId();
            if (time.equals("01-01")){
                String lastYear = String.valueOf(Integer.valueOf(year) - 1);
//                String startTime = lastYear + "-12" + "-26";
//                String endTime = year + "-06" + "-25";
                String startTime = lastYear + "-07" + "-01";
                String endTime = lastYear + "-12" + "-31";
                int count = affairThoughtAnalysisService.getCount(id, unit, startTime, endTime, year);
                if (count < 1) {
                    String orgNameById = affairTwBaseService.findOrgNameById(id);
                    if("2".equals(orgNameById)){
                        nncCount = nncCount + 1;
                        isNnc = true;
                        if(nncDetail==null){
                            nncDetail = new StringBuffer(lastYear+"年"+unit+"下半年不完成上报青年民警思想分析");
                        }else{
                            nncDetail.append(","+lastYear+"年"+unit+"下半年不完成上报青年民警思想分析");
                        }
                    }else if("3".equals(orgNameById)){
                        lzcCount = lzcCount + 1;
                        isLzc = true;
                        if(lzcDetail==null){
                            lzcDetail = new StringBuffer(lastYear+"年"+unit+"下半年不完成上报青年民警思想分析");
                        }else{
                            lzcDetail.append(","+lastYear+"年"+unit+"下半年不完成上报青年民警思想分析");
                        }
                    }else if("4".equals(orgNameById)){
                        bhcCount = bhcCount + 1;
                        isBhc = true;
                        if(bhcDetail==null){
                            bhcDetail = new StringBuffer(lastYear+"年"+unit+"下半年不完成上报青年民警思想分析");
                        }else{
                            bhcDetail.append(","+lastYear+"年"+unit+"下半年不完成上报青年民警思想分析");
                        }
                    }
                }
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("1");
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(lastYear);
                examAutoEvaluation.setRemark("每少一次");
                examAutoEvaluation.setAssess("团委");
                examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考核扣分标准(业务部分26项)");
                examAutoEvaluation.setModelId("a959d8865ea74bf68cf818adc710c75c");
                examAutoEvaluation.setOption("每半年不完成青年民警思想分析的");
                examAutoEvaluation.setOptionId("669da6ff639a457d880cf2ca9de59088");
                examAutoEvaluation.setTime(date);
                examAutoEvaluation.setHappenTime(date);
                examAutoEvaluation.setCheckTime(date);
                examAutoEvaluation.setRowNum("677");
                examAutoEvaluation.setFromSys("智慧政工");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"团委青年民警思想分析");
                if (isNnc == true){
                    examAutoEvaluation.setIsNewRecord(false);
                    examAutoEvaluation.setId("");
                    examAutoEvaluation.setEvaluationId("28f59642a1e74d0588f0d515fe462775");
                    examAutoEvaluation.setUnit("南宁处团委");
                    examAutoEvaluation.setUnitId("33");
                    examAutoEvaluation.setScore(String.valueOf(3 * nncCount));
                    examAutoEvaluation.setDetails(String.valueOf(nncDetail));
                    //this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if (isLzc == true){
                    examAutoEvaluation.setIsNewRecord(false);
                    examAutoEvaluation.setId("");
                    examAutoEvaluation.setEvaluationId("11d94fe57ede47a9bae4bffa36af487c");
                    examAutoEvaluation.setUnit("柳州处团委");
                    examAutoEvaluation.setUnitId("148");
                    examAutoEvaluation.setScore(String.valueOf(3 * lzcCount));
                    examAutoEvaluation.setDetails(String.valueOf(lzcDetail));
                    //this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if (isBhc == true){
                    examAutoEvaluation.setIsNewRecord(false);
                    examAutoEvaluation.setId("");
                    examAutoEvaluation.setEvaluationId("78d0e07ed2e14ca0b6c73e14c11f4d55");
                    examAutoEvaluation.setUnit("北海处团委");
                    examAutoEvaluation.setUnitId("268");
                    examAutoEvaluation.setScore(String.valueOf(3 * bhcCount));
                    examAutoEvaluation.setDetails(String.valueOf(bhcDetail));
                    //this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }else if(time.equals("07-01")){
//                String startTime = year + "-06" + "-26";
                String startTime = year + "-01" + "-01";
//                String endTime = year + "-12" + "-25";
                String endTime = year + "-06" + "-30";
                int count = affairThoughtAnalysisService.getCount(id, unit, startTime, endTime, year);
                if (count < 1) {
                    String orgNameById = affairTwBaseService.findOrgNameById(id);
                    if("2".equals(orgNameById)){
                        nncCount = nncCount + 1;
                        isNnc = true;
                        if(nncDetail==null){
                            nncDetail = new StringBuffer(year+"年"+unit+"上半年不完成上报青年民警思想分析");
                        }else{
                            nncDetail.append(","+year+"年"+unit+"上半年不完成上报青年民警思想分析");
                        }
                    }else if("3".equals(orgNameById)){
                        lzcCount = lzcCount + 1;
                        isLzc = true;
                        if(lzcDetail==null){
                            lzcDetail = new StringBuffer(year+"年"+unit+"上半年不完成上报青年民警思想分析");
                        }else{
                            lzcDetail.append(","+year+"年"+unit+"上半年不完成上报青年民警思想分析");
                        }
                    }else if("4".equals(orgNameById)){
                        bhcCount = bhcCount + 1;
                        isBhc = true;
                        if(bhcDetail==null){
                            bhcDetail = new StringBuffer(year+"年"+unit+"上半年不完成上报青年民警思想分析");
                        }else{
                            bhcDetail.append(","+year+"年"+unit+"上半年不完成上报青年民警思想分析");
                        }
                    }
                }
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("1");
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setRemark("每少一次");
                examAutoEvaluation.setAssess("团委");
                examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考核扣分标准(业务部分26项)");
                examAutoEvaluation.setModelId("a959d8865ea74bf68cf818adc710c75c");
                examAutoEvaluation.setOption("每半年不完成青年民警思想分析的");
                examAutoEvaluation.setOptionId("669da6ff639a457d880cf2ca9de59088");
                examAutoEvaluation.setTime(date);
                examAutoEvaluation.setHappenTime(date);
                examAutoEvaluation.setCheckTime(date);
                examAutoEvaluation.setRowNum("677");
                examAutoEvaluation.setFromSys("智慧政工");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"团委青年民警思想分析");
                if (isNnc == true){
                    examAutoEvaluation.setIsNewRecord(false);
                    examAutoEvaluation.setId("");
                    examAutoEvaluation.setEvaluationId("28f59642a1e74d0588f0d515fe462775");
                    examAutoEvaluation.setUnit("南宁处团委");
                    examAutoEvaluation.setUnitId("33");
                    examAutoEvaluation.setScore(String.valueOf(3 * nncCount));
                    examAutoEvaluation.setDetails(String.valueOf(nncDetail));
                    //this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if (isLzc == true){
                    examAutoEvaluation.setIsNewRecord(false);
                    examAutoEvaluation.setId("");
                    examAutoEvaluation.setEvaluationId("11d94fe57ede47a9bae4bffa36af487c");
                    examAutoEvaluation.setUnit("柳州处团委");
                    examAutoEvaluation.setUnitId("148");
                    examAutoEvaluation.setScore(String.valueOf(3 * lzcCount));
                    examAutoEvaluation.setDetails(String.valueOf(lzcDetail));
                    //this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if (isBhc == true){
                    examAutoEvaluation.setIsNewRecord(false);
                    examAutoEvaluation.setId("");
                    examAutoEvaluation.setEvaluationId("78d0e07ed2e14ca0b6c73e14c11f4d55");
                    examAutoEvaluation.setUnit("北海处团委");
                    examAutoEvaluation.setUnitId("268");
                    examAutoEvaluation.setScore(String.valueOf(3 * bhcCount));
                    examAutoEvaluation.setDetails(String.valueOf(bhcDetail));
                    //this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
        }
        /*allUnit.forEach(item -> {
            String unit = item.getName();
            String id = item.getId();
            if (time.equals("06-26")) {
                String lastYear = String.valueOf(Integer.valueOf(year) - 1);
                String startTime = lastYear + "-12" + "-26";
                String endTime = year + "-06" + "-25";
                int count = affairThoughtAnalysisService.getCount(id, unit, startTime, endTime, year);
                if (count < 1) {
                    List<String> unitId = affairThoughtAnalysisService.findUnitId(id);
                    for (int i = 0; i < unitId.size(); i++) {
                        String userId = affairElectionService.findUserId(unitId.get(i));
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
//                        examAutoEvaluation.setEvaluationId(userId);
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("1");
                        examAutoEvaluation.setPeriod("2");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setDetails(year+"年"+unit+"上半年不完成上报青年民警思想分析");
                        *//*examAutoEvaluation.setUnit(unit);
                        examAutoEvaluation.setUnitId(id);*//*
                        String orgNameById = affairTwBaseService.findOrgNameById(id);
                        if ("1".equals(orgNameById)){
                            examAutoEvaluation.setEvaluationId("ff7f9fe2597b40429ded58f8b76a2f65");
                            examAutoEvaluation.setUnit("公安局团委");
                            examAutoEvaluation.setUnitId("9");
                        }else if("2".equals(orgNameById)){
                            examAutoEvaluation.setEvaluationId("28f59642a1e74d0588f0d515fe462775");
                            examAutoEvaluation.setUnit("南宁处团委");
                            examAutoEvaluation.setUnitId("33");
                        }else if("3".equals(orgNameById)){
                            examAutoEvaluation.setEvaluationId("11d94fe57ede47a9bae4bffa36af487c");
                            examAutoEvaluation.setUnit("柳州处团委");
                            examAutoEvaluation.setUnitId("148");
                        }else if("4".equals(orgNameById)){
                            examAutoEvaluation.setEvaluationId("78d0e07ed2e14ca0b6c73e14c11f4d55");
                            examAutoEvaluation.setUnit("北海处团委");
                            examAutoEvaluation.setUnitId("268");
                        }
                        examAutoEvaluation.setRemark("每少一次");
                        examAutoEvaluation.setAssess("团委");
                        examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考核扣分标准(业务部分26项)");
                        examAutoEvaluation.setModelId("a959d8865ea74bf68cf818adc710c75c");
                        examAutoEvaluation.setOption("每半年不完成青年民警思想分析的");
                        examAutoEvaluation.setOptionId("669da6ff639a457d880cf2ca9de59088");
                        examAutoEvaluation.setScore("3");
                        examAutoEvaluation.setTime(date);
                        examAutoEvaluation.setHappenTime(date);
                        examAutoEvaluation.setCheckTime(date);
                        examAutoEvaluation.setRowNum("677");
                        examAutoEvaluation.setFromSys("智慧政工");
                        this.save(examAutoEvaluation);
                    }
                }
            } else if (time.equals("12-26")) {
                String startTime = year + "-06" + "-26";
                String endTime = year + "-12" + "-25";
                int count = affairThoughtAnalysisService.getCount(id, unit, startTime, endTime, year);
                if (count < 1) {
                    List<String> unitId = affairThoughtAnalysisService.findUnitId(id);
                    for (int i = 0; i < unitId.size(); i++) {
                        String userId = affairElectionService.findUserId(unitId.get(i));
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
//                        examAutoEvaluation.setEvaluationId(userId);
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("1");
                        examAutoEvaluation.setPeriod("2");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setDetails(year+"年"+unit+"下半年不完成上报青年民警思想分析");
                        *//*examAutoEvaluation.setUnit(unit);
                        examAutoEvaluation.setUnitId(id);*//*
                        String orgNameById = affairTwBaseService.findOrgNameById(id);
                        if ("1".equals(orgNameById)){
                            examAutoEvaluation.setEvaluationId("ff7f9fe2597b40429ded58f8b76a2f65");
                            examAutoEvaluation.setUnit("公安局团委");
                            examAutoEvaluation.setUnitId("9");
                        }else if("2".equals(orgNameById)){
                            examAutoEvaluation.setEvaluationId("28f59642a1e74d0588f0d515fe462775");
                            examAutoEvaluation.setUnit("南宁处团委");
                            examAutoEvaluation.setUnitId("33");
                        }else if("3".equals(orgNameById)){
                            examAutoEvaluation.setEvaluationId("11d94fe57ede47a9bae4bffa36af487c");
                            examAutoEvaluation.setUnit("柳州处团委");
                            examAutoEvaluation.setUnitId("148");
                        }else if("4".equals(orgNameById)){
                            examAutoEvaluation.setEvaluationId("78d0e07ed2e14ca0b6c73e14c11f4d55");
                            examAutoEvaluation.setUnit("北海处团委");
                            examAutoEvaluation.setUnitId("268");
                        }
                        examAutoEvaluation.setRemark("每少一次");
                        examAutoEvaluation.setAssess("团委");
                        examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考核扣分标准(业务部分26项)");
                        examAutoEvaluation.setModelId("a959d8865ea74bf68cf818adc710c75c");
                        examAutoEvaluation.setOption("每半年不完成青年民警思想分析的");
                        examAutoEvaluation.setOptionId("669da6ff639a457d880cf2ca9de59088");
                        examAutoEvaluation.setScore("3");
                        examAutoEvaluation.setTime(date);
                        examAutoEvaluation.setHappenTime(date);
                        examAutoEvaluation.setCheckTime(date);
                        examAutoEvaluation.setRowNum("677");
                        examAutoEvaluation.setFromSys("智慧政工");
                        this.save(examAutoEvaluation);
                    }
                }
            }
        });*/
    }

    /**
     * 工作信息
     */
    public void juChuWorkInfo(String time, String year) {
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        List<String> allUnit = new ArrayList<>();
//        allUnit.add("116e598c93ce48c2844925c2d01a73cd");
        allUnit.add("c9071b9148e540f8805563167febb5b5");
        allUnit.add("e9dcd22e65874cceb545589f597ebfcd");
        allUnit.add("1a684b36a7404c71b23aabf052cba815");
        allUnit.forEach(item -> {
            String unit = "";
            String id = "";
            String unitId = "";
            String userId = "";
            switch (item) {
               /* case "116e598c93ce48c2844925c2d01a73cd":
                    unit = "公安局团委";
                    unitId = "9";
                    userId = "ff7f9fe2597b40429ded58f8b76a2f65";
                    id = "116e598c93ce48c2844925c2d01a73cd";
                    break;*/
                case "c9071b9148e540f8805563167febb5b5":
                    unit = "南宁处团委";
                    unitId = "33";
                    userId = "28f59642a1e74d0588f0d515fe462775";
                    id = "c9071b9148e540f8805563167febb5b5";
                    break;
                case "e9dcd22e65874cceb545589f597ebfcd":
                    unit = "柳州处团委";
                    unitId = "148";
                    userId = "11d94fe57ede47a9bae4bffa36af487c";
                    id = "e9dcd22e65874cceb545589f597ebfcd";
                    break;
                case "1a684b36a7404c71b23aabf052cba815":
                    unit = "北海处团委";
                    unitId = "268";
                    userId = "78d0e07ed2e14ca0b6c73e14c11f4d55";
                    id = "1a684b36a7404c71b23aabf052cba815";
                    break;
                default:
                    break;
            }
            if (time.equals("01-01")) {
                String lastYear = String.valueOf(Integer.valueOf(year) - 1);
//                String startTime = lastYear + "-12" + "-26";
                String startTime = lastYear + "-07" + "-01";
//                String endTime = year + "-06" + "-25";
                String endTime = lastYear + "-12" + "-31";
                int count = affairWorkInfoService.getCount(id, startTime, endTime, year);
                if (count < 1) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("1");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(lastYear);
                    examAutoEvaluation.setDetails(lastYear+"年"+unit+"关工委工作活动下半年未上报信息总结");
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setRemark("没缺一次");
                    examAutoEvaluation.setAssess("团委");
                    examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考核扣分标准(业务部分26项)");
                    examAutoEvaluation.setModelId("a959d8865ea74bf68cf818adc710c75c");
                    examAutoEvaluation.setOption("未联合本单位关工委开展活动的（半年1次）");
                    examAutoEvaluation.setOptionId("103d3a9416bc4a6e9abbd0eb30c1da82");
                    examAutoEvaluation.setScore("2");
                    examAutoEvaluation.setTime(date);
                    examAutoEvaluation.setHappenTime(date);
                    examAutoEvaluation.setCheckTime(date);
                    examAutoEvaluation.setRowNum("688");
                    examAutoEvaluation.setFromSys("智慧政工");

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"关工委工作活动");
                    this.save(examAutoEvaluation);
                }
            } else if (time.equals("07-01")) {
                String startTime = year + "-01" + "-01";
                String endTime = year + "-06" + "-30";
                int count = affairWorkInfoService.getCount(id, startTime, endTime, year);
                if (count < 1) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("1");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(year+"年"+unit+"关工委工作活动上半年未上报信息总结");
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setRemark("没缺一次");
                    examAutoEvaluation.setAssess("团委");
                    examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考核扣分标准(业务部分26项)");
                    examAutoEvaluation.setModelId("a959d8865ea74bf68cf818adc710c75c");
                    examAutoEvaluation.setOption("未联合本单位关工委开展活动的（半年1次）");
                    examAutoEvaluation.setOptionId("103d3a9416bc4a6e9abbd0eb30c1da82");
                    examAutoEvaluation.setScore("2");
                    examAutoEvaluation.setTime(date);
                    examAutoEvaluation.setHappenTime(date);
                    examAutoEvaluation.setCheckTime(date);
                    examAutoEvaluation.setRowNum("688");
                    examAutoEvaluation.setFromSys("智慧政工");

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"关工委工作活动");
                    this.save(examAutoEvaluation);
                }
            }
        });
    }

    /**
     * 工作总结
     */
    public void juChuWorkSummary(String time, String year) {
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        List<String> allUnit = new ArrayList<>();
//        allUnit.add("116e598c93ce48c2844925c2d01a73cd");
        allUnit.add("c9071b9148e540f8805563167febb5b5");
        allUnit.add("e9dcd22e65874cceb545589f597ebfcd");
        allUnit.add("1a684b36a7404c71b23aabf052cba815");
        allUnit.forEach(item -> {
            String unit = "";
            String id = "";
            String unitId = "";
            String userId = "";
            switch (item) {
               /* case "116e598c93ce48c2844925c2d01a73cd":
                    unit = "公安局团委";
                    unitId = "9";
                    userId = "ff7f9fe2597b40429ded58f8b76a2f65";
                    id = "116e598c93ce48c2844925c2d01a73cd";
                    break;*/
                case "c9071b9148e540f8805563167febb5b5":
                    unit = "南宁处团委";
                    unitId = "33";
                    userId = "28f59642a1e74d0588f0d515fe462775";
                    id = "c9071b9148e540f8805563167febb5b5";
                    break;
                case "e9dcd22e65874cceb545589f597ebfcd":
                    unit = "柳州处团委";
                    unitId = "148";
                    userId = "11d94fe57ede47a9bae4bffa36af487c";
                    id = "e9dcd22e65874cceb545589f597ebfcd";
                    break;
                case "1a684b36a7404c71b23aabf052cba815":
                    unit = "北海处团委";
                    unitId = "268";
                    userId = "78d0e07ed2e14ca0b6c73e14c11f4d55";
                    id = "1a684b36a7404c71b23aabf052cba815";
                    break;
                default:
                    break;
            }
            if (time.equals("01-01")) {
                String lastYear = String.valueOf(Integer.valueOf(year) - 1);
                String startTime = lastYear + "-07" + "-01";
                String endTime = lastYear + "-12" + "-31";
                int count = affairWorkSummaryService.getCount(id, startTime, endTime, year);
                if (count < 1) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("1");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(lastYear);
                    examAutoEvaluation.setDetails(lastYear+"年"+unit+"关工委工作活动下半年未上报信息总结");
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setRemark("没缺一次");
                    examAutoEvaluation.setAssess("团委");
                    examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考核扣分标准(业务部分26项)");
                    examAutoEvaluation.setModelId("a959d8865ea74bf68cf818adc710c75c");
                    examAutoEvaluation.setOption("未联合本单位关工委开展活动的（半年1次）");
                    examAutoEvaluation.setOptionId("103d3a9416bc4a6e9abbd0eb30c1da82");
                    examAutoEvaluation.setScore("2");
                    examAutoEvaluation.setTime(date);
                    examAutoEvaluation.setHappenTime(date);
                    examAutoEvaluation.setCheckTime(date);
                    examAutoEvaluation.setRowNum("688");
                    examAutoEvaluation.setFromSys("智慧政工");
                    this.save(examAutoEvaluation);
                }
            } else if (time.equals("07-01")) {
                String startTime = year + "-01" + "-01";
                String endTime = year + "-06" + "-30";
                int count = affairWorkSummaryService.getCount(id, startTime, endTime, year);
                if (count < 1) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("1");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(year+"年"+unit+"关工委工作活动上半年未上报信息总结");
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setRemark("没缺一次");
                    examAutoEvaluation.setAssess("团委");
                    examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考核扣分标准(业务部分26项)");
                    examAutoEvaluation.setModelId("a959d8865ea74bf68cf818adc710c75c");
                    examAutoEvaluation.setOption("未联合本单位关工委开展活动的（半年1次）");
                    examAutoEvaluation.setOptionId("103d3a9416bc4a6e9abbd0eb30c1da82");
                    examAutoEvaluation.setScore(String.valueOf((2 - count) * 2));
                    examAutoEvaluation.setTime(date);
                    examAutoEvaluation.setHappenTime(date);
                    examAutoEvaluation.setCheckTime(date);
                    examAutoEvaluation.setRowNum("688");
                    examAutoEvaluation.setFromSys("智慧政工");
                    this.save(examAutoEvaluation);
                }
            }
        });
    }

    /**
     * 会员福利
     */
    public void juWelfareCondolencsYear(String year, String month) {
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        String lastYear = String.valueOf(Integer.valueOf(year) - 1);
        String startTime = lastYear + "-12" + "-11";
        String endTime = year + "-12" + "-10";
        List<AffairWelfareCondolences> allList = affairWelfareCondolencesService.allList(year, month, startTime, endTime);
        allList.forEach(item -> {
            if (StringUtils.isNotBlank(item.getUnitId())){
                if (item.getUnit().contains("公安局") && !item.getUnit().contains("大队")) {
                    if (item.getUnit().contains("工会") || item.getUnit().contains("团委")){
                        int count = affairWelfareCondolencesService.unitCount(startTime, endTime, item.getUnitId());
               /* DateTimeFormatter formatter = DateTimeFormat.forPattern("yyyy-MM-dd");
                DateTime end = formatter.parseDateTime(String.valueOf(item.getOccurDate()));
                DateTime start = formatter.parseDateTime(String.valueOf(item.getCreateDate()));
                int months = Months.monthsBetween(start, end).getMonths();*/
                        Calendar start = Calendar.getInstance();
                        Calendar end = Calendar.getInstance();
                        start.setTime(item.getCreateDate());
                        end.setTime(item.getOccurDate());
                        int result = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);
                        int months = (end.get(Calendar.YEAR) - start.get(Calendar.YEAR)) * 12;
                        String userId = "";
                        String code = "";
                        if (item.getType().equals("1") || item.getType().equals("2") || item.getType().equals("3") || item.getType().equals("4") || item.getType().equals("5") || item.getType().equals("7")) {
                            if (Math.abs(months + result) > 3) {
                                if (StringUtils.isNotEmpty(item.getUnitId())) {
                                    code = officeService.findCodeByUnitId(item.getUnitId());
                                    userId = officeService.findUserIdByCode(code);
                                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                    examAutoEvaluation.setEvaluationId(userId);
                                    examAutoEvaluation.setType("1");
                                    examAutoEvaluation.setEvalType("2");
                                    examAutoEvaluation.setPeriod("2");
                                    examAutoEvaluation.setYear(year);
                                    examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"会员福利、慰问工作等，如会员结婚、生育、住院等至发生之日起3个月内、退休等至发生之日起6个月未按规定在系统办理或不达到标准的，扣分。");
                                    examAutoEvaluation.setUnit(item.getUnit());
                                    examAutoEvaluation.setUnitId(item.getUnitId());
                                    examAutoEvaluation.setRemark("每次");
                                    examAutoEvaluation.setAssess("机关考评小组");
                                    examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队年度绩效考核公共扣分标准");
                                    examAutoEvaluation.setModelId("653c088f3e754adcaa659a3706d304b9");
                                    examAutoEvaluation.setOption("各平台数据未及时录入的");
                                    examAutoEvaluation.setOptionId("f7b968cead674bb2a553602db7f490f4");
                                    examAutoEvaluation.setScore(String.valueOf(0.5 * count));
                                    examAutoEvaluation.setTime(date);
                                    examAutoEvaluation.setHappenTime(date);
                                    examAutoEvaluation.setCheckTime(date);
                                    examAutoEvaluation.setRowNum("34");
                                    examAutoEvaluation.setFromSys("智慧政工");
                                    //this.deleteInfoByMore(examAutoEvaluation);
                                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"会员福利慰问工作");
                                    /*处理考评标准一样，汇总*/
                                    ExamAutoEvaluation old = this.getInfoByMore(examAutoEvaluation);
                                    if(old!=null){
                                        String oldDetails = old.getDetails();
                                        Double oldScore;
                                        try {
                                            oldScore = Double.valueOf(old.getScore());
                                        }catch (Exception e){
                                            e.printStackTrace();
                                            oldScore = 0.0;
                                        }
                                        this.deleteInfoByMore(old);
                                        examAutoEvaluation.setScore(String.valueOf(oldScore+(0.5 * count)));
                                        examAutoEvaluation.setDetails(oldDetails+"<br>"+year+"年"+item.getUnit()+"会员福利、慰问工作等，如会员结婚、生育、住院等至发生之日起3个月内、退休等至发生之日起6个月未按规定在系统办理或不达到标准的，扣分。");
                                    }
                                    this.save(examAutoEvaluation);
                                }
                            }
                        } else {
                            if (Math.abs(months + result) > 6) {
                                if (StringUtils.isNotEmpty(item.getUnitId())) {
                                    code = officeService.findCodeByUnitId(item.getUnitId());
                                    userId = officeService.findUserIdByCode(code);
                                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                    examAutoEvaluation.setEvaluationId(userId);
                                    examAutoEvaluation.setType("1");
                                    examAutoEvaluation.setEvalType("2");
                                    examAutoEvaluation.setPeriod("2");
                                    examAutoEvaluation.setYear(year);
                                    examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"会员福利、慰问工作等，如会员结婚、生育、住院等至发生之日起3个月内、退休等至发生之日起6个月未按规定在系统办理或不达到标准的，扣分。");
                                    examAutoEvaluation.setUnit(item.getUnit());
                                    examAutoEvaluation.setUnitId(item.getUnitId());
                                    examAutoEvaluation.setRemark("每次");
                                    examAutoEvaluation.setAssess("机关考评小组");
                                    examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队年度绩效考核公共扣分标准");
                                    examAutoEvaluation.setModelId("653c088f3e754adcaa659a3706d304b9");
                                    examAutoEvaluation.setOption("各平台数据未及时录入的");
                                    examAutoEvaluation.setOptionId("f7b968cead674bb2a553602db7f490f4");
                                    examAutoEvaluation.setScore(String.valueOf(0.5 * count));
                                    examAutoEvaluation.setTime(date);
                                    examAutoEvaluation.setHappenTime(date);
                                    examAutoEvaluation.setCheckTime(date);
                                    examAutoEvaluation.setRowNum("34");
                                    examAutoEvaluation.setFromSys("智慧政工");
                                    //this.deleteInfoByMore(examAutoEvaluation);
                                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"会员福利慰问工作");
                                    /*处理考评标准一样，汇总*/
                                    ExamAutoEvaluation old = this.getInfoByMore(examAutoEvaluation);
                                    if(old!=null){
                                        String oldDetails = old.getDetails();
                                        Double oldScore;
                                        try {
                                            oldScore = Double.valueOf(old.getScore());
                                        }catch (Exception e){
                                            e.printStackTrace();
                                            oldScore = 0.0;
                                        }
                                        this.deleteInfoByMore(old);
                                        examAutoEvaluation.setScore(String.valueOf(oldScore+(0.5 * count)));
                                        examAutoEvaluation.setDetails(oldDetails+"<br>"+year+"年"+item.getUnit()+"会员福利、慰问工作等，如会员结婚、生育、住院等至发生之日起3个月内、退休等至发生之日起6个月未按规定在系统办理或不达到标准的，扣分。");
                                    }
                                    this.save(examAutoEvaluation);
                                }
                            }
                        }
                    }

                }
            }
        });
    }

    public void chuWelfareCondolencsYear(String year, String month) {
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        String lastYear = String.valueOf(Integer.valueOf(year) - 1);
        String startTime = lastYear + "-12" + "-11";
        String endTime = year + "-12" + "-10";
        List<AffairWelfareCondolences> allList = affairWelfareCondolencesService.allList(year, month, startTime, endTime);
        allList.forEach(item -> {
            if (StringUtils.isNotBlank(item.getUnitId())){
                if (item.getUnit().contains("南宁处")) {
                    if ((item.getUnit().contains("派出所") == false) && (item.getUnit().contains("大队") == false)) {
                            int count = affairWelfareCondolencesService.unitCount(startTime, endTime, item.getUnitId());
                            Calendar start = Calendar.getInstance();
                            Calendar end = Calendar.getInstance();
                            start.setTime(item.getCreateDate());
                            end.setTime(item.getOccurDate());
                            int result = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);
                            int months = (end.get(Calendar.YEAR) - start.get(Calendar.YEAR)) * 12;
                            String userId = "";
                            String code = "";
                            if (item.getType().equals("4") || item.getType().equals("5") || item.getType().equals("6")) {
                                if (Math.abs(months + result) > 3) {
                                    if (StringUtils.isNotEmpty(item.getUnitId())) {
                                        code = officeService.findCodeByUnitId(item.getUnitId());
                                        userId = officeService.findUserIdByCode(code);
                                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                        examAutoEvaluation.setEvaluationId(userId);
                                        examAutoEvaluation.setType("1");
                                        examAutoEvaluation.setEvalType("4");
                                        examAutoEvaluation.setPeriod("2");
                                        examAutoEvaluation.setYear(year);
                                        examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"会员福利、慰问工作等，如会员结婚、生育、住院等至发生之日起3个月内、退休等至发生之日起6个月未按规定在系统办理或不达到标准的，扣分。");
                                        examAutoEvaluation.setUnit(item.getUnit());
                                        examAutoEvaluation.setUnitId(item.getUnitId());
                                        examAutoEvaluation.setRemark("每次");
                                        examAutoEvaluation.setAssess("公安处相关部门");
                                        examAutoEvaluation.setModel("2020年年度南宁公安处对全处各部门公共扣分标准");
                                        examAutoEvaluation.setModelId("5587177f089e4ea8926b2feca9b3bf63");
                                        examAutoEvaluation.setOption("各平台数据未及时录入的");
                                        examAutoEvaluation.setOptionId("ffd58d706d7749929180cb117ef6c864");
                                        examAutoEvaluation.setScore(String.valueOf(0.5 * count));
                                        examAutoEvaluation.setTime(date);
                                        examAutoEvaluation.setHappenTime(date);
                                        examAutoEvaluation.setCheckTime(date);
                                        examAutoEvaluation.setRowNum("61");
                                        examAutoEvaluation.setFromSys("智慧政工");
                                        //this.deleteInfoByMore(examAutoEvaluation);
                                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","会员福利慰问工作3月");
                                        this.save(examAutoEvaluation);
                                    }
                                }
                            } else if(item.getType().equals("2") || item.getType().equals("3")){
                                if (Math.abs(months + result) > 6) {
                                    if (StringUtils.isNotEmpty(item.getUnitId())) {
                                        code = officeService.findCodeByUnitId(item.getUnitId());
                                        userId = officeService.findUserIdByCode(code);
                                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                        examAutoEvaluation.setEvaluationId(userId);
                                        examAutoEvaluation.setType("1");
                                        examAutoEvaluation.setEvalType("4");
                                        examAutoEvaluation.setPeriod("2");
                                        examAutoEvaluation.setYear(year);
                                        examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"会员福利、慰问工作等，如会员结婚、生育、住院等至发生之日起3个月内、退休等至发生之日起6个月未按规定在系统办理或不达到标准的，扣分。");
                                        examAutoEvaluation.setUnit(item.getUnit());
                                        examAutoEvaluation.setUnitId(item.getUnitId());
                                        examAutoEvaluation.setRemark("每次");
                                        examAutoEvaluation.setAssess("公安处相关部门");
                                        examAutoEvaluation.setModel("2020年年度南宁公安处对全处各部门公共扣分标准");
                                        examAutoEvaluation.setModelId("5587177f089e4ea8926b2feca9b3bf63");
                                        examAutoEvaluation.setOption("各平台数据未及时录入的");
                                        examAutoEvaluation.setOptionId("ffd58d706d7749929180cb117ef6c864");
                                        examAutoEvaluation.setScore(String.valueOf(0.5 * count));
                                        examAutoEvaluation.setTime(date);
                                        examAutoEvaluation.setHappenTime(date);
                                        examAutoEvaluation.setCheckTime(date);
                                        examAutoEvaluation.setRowNum("61");
                                        examAutoEvaluation.setFromSys("智慧政工");
                                        //this.deleteInfoByMore(examAutoEvaluation);
                                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","会员福利慰问工作6月");
                                        this.save(examAutoEvaluation);
                                    }
                                }
                            }
                    }
                } else if (item.getUnit().contains("柳州处")) {
                    if ((item.getUnit().contains("派出所") == false) && (item.getUnit().contains("大队") == false)) {
                            int count = affairWelfareCondolencesService.unitCount(startTime, endTime, item.getUnitId());
                            Calendar start = Calendar.getInstance();
                            Calendar end = Calendar.getInstance();
                            start.setTime(item.getCreateDate());
                            end.setTime(item.getOccurDate());
                            int result = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);
                            int months = (end.get(Calendar.YEAR) - start.get(Calendar.YEAR)) * 12;
                            String userId = "";
                            String code = "";
                            if (item.getType().equals("4") || item.getType().equals("5") || item.getType().equals("6")) {
                                if (Math.abs(months + result) > 3) {
                                    if (StringUtils.isNotEmpty(item.getUnitId())) {
                                        code = officeService.findCodeByUnitId(item.getUnitId());
                                        userId = officeService.findUserIdByCode(code);
                                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                        examAutoEvaluation.setEvaluationId(userId);
                                        examAutoEvaluation.setType("1");
                                        examAutoEvaluation.setEvalType("4");
                                        examAutoEvaluation.setPeriod("2");
                                        examAutoEvaluation.setYear(year);
                                        examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"会员福利、慰问工作等，如会员结婚、生育、住院等至发生之日起3个月内、退休等至发生之日起6个月未按规定在系统办理或不达到标准的，扣分。");
                                        examAutoEvaluation.setUnit(item.getUnit());
                                        examAutoEvaluation.setUnitId(item.getUnitId());
                                        examAutoEvaluation.setRemark("每次");
                                        examAutoEvaluation.setAssess("绩效办及相关部门");
                                        examAutoEvaluation.setModel("2020年年度柳州处对单位（部门）绩效考评公共扣分标准");
                                        examAutoEvaluation.setModelId("bed0dbae608b43879d002a52258a9f34");
                                        examAutoEvaluation.setOption("各平台数据未及时录入的");
                                        examAutoEvaluation.setOptionId("d6387398d93940129d769446488c612b");
                                        examAutoEvaluation.setScore(String.valueOf(0.5 * count));
                                        examAutoEvaluation.setTime(date);
                                        examAutoEvaluation.setHappenTime(date);
                                        examAutoEvaluation.setCheckTime(date);
                                        examAutoEvaluation.setRowNum("61");
                                        examAutoEvaluation.setFromSys("智慧政工");
                                        //this.deleteInfoByMore(examAutoEvaluation);
                                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","会员福利慰问工作3月");
                                        this.save(examAutoEvaluation);
                                    }
                                }
                            } else if(item.getType().equals("2") || item.getType().equals("3")){
                                if (Math.abs(months + result) > 6) {
                                    if (StringUtils.isNotEmpty(item.getUnitId())) {
                                        code = officeService.findCodeByUnitId(item.getUnitId());
                                        userId = officeService.findUserIdByCode(code);
                                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                        examAutoEvaluation.setEvaluationId(userId);
                                        examAutoEvaluation.setType("1");
                                        examAutoEvaluation.setEvalType("4");
                                        examAutoEvaluation.setPeriod("2");
                                        examAutoEvaluation.setYear(year);
                                        examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"会员福利、慰问工作等，如会员结婚、生育、住院等至发生之日起3个月内、退休等至发生之日起6个月未按规定在系统办理或不达到标准的，扣分。");
                                        examAutoEvaluation.setUnit(item.getUnit());
                                        examAutoEvaluation.setUnitId(item.getUnitId());
                                        examAutoEvaluation.setRemark("每次");
                                        examAutoEvaluation.setAssess("绩效办及相关部门");
                                        examAutoEvaluation.setModel("2020年年度柳州处对单位（部门）绩效考评公共扣分标准");
                                        examAutoEvaluation.setModelId("bed0dbae608b43879d002a52258a9f34");
                                        examAutoEvaluation.setOption("各平台数据未及时录入的");
                                        examAutoEvaluation.setOptionId("d6387398d93940129d769446488c612b");
                                        examAutoEvaluation.setScore(String.valueOf(0.5 * count));
                                        examAutoEvaluation.setTime(date);
                                        examAutoEvaluation.setHappenTime(date);
                                        examAutoEvaluation.setCheckTime(date);
                                        examAutoEvaluation.setRowNum("34");
                                        examAutoEvaluation.setFromSys("智慧政工");
                                        //this.deleteInfoByMore(examAutoEvaluation);
                                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","会员福利慰问工作6月");
                                        this.save(examAutoEvaluation);
                                    }
                                }
                            }
                    }
                } else if (item.getUnit().contains("北海处")) {
                    if ((item.getUnit().contains("派出所") == false) && (item.getUnit().contains("大队") == false)) {
                            int count = affairWelfareCondolencesService.unitCount(startTime, endTime, item.getUnitId());
                            Calendar start = Calendar.getInstance();
                            Calendar end = Calendar.getInstance();
                            start.setTime(item.getCreateDate());
                            end.setTime(item.getOccurDate());
                            int result = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);
                            int months = (end.get(Calendar.YEAR) - start.get(Calendar.YEAR)) * 12;
                            String userId = "";
                            String code = "";
                            if (item.getType().equals("4") || item.getType().equals("5") || item.getType().equals("6")) {
                                if (Math.abs(months + result) > 3) {
                                    if (StringUtils.isNotEmpty(item.getUnitId())) {
                                        code = officeService.findCodeByUnitId(item.getUnitId());
                                        userId = officeService.findUserIdByCode(code);
                                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                        examAutoEvaluation.setEvaluationId(userId);
                                        examAutoEvaluation.setType("1");
                                        examAutoEvaluation.setEvalType("4");
                                        examAutoEvaluation.setPeriod("2");
                                        examAutoEvaluation.setYear(year);
                                        examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"会员福利、慰问工作等，如会员结婚、生育、住院等至发生之日起3个月内、退休等至发生之日起6个月未按规定在系统办理或不达到标准的，扣分。");
                                        examAutoEvaluation.setUnit(item.getUnit());
                                        examAutoEvaluation.setUnitId(item.getUnitId());
                                        examAutoEvaluation.setRemark("每次");
                                        examAutoEvaluation.setAssess("公安处相关部门");
                                        examAutoEvaluation.setModel("2020年年度北海处对机关科室、支队绩效考评公共扣分标准");
                                        examAutoEvaluation.setModelId("260748e24b19426ba5d8bd632cca3a0c");
                                        examAutoEvaluation.setOption("各平台数据未及时录入的");
                                        examAutoEvaluation.setOptionId("e6c5c182fbee48d4bc0f76519e57db6a");
                                        examAutoEvaluation.setScore(String.valueOf(0.5 * count));
                                        examAutoEvaluation.setTime(date);
                                        examAutoEvaluation.setHappenTime(date);
                                        examAutoEvaluation.setCheckTime(date);
                                        examAutoEvaluation.setRowNum("61");
                                        examAutoEvaluation.setFromSys("智慧政工");
                                        //this.deleteInfoByMore(examAutoEvaluation);
                                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","会员福利慰问工作3月");
                                        this.save(examAutoEvaluation);
                                    }
                                }
                            } else if(item.getType().equals("2") || item.getType().equals("3")){
                                if (Math.abs(months + result) > 6) {
                                    if (StringUtils.isNotEmpty(item.getUnitId())) {
                                        code = officeService.findCodeByUnitId(item.getUnitId());
                                        userId = officeService.findUserIdByCode(code);
                                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                        examAutoEvaluation.setEvaluationId(userId);
                                        examAutoEvaluation.setType("1");
                                        examAutoEvaluation.setEvalType("4");
                                        examAutoEvaluation.setPeriod("2");
                                        examAutoEvaluation.setYear(year);
                                        examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"会员福利、慰问工作等，如会员结婚、生育、住院等至发生之日起3个月内、退休等至发生之日起6个月未按规定在系统办理或不达到标准的，扣分。");
                                        examAutoEvaluation.setUnit(item.getUnit());
                                        examAutoEvaluation.setUnitId(item.getUnitId());
                                        examAutoEvaluation.setRemark("每次");
                                        examAutoEvaluation.setAssess("公安处相关部门");
                                        examAutoEvaluation.setModel("2020年年度北海处对机关科室、支队绩效考评公共扣分标准");
                                        examAutoEvaluation.setModelId("260748e24b19426ba5d8bd632cca3a0c");
                                        examAutoEvaluation.setOption("各平台数据未及时录入的");
                                        examAutoEvaluation.setOptionId("e6c5c182fbee48d4bc0f76519e57db6a");
                                        examAutoEvaluation.setScore(String.valueOf(0.5 * count));
                                        examAutoEvaluation.setTime(date);
                                        examAutoEvaluation.setHappenTime(date);
                                        examAutoEvaluation.setCheckTime(date);
                                        examAutoEvaluation.setRowNum("61");
                                        examAutoEvaluation.setFromSys("智慧政工");
                                        //this.deleteInfoByMore(examAutoEvaluation);
                                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","会员福利慰问工作6月");
                                        this.save(examAutoEvaluation);
                                    }
                                }
                            }
                    }
                }
            }
        });
    }

    public void chuWelfareCondolencsMonth(String year, String month) {
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        String startTime = null;
        String endTime = null;
        if("01".equals(month)){
            String lastYear = String.valueOf(Integer.valueOf(year) - 1);
//            startTime = lastYear + "-12" + "-26";
            startTime = year + month + "-01";
            endTime = year + "-" + month + "-31";
        }else{
            String lastMonth = String.valueOf(Integer.valueOf(month) - 1);
//            startTime = year + "-" + lastMonth + "-26";
            startTime = year + "-" + month + "-01";
            endTime = year + "-" + month + "-31";
        }
        List<AffairWelfareCondolences> allList = affairWelfareCondolencesService.allList(year, month, startTime, endTime);
        String startDate = startTime;
        String endDate = endTime;
        allList.forEach(item -> {
            if (StringUtils.isNotBlank(item.getUnitId())){
                if (item.getUnit().contains("南宁处")) {
                    if ((item.getUnit().contains("派出所") == false) && (item.getUnit().contains("大队") == false)) {
                            int count = affairWelfareCondolencesService.unitCount(startDate, endDate, item.getUnitId());
                            Calendar start = Calendar.getInstance();
                            Calendar end = Calendar.getInstance();
                            start.setTime(item.getCreateDate());
                            end.setTime(item.getOccurDate());
                            int result = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);
                            int months = (end.get(Calendar.YEAR) - start.get(Calendar.YEAR)) * 12;
                            String userId = "";
                            String code = "";
                            if ( item.getType().equals("4") || item.getType().equals("5") || item.getType().equals("6")) {
                                if (Math.abs(months + result) > 3 ) {
                                    if (StringUtils.isNotEmpty(item.getUnitId())) {
                                        code = officeService.findCodeByUnitId(item.getUnitId());
                                        userId = officeService.findUserIdByCode(code);
                                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                        examAutoEvaluation.setEvaluationId(userId);
                                        examAutoEvaluation.setType("1");
                                        examAutoEvaluation.setEvalType("4");
                                        examAutoEvaluation.setPeriod("1");
                                        examAutoEvaluation.setYear(year);
                                        examAutoEvaluation.setMonth(month);
                                        examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"会员福利、慰问工作等，如会员结婚、生育、住院等至发生之日起3个月内、退休等至发生之日起6个月未按规定在系统办理或不达到标准的，扣分。");
                                        examAutoEvaluation.setUnit(item.getUnit());
                                        examAutoEvaluation.setUnitId(item.getUnitId());
                                        examAutoEvaluation.setRemark("每次");
                                        examAutoEvaluation.setAssess("绩效办及相关部门");
                                        examAutoEvaluation.setModel("2020年月度南宁公安处对全处各部门公共扣分标准");
                                        examAutoEvaluation.setModelId("691f98a054654bfc9ce3f6f85b7fe4a6");
                                        examAutoEvaluation.setOption("各平台数据未及时录入的");
                                        examAutoEvaluation.setOptionId("c7e09dee2924443da984f010b6eabf1f");
                                        examAutoEvaluation.setScore(String.valueOf(1 * count));
                                        examAutoEvaluation.setTime(date);
                                        examAutoEvaluation.setHappenTime(date);
                                        examAutoEvaluation.setCheckTime(date);
                                        examAutoEvaluation.setRowNum("57");
                                        examAutoEvaluation.setFromSys("智慧政工");
//                                        this.deleteInfoByMore(examAutoEvaluation);
                                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","会员福利慰问工作3月");
                                        this.save(examAutoEvaluation);
                                    }
                                }
                            } else if(item.getType().equals("2") || item.getType().equals("3")){
                                if (Math.abs(months + result) > 6) {
                                    if (StringUtils.isNotEmpty(item.getUnitId())) {
                                        code = officeService.findCodeByUnitId(item.getUnitId());
                                        userId = officeService.findUserIdByCode(code);
                                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                        examAutoEvaluation.setEvaluationId(userId);
                                        examAutoEvaluation.setType("1");
                                        examAutoEvaluation.setEvalType("4");
                                        examAutoEvaluation.setPeriod("1");
                                        examAutoEvaluation.setYear(year);
                                        examAutoEvaluation.setMonth(month);
                                        examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"会员福利、慰问工作等，如会员结婚、生育、住院等至发生之日起3个月内、退休等至发生之日起6个月未按规定在系统办理或不达到标准的，扣分。");
                                        examAutoEvaluation.setUnit(item.getUnit());
                                        examAutoEvaluation.setUnitId(item.getUnitId());
                                        examAutoEvaluation.setRemark("每次");
                                        examAutoEvaluation.setAssess("绩效办及相关部门");
                                        examAutoEvaluation.setModel("2020年月度南宁公安处对全处各部门公共扣分标准");
                                        examAutoEvaluation.setModelId("691f98a054654bfc9ce3f6f85b7fe4a6");
                                        examAutoEvaluation.setOption("各平台数据未及时录入的");
                                        examAutoEvaluation.setOptionId("c7e09dee2924443da984f010b6eabf1f");
                                        examAutoEvaluation.setScore(String.valueOf(1 * count));
                                        examAutoEvaluation.setTime(date);
                                        examAutoEvaluation.setHappenTime(date);
                                        examAutoEvaluation.setCheckTime(date);
                                        examAutoEvaluation.setRowNum("57");
                                        examAutoEvaluation.setFromSys("智慧政工");
//                                        this.deleteInfoByMore(examAutoEvaluation);
                                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","会员福利慰问工作6月");
                                        this.save(examAutoEvaluation);
                                    }
                                }
                            }
                    }
                } else if (item.getUnit().contains("柳州处")) {
                    if ((item.getUnit().contains("派出所") == false) && (item.getUnit().contains("大队") == false)) {
                            int count = affairWelfareCondolencesService.unitCount(startDate, endDate, item.getUnitId());
                            Calendar start = Calendar.getInstance();
                            Calendar end = Calendar.getInstance();
                            start.setTime(item.getCreateDate());
                            end.setTime(item.getOccurDate());
                            int result = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);
                            int months = (end.get(Calendar.YEAR) - start.get(Calendar.YEAR)) * 12;
                            String userId = "";
                            String code = "";
                            if (item.getType().equals("4") || item.getType().equals("5") || item.getType().equals("6")) {
                                if (Math.abs(months + result) > 3 ) {
                                    if (StringUtils.isNotEmpty(item.getUnitId())) {
                                        code = officeService.findCodeByUnitId(item.getUnitId());
                                        userId = officeService.findUserIdByCode(code);
                                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                        examAutoEvaluation.setEvaluationId(userId);
                                        examAutoEvaluation.setType("1");
                                        examAutoEvaluation.setEvalType("4");
                                        examAutoEvaluation.setPeriod("1");
                                        examAutoEvaluation.setYear(year);
                                        examAutoEvaluation.setMonth(month);
                                        examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"会员福利、慰问工作等，如会员结婚、生育、住院等至发生之日起3个月内、退休等至发生之日起6个月未按规定在系统办理或不达到标准的，扣分。");
                                        examAutoEvaluation.setUnit(item.getUnit());
                                        examAutoEvaluation.setUnitId(item.getUnitId());
                                        examAutoEvaluation.setRemark("每次");
                                        examAutoEvaluation.setAssess("绩效办及相关部门");
                                        examAutoEvaluation.setModel("2020年月度柳州处对单位（部门）绩效考评公共扣分标准");
                                        examAutoEvaluation.setModelId("ebe11e36d28f4c58a3088001c7ab7089");
                                        examAutoEvaluation.setOption("各平台数据未及时录入的");
                                        examAutoEvaluation.setOptionId("cc6a7cbbc93843deb35deb391bab7ab3");
                                        examAutoEvaluation.setScore(String.valueOf(1 * count));
                                        examAutoEvaluation.setTime(date);
                                        examAutoEvaluation.setHappenTime(date);
                                        examAutoEvaluation.setCheckTime(date);
                                        examAutoEvaluation.setRowNum("57");
                                        examAutoEvaluation.setFromSys("智慧政工");
                                        //this.deleteInfoByMore(examAutoEvaluation);
                                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","会员福利慰问工作3月");
                                        this.save(examAutoEvaluation);
                                    }
                                }
                            } else if(item.getType().equals("2") || item.getType().equals("3")){
                                if (Math.abs(months + result) > 6) {
                                    if (StringUtils.isNotEmpty(item.getUnitId())) {
                                        code = officeService.findCodeByUnitId(item.getUnitId());
                                        userId = officeService.findUserIdByCode(code);
                                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                        examAutoEvaluation.setEvaluationId(userId);
                                        examAutoEvaluation.setType("1");
                                        examAutoEvaluation.setEvalType("4");
                                        examAutoEvaluation.setPeriod("1");
                                        examAutoEvaluation.setYear(year);
                                        examAutoEvaluation.setMonth(month);
                                        examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"会员福利、慰问工作等，如会员结婚、生育、住院等至发生之日起3个月内、退休等至发生之日起6个月未按规定在系统办理或不达到标准的，扣分。");
                                        examAutoEvaluation.setUnit(item.getUnit());
                                        examAutoEvaluation.setUnitId(item.getUnitId());
                                        examAutoEvaluation.setRemark("每次");
                                        examAutoEvaluation.setAssess("绩效办及相关部门");
                                        examAutoEvaluation.setModel("2020年月度柳州处对单位（部门）绩效考评公共扣分标准");
                                        examAutoEvaluation.setModelId("ebe11e36d28f4c58a3088001c7ab7089");
                                        examAutoEvaluation.setOption("各平台数据未及时录入的");
                                        examAutoEvaluation.setOptionId("cc6a7cbbc93843deb35deb391bab7ab3");
                                        examAutoEvaluation.setScore(String.valueOf(1 * count));
                                        examAutoEvaluation.setTime(date);
                                        examAutoEvaluation.setHappenTime(date);
                                        examAutoEvaluation.setCheckTime(date);
                                        examAutoEvaluation.setRowNum("57");
                                        examAutoEvaluation.setFromSys("智慧政工");
                                        //this.deleteInfoByMore(examAutoEvaluation);
                                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","会员福利慰问工作6月");
                                        this.save(examAutoEvaluation);
                                    }
                                }
                        }
                    }
                } else if (item.getUnit().contains("北海处")) {
                    if ((item.getUnit().contains("派出所") == false) && (item.getUnit().contains("大队") == false)) {
                            int count = affairWelfareCondolencesService.unitCount(startDate, endDate, item.getUnitId());
                            Calendar start = Calendar.getInstance();
                            Calendar end = Calendar.getInstance();
                            start.setTime(item.getCreateDate());
                            end.setTime(item.getOccurDate());
                            int result = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);
                            int months = (end.get(Calendar.YEAR) - start.get(Calendar.YEAR)) * 12;
                            String userId = "";
                            String code = "";
                            if (item.getType().equals("4") || item.getType().equals("5") || item.getType().equals("6")) {
                                if (Math.abs(months + result) > 3 ) {
                                    if (StringUtils.isNotEmpty(item.getUnitId())) {
                                        code = officeService.findCodeByUnitId(item.getUnitId());
                                        userId = officeService.findUserIdByCode(code);
                                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                        examAutoEvaluation.setEvaluationId(userId);
                                        examAutoEvaluation.setType("1");
                                        examAutoEvaluation.setEvalType("4");
                                        examAutoEvaluation.setPeriod("1");
                                        examAutoEvaluation.setYear(year);
                                        examAutoEvaluation.setMonth(month);
                                        examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"会员福利、慰问工作等，如会员结婚、生育、住院等至发生之日起3个月内、退休等至发生之日起6个月未按规定在系统办理或不达到标准的，扣分。");
                                        examAutoEvaluation.setUnit(item.getUnit());
                                        examAutoEvaluation.setUnitId(item.getUnitId());
                                        examAutoEvaluation.setRemark("每次");
                                        examAutoEvaluation.setAssess("绩效办及相关部门");
                                        examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队公共扣分标准");
                                        examAutoEvaluation.setModelId("053c03b372694ae2aaa42344d7e7f019");
                                        examAutoEvaluation.setOption("各平台数据未及时录入的");
                                        examAutoEvaluation.setOptionId("9ad3eafc782541e58cc215dc2981fc59");
                                        examAutoEvaluation.setScore(String.valueOf(1 * count));
                                        examAutoEvaluation.setTime(date);
                                        examAutoEvaluation.setHappenTime(date);
                                        examAutoEvaluation.setCheckTime(date);
                                        examAutoEvaluation.setRowNum("56");
                                        examAutoEvaluation.setFromSys("智慧政工");
                                        //this.deleteInfoByMore(examAutoEvaluation);
                                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","会员福利慰问工作3月");
                                        this.save(examAutoEvaluation);
                                    }
                                }
                            } else if(item.getType().equals("2") || item.getType().equals("3")){
                                if (Math.abs(months + result) > 6) {
                                    if (StringUtils.isNotEmpty(item.getUnitId())) {
                                        code = officeService.findCodeByUnitId(item.getUnitId());
                                        userId = officeService.findUserIdByCode(code);
                                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                        examAutoEvaluation.setEvaluationId(userId);
                                        examAutoEvaluation.setType("1");
                                        examAutoEvaluation.setEvalType("4");
                                        examAutoEvaluation.setPeriod("1");
                                        examAutoEvaluation.setYear(year);
                                        examAutoEvaluation.setMonth(month);
                                        examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"会员福利、慰问工作等，如会员结婚、生育、住院等至发生之日起3个月内、退休等至发生之日起6个月未按规定在系统办理或不达到标准的，扣分。");
                                        examAutoEvaluation.setUnit(item.getUnit());
                                        examAutoEvaluation.setUnitId(item.getUnitId());
                                        examAutoEvaluation.setRemark("每次");
                                        examAutoEvaluation.setAssess("绩效办及相关部门");
                                        examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队公共扣分标准");
                                        examAutoEvaluation.setModelId("053c03b372694ae2aaa42344d7e7f019");
                                        examAutoEvaluation.setOption("各平台数据未及时录入的");
                                        examAutoEvaluation.setOptionId("9ad3eafc782541e58cc215dc2981fc59");
                                        examAutoEvaluation.setScore(String.valueOf(1 * count));
                                        examAutoEvaluation.setTime(date);
                                        examAutoEvaluation.setHappenTime(date);
                                        examAutoEvaluation.setCheckTime(date);
                                        examAutoEvaluation.setRowNum("56");
                                        examAutoEvaluation.setFromSys("智慧政工");
                                        //this.deleteInfoByMore(examAutoEvaluation);
                                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","会员福利慰问工作6月");
                                        this.save(examAutoEvaluation);
                                    }
                                }
                            }
                    }
                }
            }
        });
    }

    public void suoWelfareCondolencsYear(String year, String month) {
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        String lastYear = String.valueOf(Integer.valueOf(year) - 1);
        String startTime = lastYear + "-12" + "-11";
        String endTime = year + "-12" + "-10";
        List<AffairWelfareCondolences> allList = affairWelfareCondolencesService.allList(year, month, startTime, endTime);
        allList.forEach(item -> {
            if (StringUtils.isNotBlank(item.getUnitId())){
                if (item.getUnit().contains("南宁处")) {
                    if (item.getUnit().contains("派出所") || item.getUnit().contains("大队")) {
                        int count = affairWelfareCondolencesService.unitCount(startTime, endTime, item.getUnitId());
                        Calendar start = Calendar.getInstance();
                        Calendar end = Calendar.getInstance();
                        start.setTime(item.getCreateDate());
                        end.setTime(item.getOccurDate());
                        int result = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);
                        int months = (end.get(Calendar.YEAR) - start.get(Calendar.YEAR)) * 12;
                        String userId = "";
                        String code = "";
                        if (item.getType().equals("4") || item.getType().equals("5") || item.getType().equals("6")) {
                            if (Math.abs(months + result) > 3 ) {
                                if (StringUtils.isNotEmpty(item.getUnitId())) {
                                    code = officeService.findCodeByUnitId(item.getUnitId());
                                    userId = officeService.findUserIdByCode(code);
                                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                    examAutoEvaluation.setEvaluationId(userId);
                                    examAutoEvaluation.setType("1");
                                    examAutoEvaluation.setEvalType("3");
                                    examAutoEvaluation.setPeriod("2");
                                    examAutoEvaluation.setYear(year);
                                    examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"会员福利、慰问工作等，如会员结婚、生育、住院等至发生之日起3个月内、退休等至发生之日起6个月未按规定在系统办理或不达到标准的，扣分。");
                                    examAutoEvaluation.setUnit(item.getUnit());
                                    examAutoEvaluation.setUnitId(item.getUnitId());
                                    examAutoEvaluation.setRemark("每次");
                                    examAutoEvaluation.setAssess("公安处相关部门");
                                    examAutoEvaluation.setModel("2020年度南宁公安处对全处各派出所公共扣分标准");
                                    examAutoEvaluation.setModelId("ff1f5d6ab7694f3db4e013fb01a13b9d");
                                    examAutoEvaluation.setOption("各平台数据未及时录入的");
                                    examAutoEvaluation.setOptionId("cdc3a3c4d6384b35bc0c86050b8ccb9c");
                                    examAutoEvaluation.setScore(String.valueOf(0.5 * count));
                                    examAutoEvaluation.setTime(date);
                                    examAutoEvaluation.setHappenTime(date);
                                    examAutoEvaluation.setCheckTime(date);
                                    examAutoEvaluation.setRowNum("61");
                                    examAutoEvaluation.setFromSys("智慧政工");
                                    //this.deleteInfoByMore(examAutoEvaluation);
                                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","会员福利慰问工作3月");
                                    this.save(examAutoEvaluation);
                                }
                            }
                        } else if(item.getType().equals("2") || item.getType().equals("3")){
                            if (Math.abs(months + result) > 6) {
                                if (StringUtils.isNotEmpty(item.getUnitId())) {
                                    code = officeService.findCodeByUnitId(item.getUnitId());
                                    userId = officeService.findUserIdByCode(code);
                                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                    examAutoEvaluation.setEvaluationId(userId);
                                    examAutoEvaluation.setType("1");
                                    examAutoEvaluation.setEvalType("3");
                                    examAutoEvaluation.setPeriod("2");
                                    examAutoEvaluation.setYear(year);
                                    examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"会员福利、慰问工作等，如会员结婚、生育、住院等至发生之日起3个月内、退休等至发生之日起6个月未按规定在系统办理或不达到标准的，扣分。");
                                    examAutoEvaluation.setUnit(item.getUnit());
                                    examAutoEvaluation.setUnitId(item.getUnitId());
                                    examAutoEvaluation.setRemark("每次");
                                    examAutoEvaluation.setAssess("公安处相关部门");
                                    examAutoEvaluation.setModel("2020年度南宁公安处对全处各派出所公共扣分标准");
                                    examAutoEvaluation.setModelId("ff1f5d6ab7694f3db4e013fb01a13b9d");
                                    examAutoEvaluation.setOption("各平台数据未及时录入的");
                                    examAutoEvaluation.setOptionId("cdc3a3c4d6384b35bc0c86050b8ccb9c");
                                    examAutoEvaluation.setScore(String.valueOf(0.5 * count));
                                    examAutoEvaluation.setTime(date);
                                    examAutoEvaluation.setHappenTime(date);
                                    examAutoEvaluation.setCheckTime(date);
                                    examAutoEvaluation.setRowNum("61");
                                    examAutoEvaluation.setFromSys("智慧政工");
                                    //this.deleteInfoByMore(examAutoEvaluation);
                                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","会员福利慰问工作6月");
                                    this.save(examAutoEvaluation);
                                }
                            }
                        }
                    }
                } else if (item.getUnit().contains("柳州处")) {
                    if (item.getUnit().contains("派出所") || item.getUnit().contains("大队")) {
                        int count = affairWelfareCondolencesService.unitCount(startTime, endTime, item.getUnitId());
                        Calendar start = Calendar.getInstance();
                        Calendar end = Calendar.getInstance();
                        start.setTime(item.getCreateDate());
                        end.setTime(item.getOccurDate());
                        int result = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);
                        int months = (end.get(Calendar.YEAR) - start.get(Calendar.YEAR)) * 12;
                        String userId = "";
                        String code = "";
                        if (item.getType().equals("4") || item.getType().equals("5") || item.getType().equals("6")) {
                            if (Math.abs(months + result) > 3 ) {
                                if (StringUtils.isNotEmpty(item.getUnitId())) {
                                    code = officeService.findCodeByUnitId(item.getUnitId());
                                    userId = officeService.findUserIdByCode(code);
                                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                    examAutoEvaluation.setEvaluationId(userId);
                                    examAutoEvaluation.setType("1");
                                    examAutoEvaluation.setEvalType("3");
                                    examAutoEvaluation.setPeriod("2");
                                    examAutoEvaluation.setYear(year);
                                    examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"会员福利、慰问工作等，如会员结婚、生育、住院等至发生之日起3个月内、退休等至发生之日起6个月未按规定在系统办理或不达到标准的，扣分。");
                                    examAutoEvaluation.setUnit(item.getUnit());
                                    examAutoEvaluation.setUnitId(item.getUnitId());
                                    examAutoEvaluation.setRemark("每次");
                                    examAutoEvaluation.setAssess("绩效办及相关部门");
                                    examAutoEvaluation.setModel("2020年年度柳州处对派出所绩效考评公共扣分标准");
                                    examAutoEvaluation.setModelId("8506c629ac9d4ecead9143bf40bd1cc7");
                                    examAutoEvaluation.setOption("各平台数据未及时录入的");
                                    examAutoEvaluation.setOptionId("37ae037b90fb41b39f97a4f250b6833a");
                                    examAutoEvaluation.setScore(String.valueOf(0.5 * count));
                                    examAutoEvaluation.setTime(date);
                                    examAutoEvaluation.setHappenTime(date);
                                    examAutoEvaluation.setCheckTime(date);
                                    examAutoEvaluation.setRowNum("61");
                                    examAutoEvaluation.setFromSys("智慧政工");
                                    //this.deleteInfoByMore(examAutoEvaluation);
                                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","会员福利慰问工作3月");
                                    this.save(examAutoEvaluation);
                                }
                            }
                        } else if(item.getType().equals("2") || item.getType().equals("3")){
                            if (Math.abs(months + result) > 6) {
                                if (StringUtils.isNotEmpty(item.getUnitId())) {
                                    code = officeService.findCodeByUnitId(item.getUnitId());
                                    userId = officeService.findUserIdByCode(code);
                                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                    examAutoEvaluation.setEvaluationId(userId);
                                    examAutoEvaluation.setType("1");
                                    examAutoEvaluation.setEvalType("3");
                                    examAutoEvaluation.setPeriod("2");
                                    examAutoEvaluation.setYear(year);
                                    examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"会员福利、慰问工作等，如会员结婚、生育、住院等至发生之日起3个月内、退休等至发生之日起6个月未按规定在系统办理或不达到标准的，扣分。");
                                    examAutoEvaluation.setUnit(item.getUnit());
                                    examAutoEvaluation.setUnitId(item.getUnitId());
                                    examAutoEvaluation.setRemark("每次");
                                    examAutoEvaluation.setAssess("绩效办及相关部门");
                                    examAutoEvaluation.setModel("2020年年度柳州处对派出所绩效考评公共扣分标准");
                                    examAutoEvaluation.setModelId("8506c629ac9d4ecead9143bf40bd1cc7");
                                    examAutoEvaluation.setOption("各平台数据未及时录入的");
                                    examAutoEvaluation.setOptionId("37ae037b90fb41b39f97a4f250b6833a");
                                    examAutoEvaluation.setScore(String.valueOf(0.5 * count));
                                    examAutoEvaluation.setTime(date);
                                    examAutoEvaluation.setHappenTime(date);
                                    examAutoEvaluation.setCheckTime(date);
                                    examAutoEvaluation.setRowNum("61");
                                    examAutoEvaluation.setFromSys("智慧政工");
                                    //this.deleteInfoByMore(examAutoEvaluation);
                                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","会员福利慰问工作6月");
                                    this.save(examAutoEvaluation);
                                }
                            }
                        }
                    }
                } else if (item.getUnit().contains("北海处")) {
                    if (item.getUnit().contains("派出所") || item.getUnit().contains("大队")) {
                        int count = affairWelfareCondolencesService.unitCount(startTime, endTime, item.getUnitId());
                        Calendar start = Calendar.getInstance();
                        Calendar end = Calendar.getInstance();
                        start.setTime(item.getCreateDate());
                        end.setTime(item.getOccurDate());
                        int result = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);
                        int months = (end.get(Calendar.YEAR) - start.get(Calendar.YEAR)) * 12;
                        String userId = "";
                        String code = "";
                        if (item.getType().equals("4") || item.getType().equals("5") || item.getType().equals("6")) {
                            if (Math.abs(months + result) > 3 ) {
                                if (StringUtils.isNotEmpty(item.getUnitId())) {
                                    code = officeService.findCodeByUnitId(item.getUnitId());
                                    userId = officeService.findUserIdByCode(code);
                                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                    examAutoEvaluation.setEvaluationId(userId);
                                    examAutoEvaluation.setType("1");
                                    examAutoEvaluation.setEvalType("3");
                                    examAutoEvaluation.setPeriod("2");
                                    examAutoEvaluation.setYear(year);
                                    examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"会员福利、慰问工作等，如会员结婚、生育、住院等至发生之日起3个月内、退休等至发生之日起6个月未按规定在系统办理或不达到标准的，扣分。");
                                    examAutoEvaluation.setUnit(item.getUnit());
                                    examAutoEvaluation.setUnitId(item.getUnitId());
                                    examAutoEvaluation.setRemark("每次");
                                    examAutoEvaluation.setAssess("公安处相关部门");
                                    examAutoEvaluation.setModel("2020年年度北海处对派出所、刑警三大队绩效考评公共扣分标准");
                                    examAutoEvaluation.setModelId("c25e5dbae97f46c683ad276ed33580c0");
                                    examAutoEvaluation.setOption("各平台数据未及时录入的");
                                    examAutoEvaluation.setOptionId("d9b8be4cb9bb4c738bf1b854e900494c");
                                    examAutoEvaluation.setScore(String.valueOf(0.5 * count));
                                    examAutoEvaluation.setTime(date);
                                    examAutoEvaluation.setHappenTime(date);
                                    examAutoEvaluation.setCheckTime(date);
                                    examAutoEvaluation.setRowNum("61");
                                    examAutoEvaluation.setFromSys("智慧政工");
                                    //this.deleteInfoByMore(examAutoEvaluation);
                                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","会员福利慰问工作3月");
                                    this.save(examAutoEvaluation);
                                }
                            }
                        } else if(item.getType().equals("2") || item.getType().equals("3")){
                            if (Math.abs(months + result) > 6) {
                                if (StringUtils.isNotEmpty(item.getUnitId())) {
                                    code = officeService.findCodeByUnitId(item.getUnitId());
                                    userId = officeService.findUserIdByCode(code);
                                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                    examAutoEvaluation.setEvaluationId(userId);
                                    examAutoEvaluation.setType("1");
                                    examAutoEvaluation.setEvalType("3");
                                    examAutoEvaluation.setPeriod("2");
                                    examAutoEvaluation.setYear(year);
                                    examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"会员福利、慰问工作等，如会员结婚、生育、住院等至发生之日起3个月内、退休等至发生之日起6个月未按规定在系统办理或不达到标准的，扣分。");
                                    examAutoEvaluation.setUnit(item.getUnit());
                                    examAutoEvaluation.setUnitId(item.getUnitId());
                                    examAutoEvaluation.setRemark("每次");
                                    examAutoEvaluation.setAssess("公安处相关部门");
                                    examAutoEvaluation.setModel("2020年年度北海处对派出所、刑警三大队绩效考评公共扣分标准");
                                    examAutoEvaluation.setModelId("c25e5dbae97f46c683ad276ed33580c0");
                                    examAutoEvaluation.setOption("各平台数据未及时录入的");
                                    examAutoEvaluation.setOptionId("d9b8be4cb9bb4c738bf1b854e900494c");
                                    examAutoEvaluation.setScore(String.valueOf(0.5 * count));
                                    examAutoEvaluation.setTime(date);
                                    examAutoEvaluation.setHappenTime(date);
                                    examAutoEvaluation.setCheckTime(date);
                                    examAutoEvaluation.setRowNum("61");
                                    examAutoEvaluation.setFromSys("智慧政工");
                                    //this.deleteInfoByMore(examAutoEvaluation);
                                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","会员福利慰问工作6月");
                                    this.save(examAutoEvaluation);
                                }
                            }
                        }
                    }
                }
            }
        });
    }

    public void suoWelfareCondolencsMonth(String year, String month) {
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        String startTime = null;
        String endTime = null;
        if("01".equals(month)){
            String lastYear = String.valueOf(Integer.valueOf(year) - 1);
//            startTime = lastYear + "-12" + "-26";
            startTime = year + month + "-01";
            endTime = year + "-" + month + "-31";
        }else{
            String lastMonth = String.valueOf(Integer.valueOf(month) - 1);
//            startTime = year + "-" + lastMonth + "-26";
            startTime = year + "-" + month + "-01";
            endTime = year + "-" + month + "-31";
        }
        List<AffairWelfareCondolences> allList = affairWelfareCondolencesService.allList(year, month, startTime, endTime);
        String startDate = startTime;
        String endDate = endTime;
        allList.forEach(item -> {
            if (item.getUnit().contains("南宁处")) {
                if (item.getUnit().contains("派出所") || item.getUnit().contains("大队")) {
                    int count = affairWelfareCondolencesService.unitCount(startDate, endDate, item.getUnitId());
                    Calendar start = Calendar.getInstance();
                    Calendar end = Calendar.getInstance();
                    start.setTime(item.getCreateDate());
                    end.setTime(item.getOccurDate());
                    int result = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);
                    int months = (end.get(Calendar.YEAR) - start.get(Calendar.YEAR)) * 12;
                    String userId = "";
                    String code = "";
                    if (item.getType().equals("4") || item.getType().equals("5") || item.getType().equals("6")) {
                        if (Math.abs(months + result) > 3) {
                            if (StringUtils.isNotEmpty(item.getUnitId())) {
                                code = officeService.findCodeByUnitId(item.getUnitId());
                                userId = officeService.findUserIdByCode(code);
                                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                examAutoEvaluation.setEvaluationId(userId);
                                examAutoEvaluation.setType("1");
                                examAutoEvaluation.setEvalType("3");
                                examAutoEvaluation.setPeriod("1");
                                examAutoEvaluation.setYear(year);
                                examAutoEvaluation.setMonth(month);
                                examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"会员福利、慰问工作等，如会员结婚、生育、住院等至发生之日起3个月内、退休等至发生之日起6个月未按规定在系统办理或不达到标准的，扣分。");
                                examAutoEvaluation.setUnit(item.getUnit());
                                examAutoEvaluation.setUnitId(item.getUnitId());
                                examAutoEvaluation.setRemark("每次");
                                examAutoEvaluation.setAssess("绩效办及相关部门");
                                examAutoEvaluation.setModel("2020年月度南宁公安处对全处各派出所公共扣分标准");
                                examAutoEvaluation.setModelId("0fc0af711a6e41afb066ce77fda210e5");
                                examAutoEvaluation.setOption("各平台数据未及时录入的");
                                examAutoEvaluation.setOptionId("9aaaa783f5b04f2bbd2363e38156a02c");
                                examAutoEvaluation.setScore(String.valueOf(1 * count));
                                examAutoEvaluation.setTime(date);
                                examAutoEvaluation.setHappenTime(date);
                                examAutoEvaluation.setCheckTime(date);
                                examAutoEvaluation.setRowNum("57");
                                examAutoEvaluation.setFromSys("智慧政工");
                                //this.deleteInfoByMore(examAutoEvaluation);
                                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","会员福利慰问工作3月");
                                this.save(examAutoEvaluation);
                            }
                        }
                    } else if(item.getType().equals("2") || item.getType().equals("3")){
                        if (Math.abs(months + result) > 6) {
                            if (StringUtils.isNotEmpty(item.getUnitId())) {
                                code = officeService.findCodeByUnitId(item.getUnitId());
                                userId = officeService.findUserIdByCode(code);
                                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                examAutoEvaluation.setEvaluationId(userId);
                                examAutoEvaluation.setType("1");
                                examAutoEvaluation.setEvalType("3");
                                examAutoEvaluation.setPeriod("1");
                                examAutoEvaluation.setYear(year);
                                examAutoEvaluation.setMonth(month);
                                examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"会员福利、慰问工作等，如会员结婚、生育、住院等至发生之日起3个月内、退休等至发生之日起6个月未按规定在系统办理或不达到标准的，扣分。");
                                examAutoEvaluation.setUnit(item.getUnit());
                                examAutoEvaluation.setUnitId(item.getUnitId());
                                examAutoEvaluation.setRemark("每次");
                                examAutoEvaluation.setAssess("绩效办及相关部门");
                                examAutoEvaluation.setModel("2020年月度南宁公安处对全处各派出所公共扣分标准");
                                examAutoEvaluation.setModelId("0fc0af711a6e41afb066ce77fda210e5");
                                examAutoEvaluation.setOption("各平台数据未及时录入的");
                                examAutoEvaluation.setOptionId("9aaaa783f5b04f2bbd2363e38156a02c");
                                examAutoEvaluation.setScore(String.valueOf(1 * count));
                                examAutoEvaluation.setTime(date);
                                examAutoEvaluation.setHappenTime(date);
                                examAutoEvaluation.setCheckTime(date);
                                examAutoEvaluation.setRowNum("57");
                                examAutoEvaluation.setFromSys("智慧政工");
                                //this.deleteInfoByMore(examAutoEvaluation);
                                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","会员福利慰问工作6月");
                                this.save(examAutoEvaluation);
                            }
                        }
                    }
                }
            } else if (item.getUnit().contains("柳州处")) {
                if (item.getUnit().contains("派出所" ) || item.getUnit().contains("大队")) {
                    int count = affairWelfareCondolencesService.unitCount(startDate, endDate, item.getUnitId());
                    Calendar start = Calendar.getInstance();
                    Calendar end = Calendar.getInstance();
                    start.setTime(item.getCreateDate());
                    end.setTime(item.getOccurDate());
                    int result = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);
                    int months = (end.get(Calendar.YEAR) - start.get(Calendar.YEAR)) * 12;
                    String userId = "";
                    String code = "";
                    if (item.getType().equals("4") || item.getType().equals("5") || item.getType().equals("6")) {
                        if (Math.abs(months + result) > 3 ) {
                            if (StringUtils.isNotEmpty(item.getUnitId())) {
                                code = officeService.findCodeByUnitId(item.getUnitId());
                                userId = officeService.findUserIdByCode(code);
                                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                examAutoEvaluation.setEvaluationId(userId);
                                examAutoEvaluation.setType("1");
                                examAutoEvaluation.setEvalType("3");
                                examAutoEvaluation.setPeriod("1");
                                examAutoEvaluation.setYear(year);
                                examAutoEvaluation.setMonth(month);
                                examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"会员福利、慰问工作等，如会员结婚、生育、住院等至发生之日起3个月内、退休等至发生之日起6个月未按规定在系统办理或不达到标准的，扣分。");
                                examAutoEvaluation.setUnit(item.getUnit());
                                examAutoEvaluation.setUnitId(item.getUnitId());
                                examAutoEvaluation.setRemark("每次");
                                examAutoEvaluation.setAssess("绩效办及相关部门");
                                examAutoEvaluation.setModel("2020年月度柳州处对派出所绩效考评公共扣分标准");
                                examAutoEvaluation.setModelId("fa161b1fbf1741949b632f6b341020e4");
                                examAutoEvaluation.setOption("各平台数据未及时录入的");
                                examAutoEvaluation.setOptionId("2da5329534114b1581c20ba3dfd3bc49");
                                examAutoEvaluation.setScore(String.valueOf(1 *  count));
                                examAutoEvaluation.setTime(date);
                                examAutoEvaluation.setHappenTime(date);
                                examAutoEvaluation.setCheckTime(date);
                                examAutoEvaluation.setRowNum("57");
                                examAutoEvaluation.setFromSys("智慧政工");
                                //this.deleteInfoByMore(examAutoEvaluation);
                                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","会员福利慰问工作3月");
                                this.save(examAutoEvaluation);
                            }
                        }
                    } else if(item.getType().equals("2") || item.getType().equals("3")){
                        if (Math.abs(months + result) > 6) {
                            if (StringUtils.isNotEmpty(item.getUnitId())) {
                                code = officeService.findCodeByUnitId(item.getUnitId());
                                userId = officeService.findUserIdByCode(code);
                                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                examAutoEvaluation.setEvaluationId(userId);
                                examAutoEvaluation.setType("1");
                                examAutoEvaluation.setEvalType("3");
                                examAutoEvaluation.setPeriod("1");
                                examAutoEvaluation.setYear(year);
                                examAutoEvaluation.setMonth(month);
                                examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"会员福利、慰问工作等，如会员结婚、生育、住院等至发生之日起3个月内、退休等至发生之日起6个月未按规定在系统办理或不达到标准的，扣分。");
                                examAutoEvaluation.setUnit(item.getUnit());
                                examAutoEvaluation.setUnitId(item.getUnitId());
                                examAutoEvaluation.setRemark("每次");
                                examAutoEvaluation.setAssess("绩效办及相关部门");
                                examAutoEvaluation.setModel("2020年月度柳州处对派出所绩效考评公共扣分标准");
                                examAutoEvaluation.setModelId("fa161b1fbf1741949b632f6b341020e4");
                                examAutoEvaluation.setOption("各平台数据未及时录入的");
                                examAutoEvaluation.setOptionId("2da5329534114b1581c20ba3dfd3bc49");
                                examAutoEvaluation.setScore(String.valueOf(1 *  count));
                                examAutoEvaluation.setTime(date);
                                examAutoEvaluation.setHappenTime(date);
                                examAutoEvaluation.setCheckTime(date);
                                examAutoEvaluation.setRowNum("57");
                                examAutoEvaluation.setFromSys("智慧政工");
                                //this.deleteInfoByMore(examAutoEvaluation);
                                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","会员福利慰问工作6月");
                                this.save(examAutoEvaluation);
                            }
                        }
                    }
                }
            } else if (item.getUnit().contains("北海处")) {
                if (item.getUnit().contains("派出所") || item.getUnit().contains("大队")) {
                    int count = affairWelfareCondolencesService.unitCount(startDate, endDate, item.getUnitId());
                    Calendar start = Calendar.getInstance();
                    Calendar end = Calendar.getInstance();
                    start.setTime(item.getCreateDate());
                    end.setTime(item.getOccurDate());
                    int result = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);
                    int months = (end.get(Calendar.YEAR) - start.get(Calendar.YEAR)) * 12;
                    String userId = "";
                    String code = "";
                    if (item.getType().equals("4") || item.getType().equals("5") || item.getType().equals("6")) {
                        if (Math.abs(months + result) > 3 ) {
                            if (StringUtils.isNotEmpty(item.getUnitId())) {
                                code = officeService.findCodeByUnitId(item.getUnitId());
                                userId = officeService.findUserIdByCode(code);
                                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                examAutoEvaluation.setEvaluationId(userId);
                                examAutoEvaluation.setType("1");
                                examAutoEvaluation.setEvalType("3");
                                examAutoEvaluation.setPeriod("1");
                                examAutoEvaluation.setYear(year);
                                examAutoEvaluation.setMonth(month);
                                examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"会员福利、慰问工作等，如会员结婚、生育、住院等至发生之日起3个月内、退休等至发生之日起6个月未按规定在系统办理或不达到标准的，扣分。");
                                examAutoEvaluation.setUnit(item.getUnit());
                                examAutoEvaluation.setUnitId(item.getUnitId());
                                examAutoEvaluation.setRemark("每次");
                                examAutoEvaluation.setAssess("绩效办及相关部门");
                                examAutoEvaluation.setModel("2020年月度北海处对派出所、大队公共扣分标准");
                                examAutoEvaluation.setModelId("09fbdd772cad4fadabab7c92e3e760b1");
                                examAutoEvaluation.setOption("各平台数据未及时录入的");
                                examAutoEvaluation.setOptionId("c68f239869274e60b3146af5d0dc6d44");
                                examAutoEvaluation.setScore(String.valueOf( 1 * count));
                                examAutoEvaluation.setTime(date);
                                examAutoEvaluation.setHappenTime(date);
                                examAutoEvaluation.setCheckTime(date);
                                examAutoEvaluation.setRowNum("57");
                                examAutoEvaluation.setFromSys("智慧政工");
                                //this.deleteInfoByMore(examAutoEvaluation);
                                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","会员福利慰问工作3月");
                                this.save(examAutoEvaluation);
                            }
                        }
                    } else if(item.getType().equals("2") || item.getType().equals("3")){
                        if (Math.abs(months + result) > 6) {
                            if (StringUtils.isNotEmpty(item.getUnitId())) {
                                code = officeService.findCodeByUnitId(item.getUnitId());
                                userId = officeService.findUserIdByCode(code);
                                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                examAutoEvaluation.setEvaluationId(userId);
                                examAutoEvaluation.setType("1");
                                examAutoEvaluation.setEvalType("3");
                                examAutoEvaluation.setPeriod("1");
                                examAutoEvaluation.setYear(year);
                                examAutoEvaluation.setMonth(month);
                                examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"会员福利、慰问工作等，如会员结婚、生育、住院等至发生之日起3个月内、退休等至发生之日起6个月未按规定在系统办理或不达到标准的，扣分。");
                                examAutoEvaluation.setUnit(item.getUnit());
                                examAutoEvaluation.setUnitId(item.getUnitId());
                                examAutoEvaluation.setRemark("每次");
                                examAutoEvaluation.setAssess("绩效办及相关部门");
                                examAutoEvaluation.setModel("2020年月度北海处对派出所、大队公共扣分标准");
                                examAutoEvaluation.setModelId("09fbdd772cad4fadabab7c92e3e760b1");
                                examAutoEvaluation.setOption("各平台数据未及时录入的");
                                examAutoEvaluation.setOptionId("c68f239869274e60b3146af5d0dc6d44");
                                examAutoEvaluation.setScore(String.valueOf(1 * count));
                                examAutoEvaluation.setTime(date);
                                examAutoEvaluation.setHappenTime(date);
                                examAutoEvaluation.setCheckTime(date);
                                examAutoEvaluation.setRowNum("57");
                                examAutoEvaluation.setFromSys("智慧政工");
                                //this.deleteInfoByMore(examAutoEvaluation);
                                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","会员福利慰问工作6月");
                                this.save(examAutoEvaluation);
                            }
                        }
                    }
                }
            }
        });
    }

    /**
     * 慰问工作
     */
    public void juConsolationWorkInfoYear(String year, String month) {
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        String lastYear = String.valueOf(Integer.valueOf(year) - 1);
        String startTime = lastYear + "-12" + "-11";
        String endTime = year + "-12" + "-10";
        List<AffairConsolationWorkInfo> allList = affairConsolationWorkInfoService.allInfo(year, month, startTime, endTime);
        allList.forEach(item -> {
            if (StringUtils.isNotBlank(item.getUnitId())){
                if (item.getUnit().contains("公安局") && !item.getUnit().contains("大队")) {
                    if (item.getUnit().contains("工会") || item.getUnit().contains("团委")){
                        int count = affairConsolationWorkInfoService.unitCount(startTime, endTime, item.getUnitId());
               /* DateTimeFormatter formatter = DateTimeFormat.forPattern("yyyy-MM-dd");
                DateTime end = formatter.parseDateTime(String.valueOf(item.getOccurDate()));
                DateTime start = formatter.parseDateTime(String.valueOf(item.getCreateDate()));
                int months = Months.monthsBetween(start, end).getMonths();*/
                        Calendar start = Calendar.getInstance();
                        Calendar end = Calendar.getInstance();
                        start.setTime(item.getCreateDate());
                        end.setTime(item.getDate());
                        int result = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);
                        int months = (end.get(Calendar.YEAR) - start.get(Calendar.YEAR)) * 12;
                        String userId = "";
                        String code = "";
                        if (Math.abs(months + result) > 3) {
                            if (StringUtils.isNotEmpty(item.getUnitId())) {
                                code = officeService.findCodeByUnitId(item.getUnitId());
                                userId = officeService.findUserIdByCode(code);
                                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                examAutoEvaluation.setEvaluationId(userId);
                                examAutoEvaluation.setType("1");
                                examAutoEvaluation.setEvalType("2");
                                examAutoEvaluation.setPeriod("2");
                                examAutoEvaluation.setYear(year);
                                examAutoEvaluation.setDetails(item.getUnit()+"会员福利、慰问工作等，如会员结婚、生育、住院等至发生之日起3个月内、退休等至发生之日起6个月未按规定在系统办理或不达到标准的，扣分。");
                                examAutoEvaluation.setUnit(item.getUnit());
                                examAutoEvaluation.setUnitId(item.getUnitId());
                                examAutoEvaluation.setRemark("每次");
                                examAutoEvaluation.setAssess("机关考评小组");
                                examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队年度绩效考核公共 扣分标准");
                                examAutoEvaluation.setModelId("653c088f3e754adcaa659a3706d304b9");
                                examAutoEvaluation.setOption("各平台数据未及时录入的");
                                examAutoEvaluation.setOptionId("f7b968cead674bb2a553602db7f490f4");
                                examAutoEvaluation.setScore(String.valueOf(0.5 * count));
                                examAutoEvaluation.setTime(date);
                                examAutoEvaluation.setHappenTime(date);
                                examAutoEvaluation.setCheckTime(date);
                                examAutoEvaluation.setRowNum("34");
                                examAutoEvaluation.setFromSys("智慧政工");
                                //this.deleteInfoByMore(examAutoEvaluation);
                                this.save(examAutoEvaluation);
                            }
                        }
                    }
                }
            }
        });
    }

    public void chuConsolationWorkInfoYear(String year, String month) {
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        String lastYear = String.valueOf(Integer.valueOf(year) - 1);
        String startTime = lastYear + "-12" + "-11";
        String endTime = year + "-12" + "-10";
        List<AffairConsolationWorkInfo> allList = affairConsolationWorkInfoService.allInfo(year, month, startTime, endTime);
        allList.forEach(item -> {
            if (StringUtils.isNotBlank(item.getUnitId())){
                if (item.getUnit().contains("南宁处")) {
                    if ((item.getUnit().contains("派出所") == false) && (item.getUnit().contains("大队") == false)) {
                        if (item.getUnit().contains("工会")){
                            int count = affairConsolationWorkInfoService.unitCount(startTime, endTime, item.getUnitId());
                            Calendar start = Calendar.getInstance();
                            Calendar end = Calendar.getInstance();
                            start.setTime(item.getCreateDate());
                            end.setTime(item.getDate());
                            int result = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);
                            int months = (end.get(Calendar.YEAR) - start.get(Calendar.YEAR)) * 12;
                            String userId = "";
                            String code = "";
                            if (Math.abs(months + result) > 3) {
                                if (StringUtils.isNotEmpty(item.getUnitId())) {
                                    code = officeService.findCodeByUnitId(item.getUnitId());
                                    userId = officeService.findUserIdByCode(code);
                                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                    examAutoEvaluation.setEvaluationId(userId);
                                    examAutoEvaluation.setType("1");
                                    examAutoEvaluation.setEvalType("4");
                                    examAutoEvaluation.setPeriod("2");
                                    examAutoEvaluation.setYear(year);
                                    examAutoEvaluation.setDetails(item.getUnit()+"会员福利、慰问工作等，如会员结婚、生育、住院等至发生之日起3个月内、退休等至发生之日起6个月未按规定在系统办理或不达到标准的，扣分。");
                                    examAutoEvaluation.setUnit(item.getUnit());
                                    examAutoEvaluation.setUnitId(item.getUnitId());
                                    examAutoEvaluation.setRemark("每次");
                                    examAutoEvaluation.setAssess("公安处相关部门");
                                    examAutoEvaluation.setModel("2020年年度南宁处对全处各单位考评公共扣分标准");
                                    examAutoEvaluation.setModelId("5587177f089e4ea8926b2feca9b3bf63");
                                    examAutoEvaluation.setOption("各平台数据未及时录入的");
                                    examAutoEvaluation.setOptionId("ffd58d706d7749929180cb117ef6c864");
                                    examAutoEvaluation.setScore(String.valueOf(0.5 * count));
                                    examAutoEvaluation.setTime(date);
                                    examAutoEvaluation.setHappenTime(date);
                                    examAutoEvaluation.setCheckTime(date);
                                    examAutoEvaluation.setRowNum("61");
                                    examAutoEvaluation.setFromSys("智慧政工");
                                    //this.deleteInfoByMore(examAutoEvaluation);
                                    this.save(examAutoEvaluation);
                                }
                            }
                        }
                    }
                } else if (item.getUnit().contains("柳州处")) {
                    if ((item.getUnit().contains("派出所") == false) && (item.getUnit().contains("大队") == false)) {
                        if (item.getUnit().contains("工会")){
                            int count = affairConsolationWorkInfoService.unitCount(startTime, endTime, item.getUnitId());
                            Calendar start = Calendar.getInstance();
                            Calendar end = Calendar.getInstance();
                            start.setTime(item.getCreateDate());
                            end.setTime(item.getDate());
                            int result = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);
                            int months = (end.get(Calendar.YEAR) - start.get(Calendar.YEAR)) * 12;
                            String userId = "";
                            String code = "";
                            if (Math.abs(months + result) > 3) {
                                if (StringUtils.isNotEmpty(item.getUnitId())) {
                                    code = officeService.findCodeByUnitId(item.getUnitId());
                                    userId = officeService.findUserIdByCode(code);
                                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                    examAutoEvaluation.setEvaluationId(userId);
                                    examAutoEvaluation.setType("1");
                                    examAutoEvaluation.setEvalType("4");
                                    examAutoEvaluation.setPeriod("2");
                                    examAutoEvaluation.setYear(year);
                                    examAutoEvaluation.setDetails(item.getUnit()+"会员福利、慰问工作等，如会员结婚、生育、住院等至发生之日起3个月内、退休等至发生之日起6个月未按规定在系统办理或不达到标准的，扣分。");
                                    examAutoEvaluation.setUnit(item.getUnit());
                                    examAutoEvaluation.setUnitId(item.getUnitId());
                                    examAutoEvaluation.setRemark("每次");
                                    examAutoEvaluation.setAssess("绩效办及相关部门");
                                    examAutoEvaluation.setModel("2020年年度柳州处对单位（部门）绩效考评公共扣分标准");
                                    examAutoEvaluation.setModelId("bed0dbae608b43879d002a52258a9f34");
                                    examAutoEvaluation.setOption("各平台数据未及时录入的");
                                    examAutoEvaluation.setOptionId("d6387398d93940129d769446488c612b");
                                    examAutoEvaluation.setScore(String.valueOf(0.5 * count));
                                    examAutoEvaluation.setTime(date);
                                    examAutoEvaluation.setHappenTime(date);
                                    examAutoEvaluation.setCheckTime(date);
                                    examAutoEvaluation.setRowNum("61");
                                    examAutoEvaluation.setFromSys("智慧政工");
                                    //this.deleteInfoByMore(examAutoEvaluation);
                                    this.save(examAutoEvaluation);
                                }
                            }
                        }
                    }
                } else if (item.getUnit().contains("北海处")) {
                    if ((item.getUnit().contains("派出所") == false) && (item.getUnit().contains("大队") == false)) {
                        if (item.getUnit().contains("工会")){
                            int count = affairConsolationWorkInfoService.unitCount(startTime, endTime, item.getUnitId());
                            Calendar start = Calendar.getInstance();
                            Calendar end = Calendar.getInstance();
                            start.setTime(item.getCreateDate());
                            end.setTime(item.getDate());
                            int result = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);
                            int months = (end.get(Calendar.YEAR) - start.get(Calendar.YEAR)) * 12;
                            String userId = "";
                            String code = "";
                            if (Math.abs(months + result) > 3) {
                                if (StringUtils.isNotEmpty(item.getUnitId())) {
                                    code = officeService.findCodeByUnitId(item.getUnitId());
                                    userId = officeService.findUserIdByCode(code);
                                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                    examAutoEvaluation.setEvaluationId(userId);
                                    examAutoEvaluation.setType("1");
                                    examAutoEvaluation.setEvalType("4");
                                    examAutoEvaluation.setPeriod("2");
                                    examAutoEvaluation.setYear(year);
                                    examAutoEvaluation.setDetails(item.getUnit()+"会员福利、慰问工作等，如会员结婚、生育、住院等至发生之日起3个月内、退休等至发生之日起6个月未按规定在系统办理或不达到标准的，扣分。");
                                    examAutoEvaluation.setUnit(item.getUnit());
                                    examAutoEvaluation.setUnitId(item.getUnitId());
                                    examAutoEvaluation.setRemark("每次");
                                    examAutoEvaluation.setAssess("公安处相关部门");
                                    examAutoEvaluation.setModel("2020年年度北海处对机关科室、支队绩效考评公共扣分标准");
                                    examAutoEvaluation.setModelId("260748e24b19426ba5d8bd632cca3a0c");
                                    examAutoEvaluation.setOption("各平台数据未及时录入的");
                                    examAutoEvaluation.setOptionId("e6c5c182fbee48d4bc0f76519e57db6a");
                                    examAutoEvaluation.setScore(String.valueOf(0.5 * count));
                                    examAutoEvaluation.setTime(date);
                                    examAutoEvaluation.setHappenTime(date);
                                    examAutoEvaluation.setCheckTime(date);
                                    examAutoEvaluation.setRowNum("61");
                                    examAutoEvaluation.setFromSys("智慧政工");
                                    //this.deleteInfoByMore(examAutoEvaluation);
                                    this.save(examAutoEvaluation);
                                }
                            }
                        }
                    }
                }
            }
        });
    }

    public void chuConsolationWorkInfoMonth(String year, String month) {
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        String startTime = null;
        String endTime = null;
        if("01".equals(month)){
            String lastYear = String.valueOf(Integer.valueOf(year) - 1);
//            startTime = lastYear + "-12" + "-26";
            startTime = year + month + "-01";
            endTime = year + "-" + month + "-31";
        }else{
            String lastMonth = String.valueOf(Integer.valueOf(month) - 1);
//            startTime = year + "-" + lastMonth + "-26";
            startTime = year + "-" + month + "-01";
            endTime = year + "-" + month + "-31";
        }
        String startDate = startTime;
        String endDate = endTime;
        List<AffairConsolationWorkInfo> allList = affairConsolationWorkInfoService.allInfo(year, month, startTime, endTime);
        allList.forEach(item -> {
            if (StringUtils.isNotBlank(item.getUnitId())){
                if (item.getUnit().contains("南宁处")) {
                    if ((item.getUnit().contains("派出所") == false) && (item.getUnit().contains("大队") == false)) {
                        if (item.getUnit().contains("工会")){
                            int count = affairConsolationWorkInfoService.unitCount(startDate, endDate, item.getUnitId());
                            Calendar start = Calendar.getInstance();
                            Calendar end = Calendar.getInstance();
                            start.setTime(item.getCreateDate());
                            end.setTime(item.getDate());
                            int result = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);
                            int months = (end.get(Calendar.YEAR) - start.get(Calendar.YEAR)) * 12;
                            String userId = "";
                            String code = "";
                            if (Math.abs(months + result) > 3) {
                                if (StringUtils.isNotEmpty(item.getUnitId())) {
                                    code = officeService.findCodeByUnitId(item.getUnitId());
                                    userId = officeService.findUserIdByCode(code);
                                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                    examAutoEvaluation.setEvaluationId(userId);
                                    examAutoEvaluation.setType("1");
                                    examAutoEvaluation.setEvalType("4");
                                    examAutoEvaluation.setPeriod("1");
                                    examAutoEvaluation.setYear(year);
                                    examAutoEvaluation.setMonth(month);
                                    examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"会员福利、慰问工作等，如会员结婚、生育、住院等至发生之日起3个月内、退休等至发生之日起6个月未按规定在系统办理或不达到标准的，扣分。");
                                    examAutoEvaluation.setUnit(item.getUnit());
                                    examAutoEvaluation.setUnitId(item.getUnitId());
                                    examAutoEvaluation.setRemark("每次");
                                    examAutoEvaluation.setAssess("绩效办及相关部门");
                                    examAutoEvaluation.setModel("2020年月度南宁处对全处各单位公共扣分标准");
                                    examAutoEvaluation.setModelId("691f98a054654bfc9ce3f6f85b7fe4a6");
                                    examAutoEvaluation.setOption("各平台数据未及时录入的");
                                    examAutoEvaluation.setOptionId("c7e09dee2924443da984f010b6eabf1f");
                                    examAutoEvaluation.setScore(String.valueOf(1 * count));
                                    examAutoEvaluation.setTime(date);
                                    examAutoEvaluation.setHappenTime(date);
                                    examAutoEvaluation.setCheckTime(date);
                                    examAutoEvaluation.setRowNum("57");
                                    examAutoEvaluation.setFromSys("智慧政工");
                                    this.deleteInfoByMore(examAutoEvaluation);
                                    this.save(examAutoEvaluation);
                                }
                            }
                        }
                    }
                } else if (item.getUnit().contains("柳州处")) {
                    if ((item.getUnit().contains("派出所") == false) && (item.getUnit().contains("大队") == false)) {
                        if (item.getUnit().contains("工会")){
                            int count = affairConsolationWorkInfoService.unitCount(startDate, endDate, item.getUnitId());
                            Calendar start = Calendar.getInstance();
                            Calendar end = Calendar.getInstance();
                            start.setTime(item.getCreateDate());
                            end.setTime(item.getDate());
                            int result = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);
                            int months = (end.get(Calendar.YEAR) - start.get(Calendar.YEAR)) * 12;
                            String userId = "";
                            String code = "";
                            if (Math.abs(months + result) > 3) {
                                if (StringUtils.isNotEmpty(item.getUnitId())) {
                                    code = officeService.findCodeByUnitId(item.getUnitId());
                                    userId = officeService.findUserIdByCode(code);
                                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                    examAutoEvaluation.setEvaluationId(userId);
                                    examAutoEvaluation.setType("1");
                                    examAutoEvaluation.setEvalType("4");
                                    examAutoEvaluation.setPeriod("1");
                                    examAutoEvaluation.setYear(year);
                                    examAutoEvaluation.setMonth(month);
                                    examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"会员福利、慰问工作等，如会员结婚、生育、住院等至发生之日起3个月内、退休等至发生之日起6个月未按规定在系统办理或不达到标准的，扣分。");
                                    examAutoEvaluation.setUnit(item.getUnit());
                                    examAutoEvaluation.setUnitId(item.getUnitId());
                                    examAutoEvaluation.setRemark("每次");
                                    examAutoEvaluation.setAssess("绩效办及相关部门");
                                    examAutoEvaluation.setModel("2020年月度柳州处对单位（部门）绩效考评公共扣分标准");
                                    examAutoEvaluation.setModelId("ebe11e36d28f4c58a3088001c7ab7089");
                                    examAutoEvaluation.setOption("各平台数据未及时录入的");
                                    examAutoEvaluation.setOptionId("cc6a7cbbc93843deb35deb391bab7ab3");
                                    examAutoEvaluation.setScore(String.valueOf(1 * count));
                                    examAutoEvaluation.setTime(date);
                                    examAutoEvaluation.setHappenTime(date);
                                    examAutoEvaluation.setCheckTime(date);
                                    examAutoEvaluation.setRowNum("57");
                                    examAutoEvaluation.setFromSys("智慧政工");
                                    this.deleteInfoByMore(examAutoEvaluation);
                                    this.save(examAutoEvaluation);
                                }
                            }
                        }
                    }
                } else if (item.getUnit().contains("北海处")) {
                    if ((item.getUnit().contains("派出所") == false) && (item.getUnit().contains("大队") == false)) {
                        if (item.getUnit().contains("工会")){
                            int count = affairConsolationWorkInfoService.unitCount(startDate, endDate, item.getUnitId());
                            Calendar start = Calendar.getInstance();
                            Calendar end = Calendar.getInstance();
                            start.setTime(item.getCreateDate());
                            end.setTime(item.getDate());
                            int result = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);
                            int months = (end.get(Calendar.YEAR) - start.get(Calendar.YEAR)) * 12;
                            String userId = "";
                            String code = "";
                            if (Math.abs(months + result) > 3) {
                                if (StringUtils.isNotEmpty(item.getUnitId())) {
                                    code = officeService.findCodeByUnitId(item.getUnitId());
                                    userId = officeService.findUserIdByCode(code);
                                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                    examAutoEvaluation.setEvaluationId(userId);
                                    examAutoEvaluation.setType("1");
                                    examAutoEvaluation.setEvalType("4");
                                    examAutoEvaluation.setPeriod("1");
                                    examAutoEvaluation.setYear(year);
                                    examAutoEvaluation.setMonth(month);
                                    examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"会员福利、慰问工作等，如会员结婚、生育、住院等至发生之日起3个月内、退休等至发生之日起6个月未按规定在系统办理或不达到标准的，扣分。");
                                    examAutoEvaluation.setUnit(item.getUnit());
                                    examAutoEvaluation.setUnitId(item.getUnitId());
                                    examAutoEvaluation.setRemark("每次");
                                    examAutoEvaluation.setAssess("绩效办及相关部门");
                                    examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队公共扣分标准");
                                    examAutoEvaluation.setModelId("053c03b372694ae2aaa42344d7e7f019");
                                    examAutoEvaluation.setOption("各平台数据未及时录入的");
                                    examAutoEvaluation.setOptionId("9ad3eafc782541e58cc215dc2981fc59");
                                    examAutoEvaluation.setScore("1");
                                    examAutoEvaluation.setTime(date);
                                    examAutoEvaluation.setHappenTime(date);
                                    examAutoEvaluation.setCheckTime(date);
                                    examAutoEvaluation.setRowNum("56");
                                    examAutoEvaluation.setFromSys("智慧政工");
                                    this.deleteInfoByMore(examAutoEvaluation);
                                    this.save(examAutoEvaluation);
                                }
                            }
                        }
                    }
                }
            }
        });
    }

    public void suoConsolationWorkInfoYear(String year, String month) {
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        String lastYear = String.valueOf(Integer.valueOf(year) - 1);
        String startTime = lastYear + "-12" + "-11";
        String endTime = year + "-12" + "-10";
        List<AffairConsolationWorkInfo> allList = affairConsolationWorkInfoService.allInfo(year, month, startTime, endTime);
        allList.forEach(item -> {
            if (StringUtils.isNotBlank(item.getUnitId())){
                if (item.getUnit().contains("南宁处")) {
                    if (item.getUnit().contains("派出所") || item.getUnit().contains("大队")) {
                        int count = affairConsolationWorkInfoService.unitCount(startTime, endTime, item.getUnitId());
                        Calendar start = Calendar.getInstance();
                        Calendar end = Calendar.getInstance();
                        start.setTime(item.getCreateDate());
                        end.setTime(item.getDate());
                        int result = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);
                        int months = (end.get(Calendar.YEAR) - start.get(Calendar.YEAR)) * 12;
                        String userId = "";
                        String code = "";
                        if (Math.abs(months + result) > 3) {
                            if (StringUtils.isNotEmpty(item.getUnitId())) {
                                code = officeService.findCodeByUnitId(item.getUnitId());
                                userId = officeService.findUserIdByCode(code);
                                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                examAutoEvaluation.setEvaluationId(userId);
                                examAutoEvaluation.setType("1");
                                examAutoEvaluation.setEvalType("3");
                                examAutoEvaluation.setPeriod("2");
                                examAutoEvaluation.setYear(year);
                                examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"会员福利、慰问工作等，如会员结婚、生育、住院等至发生之日起3个月内、退休等至发生之日起6个月未按规定在系统办理或不达到标准的，扣分。");
                                examAutoEvaluation.setUnit(item.getUnit());
                                examAutoEvaluation.setUnitId(item.getUnitId());
                                examAutoEvaluation.setRemark("每次");
                                examAutoEvaluation.setAssess("公安处相关部门");
                                examAutoEvaluation.setModel("2020年年度南宁处对全处各单位考评公共扣分标准");
                                examAutoEvaluation.setModelId("5587177f089e4ea8926b2feca9b3bf63");
                                examAutoEvaluation.setOption("各平台数据未及时录入的");
                                examAutoEvaluation.setOptionId("ffd58d706d7749929180cb117ef6c864");
                                examAutoEvaluation.setScore(String.valueOf(0.5 * count));
                                examAutoEvaluation.setTime(date);
                                examAutoEvaluation.setHappenTime(date);
                                examAutoEvaluation.setCheckTime(date);
                                examAutoEvaluation.setRowNum("61");
                                examAutoEvaluation.setFromSys("智慧政工");
                                //this.deleteInfoByMore(examAutoEvaluation);
                                this.save(examAutoEvaluation);
                            }
                        }
                    }
                } else if (item.getUnit().contains("柳州处")) {
                    if (item.getUnit().contains("派出所") || item.getUnit().contains("大队")) {
                        int count = affairConsolationWorkInfoService.unitCount(startTime, endTime, item.getUnitId());
                        Calendar start = Calendar.getInstance();
                        Calendar end = Calendar.getInstance();
                        start.setTime(item.getCreateDate());
                        end.setTime(item.getDate());
                        int result = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);
                        int months = (end.get(Calendar.YEAR) - start.get(Calendar.YEAR)) * 12;
                        String userId = "";
                        String code = "";
                        if (Math.abs(months + result) > 3) {
                            if (StringUtils.isNotEmpty(item.getUnitId())) {
                                code = officeService.findCodeByUnitId(item.getUnitId());
                                userId = officeService.findUserIdByCode(code);
                                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                examAutoEvaluation.setEvaluationId(userId);
                                examAutoEvaluation.setType("1");
                                examAutoEvaluation.setEvalType("3");
                                examAutoEvaluation.setPeriod("2");
                                examAutoEvaluation.setYear(year);
                                examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"会员福利、慰问工作等，如会员结婚、生育、住院等至发生之日起3个月内、退休等至发生之日起6个月未按规定在系统办理或不达到标准的，扣分。");
                                examAutoEvaluation.setUnit(item.getUnit());
                                examAutoEvaluation.setUnitId(item.getUnitId());
                                examAutoEvaluation.setRemark("每次");
                                examAutoEvaluation.setAssess("绩效办及相关部门");
                                examAutoEvaluation.setModel("2020年年度柳州处对派出所绩效考评公共扣分标准");
                                examAutoEvaluation.setModelId("8506c629ac9d4ecead9143bf40bd1cc7");
                                examAutoEvaluation.setOption("各平台数据未及时录入的");
                                examAutoEvaluation.setOptionId("37ae037b90fb41b39f97a4f250b6833a");
                                examAutoEvaluation.setScore(String.valueOf(0.5 * count));
                                examAutoEvaluation.setTime(date);
                                examAutoEvaluation.setHappenTime(date);
                                examAutoEvaluation.setCheckTime(date);
                                examAutoEvaluation.setRowNum("61");
                                examAutoEvaluation.setFromSys("智慧政工");
                                //this.deleteInfoByMore(examAutoEvaluation);
                                this.save(examAutoEvaluation);
                            }
                        }
                    }
                } else if (item.getUnit().contains("北海处")) {
                    if (item.getUnit().contains("派出所") || item.getUnit().contains("大队")) {
                        int count = affairConsolationWorkInfoService.unitCount(startTime, endTime, item.getUnitId());
                        Calendar start = Calendar.getInstance();
                        Calendar end = Calendar.getInstance();
                        start.setTime(item.getCreateDate());
                        end.setTime(item.getDate());
                        int result = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);
                        int months = (end.get(Calendar.YEAR) - start.get(Calendar.YEAR)) * 12;
                        String userId = "";
                        String code = "";
                        if (Math.abs(months + result) > 3) {
                            if (StringUtils.isNotEmpty(item.getUnitId())) {
                                code = officeService.findCodeByUnitId(item.getUnitId());
                                userId = officeService.findUserIdByCode(code);
                                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                examAutoEvaluation.setEvaluationId(userId);
                                examAutoEvaluation.setType("1");
                                examAutoEvaluation.setEvalType("3");
                                examAutoEvaluation.setPeriod("2");
                                examAutoEvaluation.setYear(year);
                                examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"会员福利、慰问工作等，如会员结婚、生育、住院等至发生之日起3个月内、退休等至发生之日起6个月未按规定在系统办理或不达到标准的，扣分。");
                                examAutoEvaluation.setUnit(item.getUnit());
                                examAutoEvaluation.setUnitId(item.getUnitId());
                                examAutoEvaluation.setRemark("每次");
                                examAutoEvaluation.setAssess("公安处相关部门");
                                examAutoEvaluation.setModel("2020年年度北海处对派出所、刑警三大队绩效考评公共扣分标准");
                                examAutoEvaluation.setModelId("c25e5dbae97f46c683ad276ed33580c0");
                                examAutoEvaluation.setOption("各平台数据未及时录入的");
                                examAutoEvaluation.setOptionId("d9b8be4cb9bb4c738bf1b854e900494c");
                                examAutoEvaluation.setScore(String.valueOf(0.5 * count));
                                examAutoEvaluation.setTime(date);
                                examAutoEvaluation.setHappenTime(date);
                                examAutoEvaluation.setCheckTime(date);
                                examAutoEvaluation.setRowNum("61");
                                examAutoEvaluation.setFromSys("智慧政工");
                                //this.deleteInfoByMore(examAutoEvaluation);
                                this.save(examAutoEvaluation);
                            }
                        }
                    }
                }
            }
        });
    }

    public void suoConsolationWorkInfoMonth(String year, String month) {
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        String startTime = null;
        String endTime = null;
        if("01".equals(month)){
            String lastYear = String.valueOf(Integer.valueOf(year) - 1);
//            startTime = lastYear + "-12" + "-26";
            startTime = year + month + "-01";
            endTime = year + "-" + month + "-31";
        }else{
            String lastMonth = String.valueOf(Integer.valueOf(month) - 1);
//            startTime = year + "-" + lastMonth + "-26";
            startTime = year + "-" + month + "-01";
            endTime = year + "-" + month + "-31";
        }
        String startDate = startTime;
        String endDate = endTime;
        List<AffairConsolationWorkInfo> allList = affairConsolationWorkInfoService.allInfo(year, month, startTime, endTime);
        allList.forEach(item -> {
            if (StringUtils.isNotBlank(item.getUnitId())){
                if (item.getUnit().contains("南宁处")) {
                    if (item.getUnit().contains("派出所")  || item.getUnit().contains("大队")) {
                        int count = affairConsolationWorkInfoService.unitCount(startDate, endDate, item.getUnitId());
                        Calendar start = Calendar.getInstance();
                        Calendar end = Calendar.getInstance();
                        start.setTime(item.getCreateDate());
                        end.setTime(item.getDate());
                        int result = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);
                        int months = (end.get(Calendar.YEAR) - start.get(Calendar.YEAR)) * 12;
                        String userId = "";
                        String code = "";
                        if (Math.abs(months + result) > 3) {
                            if (StringUtils.isNotEmpty(item.getUnitId())) {
                                code = officeService.findCodeByUnitId(item.getUnitId());
                                userId = officeService.findUserIdByCode(code);
                                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                examAutoEvaluation.setEvaluationId(userId);
                                examAutoEvaluation.setType("1");
                                examAutoEvaluation.setEvalType("3");
                                examAutoEvaluation.setPeriod("1");
                                examAutoEvaluation.setYear(year);
                                examAutoEvaluation.setMonth(month);
                                examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"会员福利、慰问工作等，如会员结婚、生育、住院等至发生之日起3个月内、退休等至发生之日起6个月未按规定在系统办理或不达到标准的，扣分。");
                                examAutoEvaluation.setUnit(item.getUnit());
                                examAutoEvaluation.setUnitId(item.getUnitId());
                                examAutoEvaluation.setRemark("每次");
                                examAutoEvaluation.setAssess("绩效办及相关部门");
                                examAutoEvaluation.setModel("2020年月度南宁处对全处各单位公共扣分标准");
                                examAutoEvaluation.setModelId("691f98a054654bfc9ce3f6f85b7fe4a6");
                                examAutoEvaluation.setOption("各平台数据未及时录入的");
                                examAutoEvaluation.setOptionId("c7e09dee2924443da984f010b6eabf1f");
                                examAutoEvaluation.setScore(String.valueOf(1 * count));
                                examAutoEvaluation.setTime(date);
                                examAutoEvaluation.setHappenTime(date);
                                examAutoEvaluation.setCheckTime(date);
                                examAutoEvaluation.setRowNum("57");
                                examAutoEvaluation.setFromSys("智慧政工");
                                this.deleteInfoByMore(examAutoEvaluation);
                                this.save(examAutoEvaluation);
                            }
                        }
                    }
                } else if (item.getUnit().contains("柳州处")) {
                    if (item.getUnit().contains("派出所")  || item.getUnit().contains("大队")) {
                        int count = affairConsolationWorkInfoService.unitCount(startDate, endDate, item.getUnitId());
                        Calendar start = Calendar.getInstance();
                        Calendar end = Calendar.getInstance();
                        start.setTime(item.getCreateDate());
                        end.setTime(item.getDate());
                        int result = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);
                        int months = (end.get(Calendar.YEAR) - start.get(Calendar.YEAR)) * 12;
                        String userId = "";
                        String code = "";
                        if (Math.abs(months + result) > 3) {
                            if (StringUtils.isNotEmpty(item.getUnitId())) {
                                code = officeService.findCodeByUnitId(item.getUnitId());
                                userId = officeService.findUserIdByCode(code);
                                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                examAutoEvaluation.setEvaluationId(userId);
                                examAutoEvaluation.setType("1");
                                examAutoEvaluation.setEvalType("3");
                                examAutoEvaluation.setPeriod("1");
                                examAutoEvaluation.setYear(year);
                                examAutoEvaluation.setMonth(month);
                                examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"会员福利、慰问工作等，如会员结婚、生育、住院等至发生之日起3个月内、退休等至发生之日起6个月未按规定在系统办理或不达到标准的，扣分。");
                                examAutoEvaluation.setUnit(item.getUnit());
                                examAutoEvaluation.setUnitId(item.getUnitId());
                                examAutoEvaluation.setRemark("每次");
                                examAutoEvaluation.setAssess("绩效办及相关部门");
                                examAutoEvaluation.setModel("2020年月度柳州处对派出所绩效考评公共扣分标准");
                                examAutoEvaluation.setModelId("fa161b1fbf1741949b632f6b341020e4");
                                examAutoEvaluation.setOption("各平台数据未及时录入的");
                                examAutoEvaluation.setOptionId("2da5329534114b1581c20ba3dfd3bc49");
                                examAutoEvaluation.setScore(String.valueOf(1 * count));
                                examAutoEvaluation.setTime(date);
                                examAutoEvaluation.setHappenTime(date);
                                examAutoEvaluation.setCheckTime(date);
                                examAutoEvaluation.setRowNum("57");
                                examAutoEvaluation.setFromSys("智慧政工");
                                this.deleteInfoByMore(examAutoEvaluation);
                                this.save(examAutoEvaluation);
                            }
                        }
                    }
                } else if (item.getUnit().contains("北海处")) {
                    if (item.getUnit().contains("派出所") || item.getUnit().contains("大队")) {
                        int count = affairConsolationWorkInfoService.unitCount(startDate, endDate, item.getUnitId());
                        Calendar start = Calendar.getInstance();
                        Calendar end = Calendar.getInstance();
                        start.setTime(item.getCreateDate());
                        end.setTime(item.getDate());
                        int result = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);
                        int months = (end.get(Calendar.YEAR) - start.get(Calendar.YEAR)) * 12;
                        String userId = "";
                        String code = "";
                        if (Math.abs(months + result) > 3) {
                            if (StringUtils.isNotEmpty(item.getUnitId())) {
                                code = officeService.findCodeByUnitId(item.getUnitId());
                                userId = officeService.findUserIdByCode(code);
                                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                examAutoEvaluation.setEvaluationId(userId);
                                examAutoEvaluation.setType("1");
                                examAutoEvaluation.setEvalType("3");
                                examAutoEvaluation.setPeriod("1");
                                examAutoEvaluation.setYear(year);
                                examAutoEvaluation.setMonth(month);
                                examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"会员福利、慰问工作等，如会员结婚、生育、住院等至发生之日起3个月内、退休等至发生之日起6个月未按规定在系统办理或不达到标准的，扣分。");
                                examAutoEvaluation.setUnit(item.getUnit());
                                examAutoEvaluation.setUnitId(item.getUnitId());
                                examAutoEvaluation.setRemark("每次");
                                examAutoEvaluation.setAssess("绩效办及相关部门");
                                examAutoEvaluation.setModel("2020年月度北海处对派出所、大队公共扣分标准");
                                examAutoEvaluation.setModelId("09fbdd772cad4fadabab7c92e3e760b1");
                                examAutoEvaluation.setOption("各平台数据未及时录入的");
                                examAutoEvaluation.setOptionId("c68f239869274e60b3146af5d0dc6d44");
                                examAutoEvaluation.setScore(String.valueOf(1 * count));
                                examAutoEvaluation.setTime(date);
                                examAutoEvaluation.setHappenTime(date);
                                examAutoEvaluation.setCheckTime(date);
                                examAutoEvaluation.setRowNum("57");
                                examAutoEvaluation.setFromSys("智慧政工");
                                this.deleteInfoByMore(examAutoEvaluation);
                                this.save(examAutoEvaluation);
                            }
                        }
                    }
                }
            }
        });
    }

    /**
     * 谈话函询
     */
    public void juTalkManagementYear(String year, String month) {
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        String lastYear = String.valueOf(Integer.valueOf(year) - 1);
        String startTime = lastYear + "-12" + "-11";
        String endTime = year + "-12" + "-10";
        List<AffairTalkManagement> allList = affairTalkManagementService.allInfo(year, month, startTime, endTime);
        allList.forEach(item -> {
            if (item.getUnit().contains("公安局") && !item.getUnit().contains("支队")) {
                String userId = "";
                String code = "";
                //年度局考局机关民警受到诫勉谈话
                if ("6".equals(item.getLetterCategory())) {
                    if (StringUtils.isNotEmpty(item.getUnitId())) {
                        code = officeService.findCodeByUnitId(item.getUnitId());
                        userId = officeService.findUserIdByCode(code);
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setEvaluationId(userId);
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("2");
                        examAutoEvaluation.setPeriod("2");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"单位下民警被诫勉谈话");
                        examAutoEvaluation.setUnit(item.getUnit());
                        examAutoEvaluation.setUnitId(item.getUnitId());
                        /*if (item.getUnit().contains("南宁铁路公安局") || item.getUnit().contains("公安局")){
                            examAutoEvaluation.setEvaluationId("276d8cdc184748c8a5ff014221fb135a");
                            examAutoEvaluation.setUnit("公安局纪检监察处");
                            examAutoEvaluation.setUnitId("6");
                        }else if(item.getUnit().contains("南宁公安处") || item.getUnit().contains("南宁处")){
                            examAutoEvaluation.setEvaluationId("19e70728419d4051bd4f9f496fbf0d7c");
                            examAutoEvaluation.setUnit("南宁处纪检监察室");
                            examAutoEvaluation.setUnitId("31");
                        }else if(item.getUnit().contains("柳州公安处") || item.getUnit().contains("柳州处")){
                            examAutoEvaluation.setEvaluationId("49e960f9fe6c4f7786ae894ffac51c7d");
                            examAutoEvaluation.setUnit("柳州处纪检监察室");
                            examAutoEvaluation.setUnitId("146");
                        }else if(item.getUnit().contains("北海公安处") || item.getUnit().contains("北海处")){
                            examAutoEvaluation.setEvaluationId("f278b35db9ca4f5d8418cc44acec36de");
                            examAutoEvaluation.setUnit("北海处纪检监察室");
                            examAutoEvaluation.setUnitId("266");
                        }*/
                        examAutoEvaluation.setRemark("每人次");
                        examAutoEvaluation.setAssess("机关考评小组");
                        examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队年度绩效考核公共 扣分标准");
                        examAutoEvaluation.setModelId("653c088f3e754adcaa659a3706d304b9");
                        examAutoEvaluation.setOption("民警被诫勉谈话的");
                        examAutoEvaluation.setOptionId("b233a38a9d9445618f33f3bfd3b9a577");
                        examAutoEvaluation.setScore("2");
                        examAutoEvaluation.setTime(date);
                        examAutoEvaluation.setHappenTime(date);
                        examAutoEvaluation.setCheckTime(date);
                        examAutoEvaluation.setRowNum("48");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"纪检惩戒信息_诫勉谈话");
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                }
            }
        });
    }

    public void juTalkManagementMonth(String year, String month) {
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        String startTime = null;
        String endTime = null;
        if("01".equals(month)){
            String lastYear = String.valueOf(Integer.valueOf(year) - 1);
//            startTime = lastYear + "-12" + "-26";
            startTime = year + month + "-01";
            endTime = year + "-" + month + "-31";
        }else{
            String lastMonth = String.valueOf(Integer.valueOf(month) - 1);
//            startTime = year + "-" + lastMonth + "-26";
            startTime = year + "-" + month + "-01";
            endTime = year + "-" + month + "-31";
        }
        List<AffairTalkManagement> allList = affairTalkManagementService.allInfo(year, month, startTime, endTime);
        allList.forEach(item -> {
            if (item.getUnit().contains("公安局")) {
                String userId = "";
                String code = "";
                //年度局考局机关民警受到诫勉谈话
                if ("6".equals(item.getLetterCategory())) {
                    if (StringUtils.isNotEmpty(item.getUnitId())) {
                        code = officeService.findCodeByUnitId(item.getUnitId());
                        userId = officeService.findUserIdByCode(code);
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setEvaluationId(userId);
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("2");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"单位下民警被诫勉谈话");
                        examAutoEvaluation.setUnit(item.getUnit());
                        examAutoEvaluation.setUnitId(item.getUnitId());
                       /* if (item.getUnit().contains("南宁铁路公安局") || item.getUnit().contains("公安局")){
                            examAutoEvaluation.setEvaluationId("276d8cdc184748c8a5ff014221fb135a");
                            examAutoEvaluation.setUnit("公安局纪检监察处");
                            examAutoEvaluation.setUnitId("6");
                        }else if(item.getUnit().contains("南宁公安处") || item.getUnit().contains("南宁处")){
                            examAutoEvaluation.setEvaluationId("19e70728419d4051bd4f9f496fbf0d7c");
                            examAutoEvaluation.setUnit("南宁处纪检监察室");
                            examAutoEvaluation.setUnitId("31");
                        }else if(item.getUnit().contains("柳州公安处") || item.getUnit().contains("柳州处")){
                            examAutoEvaluation.setEvaluationId("49e960f9fe6c4f7786ae894ffac51c7d");
                            examAutoEvaluation.setUnit("柳州处纪检监察室");
                            examAutoEvaluation.setUnitId("146");
                        }else if(item.getUnit().contains("北海公安处") || item.getUnit().contains("北海处")){
                            examAutoEvaluation.setEvaluationId("f278b35db9ca4f5d8418cc44acec36de");
                            examAutoEvaluation.setUnit("北海处纪检监察室");
                            examAutoEvaluation.setUnitId("266");
                        }*/
                        examAutoEvaluation.setRemark("每人次");
                        examAutoEvaluation.setAssess("机关考评小组");
                        examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队月度绩效考核公共扣分标准");
                        examAutoEvaluation.setModelId("e8aa72ffe54a4118aeae9077ff7898ec");
                        examAutoEvaluation.setOption("民警被诫勉谈话的");
                        examAutoEvaluation.setOptionId("d7f61af752fd4d7696ee4de0edd24425");
                        examAutoEvaluation.setScore("4");
                        examAutoEvaluation.setTime(date);
                        examAutoEvaluation.setHappenTime(date);
                        examAutoEvaluation.setCheckTime(date);
                        examAutoEvaluation.setRowNum("45");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"纪检惩戒信息_诫勉谈话");
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                }
            }
        });
    }

    public void chuTalkManagementYear(String year, String month) {
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        String lastYear = String.valueOf(Integer.valueOf(year) - 1);
        String startTime = lastYear + "-12" + "-11";
        String endTime = year + "-12" + "-10";
        List<AffairTalkManagement> allList = affairTalkManagementService.allInfo(year, month, startTime, endTime);
        allList.forEach(item -> {
            if (item.getUnit().contains("南宁处")) {
                if ((item.getUnit().contains("派出所") == false) && (item.getUnit().contains("大队") == false)) {
                    String userId = "";
                    String code = "";
                    if ("6".equals(item.getLetterCategory())) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("4");
                            examAutoEvaluation.setPeriod("2");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"单位下民警被诫勉谈话");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每次");
                            examAutoEvaluation.setAssess("公安处相关部门");
                            examAutoEvaluation.setModel("2020年年度南宁处对全处各单位考评公共扣分标准");
                            examAutoEvaluation.setModelId("5587177f089e4ea8926b2feca9b3bf63");
                            examAutoEvaluation.setOption("民警被诫勉谈话的");
                            examAutoEvaluation.setOptionId("f8c0d2b5a6f446a4ba189e8ffdfa0fed");
                            examAutoEvaluation.setScore("0.5");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("47");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","纪检惩戒信息_诫勉谈话");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
            } else if (item.getUnit().contains("柳州处")) {
                if ((item.getUnit().contains("派出所") == false) && (item.getUnit().contains("大队") == false)) {
                    String userId = "";
                    String code = "";
                    if ("6".equals(item.getLetterCategory())) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("4");
                            examAutoEvaluation.setPeriod("2");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"单位下民警被诫勉谈话");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每人次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年年度柳州处对单位（部门）绩效考评公共扣分标准");
                            examAutoEvaluation.setModelId("bed0dbae608b43879d002a52258a9f34");
                            examAutoEvaluation.setOption("民警被诫勉谈话的");
                            examAutoEvaluation.setOptionId("16065c2e94be4061adab4c6fa3c2fed8");
                            examAutoEvaluation.setScore("0.5");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("47");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","纪检惩戒信息_诫勉谈话");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
            } else if (item.getUnit().contains("北海处")) {
                if ((item.getUnit().contains("派出所") == false) && (item.getUnit().contains("大队") == false)) {
                    String userId = "";
                    String code = "";
                    if ("6".equals(item.getLetterCategory())) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("4");
                            examAutoEvaluation.setPeriod("2");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"单位下民警被诫勉谈话");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每人次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年年度北海处对机关科室、支队绩效考评公共扣分标准");
                            examAutoEvaluation.setModelId("260748e24b19426ba5d8bd632cca3a0c");
                            examAutoEvaluation.setOption("民警被诫勉谈话的");
                            examAutoEvaluation.setOptionId("e8228b6e9cbb4781b2dde9708e3d0639");
                            examAutoEvaluation.setScore("0.5");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("47");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","纪检惩戒信息_诫勉谈话");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
            }
        });
    }

    public void chuTalkManagementMonth(String year, String month) {
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        String startTime = null;
        String endTime = null;
        if("01".equals(month)){
            String lastYear = String.valueOf(Integer.valueOf(year) - 1);
//            startTime = lastYear + "-12" + "-26";
            startTime = year + month + "-01";
            endTime = year + "-" + month + "-31";
        }else{
            String lastMonth = String.valueOf(Integer.valueOf(month) - 1);
//            startTime = year + "-" + lastMonth + "-26";
            startTime = year + "-" + month + "-01";
            endTime = year + "-" + month + "-31";
        }
        List<AffairTalkManagement> allList = affairTalkManagementService.allInfo(year, month, startTime, endTime);
        allList.forEach(item -> {
            if (item.getUnit().contains("南宁处")) {
                if ((item.getUnit().contains("派出所") == false) && (item.getUnit().contains("大队") == false)) {
                    String userId = "";
                    String code = "";
                    if ("3".equals(item.getLetterCategory())) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("4");
                            examAutoEvaluation.setPeriod("1");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setMonth(month);
                            examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"单位下民警被提醒谈话");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("");
                            examAutoEvaluation.setAssess("");
                            examAutoEvaluation.setModel("");
                            examAutoEvaluation.setModelId("");
                            examAutoEvaluation.setOption("");
                            examAutoEvaluation.setOptionId("");
                            examAutoEvaluation.setScore("0.6");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","纪检惩戒信息_谈话提醒");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    } else if ("6".equals(item.getLetterCategory())) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("4");
                            examAutoEvaluation.setPeriod("1");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setMonth(month);
                            examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"单位下民警被诫勉谈话");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每人次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年月度南宁处对全处各单位公共扣分标准");
                            examAutoEvaluation.setModelId("691f98a054654bfc9ce3f6f85b7fe4a6");
                            examAutoEvaluation.setOption("民警被诫勉谈话的");
                            examAutoEvaluation.setOptionId("ff2aaf5207af40799df431c2a03afd94");
                            examAutoEvaluation.setScore("0.8");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("43");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","纪检惩戒信息_诫勉谈话");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
            } else if (item.getUnit().contains("柳州处")) {
                if ((item.getUnit().contains("派出所") == false) && (item.getUnit().contains("大队") == false)) {
                    String userId = "";
                    String code = "";
                    if ("3".equals(item.getLetterCategory())) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("4");
                            examAutoEvaluation.setPeriod("1");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setMonth(month);
                            examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"单位下民警被提醒谈话");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("");
                            examAutoEvaluation.setAssess("");
                            examAutoEvaluation.setModel("");
                            examAutoEvaluation.setModelId("");
                            examAutoEvaluation.setOption("");
                            examAutoEvaluation.setOptionId("");
                            examAutoEvaluation.setScore("0.6");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","纪检惩戒信息_谈话提醒");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    } else if ("6".equals(item.getLetterCategory())) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("4");
                            examAutoEvaluation.setPeriod("1");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setMonth(month);
                            examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"单位下民警被诫勉谈话");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每人次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年月度柳州处对单位（部门）绩效考评公共扣分标准");
                            examAutoEvaluation.setModelId("ebe11e36d28f4c58a3088001c7ab7089");
                            examAutoEvaluation.setOption("民警被诫勉谈话的");
                            examAutoEvaluation.setOptionId("4c665148cd39479499efe16dd38c795a");
                            examAutoEvaluation.setScore("0.8");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("43");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","纪检惩戒信息_诫勉谈话");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
            } else if (item.getUnit().contains("北海处")) {
                if ((item.getUnit().contains("派出所") == false) && (item.getUnit().contains("大队") == false)) {
                    String userId = "";
                    String code = "";
                    if ("3".equals(item.getLetterCategory())) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("4");
                            examAutoEvaluation.setPeriod("1");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setMonth(month);
                            examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"单位下民警被提醒谈话");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("");
                            examAutoEvaluation.setAssess("");
                            examAutoEvaluation.setModel("");
                            examAutoEvaluation.setModelId("");
                            examAutoEvaluation.setOption("");
                            examAutoEvaluation.setOptionId("");
                            examAutoEvaluation.setScore("0.6");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","纪检惩戒信息_谈话提醒");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    } else if ("6".equals(item.getLetterCategory())) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("4");
                            examAutoEvaluation.setPeriod("1");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setMonth(month);
                            examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"单位下民警被诫勉谈话");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每人次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队公共扣分标准");
                            examAutoEvaluation.setModelId("053c03b372694ae2aaa42344d7e7f019");
                            examAutoEvaluation.setOption("民警被诫勉谈话的");
                            examAutoEvaluation.setOptionId("c1fbccd6ab754315bb84c5a6d90266f0");
                            examAutoEvaluation.setScore("0.8");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("42");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","纪检惩戒信息_诫勉谈话");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
            }
        });
    }

    public void suoTalkManagementYear(String year, String month) {
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        String lastYear = String.valueOf(Integer.valueOf(year) - 1);
        String startTime = lastYear + "-12" + "-11";
        String endTime = year + "-12" + "-10";
        List<AffairTalkManagement> allList = affairTalkManagementService.allInfo(year, month, startTime, endTime);
        allList.forEach(item -> {
            if (item.getUnit().contains("南宁处")) {
                if (item.getUnit().contains("派出所") || item.getUnit().contains("大队")) {
                    String userId = "";
                    String code = "";
                    if ("6".equals(item.getLetterCategory())) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("3");
                            examAutoEvaluation.setPeriod("2");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"单位下民警被诫勉谈话");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年年度南宁处对全处各单位考评公共扣分标准");
                            examAutoEvaluation.setModelId("5587177f089e4ea8926b2feca9b3bf63");
                            examAutoEvaluation.setOption("民警被诫勉谈话的");
                            examAutoEvaluation.setOptionId("f8c0d2b5a6f446a4ba189e8ffdfa0fed");
                            examAutoEvaluation.setScore("0.5");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("43");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","纪检惩戒信息_诫勉谈话");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
            } else if (item.getUnit().contains("柳州处")) {
                if (item.getUnit().contains("派出所") || item.getUnit().contains("大队")) {
                    String userId = "";
                    String code = "";
                    if ("6".equals(item.getLetterCategory())) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("3");
                            examAutoEvaluation.setPeriod("2");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"单位下民警被诫勉谈话");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年年度柳州处对派出所绩效考评公共扣分标准");
                            examAutoEvaluation.setModelId("8506c629ac9d4ecead9143bf40bd1cc7");
                            examAutoEvaluation.setOption("民警被诫勉谈话的");
                            examAutoEvaluation.setOptionId("fd6e76bd89d742f9a6cc3500be2542ee");
                            examAutoEvaluation.setScore("0.5");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("47");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","纪检惩戒信息_诫勉谈话");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
            } else if (item.getUnit().contains("北海处")) {
                if (item.getUnit().contains("派出所") || item.getUnit().contains("大队")) {
                    String userId = "";
                    String code = "";
                    if ("6".equals(item.getLetterCategory())) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("3");
                            examAutoEvaluation.setPeriod("2");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"单位下民警被诫勉谈话");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每次");
                            examAutoEvaluation.setAssess("公安处相关部门");
                            examAutoEvaluation.setModel("2020年年度北海处对派出所、刑警三大队绩效考评公共扣分标准");
                            examAutoEvaluation.setModelId("c25e5dbae97f46c683ad276ed33580c0");
                            examAutoEvaluation.setOption("民警被诫勉谈话的");
                            examAutoEvaluation.setOptionId("fbb4156bc7974e758ad9157b25201324");
                            examAutoEvaluation.setScore("0.5");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("47");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","纪检惩戒信息_诫勉谈话");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
            }
        });
    }

    public void suochuTalkManagementMonth(String year, String month) {
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        String startTime = null;
        String endTime = null;
        if("01".equals(month)){
            String lastYear = String.valueOf(Integer.valueOf(year) - 1);
//            startTime = lastYear + "-12" + "-26";
            startTime = year + month + "-01";
            endTime = year + "-" + month + "-31";
        }else{
            String lastMonth = String.valueOf(Integer.valueOf(month) - 1);
//            startTime = year + "-" + lastMonth + "-26";
            startTime = year + "-" + month + "-01";
            endTime = year + "-" + month + "-31";
        }
        List<AffairTalkManagement> allList = affairTalkManagementService.allInfo(year, month, startTime, endTime);
        allList.forEach(item -> {
            if (item.getUnit().contains("南宁处")) {
                if (item.getUnit().contains("派出所") || item.getUnit().contains("大队")) {
                    String userId = "";
                    String code = "";
                    if ("3".equals(item.getLetterCategory())) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("3");
                            examAutoEvaluation.setPeriod("1");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setMonth(month);
                            examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"单位下民警被提醒谈话的");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("");
                            examAutoEvaluation.setAssess("");
                            examAutoEvaluation.setModel("");
                            examAutoEvaluation.setModelId("");
                            examAutoEvaluation.setOption("");
                            examAutoEvaluation.setOptionId("");
                            examAutoEvaluation.setScore("0.6");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","纪检惩戒信息_谈话提醒");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    } else if ("6".equals(item.getLetterCategory())) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("3");
                            examAutoEvaluation.setPeriod("1");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setMonth(month);
                            examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"单位下民警被诫勉谈话的");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每人次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年月度南宁处对全处各单位公共扣分标准");
                            examAutoEvaluation.setModelId("691f98a054654bfc9ce3f6f85b7fe4a6");
                            examAutoEvaluation.setOption("民警被诫勉谈话的");
                            examAutoEvaluation.setOptionId("ff2aaf5207af40799df431c2a03afd94");
                            examAutoEvaluation.setScore("0.8");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("43");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","纪检惩戒信息_诫勉谈话");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
            } else if (item.getUnit().contains("柳州处")) {
                if (item.getUnit().contains("派出所") || item.getUnit().contains("大队")) {
                    String userId = "";
                    String code = "";
                    if ("3".equals(item.getLetterCategory())) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("3");
                            examAutoEvaluation.setPeriod("1");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setMonth(month);
                            examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"单位下民警被提醒谈话的");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("");
                            examAutoEvaluation.setAssess("");
                            examAutoEvaluation.setModel("");
                            examAutoEvaluation.setModelId("");
                            examAutoEvaluation.setOption("");
                            examAutoEvaluation.setOptionId("");
                            examAutoEvaluation.setScore("0.6");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","纪检惩戒信息_谈话提醒");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    } else if ("6".equals(item.getLetterCategory())) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("3");
                            examAutoEvaluation.setPeriod("1");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setMonth(month);
                            examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"单位下民警被诫勉谈话的");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每人次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年月度柳州处对派出所绩效考评公共扣分标准");
                            examAutoEvaluation.setModelId("fa161b1fbf1741949b632f6b341020e4");
                            examAutoEvaluation.setOption("民警被诫勉谈话的");
                            examAutoEvaluation.setOptionId("da45c3970e864e178f313c863d12cb3b");
                            examAutoEvaluation.setScore("0.8");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("43");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","纪检惩戒信息_诫勉谈话");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
            } else if (item.getUnit().contains("北海处")) {
                if (item.getUnit().contains("派出所") || item.getUnit().contains("大队")) {
                    String userId = "";
                    String code = "";
                    if ("3".equals(item.getLetterCategory())) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("3");
                            examAutoEvaluation.setPeriod("1");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setMonth(month);
                            examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"单位下民警被提醒谈话的");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("");
                            examAutoEvaluation.setAssess("");
                            examAutoEvaluation.setModel("");
                            examAutoEvaluation.setModelId("");
                            examAutoEvaluation.setOption("");
                            examAutoEvaluation.setOptionId("");
                            examAutoEvaluation.setScore("0.6");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","纪检惩戒信息_谈话提醒");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    } else if ("6".equals(item.getLetterCategory())) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("3");
                            examAutoEvaluation.setPeriod("1");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setMonth(month);
                            examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"单位下民警被诫勉谈话的");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每人次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年月度北海处对派出所、大队公共扣分标准");
                            examAutoEvaluation.setModelId("09fbdd772cad4fadabab7c92e3e760b1");
                            examAutoEvaluation.setOption("民警被诫勉谈话的");
                            examAutoEvaluation.setOptionId("6f293191ccf14f6c822d1dc283c9ff0b");
                            examAutoEvaluation.setScore("0.8");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("42");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","纪检惩戒信息_诫勉谈话");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
            }
        });
    }

    public void minTalkManagementYear(String year, String month) {
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        String lastYear = String.valueOf(Integer.valueOf(year) - 1);
        String startTime = lastYear + "-12" + "-11";
        String endTime = year + "-12" + "-10";
        List<AffairTalkManagement> allList = affairTalkManagementService.allInfo(year, month, startTime, endTime);
        List<User> userList = userDao.findMinJingByRoleId("3f1198e36a534b52a671bae729a0dca9");
        for (int j = 0; j < allList.size(); j++) {
            for (int i = 0; i < userList.size(); i++) {
                if (userList.get(i).getNo().equals(allList.get(j).getPersonalNum())) {
                    String userId = "";
                    if ("3".equals(allList.get(j).getLetterCategory())) {
                        if (StringUtils.isNotEmpty(allList.get(j).getPersonalNum())) {
                            userId = userDao.findUserIdByIdNumber(allList.get(j).getPersonalNum());
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("2");
                            examAutoEvaluation.setEvalType("7");
                            examAutoEvaluation.setPeriod("2");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setDetails(year+"年"+allList.get(j).getUnit()+"单位下"+allList.get(j).getName()+"受到谈话提醒");
                            examAutoEvaluation.setName(allList.get(j).getName());
                            examAutoEvaluation.setIdNumber(allList.get(j).getPersonalNum());
                            examAutoEvaluation.setUnit(allList.get(j).getUnit());
                            examAutoEvaluation.setUnitId(allList.get(j).getUnitId());
                            examAutoEvaluation.setRemark("每人次");
                            examAutoEvaluation.setAssess("机关考评小组");
                            examAutoEvaluation.setModel("2020年年度南宁铁路公安局民警绩效考评公共扣分标准");
                            examAutoEvaluation.setModelId("a4acf3d881c6489d9a112fead04d8504");
                            examAutoEvaluation.setOption("民警受到谈话提醒");
                            examAutoEvaluation.setOptionId("b1c8ceb673484a8fbd78d80c314dfe98");
                            examAutoEvaluation.setScore("5");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("40");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"纪检惩戒信息_谈话提醒");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    } else if ("6".equals(allList.get(j).getLetterCategory())) {
                        if (StringUtils.isNotEmpty(allList.get(j).getPersonalNum())) {
                            userId = userDao.findUserIdByIdNumber(allList.get(j).getPersonalNum());
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("2");
                            examAutoEvaluation.setEvalType("7");
                            examAutoEvaluation.setPeriod("2");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setDetails(year+"年"+allList.get(j).getUnit()+"单位下"+allList.get(j).getName()+"被诫勉谈话");
                            examAutoEvaluation.setName(allList.get(j).getName());
                            examAutoEvaluation.setIdNumber(allList.get(j).getPersonalNum());
                            examAutoEvaluation.setUnit(allList.get(j).getUnit());
                            examAutoEvaluation.setUnitId(allList.get(j).getUnitId());
                            examAutoEvaluation.setRemark("每人次");
                            examAutoEvaluation.setAssess("机关考评小组");
                            examAutoEvaluation.setModel("2020年年度南宁铁路公安局民警绩效考评公共扣分标准");
                            examAutoEvaluation.setModelId("a4acf3d881c6489d9a112fead04d8504");
                            examAutoEvaluation.setOption("民警被诫勉谈话的");
                            examAutoEvaluation.setOptionId("0a19363d3ca4420ba810414638ae6a6e");
                            examAutoEvaluation.setScore("10");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("41");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"纪检惩戒信息_诫勉谈话");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
            }
        }
    }

    public void minTalkManagementMonth(String year, String month) {
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        String startTime = null;
        String endTime = null;
        if("01".equals(month)){
            String lastYear = String.valueOf(Integer.valueOf(year) - 1);
//            startTime = lastYear + "-12" + "-26";
            startTime = year + month + "-01";
            endTime = year + "-" + month + "-31";
        }else{
            String lastMonth = String.valueOf(Integer.valueOf(month) - 1);
//            startTime = year + "-" + lastMonth + "-26";
            startTime = year + "-" + month + "-01";
            endTime = year + "-" + month + "-31";
        }
        List<AffairTalkManagement> allList = affairTalkManagementService.allInfo(year, month, startTime, endTime);
        List<User> userList = userDao.findMinJingByRoleId("3f1198e36a534b52a671bae729a0dca9");
        for (int j = 0; j < allList.size(); j++) {
            for (int i = 0; i < userList.size(); i++) {
                if (userList.get(i).getNo().equals(allList.get(j).getPersonalNum())) {
                    String userId = "";
                    if ("3".equals(allList.get(j).getLetterCategory())) {
                        if (StringUtils.isNotEmpty(allList.get(j).getPersonalNum())) {
                            userId = userDao.findUserIdByIdNumber(allList.get(j).getPersonalNum());
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("2");
                            examAutoEvaluation.setEvalType("7");
                            examAutoEvaluation.setPeriod("1");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setMonth(month);
                            examAutoEvaluation.setDetails(year+"年"+month+"月"+allList.get(j).getUnit()+"单位下"+allList.get(j).getName()+"受到谈话提醒");
                            examAutoEvaluation.setName(allList.get(j).getName());
                            examAutoEvaluation.setIdNumber(allList.get(j).getPersonalNum());
                            examAutoEvaluation.setUnit(allList.get(j).getUnit());
                            examAutoEvaluation.setUnitId(allList.get(j).getUnitId());
                            examAutoEvaluation.setRemark("每次");
                            examAutoEvaluation.setAssess("");
                            examAutoEvaluation.setModel("2020年月度南宁铁路公安局民警绩效考核公共扣分标准");
                            examAutoEvaluation.setModelId("0c4b8784733d4aff83c94394ab1064dc");
                            examAutoEvaluation.setOption("民警受到谈话提醒");
                            examAutoEvaluation.setOptionId("9088fb9831954f1691b3b5a74e7c142d");
                            examAutoEvaluation.setScore("15");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("40");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"纪检惩戒信息_谈话提醒");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    } else if ("6".equals(allList.get(j).getLetterCategory())) {
                        if (StringUtils.isNotEmpty(allList.get(j).getPersonalNum())) {
                            userId = userDao.findUserIdByIdNumber(allList.get(j).getPersonalNum());
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("2");
                            examAutoEvaluation.setEvalType("7");
                            examAutoEvaluation.setPeriod("1");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setMonth(month);
                            examAutoEvaluation.setDetails(year+"年"+month+"月"+allList.get(j).getUnit()+"单位下"+allList.get(j).getName()+"被诫勉谈话");
                            examAutoEvaluation.setName(allList.get(j).getName());
                            examAutoEvaluation.setIdNumber(allList.get(j).getPersonalNum());
                            examAutoEvaluation.setUnit(allList.get(j).getUnit());
                            examAutoEvaluation.setUnitId(allList.get(j).getUnitId());
                            examAutoEvaluation.setRemark("每次");
                            examAutoEvaluation.setAssess("");
                            examAutoEvaluation.setModel("2020年月度南宁铁路公安局民警绩效考核公共扣分标准");
                            examAutoEvaluation.setModelId("0c4b8784733d4aff83c94394ab1064dc");
                            examAutoEvaluation.setOption("民警被诫勉谈话的");
                            examAutoEvaluation.setOptionId("3c3cb7a449974de3b01f09a6f166b3f0");
                            examAutoEvaluation.setScore("20");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("41");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"纪检惩戒信息_诫勉谈话");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
            }
        }
    }

    /**
     * 纪律处分
     */
    public void juDisciplinaryActionYear(String year, String month) {
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        String lastYear = String.valueOf(Integer.valueOf(year) - 1);
        String startTime = lastYear + "-12" + "-11";
        String endTime = year + "-12" + "-10";
        List<AffairDisciplinaryAction> allList = affairDisciplinaryActionService.allInfo(year, month, startTime, endTime);
        allList.forEach(item -> {
            if (item.getUnit().contains("公安局") && !item.getUnit().contains("大队")) {
                String userId = "";
                String code = "";
                if ("1".equals(item.getDisciplinaryType()) && "1".equals(item.getXzSubOption())) {
                    if (StringUtils.isNotEmpty(item.getUnitId())) {
                        code = officeService.findCodeByUnitId(item.getUnitId());
                        userId = officeService.findUserIdByCode(code);
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setEvaluationId(userId);
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("2");
                        examAutoEvaluation.setPeriod("2");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"单位下民警受到行政警告处分");
                        examAutoEvaluation.setUnit(item.getUnit());
                        examAutoEvaluation.setUnitId(item.getUnitId());
                        /*if (item.getUnit().contains("南宁铁路公安局") || item.getUnit().contains("公安局")){
                            examAutoEvaluation.setEvaluationId("276d8cdc184748c8a5ff014221fb135a");
                            examAutoEvaluation.setUnit("公安局纪检监察处");
                            examAutoEvaluation.setUnitId("6");
                        }else if(item.getUnit().contains("南宁公安处") || item.getUnit().contains("南宁处")){
                            examAutoEvaluation.setEvaluationId("19e70728419d4051bd4f9f496fbf0d7c");
                            examAutoEvaluation.setUnit("南宁处纪检监察室");
                            examAutoEvaluation.setUnitId("31");
                        }else if(item.getUnit().contains("柳州公安处") || item.getUnit().contains("柳州处")){
                            examAutoEvaluation.setEvaluationId("49e960f9fe6c4f7786ae894ffac51c7d");
                            examAutoEvaluation.setUnit("柳州处纪检监察室");
                            examAutoEvaluation.setUnitId("146");
                        }else if(item.getUnit().contains("北海公安处") || item.getUnit().contains("北海处")){
                            examAutoEvaluation.setEvaluationId("f278b35db9ca4f5d8418cc44acec36de");
                            examAutoEvaluation.setUnit("北海处纪检监察室");
                            examAutoEvaluation.setUnitId("266");
                        }*/
                        examAutoEvaluation.setRemark("每人次");
                        examAutoEvaluation.setAssess("机关考评小组");
                        examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队年度绩效考核公共 扣分标准");
                        examAutoEvaluation.setModelId("653c088f3e754adcaa659a3706d304b9");
                        examAutoEvaluation.setOption("民警受到行政警告处分的");
                        examAutoEvaluation.setOptionId("40e5108888cb435bba05908f1da7db17");
                        examAutoEvaluation.setScore("3");
                        examAutoEvaluation.setTime(date);
                        examAutoEvaluation.setHappenTime(date);
                        examAutoEvaluation.setCheckTime(date);
                        examAutoEvaluation.setRowNum("49");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"纪检惩戒信息_行政警告");
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                } else if ((("1".equals(item.getDisciplinaryType()) && "2".equals(item.getXzSubOption())) || ("2".equals(item.getDisciplinaryType()) && "1".equals(item.getDjSubOption()) && "1".equals(item.getRySubOption())))) {
                    if (StringUtils.isNotEmpty(item.getUnitId())) {
                        code = officeService.findCodeByUnitId(item.getUnitId());
                        userId = officeService.findUserIdByCode(code);
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setEvaluationId(userId);
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("2");
                        examAutoEvaluation.setPeriod("2");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"单位下民警受到行政记过、党内警告处分");
                        examAutoEvaluation.setUnit(item.getUnit());
                        examAutoEvaluation.setUnitId(item.getUnitId());
                       /* if (item.getUnit().contains("南宁铁路公安局") || item.getUnit().contains("公安局")){
                            examAutoEvaluation.setEvaluationId("276d8cdc184748c8a5ff014221fb135a");
                            examAutoEvaluation.setUnit("公安局纪检监察处");
                            examAutoEvaluation.setUnitId("6");
                        }else if(item.getUnit().contains("南宁公安处") || item.getUnit().contains("南宁处")){
                            examAutoEvaluation.setEvaluationId("19e70728419d4051bd4f9f496fbf0d7c");
                            examAutoEvaluation.setUnit("南宁处纪检监察室");
                            examAutoEvaluation.setUnitId("31");
                        }else if(item.getUnit().contains("柳州公安处") || item.getUnit().contains("柳州处")){
                            examAutoEvaluation.setEvaluationId("49e960f9fe6c4f7786ae894ffac51c7d");
                            examAutoEvaluation.setUnit("柳州处纪检监察室");
                            examAutoEvaluation.setUnitId("146");
                        }else if(item.getUnit().contains("北海公安处") || item.getUnit().contains("北海处")){
                            examAutoEvaluation.setEvaluationId("f278b35db9ca4f5d8418cc44acec36de");
                            examAutoEvaluation.setUnit("北海处纪检监察室");
                            examAutoEvaluation.setUnitId("266");
                        }*/
                        examAutoEvaluation.setRemark("每人次");
                        examAutoEvaluation.setAssess("机关考评小组");
                        examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队年度绩效考核公共 扣分标准");
                        examAutoEvaluation.setModelId("653c088f3e754adcaa659a3706d304b9");
                        examAutoEvaluation.setOption("民警受到行政记过、党内警告处分的");
                        examAutoEvaluation.setOptionId("b4e91bf76f934792ac6386e6d7379110");
                        examAutoEvaluation.setScore("4");
                        examAutoEvaluation.setTime(date);
                        examAutoEvaluation.setHappenTime(date);
                        examAutoEvaluation.setCheckTime(date);
                        examAutoEvaluation.setRowNum("50");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"纪检惩戒信息_行政记过、党内警告");
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                } else if (("1".equals(item.getDisciplinaryType()) && "3".equals(item.getXzSubOption())) || ("2".equals(item.getDisciplinaryType()) && "1".equals(item.getDjSubOption()) && "2".equals(item.getRySubOption()))) {
                    if (StringUtils.isNotEmpty(item.getUnitId())) {
                        code = officeService.findCodeByUnitId(item.getUnitId());
                        userId = officeService.findUserIdByCode(code);
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setEvaluationId(userId);
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("2");
                        examAutoEvaluation.setPeriod("2");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"单位下民警受到行政记大过、党内严重警告处分");
                        examAutoEvaluation.setUnit(item.getUnit());
                        examAutoEvaluation.setUnitId(item.getUnitId());
                        /*if (item.getUnit().contains("南宁铁路公安局") || item.getUnit().contains("公安局")){
                            examAutoEvaluation.setEvaluationId("276d8cdc184748c8a5ff014221fb135a");
                            examAutoEvaluation.setUnit("公安局纪检监察处");
                            examAutoEvaluation.setUnitId("6");
                        }else if(item.getUnit().contains("南宁公安处") || item.getUnit().contains("南宁处")){
                            examAutoEvaluation.setEvaluationId("19e70728419d4051bd4f9f496fbf0d7c");
                            examAutoEvaluation.setUnit("南宁处纪检监察室");
                            examAutoEvaluation.setUnitId("31");
                        }else if(item.getUnit().contains("柳州公安处") || item.getUnit().contains("柳州处")){
                            examAutoEvaluation.setEvaluationId("49e960f9fe6c4f7786ae894ffac51c7d");
                            examAutoEvaluation.setUnit("柳州处纪检监察室");
                            examAutoEvaluation.setUnitId("146");
                        }else if(item.getUnit().contains("北海公安处") || item.getUnit().contains("北海处")){
                            examAutoEvaluation.setEvaluationId("f278b35db9ca4f5d8418cc44acec36de");
                            examAutoEvaluation.setUnit("北海处纪检监察室");
                            examAutoEvaluation.setUnitId("266");
                        }*/
                        examAutoEvaluation.setRemark("每人次");
                        examAutoEvaluation.setAssess("机关考评小组");
                        examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队年度绩效考核公共 扣分标准");
                        examAutoEvaluation.setModelId("653c088f3e754adcaa659a3706d304b9");
                        examAutoEvaluation.setOption("民警受到行政记大过、党内严重警告处分的");
                        examAutoEvaluation.setOptionId("7a8914d3fedf47078c7107eb803e7e98");
                        examAutoEvaluation.setScore("5");
                        examAutoEvaluation.setTime(date);
                        examAutoEvaluation.setHappenTime(date);
                        examAutoEvaluation.setCheckTime(date);
                        examAutoEvaluation.setRowNum("51");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"纪检惩戒信息_行政记大过、党内严重警告");
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                } else {
                    if (StringUtils.isNotEmpty(item.getUnitId())) {
                        code = officeService.findCodeByUnitId(item.getUnitId());
                        userId = officeService.findUserIdByCode(code);
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setEvaluationId(userId);
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("2");
                        examAutoEvaluation.setPeriod("2");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"单位下因教育管理责任落实不到位，民警受到降级、撤销党内职务及以上处分");
                        examAutoEvaluation.setUnit(item.getUnit());
                        examAutoEvaluation.setUnitId(item.getUnitId());
                        /*if (item.getUnit().contains("南宁铁路公安局") || item.getUnit().contains("公安局")){
                            examAutoEvaluation.setEvaluationId("276d8cdc184748c8a5ff014221fb135a");
                            examAutoEvaluation.setUnit("公安局纪检监察处");
                            examAutoEvaluation.setUnitId("6");
                        }else if(item.getUnit().contains("南宁公安处") || item.getUnit().contains("南宁处")){
                            examAutoEvaluation.setEvaluationId("19e70728419d4051bd4f9f496fbf0d7c");
                            examAutoEvaluation.setUnit("南宁处纪检监察室");
                            examAutoEvaluation.setUnitId("31");
                        }else if(item.getUnit().contains("柳州公安处") || item.getUnit().contains("柳州处")){
                            examAutoEvaluation.setEvaluationId("49e960f9fe6c4f7786ae894ffac51c7d");
                            examAutoEvaluation.setUnit("柳州处纪检监察室");
                            examAutoEvaluation.setUnitId("146");
                        }else if(item.getUnit().contains("北海公安处") || item.getUnit().contains("北海处")){
                            examAutoEvaluation.setEvaluationId("f278b35db9ca4f5d8418cc44acec36de");
                            examAutoEvaluation.setUnit("北海处纪检监察室");
                            examAutoEvaluation.setUnitId("266");
                        }*/
                        examAutoEvaluation.setRemark("每人次");
                        examAutoEvaluation.setAssess("机关考评小组");
                        examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队年度绩效考核公共 扣分标准");
                        examAutoEvaluation.setModelId("653c088f3e754adcaa659a3706d304b9");
                        examAutoEvaluation.setOption("因教育管理责任落实不到位，民警受到降级、撤销党内职务及以上处分的（因个人原因发生问题的按30%扣分）");
                        examAutoEvaluation.setOptionId("fa1dadd94896475d8778c43122a95c2e");
                        examAutoEvaluation.setScore("20");
                        examAutoEvaluation.setTime(date);
                        examAutoEvaluation.setHappenTime(date);
                        examAutoEvaluation.setCheckTime(date);
                        examAutoEvaluation.setRowNum("53");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"纪检惩戒信息_降级、撤销党内职务以上处分");
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                }
            }
        });
    }

    public void juDisciplinaryActionMonth(String year, String month) {
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        String startTime = null;
        String endTime = null;
        if("01".equals(month)){
            String lastYear = String.valueOf(Integer.valueOf(year) - 1);
//            startTime = lastYear + "-12" + "-26";
            startTime = year + month + "-01";
            endTime = year + "-" + month + "-31";
        }else{
            String lastMonth = String.valueOf(Integer.valueOf(month) - 1);
//            startTime = year + "-" + lastMonth + "-26";
            startTime = year + "-" + month + "-01";
            endTime = year + "-" + month + "-31";
        }
        List<AffairDisciplinaryAction> allList = affairDisciplinaryActionService.allInfo(year, month, startTime, endTime);
        allList.forEach(item -> {
            if (item.getUnit().contains("公安局") && !item.getUnit().contains("大队")) {
                String userId = "";
                String code = "";
                if ("1".equals(item.getDisciplinaryType()) && "1".equals(item.getXzSubOption())) {
                    if (StringUtils.isNotEmpty(item.getUnitId())) {
                        code = officeService.findCodeByUnitId(item.getUnitId());
                        userId = officeService.findUserIdByCode(code);
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setEvaluationId(userId);
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("2");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"单位下民警受到行政警告处分");
                        examAutoEvaluation.setUnit(item.getUnit());
                        examAutoEvaluation.setUnitId(item.getUnitId());
                        /*if (item.getUnit().contains("南宁铁路公安局") || item.getUnit().contains("公安局")){
                            examAutoEvaluation.setEvaluationId("276d8cdc184748c8a5ff014221fb135a");
                            examAutoEvaluation.setUnit("公安局纪检监察处");
                            examAutoEvaluation.setUnitId("6");
                        }else if(item.getUnit().contains("南宁公安处") || item.getUnit().contains("南宁处")){
                            examAutoEvaluation.setEvaluationId("19e70728419d4051bd4f9f496fbf0d7c");
                            examAutoEvaluation.setUnit("南宁处纪检监察室");
                            examAutoEvaluation.setUnitId("31");
                        }else if(item.getUnit().contains("柳州公安处") || item.getUnit().contains("柳州处")){
                            examAutoEvaluation.setEvaluationId("49e960f9fe6c4f7786ae894ffac51c7d");
                            examAutoEvaluation.setUnit("柳州处纪检监察室");
                            examAutoEvaluation.setUnitId("146");
                        }else if(item.getUnit().contains("北海公安处") || item.getUnit().contains("北海处")){
                            examAutoEvaluation.setEvaluationId("f278b35db9ca4f5d8418cc44acec36de");
                            examAutoEvaluation.setUnit("北海处纪检监察室");
                            examAutoEvaluation.setUnitId("266");
                        }*/
                        examAutoEvaluation.setRemark("每人次");
                        examAutoEvaluation.setAssess("机关考评小组");
                        examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队月度绩效考核公共扣分标准");
                        examAutoEvaluation.setModelId("e8aa72ffe54a4118aeae9077ff7898ec");
                        examAutoEvaluation.setOption("民警受到行政警告处分的");
                        examAutoEvaluation.setOptionId("37b4af087c4a44fe81ada5380211baaa");
                        examAutoEvaluation.setScore("6");
                        examAutoEvaluation.setTime(date);
                        examAutoEvaluation.setHappenTime(date);
                        examAutoEvaluation.setCheckTime(date);
                        examAutoEvaluation.setRowNum("46");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"纪检惩戒信息_行政警告");
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                } else if ((("1".equals(item.getDisciplinaryType()) && "2".equals(item.getXzSubOption())) || ("2".equals(item.getDisciplinaryType()) && "1".equals(item.getDjSubOption()) && "1".equals(item.getRySubOption())))) {
                    if (StringUtils.isNotEmpty(item.getUnitId())) {
                        code = officeService.findCodeByUnitId(item.getUnitId());
                        userId = officeService.findUserIdByCode(code);
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setEvaluationId(userId);
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("2");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"单位下民警受到行政记过、党内警告处分");
                        examAutoEvaluation.setUnit(item.getUnit());
                        examAutoEvaluation.setUnitId(item.getUnitId());
                        /*if (item.getUnit().contains("南宁铁路公安局") || item.getUnit().contains("公安局")){
                            examAutoEvaluation.setEvaluationId("276d8cdc184748c8a5ff014221fb135a");
                            examAutoEvaluation.setUnit("公安局纪检监察处");
                            examAutoEvaluation.setUnitId("6");
                        }else if(item.getUnit().contains("南宁公安处") || item.getUnit().contains("南宁处")){
                            examAutoEvaluation.setEvaluationId("19e70728419d4051bd4f9f496fbf0d7c");
                            examAutoEvaluation.setUnit("南宁处纪检监察室");
                            examAutoEvaluation.setUnitId("31");
                        }else if(item.getUnit().contains("柳州公安处") || item.getUnit().contains("柳州处")){
                            examAutoEvaluation.setEvaluationId("49e960f9fe6c4f7786ae894ffac51c7d");
                            examAutoEvaluation.setUnit("柳州处纪检监察室");
                            examAutoEvaluation.setUnitId("146");
                        }else if(item.getUnit().contains("北海公安处") || item.getUnit().contains("北海处")){
                            examAutoEvaluation.setEvaluationId("f278b35db9ca4f5d8418cc44acec36de");
                            examAutoEvaluation.setUnit("北海处纪检监察室");
                            examAutoEvaluation.setUnitId("266");
                        }*/
                        examAutoEvaluation.setRemark("每人次");
                        examAutoEvaluation.setAssess("机关考评小组");
                        examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队月度绩效考核公共扣分标准");
                        examAutoEvaluation.setModelId("e8aa72ffe54a4118aeae9077ff7898ec");
                        examAutoEvaluation.setOption("民警受到行政记过、党内警告处分的");
                        examAutoEvaluation.setOptionId("ad9dd12ad8c34f8aad72f5d9b50f189a");
                        examAutoEvaluation.setScore("8");
                        examAutoEvaluation.setTime(date);
                        examAutoEvaluation.setHappenTime(date);
                        examAutoEvaluation.setCheckTime(date);
                        examAutoEvaluation.setRowNum("47");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"纪检惩戒信息_行政记过、党内警告");
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                } else if (("1".equals(item.getDisciplinaryType()) && "3".equals(item.getXzSubOption())) || ("2".equals(item.getDisciplinaryType()) && "1".equals(item.getDjSubOption()) && "2".equals(item.getRySubOption()))) {
                    if (StringUtils.isNotEmpty(item.getUnitId())) {
                        code = officeService.findCodeByUnitId(item.getUnitId());
                        userId = officeService.findUserIdByCode(code);
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setEvaluationId(userId);
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("2");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"单位下民警受到行政记大过、党内严重警告处分");
                        examAutoEvaluation.setUnit(item.getUnit());
                        examAutoEvaluation.setUnitId(item.getUnitId());
                       /* if (item.getUnit().contains("南宁铁路公安局") || item.getUnit().contains("公安局")){
                            examAutoEvaluation.setEvaluationId("276d8cdc184748c8a5ff014221fb135a");
                            examAutoEvaluation.setUnit("公安局纪检监察处");
                            examAutoEvaluation.setUnitId("6");
                        }else if(item.getUnit().contains("南宁公安处") || item.getUnit().contains("南宁处")){
                            examAutoEvaluation.setEvaluationId("19e70728419d4051bd4f9f496fbf0d7c");
                            examAutoEvaluation.setUnit("南宁处纪检监察室");
                            examAutoEvaluation.setUnitId("31");
                        }else if(item.getUnit().contains("柳州公安处") || item.getUnit().contains("柳州处")){
                            examAutoEvaluation.setEvaluationId("49e960f9fe6c4f7786ae894ffac51c7d");
                            examAutoEvaluation.setUnit("柳州处纪检监察室");
                            examAutoEvaluation.setUnitId("146");
                        }else if(item.getUnit().contains("北海公安处") || item.getUnit().contains("北海处")){
                            examAutoEvaluation.setEvaluationId("f278b35db9ca4f5d8418cc44acec36de");
                            examAutoEvaluation.setUnit("北海处纪检监察室");
                            examAutoEvaluation.setUnitId("266");
                        }*/
                        examAutoEvaluation.setRemark("每人次");
                        examAutoEvaluation.setAssess("机关考评小组");
                        examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队月度绩效考核公共扣分标准");
                        examAutoEvaluation.setModelId("e8aa72ffe54a4118aeae9077ff7898ec");
                        examAutoEvaluation.setOption("民警受到行政记大过、党内严重警告处分的");
                        examAutoEvaluation.setOptionId("d3bbc7f81be84b6ebe90ae7484f7938c");
                        examAutoEvaluation.setScore("10");
                        examAutoEvaluation.setTime(date);
                        examAutoEvaluation.setHappenTime(date);
                        examAutoEvaluation.setCheckTime(date);
                        examAutoEvaluation.setRowNum("48");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"纪检惩戒信息_行政记大过、党内严重警告");
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                } else {
                    if (StringUtils.isNotEmpty(item.getUnitId())) {
                        code = officeService.findCodeByUnitId(item.getUnitId());
                        userId = officeService.findUserIdByCode(code);
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setEvaluationId(userId);
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("2");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"单位下因教育管理责任落实不到位，民警受到降级、撤销党内职务及以上处分");
                        examAutoEvaluation.setUnit(item.getUnit());
                        examAutoEvaluation.setUnitId(item.getUnitId());
                        /*if (item.getUnit().contains("南宁铁路公安局") || item.getUnit().contains("公安局")){
                            examAutoEvaluation.setEvaluationId("276d8cdc184748c8a5ff014221fb135a");
                            examAutoEvaluation.setUnit("公安局纪检监察处");
                            examAutoEvaluation.setUnitId("6");
                        }else if(item.getUnit().contains("南宁公安处") || item.getUnit().contains("南宁处")){
                            examAutoEvaluation.setEvaluationId("19e70728419d4051bd4f9f496fbf0d7c");
                            examAutoEvaluation.setUnit("南宁处纪检监察室");
                            examAutoEvaluation.setUnitId("31");
                        }else if(item.getUnit().contains("柳州公安处") || item.getUnit().contains("柳州处")){
                            examAutoEvaluation.setEvaluationId("49e960f9fe6c4f7786ae894ffac51c7d");
                            examAutoEvaluation.setUnit("柳州处纪检监察室");
                            examAutoEvaluation.setUnitId("146");
                        }else if(item.getUnit().contains("北海公安处") || item.getUnit().contains("北海处")){
                            examAutoEvaluation.setEvaluationId("f278b35db9ca4f5d8418cc44acec36de");
                            examAutoEvaluation.setUnit("北海处纪检监察室");
                            examAutoEvaluation.setUnitId("266");
                        }*/
                        examAutoEvaluation.setRemark("每人次");
                        examAutoEvaluation.setAssess("机关考评小组");
                        examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队月度绩效考核公共扣分标准");
                        examAutoEvaluation.setModelId("e8aa72ffe54a4118aeae9077ff7898ec");
                        examAutoEvaluation.setOption("因教育管理责任落实不到位，民警受到降级、撤销党内职务及以上处分的（因个人原因发生问题的按30%扣分）");
                        examAutoEvaluation.setOptionId("01067a8c2c5a4718a1fd7bb5a571945b");
                        examAutoEvaluation.setScore("40");
                        examAutoEvaluation.setTime(date);
                        examAutoEvaluation.setHappenTime(date);
                        examAutoEvaluation.setCheckTime(date);
                        examAutoEvaluation.setRowNum("50");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"纪检惩戒信息_降级、撤销党内职务以上处分");
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                }
            }
        });
    }

    public void chuDisciplinaryActionYear(String year, String month) {
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        String lastYear = String.valueOf(Integer.valueOf(year) - 1);
        String startTime = lastYear + "-12" + "-11";
        String endTime = year + "-12" + "-10";
        List<AffairDisciplinaryAction> allList = affairDisciplinaryActionService.allInfo(year, month, startTime, endTime);
        allList.forEach(item -> {
            if (item.getUnit().contains("南宁处")) {
                if ((item.getUnit().contains("派出所") == false) && (item.getUnit().contains("大队") == false)) {
                    String userId = "";
                    String code = "";
                    if ("1".equals(item.getDisciplinaryType()) && "1".equals(item.getXzSubOption())) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("4");
                            examAutoEvaluation.setPeriod("2");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"单位下民警受到行政警告处分");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每次");
                            examAutoEvaluation.setAssess("公安处相关部门");
                            examAutoEvaluation.setModel("2020年年度南宁处对全处各单位考评公共扣分标准");
                            examAutoEvaluation.setModelId("5587177f089e4ea8926b2feca9b3bf63");
                            examAutoEvaluation.setOption("民警受到行政警告处分的");
                            examAutoEvaluation.setOptionId("d713c9c6424340e9a08b8428935393fa");
                            examAutoEvaluation.setScore("1");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("48");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","纪检惩戒信息_行政警告");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    } else if ((("1".equals(item.getDisciplinaryType()) && "2".equals(item.getXzSubOption())) || ("2".equals(item.getDisciplinaryType()) && "1".equals(item.getDjSubOption()) && "1".equals(item.getRySubOption())))) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("4");
                            examAutoEvaluation.setPeriod("2");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"单位下民警受到行政记过、党内警告处分");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每人次");
                            examAutoEvaluation.setAssess("机关考评小组");
                            examAutoEvaluation.setModel("2020年年度南宁处对全处各单位考评公共扣分标准");
                            examAutoEvaluation.setModelId("5587177f089e4ea8926b2feca9b3bf63");
                            examAutoEvaluation.setOption("民警受到行政记过、党内警告处分的");
                            examAutoEvaluation.setOptionId("8405304420e54299b2cca3825d71f611");
                            examAutoEvaluation.setScore("5");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("49");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","纪检惩戒信息_行政记过、党内警告");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    } else if (("1".equals(item.getDisciplinaryType()) && "3".equals(item.getXzSubOption())) || ("2".equals(item.getDisciplinaryType()) && "1".equals(item.getDjSubOption()) && "2".equals(item.getRySubOption()))) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("4");
                            examAutoEvaluation.setPeriod("2");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"单位下民警受到行政记大过、党内严重警告处分");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每人次");
                            examAutoEvaluation.setAssess("机关考评小组");
                            examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队年度绩效考核公共 扣分标准");
                            examAutoEvaluation.setModelId("653c088f3e754adcaa659a3706d304b9");
                            examAutoEvaluation.setOption("民警受到行政记大过、党内严重警告处分的");
                            examAutoEvaluation.setOptionId("c68521a8602b446bbc0c24824db88a1b");
                            examAutoEvaluation.setScore("8");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("50");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","纪检惩戒信息_行政记大过、党内严重警告");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    } else {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("4");
                            examAutoEvaluation.setPeriod("2");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"单位下因教育管理责任落实不到位，民警受到降级、撤销党内职务及以上处分");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每人次");
                            examAutoEvaluation.setAssess("机关考评小组");
                            examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队年度绩效考核公共 扣分标准");
                            examAutoEvaluation.setModelId("653c088f3e754adcaa659a3706d304b9");
                            examAutoEvaluation.setOption("因教育管理责任落实不到位，民警受到降级、撤销党内职务及以上处分的（因个人原因发生问题的按30%扣分）");
                            examAutoEvaluation.setOptionId("1d6557fcad444f6eb8bdab957bcbf113");
                            examAutoEvaluation.setScore("10");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("22");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","纪检惩戒信息_降级、撤销党内职务以上处分");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
            } else if (item.getUnit().contains("柳州处")) {
                if ((item.getUnit().contains("派出所") == false) && (item.getUnit().contains("大队") == false)) {
                    String userId = "";
                    String code = "";
                    if ("1".equals(item.getDisciplinaryType()) && "1".equals(item.getXzSubOption())) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("4");
                            examAutoEvaluation.setPeriod("2");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"单位下民警受到行政警告处分");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年年度柳州处对单位（部门）绩效考评公共扣分标准");
                            examAutoEvaluation.setModelId("bed0dbae608b43879d002a52258a9f34");
                            examAutoEvaluation.setOption("民警受到行政警告处分的");
                            examAutoEvaluation.setOptionId("d3ddeefa69944ffb83c14dceeec3cdee");
                            examAutoEvaluation.setScore("1");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("48");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","纪检惩戒信息_行政警告");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    } else if ((("1".equals(item.getDisciplinaryType()) && "2".equals(item.getXzSubOption())) || ("2".equals(item.getDisciplinaryType()) && "1".equals(item.getDjSubOption()) && "1".equals(item.getRySubOption())))) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("4");
                            examAutoEvaluation.setPeriod("2");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"单位下民警受到行政记过、党内警告处分");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每人次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年年度柳州处对单位（部门）绩效考评公共扣分标准");
                            examAutoEvaluation.setModelId("bed0dbae608b43879d002a52258a9f34");
                            examAutoEvaluation.setOption("民警受到行政记过、党内警告处分的");
                            examAutoEvaluation.setOptionId("91abf8b97e764f1da221356cc87f5c79");
                            examAutoEvaluation.setScore("5");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("49");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","纪检惩戒信息_行政记过、党内警告");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    } else if (("1".equals(item.getDisciplinaryType()) && "3".equals(item.getXzSubOption())) || ("2".equals(item.getDisciplinaryType()) && "1".equals(item.getDjSubOption()) && "2".equals(item.getRySubOption()))) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("4");
                            examAutoEvaluation.setPeriod("2");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"单位下民警受到行政记大过、党内严重警告处分");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每人次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年年度柳州处对单位（部门）绩效考评公共扣分标准");
                            examAutoEvaluation.setModelId("bed0dbae608b43879d002a52258a9f34");
                            examAutoEvaluation.setOption("民警受到行政记大过、党内严重警告处分的");
                            examAutoEvaluation.setOptionId("eab1e023b7e9438c85141f3b3d7d6113");
                            examAutoEvaluation.setScore("8");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("50");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","纪检惩戒信息_行政记大过、党内严重警告");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    } else {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("4");
                            examAutoEvaluation.setPeriod("2");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"单位下因教育管理责任落实不到位，民警受到降级、撤销党内职务及以上处分");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每人次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年年度柳州处对单位（部门）绩效考评公共扣分标准");
                            examAutoEvaluation.setModelId("bed0dbae608b43879d002a52258a9f34");
                            examAutoEvaluation.setOption("因教育管理责任落实不到位，民警受到降级、撤销党内职务及以上处分的（因个人原因发生问题的按30%扣分）");
                            examAutoEvaluation.setOptionId("a086a17bdad24d27be436d6e95f9f5d5");
                            examAutoEvaluation.setScore("10");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("22");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","纪检惩戒信息_降级、撤销党内职务以上处分");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
            } else if (item.getUnit().contains("北海处")) {
                if ((item.getUnit().contains("派出所") == false) && (item.getUnit().contains("大队") == false)) {
                    String userId = "";
                    String code = "";
                    if ("1".equals(item.getDisciplinaryType()) && "1".equals(item.getXzSubOption())) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("4");
                            examAutoEvaluation.setPeriod("2");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"单位下民警受到行政警告处分");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年年度北海处对机关科室、支队绩效考评公共扣分标准");
                            examAutoEvaluation.setModelId("260748e24b19426ba5d8bd632cca3a0c");
                            examAutoEvaluation.setOption("民警受到行政警告处分的");
                            examAutoEvaluation.setOptionId("0ba7f15b8b1a4780ab6b2bd082365b61");
                            examAutoEvaluation.setScore("1");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("48");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"纪检惩戒信息_行政警告");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    } else if ((("1".equals(item.getDisciplinaryType()) && "2".equals(item.getXzSubOption())) || ("2".equals(item.getDisciplinaryType()) && "1".equals(item.getDjSubOption()) && "1".equals(item.getRySubOption())))) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("4");
                            examAutoEvaluation.setPeriod("2");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"单位下民警受到行政记过、党内警告处分的");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每人次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年年度北海处对机关科室、支队绩效考评公共扣分标准");
                            examAutoEvaluation.setModelId("260748e24b19426ba5d8bd632cca3a0c");
                            examAutoEvaluation.setOption("民警受到行政记过、党内警告处分的");
                            examAutoEvaluation.setOptionId("a2c20030714a436680767feb160265eb");
                            examAutoEvaluation.setScore("5");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("49");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","纪检惩戒信息_行政记过、党内警告");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    } else if (("1".equals(item.getDisciplinaryType()) && "3".equals(item.getXzSubOption())) || ("2".equals(item.getDisciplinaryType()) && "1".equals(item.getDjSubOption()) && "2".equals(item.getRySubOption()))) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("4");
                            examAutoEvaluation.setPeriod("2");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"单位下民警受到行政记大过、党内严重警告处分");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每人次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年年度北海处对机关科室、支队绩效考评公共扣分标准");
                            examAutoEvaluation.setModelId("260748e24b19426ba5d8bd632cca3a0c");
                            examAutoEvaluation.setOption("民警受到行政记大过、党内严重警告处分的");
                            examAutoEvaluation.setOptionId("d65fc66252874048a01cf9970e9c5621");
                            examAutoEvaluation.setScore("8");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("50");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","纪检惩戒信息_行政记大过、党内严重警告");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    } else {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("4");
                            examAutoEvaluation.setPeriod("2");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"单位下因教育管理责任落实不到位，民警受到降级、撤销党内职务及以上处分");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每人次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年年度北海处对机关科室、支队绩效考评公共扣分标准");
                            examAutoEvaluation.setModelId("260748e24b19426ba5d8bd632cca3a0c");
                            examAutoEvaluation.setOption("因教育管理责任落实不到位，民警受到降级、撤销党内职务及以上处分的（因个人原因发生问题的按30%扣分）");
                            examAutoEvaluation.setOptionId("d00173ee7f814a7d9531a1620cf768b2");
                            examAutoEvaluation.setScore("10");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("22");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","纪检惩戒信息_降级、撤销党内职务以上处分");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
            }
        });
    }

    public void chuDisciplinaryActionMonth(String year, String month) {
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        String startTime = null;
        String endTime = null;
        if("01".equals(month)){
            String lastYear = String.valueOf(Integer.valueOf(year) - 1);
//            startTime = lastYear + "-12" + "-26";
            startTime = year + month + "-01";
            endTime = year + "-" + month + "-31";
        }else{
            String lastMonth = String.valueOf(Integer.valueOf(month) - 1);
//            startTime = year + "-" + lastMonth + "-26";
            startTime = year + "-" + month + "-01";
            endTime = year + "-" + month + "-31";
        }
        List<AffairDisciplinaryAction> allList = affairDisciplinaryActionService.allInfo(year, month, startTime, endTime);
        allList.forEach(item -> {
            if (item.getUnit().contains("南宁处")) {
                if ((item.getUnit().contains("派出所") == false) && (item.getUnit().contains("大队") == false)) {
                    String userId = "";
                    String code = "";
                    if ("1".equals(item.getDisciplinaryType()) && "1".equals(item.getXzSubOption())) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("4");
                            examAutoEvaluation.setPeriod("1");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setMonth(month);
                            examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"单位下民警受到行政警告处分");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年月度南宁处对全处各单位公共扣分标准");
                            examAutoEvaluation.setModelId("691f98a054654bfc9ce3f6f85b7fe4a6");
                            examAutoEvaluation.setOption("民警受到行政警告处分的");
                            examAutoEvaluation.setOptionId("3fdb84b67cfa405cb06cb9c0a39a268b");
                            examAutoEvaluation.setScore("2");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("44");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","纪检惩戒信息_行政警告");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    } else if ((("1".equals(item.getDisciplinaryType()) && "2".equals(item.getXzSubOption())) || ("2".equals(item.getDisciplinaryType()) && "1".equals(item.getDjSubOption()) && "1".equals(item.getRySubOption())))) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("4");
                            examAutoEvaluation.setPeriod("1");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setMonth(month);
                            examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"单位下民警受到行政记过、党内警告处分");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每人次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年月度南宁处对全处各单位公共扣分标准");
                            examAutoEvaluation.setModelId("691f98a054654bfc9ce3f6f85b7fe4a6");
                            examAutoEvaluation.setOption("民警受到行政记过、党内警告处分的");
                            examAutoEvaluation.setOptionId("a4206fa9e5554f1a8bff42b3f5a38e17");
                            examAutoEvaluation.setScore("3");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("45");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","纪检惩戒信息_行政记过、党内警告");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    } else if (("1".equals(item.getDisciplinaryType()) && "3".equals(item.getXzSubOption())) || ("2".equals(item.getDisciplinaryType()) && "1".equals(item.getDjSubOption()) && "2".equals(item.getRySubOption()))) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("4");
                            examAutoEvaluation.setPeriod("1");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setMonth(month);
                            examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"单位下民警受到行政记大过、党内严重警告处分");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每人次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年月度南宁处对全处各单位公共扣分标准");
                            examAutoEvaluation.setModelId("691f98a054654bfc9ce3f6f85b7fe4a6");
                            examAutoEvaluation.setOption("民警受到行政记大过、党内严重警告处分的");
                            examAutoEvaluation.setOptionId("16ec2ab7b62b46e1915bc0d7c9ae656e");
                            examAutoEvaluation.setScore("6");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("46");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","纪检惩戒信息_行政记大过、党内严重警告");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    } else {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("4");
                            examAutoEvaluation.setPeriod("1");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setMonth(month);
                            examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"单位下因教育管理责任落实不到位，民警受到降级、撤销党内职务及以上处分");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每人次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年月度南宁处对全处各单位公共扣分标准");
                            examAutoEvaluation.setModelId("691f98a054654bfc9ce3f6f85b7fe4a6");
                            examAutoEvaluation.setOption("因教育管理责任落实不到位，民警受到降级、撤销党内职务及以上处分的（因个人原因发生问题的按30%扣分）");
                            examAutoEvaluation.setOptionId("7d21fddfa60047beb136f1dc953ddad8");
                            examAutoEvaluation.setScore("8");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("22");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","纪检惩戒信息_降级、撤销党内职务以上处分");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
            } else if (item.getUnit().contains("柳州处")) {
                if ((item.getUnit().contains("派出所") == false) && (item.getUnit().contains("大队") == false)) {
                    String userId = "";
                    String code = "";
                    if ("1".equals(item.getDisciplinaryType()) && "1".equals(item.getXzSubOption())) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("4");
                            examAutoEvaluation.setPeriod("1");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setMonth(month);
                            examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"单位下民警受到行政警告处分");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年月度柳州处对单位（部门）绩效考评公共扣分标准");
                            examAutoEvaluation.setModelId("ebe11e36d28f4c58a3088001c7ab7089");
                            examAutoEvaluation.setOption("民警受到行政警告处分的");
                            examAutoEvaluation.setOptionId("67819b6f57ca4683a377fd161559da07");
                            examAutoEvaluation.setScore("2");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("44");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","纪检惩戒信息_行政警告");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    } else if ((("1".equals(item.getDisciplinaryType()) && "2".equals(item.getXzSubOption())) || ("2".equals(item.getDisciplinaryType()) && "1".equals(item.getDjSubOption()) && "1".equals(item.getRySubOption())))) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("4");
                            examAutoEvaluation.setPeriod("1");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setMonth(month);
                            examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"单位下民警受到行政记过、党内警告处分");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每人次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年月度柳州处对单位（部门）绩效考评公共扣分标准");
                            examAutoEvaluation.setModelId("ebe11e36d28f4c58a3088001c7ab7089");
                            examAutoEvaluation.setOption("民警受到行政记过、党内警告处分的");
                            examAutoEvaluation.setOptionId("a5ecaeed1e114a1ebf22b98f6587e6a6");
                            examAutoEvaluation.setScore("3");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("45");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","纪检惩戒信息_行政记过、党内警告");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    } else if (("1".equals(item.getDisciplinaryType()) && "3".equals(item.getXzSubOption())) || ("2".equals(item.getDisciplinaryType()) && "1".equals(item.getDjSubOption()) && "2".equals(item.getRySubOption()))) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("4");
                            examAutoEvaluation.setPeriod("1");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setMonth(month);
                            examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"单位下民警受到行政记大过、党内严重警告处分");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每人次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年月度柳州处对单位（部门）绩效考评公共扣分标准");
                            examAutoEvaluation.setModelId("ebe11e36d28f4c58a3088001c7ab7089");
                            examAutoEvaluation.setOption("民警受到行政记大过、党内严重警告处分的");
                            examAutoEvaluation.setOptionId("27e5d596ff6a4a4ba00a0d47ecf43ea1");
                            examAutoEvaluation.setScore("6");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("46");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","纪检惩戒信息_行政记大过、党内严重警告");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    } else {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("4");
                            examAutoEvaluation.setPeriod("1");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setMonth(month);
                            examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"单位下因教育管理责任落实不到位，民警受到降级、撤销党内职务及以上处分");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每人次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年月度柳州处对单位（部门）绩效考评公共扣分标准");
                            examAutoEvaluation.setModelId("ebe11e36d28f4c58a3088001c7ab7089");
                            examAutoEvaluation.setOption("因教育管理责任落实不到位，民警受到降级、撤销党内职务及以上处分的（因个人原因发生问题的按30%扣分）");
                            examAutoEvaluation.setOptionId("123810ae524c4e029c32ad75d58a2248");
                            examAutoEvaluation.setScore("8");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("22");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","纪检惩戒信息_降级、撤销党内职务以上处分");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
            } else if (item.getUnit().contains("北海处")) {
                if ((item.getUnit().contains("派出所") == false) && (item.getUnit().contains("大队") == false)) {
                    String userId = "";
                    String code = "";
                    if ("1".equals(item.getDisciplinaryType()) && "1".equals(item.getXzSubOption())) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("4");
                            examAutoEvaluation.setPeriod("1");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setMonth(month);
                            examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"单位下民警受到行政警告处分");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队公共扣分标准");
                            examAutoEvaluation.setModelId("053c03b372694ae2aaa42344d7e7f019");
                            examAutoEvaluation.setOption("民警受到行政警告处分的");
                            examAutoEvaluation.setOptionId("27b60ea1522e4df0882d0c66aa46707f");
                            examAutoEvaluation.setScore("2");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("43");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","纪检惩戒信息_行政警告");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    } else if ((("1".equals(item.getDisciplinaryType()) && "2".equals(item.getXzSubOption())) || ("2".equals(item.getDisciplinaryType()) && "1".equals(item.getDjSubOption()) && "1".equals(item.getRySubOption())))) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("4");
                            examAutoEvaluation.setPeriod("1");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setMonth(month);
                            examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"单位下民警受到行政记过、党内警告处分");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每人次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队公共扣分标准");
                            examAutoEvaluation.setModelId("053c03b372694ae2aaa42344d7e7f019");
                            examAutoEvaluation.setOption("民警受到行政记过、党内警告处分的");
                            examAutoEvaluation.setOptionId("745db20cf9964bffa8e7983731bb789f");
                            examAutoEvaluation.setScore("3");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("44");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","纪检惩戒信息_行政记过、党内警告");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    } else if (("1".equals(item.getDisciplinaryType()) && "3".equals(item.getXzSubOption())) || ("2".equals(item.getDisciplinaryType()) && "1".equals(item.getDjSubOption()) && "2".equals(item.getRySubOption()))) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("4");
                            examAutoEvaluation.setPeriod("1");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setMonth(month);
                            examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"单位下民警受到行政记大过、党内严重警告处分");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每人次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队公共扣分标准");
                            examAutoEvaluation.setModelId("053c03b372694ae2aaa42344d7e7f019");
                            examAutoEvaluation.setOption("民警受到行政记大过、党内严重警告处分的");
                            examAutoEvaluation.setOptionId("7693b228e23a4b9596dabd2e5a32fde1");
                            examAutoEvaluation.setScore("6");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("45");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","纪检惩戒信息_行政记大过、党内严重警告");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    } else {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("4");
                            examAutoEvaluation.setPeriod("1");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setMonth(month);
                            examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"单位下因教育管理责任落实不到位，民警受到降级、撤销党内职务及以上处分");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每人次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队公共扣分标准");
                            examAutoEvaluation.setModelId("053c03b372694ae2aaa42344d7e7f019");
                            examAutoEvaluation.setOption("因教育管理责任落实不到位，民警受到降级、撤销党内职务及以上处分的（因个人原因发生问题的按30%扣分）");
                            examAutoEvaluation.setOptionId("b33a865de89841b2a1fdeb8187df0859");
                            examAutoEvaluation.setScore("8");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("21");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","纪检惩戒信息_降级、撤销党内职务以上处分");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
            }
        });
    }

    public void suoDisciplinaryActionYear(String year, String month) {
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        String lastYear = String.valueOf(Integer.valueOf(year) - 1);
        String startTime = lastYear + "-12" + "-11";
        String endTime = year + "-12" + "-10";
        List<AffairDisciplinaryAction> allList = affairDisciplinaryActionService.allInfo(year, month, startTime, endTime);
        allList.forEach(item -> {
            if (item.getUnit().contains("南宁处")) {
                if (item.getUnit().contains("派出所") || item.getUnit().contains("大队")) {
                    String userId = "";
                    String code = "";
                    if ("1".equals(item.getDisciplinaryType()) && "1".equals(item.getXzSubOption())) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("3");
                            examAutoEvaluation.setPeriod("2");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"单位下民警受到行政警告处分");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年年度南宁处对全处各单位考评公共扣分标准");
                            examAutoEvaluation.setModelId("5587177f089e4ea8926b2feca9b3bf63");
                            examAutoEvaluation.setOption("民警受到行政警告处分的");
                            examAutoEvaluation.setOptionId("d713c9c6424340e9a08b8428935393fa");
                            examAutoEvaluation.setScore("1");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("48");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","纪检惩戒信息_行政警告");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    } else if ((("1".equals(item.getDisciplinaryType()) && "2".equals(item.getXzSubOption())) || ("2".equals(item.getDisciplinaryType()) && "1".equals(item.getDjSubOption()) && "1".equals(item.getRySubOption())))) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("3");
                            examAutoEvaluation.setPeriod("2");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"单位下民警受到行政记过、党内警告处分");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年年度南宁处对全处各单位考评公共扣分标准");
                            examAutoEvaluation.setModelId("5587177f089e4ea8926b2feca9b3bf63");
                            examAutoEvaluation.setOption("民警受到行政记过、党内警告处分的");
                            examAutoEvaluation.setOptionId("8405304420e54299b2cca3825d71f611");
                            examAutoEvaluation.setScore("5");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("49");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","纪检惩戒信息_行政记过、党内警告");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    } else if (("1".equals(item.getDisciplinaryType()) && "3".equals(item.getXzSubOption())) || ("2".equals(item.getDisciplinaryType()) && "1".equals(item.getDjSubOption()) && "2".equals(item.getRySubOption()))) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("3");
                            examAutoEvaluation.setPeriod("2");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"单位下民警受到行政记大过、党内严重警告处分");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队年度绩效考核公共 扣分标准");
                            examAutoEvaluation.setModelId("653c088f3e754adcaa659a3706d304b9");
                            examAutoEvaluation.setOption("民警受到行政记大过、党内严重警告处分的");
                            examAutoEvaluation.setOptionId("c68521a8602b446bbc0c24824db88a1b");
                            examAutoEvaluation.setScore("8");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("50");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","纪检惩戒信息_行政记大过、党内严重警告");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    } else {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("3");
                            examAutoEvaluation.setPeriod("2");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"单位下因教育管理责任落实不到位，民警受到降级、撤销党内职务及以上处分");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队年度绩效考核公共 扣分标准");
                            examAutoEvaluation.setModelId("653c088f3e754adcaa659a3706d304b9");
                            examAutoEvaluation.setOption("因教育管理责任落实不到位，民警受到降级、撤销党内职务及以上处分的（因个人原因发生问题的按30%扣分）");
                            examAutoEvaluation.setOptionId("1d6557fcad444f6eb8bdab957bcbf113");
                            examAutoEvaluation.setScore("10");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("22");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","纪检惩戒信息_降级、撤销党内职务以上处分");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
            } else if (item.getUnit().contains("柳州处")) {
                if (item.getUnit().contains("派出所") || item.getUnit().contains("大队")) {
                    String userId = "";
                    String code = "";
                    if ("1".equals(item.getDisciplinaryType()) && "1".equals(item.getXzSubOption())) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("3");
                            examAutoEvaluation.setPeriod("2");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"单位下民警受到行政警告处分");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年年度柳州处对派出所绩效考评公共扣分标准");
                            examAutoEvaluation.setModelId("8506c629ac9d4ecead9143bf40bd1cc7");
                            examAutoEvaluation.setOption("民警受到行政警告处分的");
                            examAutoEvaluation.setOptionId("94f166f8bbd54d5cad642c99fff17b46");
                            examAutoEvaluation.setScore("1");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("48");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","纪检惩戒信息_行政警告");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    } else if ((("1".equals(item.getDisciplinaryType()) && "2".equals(item.getXzSubOption())) || ("2".equals(item.getDisciplinaryType()) && "1".equals(item.getDjSubOption()) && "1".equals(item.getRySubOption())))) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("3");
                            examAutoEvaluation.setPeriod("2");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"单位下民警受到行政记过、党内警告处分");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年年度柳州处对派出所绩效考评公共扣分标准");
                            examAutoEvaluation.setModelId("8506c629ac9d4ecead9143bf40bd1cc7");
                            examAutoEvaluation.setOption("民警受到行政记过、党内警告处分的");
                            examAutoEvaluation.setOptionId("d51bb7a248d8454188f0dac6cdc6e891");
                            examAutoEvaluation.setScore("5");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("49");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","纪检惩戒信息_行政记过、党内警告");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    } else if (("1".equals(item.getDisciplinaryType()) && "3".equals(item.getXzSubOption())) || ("2".equals(item.getDisciplinaryType()) && "1".equals(item.getDjSubOption()) && "2".equals(item.getRySubOption()))) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("3");
                            examAutoEvaluation.setPeriod("2");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"单位下民警受到行政记大过、党内严重警告处分");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年年度柳州处对派出所绩效考评公共扣分标准");
                            examAutoEvaluation.setModelId("8506c629ac9d4ecead9143bf40bd1cc7");
                            examAutoEvaluation.setOption("民警受到行政记大过、党内严重警告处分的");
                            examAutoEvaluation.setOptionId("5d48a5d2d445458fa6ba06d212c2f526");
                            examAutoEvaluation.setScore("8");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("50");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","纪检惩戒信息_行政记大过、党内严重警告");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    } else {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("3");
                            examAutoEvaluation.setPeriod("2");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"单位下因教育管理责任落实不到位，民警受到降级、撤销党内职务及以上处分");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年年度柳州处对派出所绩效考评公共扣分标准");
                            examAutoEvaluation.setModelId("8506c629ac9d4ecead9143bf40bd1cc7");
                            examAutoEvaluation.setOption("因教育管理责任落实不到位，民警受到降级、撤销党内职务及以上处分的（因个人原因发生问题的按30%扣分）");
                            examAutoEvaluation.setOptionId("978d9a8f2664439c885d9531698c4c27");
                            examAutoEvaluation.setScore("10");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("22");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","纪检惩戒信息_降级、撤销党内职务以上处分");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
            } else if (item.getUnit().contains("北海处")) {
                if (item.getUnit().contains("派出所") || item.getUnit().contains("大队")) {
                    String userId = "";
                    String code = "";
                    if ("1".equals(item.getDisciplinaryType()) && "1".equals(item.getXzSubOption())) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("3");
                            examAutoEvaluation.setPeriod("2");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"单位下民警受到行政警告处分");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年年度北海处对派出所、刑警三大队绩效考评公共扣分标准");
                            examAutoEvaluation.setModelId("c25e5dbae97f46c683ad276ed33580c0");
                            examAutoEvaluation.setOption("民警受到行政警告处分的");
                            examAutoEvaluation.setOptionId("4182a5120146463d9a068c135489e3ba");
                            examAutoEvaluation.setScore("1");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("48");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","纪检惩戒信息_行政警告");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    } else if ((("1".equals(item.getDisciplinaryType()) && "2".equals(item.getXzSubOption())) || ("2".equals(item.getDisciplinaryType()) && "1".equals(item.getDjSubOption()) && "1".equals(item.getRySubOption())))) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("3");
                            examAutoEvaluation.setPeriod("2");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"单位下民警受到行政记过、党内警告处分");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每人次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年年度北海处对派出所、刑警三大队绩效考评公共扣分标准");
                            examAutoEvaluation.setModelId("c25e5dbae97f46c683ad276ed33580c0");
                            examAutoEvaluation.setOption("民警受到行政记过、党内警告处分的");
                            examAutoEvaluation.setOptionId("7bb5752d426547d6b34ae70131cf77ef");
                            examAutoEvaluation.setScore("5");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("49");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","纪检惩戒信息_行政记过、党内警告");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    } else if (("1".equals(item.getDisciplinaryType()) && "3".equals(item.getXzSubOption())) || ("2".equals(item.getDisciplinaryType()) && "1".equals(item.getDjSubOption()) && "2".equals(item.getRySubOption()))) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("3");
                            examAutoEvaluation.setPeriod("2");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"单位下民警受到行政记大过、党内严重警告处分");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每人次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年年度北海处对派出所、刑警三大队绩效考评公共扣分标准");
                            examAutoEvaluation.setModelId("c25e5dbae97f46c683ad276ed33580c0");
                            examAutoEvaluation.setOption("民警受到行政记大过、党内严重警告处分的");
                            examAutoEvaluation.setOptionId("4ee41aee71254a038d2d293be0efaeb8");
                            examAutoEvaluation.setScore("8");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("50");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","纪检惩戒信息_行政记大过、党内严重警告");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    } else {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("3");
                            examAutoEvaluation.setPeriod("2");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setDetails(year+"年"+item.getUnit()+"单位下因教育管理责任落实不到位，民警受到降级、撤销党内职务及以上处分");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每人次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年年度北海处对派出所、刑警三大队绩效考评公共扣分标准");
                            examAutoEvaluation.setModelId("c25e5dbae97f46c683ad276ed33580c0");
                            examAutoEvaluation.setOption("因教育管理责任落实不到位，民警受到降级、撤销党内职务及以上处分的（因个人原因发生问题的按30%扣分）");
                            examAutoEvaluation.setOptionId("1838c65406e4460996e9f775d54c0a7b");
                            examAutoEvaluation.setScore("10");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("22");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","纪检惩戒信息_降级、撤销党内职务以上处分");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
            }
        });
    }

    public void suoDisciplinaryActionMonth(String year, String month) {
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        String startTime = null;
        String endTime = null;
        if("01".equals(month)){
            String lastYear = String.valueOf(Integer.valueOf(year) - 1);
//            startTime = lastYear + "-12" + "-26";
            startTime = year + month + "-01";
            endTime = year + "-" + month + "-31";
        }else{
            String lastMonth = String.valueOf(Integer.valueOf(month) - 1);
//            startTime = year + "-" + lastMonth + "-26";
            startTime = year + "-" + month + "-01";
            endTime = year + "-" + month + "-31";
        }
        List<AffairDisciplinaryAction> allList = affairDisciplinaryActionService.allInfo(year, month, startTime, endTime);
        allList.forEach(item -> {
            if (item.getUnit().contains("南宁处")) {
                if (item.getUnit().contains("派出所") || item.getUnit().contains("大队")) {
                    String userId = "";
                    String code = "";
                    if ("1".equals(item.getDisciplinaryType()) && "1".equals(item.getXzSubOption())) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("3");
                            examAutoEvaluation.setPeriod("1");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setMonth(month);
                            examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"单位下民警受到行政警告处分");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年月度南宁处对全处各单位公共扣分标准");
                            examAutoEvaluation.setModelId("691f98a054654bfc9ce3f6f85b7fe4a6");
                            examAutoEvaluation.setOption("民警受到行政警告处分的");
                            examAutoEvaluation.setOptionId("3fdb84b67cfa405cb06cb9c0a39a268b");
                            examAutoEvaluation.setScore("2");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("44");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","纪检惩戒信息_行政警告");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    } else if ((("1".equals(item.getDisciplinaryType()) && "2".equals(item.getXzSubOption())) || ("2".equals(item.getDisciplinaryType()) && "1".equals(item.getDjSubOption()) && "1".equals(item.getRySubOption())))) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("3");
                            examAutoEvaluation.setPeriod("1");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setMonth(month);
                            examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"单位下民警受到行政记过、党内警告处分");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每人次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年月度南宁处对全处各单位公共扣分标准");
                            examAutoEvaluation.setModelId("691f98a054654bfc9ce3f6f85b7fe4a6");
                            examAutoEvaluation.setOption("民警受到行政记过、党内警告处分的");
                            examAutoEvaluation.setOptionId("a4206fa9e5554f1a8bff42b3f5a38e17");
                            examAutoEvaluation.setScore("3");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("45");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","纪检惩戒信息_行政记过、党内警告");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    } else if (("1".equals(item.getDisciplinaryType()) && "3".equals(item.getXzSubOption())) || ("2".equals(item.getDisciplinaryType()) && "1".equals(item.getDjSubOption()) && "2".equals(item.getRySubOption()))) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("3");
                            examAutoEvaluation.setPeriod("1");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setMonth(month);
                            examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"单位下民警受到行政记大过、党内严重警告处分");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每人次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年月度南宁处对全处各单位公共扣分标准");
                            examAutoEvaluation.setModelId("691f98a054654bfc9ce3f6f85b7fe4a6");
                            examAutoEvaluation.setOption("民警受到行政记大过、党内严重警告处分的");
                            examAutoEvaluation.setOptionId("16ec2ab7b62b46e1915bc0d7c9ae656e");
                            examAutoEvaluation.setScore("6");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("46");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","纪检惩戒信息_行政记大过、党内严重警告");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    } else {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("3");
                            examAutoEvaluation.setPeriod("1");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setMonth(month);
                            examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"单位下因教育管理责任落实不到位，民警受到降级、撤销党内职务及以上处分");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每人次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年月度南宁处对全处各单位公共扣分标准");
                            examAutoEvaluation.setModelId("691f98a054654bfc9ce3f6f85b7fe4a6");
                            examAutoEvaluation.setOption("因教育管理责任落实不到位，民警受到降级、撤销党内职务及以上处分的（因个人原因发生问题的按30%扣分）");
                            examAutoEvaluation.setOptionId("7d21fddfa60047beb136f1dc953ddad8");
                            examAutoEvaluation.setScore("8");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("22");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","纪检惩戒信息_降级、撤销党内职务以上处分");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
            } else if (item.getUnit().contains("柳州处")) {
                if (item.getUnit().contains("派出所") || item.getUnit().contains("大队")) {
                    String userId = "";
                    String code = "";
                    if ("1".equals(item.getDisciplinaryType()) && "1".equals(item.getXzSubOption())) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("3");
                            examAutoEvaluation.setPeriod("1");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setMonth(month);
                            examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"单位下民警受到行政警告处分");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年月度柳州处对派出所绩效考评公共扣分标准");
                            examAutoEvaluation.setModelId("fa161b1fbf1741949b632f6b341020e4");
                            examAutoEvaluation.setOption("民警受到行政警告处分的");
                            examAutoEvaluation.setOptionId("3062c17cebda400081fdab76fd2117aa");
                            examAutoEvaluation.setScore("2");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("44");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","纪检惩戒信息_行政警告");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    } else if ((("1".equals(item.getDisciplinaryType()) && "2".equals(item.getXzSubOption())) || ("2".equals(item.getDisciplinaryType()) && "1".equals(item.getDjSubOption()) && "1".equals(item.getRySubOption())))) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("3");
                            examAutoEvaluation.setPeriod("1");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setMonth(month);
                            examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"单位下民警受到行政记过、党内警告处分");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每人次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年月度柳州处对派出所绩效考评公共扣分标准");
                            examAutoEvaluation.setModelId("fa161b1fbf1741949b632f6b341020e4");
                            examAutoEvaluation.setOption("民警受到行政记过、党内警告处分的");
                            examAutoEvaluation.setOptionId("54a1d964dfe54955bde1106ad535eed2");
                            examAutoEvaluation.setScore("3");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("45");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","纪检惩戒信息_行政记过、党内警告");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    } else if (("1".equals(item.getDisciplinaryType()) && "3".equals(item.getXzSubOption())) || ("2".equals(item.getDisciplinaryType()) && "1".equals(item.getDjSubOption()) && "2".equals(item.getRySubOption()))) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("3");
                            examAutoEvaluation.setPeriod("1");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setMonth(month);
                            examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"单位下民警受到行政记大过、党内严重警告处分");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每人次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年月度柳州处对派出所绩效考评公共扣分标准");
                            examAutoEvaluation.setModelId("fa161b1fbf1741949b632f6b341020e4");
                            examAutoEvaluation.setOption("民警受到行政记大过、党内严重警告处分的");
                            examAutoEvaluation.setOptionId("9bc2c81ad3eb4d11bebaad42cbbd5bd8");
                            examAutoEvaluation.setScore("6");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("46");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","纪检惩戒信息_行政记大过、党内严重警告");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    } else {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("3");
                            examAutoEvaluation.setPeriod("1");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setMonth(month);
                            examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"单位下因教育管理责任落实不到位，民警受到降级、撤销党内职务及以上处分");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每人次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年月度柳州处对派出所绩效考评公共扣分标准");
                            examAutoEvaluation.setModelId("fa161b1fbf1741949b632f6b341020e4");
                            examAutoEvaluation.setOption("因教育管理责任落实不到位，民警受到降级、撤销党内职务及以上处分的（因个人原因发生问题的按30%扣分）");
                            examAutoEvaluation.setOptionId("2a9ebc238f8f4c3999e46cbdb08a5ac7");
                            examAutoEvaluation.setScore("8");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("22");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","纪检惩戒信息_降级、撤销党内职务以上处分");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
            } else if (item.getUnit().contains("北海处")) {
                if (item.getUnit().contains("派出所") || item.getUnit().contains("大队")) {
                    String userId = "";
                    String code = "";
                    if ("1".equals(item.getDisciplinaryType()) && "1".equals(item.getXzSubOption())) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("3");
                            examAutoEvaluation.setPeriod("1");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setMonth(month);
                            examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"单位下民警受到行政警告处分的");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年月度北海处对派出所、大队公共扣分标准");
                            examAutoEvaluation.setModelId("09fbdd772cad4fadabab7c92e3e760b1");
                            examAutoEvaluation.setOption("民警受到行政警告处分的");
                            examAutoEvaluation.setOptionId("da2c9c8a4b1b4353b9d3986f3f364071");
                            examAutoEvaluation.setScore("2");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("43");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","纪检惩戒信息_行政警告");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    } else if ((("1".equals(item.getDisciplinaryType()) && "2".equals(item.getXzSubOption())) || ("2".equals(item.getDisciplinaryType()) && "1".equals(item.getDjSubOption()) && "1".equals(item.getRySubOption())))) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("3");
                            examAutoEvaluation.setPeriod("1");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setMonth(month);
                            examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"单位下民警受到行政记过、党内警告处分");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每人次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年月度北海处对派出所、大队公共扣分标准");
                            examAutoEvaluation.setModelId("09fbdd772cad4fadabab7c92e3e760b1");
                            examAutoEvaluation.setOption("民警受到行政记过、党内警告处分的");
                            examAutoEvaluation.setOptionId("c95fbfaa037a4f63a9951225a5825811");
                            examAutoEvaluation.setScore("3");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("44");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","纪检惩戒信息_行政记过、党内警告");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    } else if (("1".equals(item.getDisciplinaryType()) && "3".equals(item.getXzSubOption())) || ("2".equals(item.getDisciplinaryType()) && "1".equals(item.getDjSubOption()) && "2".equals(item.getRySubOption()))) {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("3");
                            examAutoEvaluation.setPeriod("1");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setMonth(month);
                            examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"单位下民警受到行政记大过、党内严重警告处分");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每人次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年月度北海处对派出所、大队公共扣分标准");
                            examAutoEvaluation.setModelId("09fbdd772cad4fadabab7c92e3e760b1");
                            examAutoEvaluation.setOption("民警受到行政记大过、党内严重警告处分的");
                            examAutoEvaluation.setOptionId("3172554c82f643fa94b7f6f7f2605dd7");
                            examAutoEvaluation.setScore("6");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("45");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","纪检惩戒信息_行政记大过、党内严重警告");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    } else {
                        if (StringUtils.isNotEmpty(item.getUnitId())) {
                            code = officeService.findCodeByUnitId(item.getUnitId());
                            userId = officeService.findUserIdByCode(code);
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("3");
                            examAutoEvaluation.setPeriod("1");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setMonth(month);
                            examAutoEvaluation.setDetails(year+"年"+month+"月"+item.getUnit()+"单位下因教育管理责任落实不到位，民警受到降级、撤销党内职务及以上处分的");
                            examAutoEvaluation.setUnit(item.getUnit());
                            examAutoEvaluation.setUnitId(item.getUnitId());
                            examAutoEvaluation.setRemark("每人次");
                            examAutoEvaluation.setAssess("绩效办及相关部门");
                            examAutoEvaluation.setModel("2020年月度北海处对派出所、大队公共扣分标准");
                            examAutoEvaluation.setModelId("09fbdd772cad4fadabab7c92e3e760b1");
                            examAutoEvaluation.setOption("因教育管理责任落实不到位，民警受到降级、撤销党内职务及以上处分的（因个人原因发生问题的按30%扣分）");
                            examAutoEvaluation.setOptionId("4cc0b2dff0d4436ba7342eafc0b57168");
                            examAutoEvaluation.setScore("8");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("21");
                            examAutoEvaluation.setFromSys("智慧政工");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
            }
        });
    }

    public void minDisciplinaryActionYear(String year, String month) {
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        String lastYear = String.valueOf(Integer.valueOf(year) - 1);
        String startTime = lastYear + "-12" + "-11";
        String endTime = year + "-12" + "-10";
        List<AffairDisciplinaryAction> allList = affairDisciplinaryActionService.allInfo(year, month, startTime, endTime);
        List<User> userList = userDao.findMinJingByRoleId("3f1198e36a534b52a671bae729a0dca9");
        for (int j = 0; j < allList.size(); j++) {
            for (int i = 0; i < userList.size(); i++) {
                if (userList.get(i).getNo().equals(allList.get(j).getIdNumber())) {
                    String userId = "";
                    if ("1".equals(allList.get(j).getDisciplinaryType()) && "1".equals(allList.get(j).getXzSubOption())) {
                        if (StringUtils.isNotEmpty(allList.get(j).getIdNumber())) {
                            userId = userDao.findUserIdByIdNumber(allList.get(j).getIdNumber());
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("2");
                            examAutoEvaluation.setEvalType("7");
                            examAutoEvaluation.setPeriod("2");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setDetails(year+"年"+allList.get(j).getUnit()+"单位下"+allList.get(j).getName()+"受到行政警告处分");
                            examAutoEvaluation.setName(allList.get(j).getName());
                            examAutoEvaluation.setIdNumber(allList.get(j).getIdNumber());
                            examAutoEvaluation.setUnit(allList.get(j).getUnit());
                            examAutoEvaluation.setUnitId(allList.get(j).getUnitId());
                            examAutoEvaluation.setRemark("每次");
                            examAutoEvaluation.setAssess("");
                            examAutoEvaluation.setModel("2020年年度南宁铁路公安局民警绩效考评公共扣分标准");
                            examAutoEvaluation.setModelId("a4acf3d881c6489d9a112fead04d8504");
                            examAutoEvaluation.setOption("民警受到行政警告处分的");
                            examAutoEvaluation.setOptionId("bcc32742bbcc429fa23ad39ddaa6e908");
                            examAutoEvaluation.setScore("15");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("43");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"纪检惩戒信息_行政警告");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    } else if ("2".equals(allList.get(j).getDisciplinaryType()) && "1".equals(allList.get(j).getDjSubOption()) && "1".equals(allList.get(j).getRySubOption())) {
                        if (StringUtils.isNotEmpty(allList.get(j).getIdNumber())) {
                            userId = userDao.findUserIdByIdNumber(allList.get(j).getIdNumber());
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("2");
                            examAutoEvaluation.setEvalType("7");
                            examAutoEvaluation.setPeriod("2");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setDetails(year+"年"+allList.get(j).getUnit()+"单位下"+allList.get(j).getName()+"受到党内警告处分");
                            examAutoEvaluation.setName(allList.get(j).getName());
                            examAutoEvaluation.setIdNumber(allList.get(j).getIdNumber());
                            examAutoEvaluation.setUnit(allList.get(j).getUnit());
                            examAutoEvaluation.setUnitId(allList.get(j).getUnitId());
                            examAutoEvaluation.setRemark("每次");
                            examAutoEvaluation.setAssess("");
                            examAutoEvaluation.setModel("2020年年度南宁铁路公安局民警绩效考评公共扣分标准");
                            examAutoEvaluation.setModelId("a4acf3d881c6489d9a112fead04d8504");
                            examAutoEvaluation.setOption("民警受到党内警告处分的");
                            examAutoEvaluation.setOptionId("fc8760c24a624186a7abc1e96098b6bd");
                            examAutoEvaluation.setScore("20");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("44");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"纪检惩戒信息_行政记过、党内警告");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    } else if ("2".equals(allList.get(j).getDisciplinaryType()) && "2".equals(allList.get(j).getDjSubOption()) && "2".equals(allList.get(j).getRySubOption())) {
                        if (StringUtils.isNotEmpty(allList.get(j).getIdNumber())) {
                            userId = userDao.findUserIdByIdNumber(allList.get(j).getIdNumber());
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("2");
                            examAutoEvaluation.setEvalType("7");
                            examAutoEvaluation.setPeriod("2");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setDetails(year+"年"+allList.get(j).getUnit()+"单位下"+allList.get(j).getName()+"受到党内严重警告处分");
                            examAutoEvaluation.setName(allList.get(j).getName());
                            examAutoEvaluation.setIdNumber(allList.get(j).getIdNumber());
                            examAutoEvaluation.setUnit(allList.get(j).getUnit());
                            examAutoEvaluation.setUnitId(allList.get(j).getUnitId());
                            examAutoEvaluation.setRemark("每次");
                            examAutoEvaluation.setAssess("");
                            examAutoEvaluation.setModel("2020年年度南宁铁路公安局民警绩效考评公共扣分标准");
                            examAutoEvaluation.setModelId("a4acf3d881c6489d9a112fead04d8504");
                            examAutoEvaluation.setOption("民警受到党内严重警告处分");
                            examAutoEvaluation.setOptionId("0a537798ba3843d0b54fca959b389dbf");
                            examAutoEvaluation.setScore("30");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("46");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"纪检惩戒信息_行政记大过、党内严重警告");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    } else if ("1".equals(allList.get(j).getDisciplinaryType()) && !"1".equals(allList.get(j).getXzSubOption())) {
                        if (StringUtils.isNotEmpty(allList.get(j).getIdNumber())) {
                            userId = userDao.findUserIdByIdNumber(allList.get(j).getIdNumber());
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("2");
                            examAutoEvaluation.setEvalType("7");
                            examAutoEvaluation.setPeriod("2");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setDetails(year+"年"+allList.get(j).getUnit()+"单位下"+allList.get(j).getName()+"受到行政记过及以上");
                            examAutoEvaluation.setName(allList.get(j).getName());
                            examAutoEvaluation.setIdNumber(allList.get(j).getIdNumber());
                            examAutoEvaluation.setUnit(allList.get(j).getUnit());
                            examAutoEvaluation.setUnitId(allList.get(j).getUnitId());
                            examAutoEvaluation.setRemark("每次");
                            examAutoEvaluation.setAssess("");
                            examAutoEvaluation.setModel("2020年年度南宁铁路公安局民警绩效考评公共扣分标准");
                            examAutoEvaluation.setModelId("a4acf3d881c6489d9a112fead04d8504");
                            examAutoEvaluation.setOption("民警受到行政记过及以上（不定等次）");
                            examAutoEvaluation.setOptionId("1a0e3ed34367455f979aa2c084b07986");
                            examAutoEvaluation.setScore("100");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("45");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"纪检惩戒信息_行政记过处分及以上");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
            }
        }
    }

    public void minDisciplinaryActionMonth(String year, String month) {
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        String startTime = null;
        String endTime = null;
        if("01".equals(month)){
            String lastYear = String.valueOf(Integer.valueOf(year) - 1);
//            startTime = lastYear + "-12" + "-26";
            startTime = year + month + "-01";
            endTime = year + "-" + month + "-31";
        }else{
            String lastMonth = String.valueOf(Integer.valueOf(month) - 1);
//            startTime = year + "-" + lastMonth + "-26";
            startTime = year + "-" + month + "-01";
            endTime = year + "-" + month + "-31";
        }
        List<AffairDisciplinaryAction> allList = affairDisciplinaryActionService.allInfo(year, month, startTime, endTime);
        List<User> userList = userDao.findMinJingByRoleId("3f1198e36a534b52a671bae729a0dca9");
        for (int j = 0; j < allList.size(); j++) {
            for (int i = 0; i < userList.size(); i++) {
                if (userList.get(i).getNo().equals(allList.get(j).getIdNumber())) {
                    String userId = "";
                    if ("1".equals(allList.get(j).getDisciplinaryType()) && "1".equals(allList.get(j).getXzSubOption())) {
                        if (StringUtils.isNotEmpty(allList.get(j).getIdNumber())) {
                            userId = userDao.findUserIdByIdNumber(allList.get(j).getIdNumber());
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("2");
                            examAutoEvaluation.setEvalType("7");
                            examAutoEvaluation.setPeriod("1");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setMonth(month);
                            examAutoEvaluation.setDetails(year+"年"+month+"月"+allList.get(j).getUnit()+"单位下"+allList.get(j).getName()+"受到行政警告处分");
                            examAutoEvaluation.setName(allList.get(j).getName());
                            examAutoEvaluation.setIdNumber(allList.get(j).getIdNumber());
                            examAutoEvaluation.setUnit(allList.get(j).getUnit());
                            examAutoEvaluation.setUnitId(allList.get(j).getUnitId());
                            examAutoEvaluation.setRemark("每次");
                            examAutoEvaluation.setAssess("");
                            examAutoEvaluation.setModel("2020年月度南宁铁路公安局民警绩效考核公共扣分标准");
                            examAutoEvaluation.setModelId("0c4b8784733d4aff83c94394ab1064dc");
                            examAutoEvaluation.setOption("民警受到行政警告处分的");
                            examAutoEvaluation.setOptionId("cbe6c7f619684af0b8b1a5715bfa4e34");
                            examAutoEvaluation.setScore("40");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("43");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"纪检惩戒信息_行政警告");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    } else if ("2".equals(allList.get(j).getDisciplinaryType()) && "1".equals(allList.get(j).getDjSubOption()) && "1".equals(allList.get(j).getRySubOption())) {
                        if (StringUtils.isNotEmpty(allList.get(j).getIdNumber())) {
                            userId = userDao.findUserIdByIdNumber(allList.get(j).getIdNumber());
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("2");
                            examAutoEvaluation.setEvalType("7");
                            examAutoEvaluation.setPeriod("1");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setMonth(month);
                            examAutoEvaluation.setDetails(year+"年"+month+"月"+allList.get(j).getUnit()+"单位下"+allList.get(j).getName()+"受到党内警告处分");
                            examAutoEvaluation.setName(allList.get(j).getName());
                            examAutoEvaluation.setIdNumber(allList.get(j).getIdNumber());
                            examAutoEvaluation.setUnit(allList.get(j).getUnit());
                            examAutoEvaluation.setUnitId(allList.get(j).getUnitId());
                            examAutoEvaluation.setRemark("每次");
                            examAutoEvaluation.setAssess("");
                            examAutoEvaluation.setModel("2020年月度南宁铁路公安局民警绩效考核公共扣分标准");
                            examAutoEvaluation.setModelId("0c4b8784733d4aff83c94394ab1064dc");
                            examAutoEvaluation.setOption("民警受到党内警告处分的");
                            examAutoEvaluation.setOptionId("164c68626faa4386b82e097bb3dfa90f");
                            examAutoEvaluation.setScore("50");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("44");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"纪检惩戒信息_行政记过、党内警告");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    } else if ("1".equals(allList.get(j).getDisciplinaryType()) && !"1".equals(allList.get(j).getXzSubOption())) {
                        if (StringUtils.isNotEmpty(allList.get(j).getIdNumber())) {
                            userId = userDao.findUserIdByIdNumber(allList.get(j).getIdNumber());
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setEvaluationId(userId);
                            examAutoEvaluation.setType("2");
                            examAutoEvaluation.setEvalType("7");
                            examAutoEvaluation.setPeriod("1");
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setMonth(month);
                            examAutoEvaluation.setDetails(year+"年"+month+"月"+allList.get(j).getUnit()+"单位下"+allList.get(j).getName()+"受到到行政记过及以上（不定等次）");
                            examAutoEvaluation.setName(allList.get(j).getName());
                            examAutoEvaluation.setIdNumber(allList.get(j).getIdNumber());
                            examAutoEvaluation.setUnit(allList.get(j).getUnit());
                            examAutoEvaluation.setUnitId(allList.get(j).getUnitId());
                            examAutoEvaluation.setRemark("每次");
                            examAutoEvaluation.setAssess("");
                            examAutoEvaluation.setModel("2020年月度南宁铁路公安局民警绩效考核公共扣分标准");
                            examAutoEvaluation.setModelId("0c4b8784733d4aff83c94394ab1064dc");
                            examAutoEvaluation.setOption("民警受到行政记过及以上（不定等次）");
                            examAutoEvaluation.setOptionId("88a78c9f3fd545e58b8a29ddb69fa089");
                            examAutoEvaluation.setScore("100");
                            examAutoEvaluation.setTime(date);
                            examAutoEvaluation.setHappenTime(date);
                            examAutoEvaluation.setCheckTime(date);
                            examAutoEvaluation.setRowNum("45");
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"纪检惩戒信息_行政记过处分及以上");
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
            }
        }
    }

    /**
     * 教育训练-基本知识(未参加)
     */
    public void juBasicKnowledgeMonth(String year, String month){
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        List<AffairBasicKnowledge> allInfo = affairBasicKnowledgeService.allInfo(year, month);
        for (int i = 0; i < allInfo.size(); i++) {
            String unit = allInfo.get(i).getUnit();
            String unitId = allInfo.get(i).getUnitId();
            if (allInfo.get(i).getUnit().contains("公安局") && !allInfo.get(i).getUnit().contains("大队")){
                Integer count = 0;
                StringBuffer details = null;
                if ("3".equals(allInfo.get(i).getStatus())){
                    count += 1;
                    if (details == null){
                        details = new StringBuffer(allInfo.get(i).getName());
                    }else{
                        details.append(","+allInfo.get(i).getName());
                    }
                }
                if (details != null){
                    String code = officeService.findCodeByUnitId(unitId);
                    String userId = officeService.findUserIdByCode(code);
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("2");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(year+"年"+month+"月"+unit+"单位下"+details+"教育考核管理，三基成绩，基本知识，未参加");
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setRemark("每人次");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setModel("2020年公安局对局机关各处室直属支队月度绩效考核扣分标准");
                    examAutoEvaluation.setModelId("2a025e9d64ed403687ef6f076223d2d7");
                    examAutoEvaluation.setOption("未按上级规定，组织民警使用“铁路公安教育训练网络信息平台”自学和考试的");
                    examAutoEvaluation.setOptionId("2f0ab612905b4ca5ac7e83c4acfe5459");
                    examAutoEvaluation.setScore(String.valueOf(1 * count));
                    examAutoEvaluation.setTime(date);
                    examAutoEvaluation.setHappenTime(date);
                    examAutoEvaluation.setCheckTime(date);
                    examAutoEvaluation.setRowNum("336");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"未参加教育考核");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
        }
        /*List<Map<String, String>> allOffice = officeService.findAllOffice();
        for (int i = 0; i < allOffice.size(); i++) {
            String unit = allOffice.get(i).get("name");
            String unitId = allOffice.get(i).get("id");
            if (allOffice.get(i).get("name").contains("公安局") && !allOffice.get(i).get("name").contains("大队")){
                List<PersonnelBase> userList = personnelBaseDao.findAllUserByUnitId(unitId);
                Integer count = 0;
                StringBuffer details = null;
                for (int j = 0; j < userList.size(); j++) {
                    String idNumber = userList.get(j).getIdNumber();
                    int unitCount = affairBasicKnowledgeService.unitCount(year, month, unitId, idNumber);
                    if (unitCount < 1){
                        count += 1;
                        if (details == null){
                            details = new StringBuffer(userList.get(j).getName());
                        }else{
                            details.append(","+userList.get(j).getName());
                        }
                    }
                }
                if (details != null){
                    String code = officeService.findCodeByUnitId(unitId);
                    String userId = officeService.findUserIdByCode(code);
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("2");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(year+"年"+month+"月"+unit+"单位下"+details+"教育考核管理，三基成绩，基本知识，未参加");
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setRemark("每人次");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setModel("2020年公安局对局机关各处室直属支队月度绩效考核扣分标准");
                    examAutoEvaluation.setModelId("2a025e9d64ed403687ef6f076223d2d7");
                    examAutoEvaluation.setOption("未按上级规定，组织民警使用“铁路公安教育训练网络信息平台”自学和考试的");
                    examAutoEvaluation.setOptionId("2f0ab612905b4ca5ac7e83c4acfe5459");
                    examAutoEvaluation.setScore(String.valueOf(1 * count));
                    examAutoEvaluation.setTime(date);
                    examAutoEvaluation.setHappenTime(date);
                    examAutoEvaluation.setCheckTime(date);
                    examAutoEvaluation.setRowNum("336");
                    examAutoEvaluation.setFromSys("智慧政工");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
        }*/
    }

    public void chuBasicKnowledgeMonth(String year, String month){
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        List<AffairBasicKnowledge> allInfo = affairBasicKnowledgeService.allInfo(year, month);
        for (int i = 0; i < allInfo.size(); i++) {
            String unit = allInfo.get(i).getUnit();
            String unitId = allInfo.get(i).getUnitId();
            if (allInfo.get(i).getUnit().contains("南宁处") && ((allInfo.get(i).getUnit().contains("派出所") == false) && (allInfo.get(i).getUnit().contains("大队") == false))){
                Integer count = 0;
                StringBuffer details = null;
                if ("3".equals(allInfo.get(i).getStatus())){
                    count += 1;
                    if (details == null){
                        details = new StringBuffer(allInfo.get(i).getName());
                    }else{
                        details.append(","+allInfo.get(i).getName());
                    }
                }
                if (details != null){
                    String code = officeService.findCodeByUnitId(unitId);
                    String userId = officeService.findUserIdByCode(code);
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(year+"年"+month+"月"+unit+"单位下"+details+"教育考核管理，三基成绩，基本知识，未参加");
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setRemark("每人次");
                    examAutoEvaluation.setAssess("人事训练室");
                    examAutoEvaluation.setModel("2020年月度南宁公安处对各部门绩效考核评分标准（队伍建设）");
                    examAutoEvaluation.setModelId("5d9645f6da694060a2f6cbbdf388343f");
                    examAutoEvaluation.setOption("未按上级规定，组织民警使用“铁路公安教育训练网络信息平台”自学和考试的");
                    examAutoEvaluation.setOptionId("2ecce6ca53364cd8ab01b811eeb29b14");
                    examAutoEvaluation.setScore(String.valueOf(1 * count));
                    examAutoEvaluation.setTime(date);
                    examAutoEvaluation.setHappenTime(date);
                    examAutoEvaluation.setCheckTime(date);
                    examAutoEvaluation.setRowNum("336");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","未参加教育考核");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
            else if(allInfo.get(i).getUnit().contains("柳州处") && ((allInfo.get(i).getUnit().contains("派出所") == false) && (allInfo.get(i).getUnit().contains("大队") == false))){
                Integer count = 0;
                StringBuffer details = null;
                if ("3".equals(allInfo.get(i).getStatus())){
                    count += 1;
                    if (details == null){
                        details = new StringBuffer(allInfo.get(i).getName());
                    }else{
                        details.append(","+allInfo.get(i).getName());
                    }
                }
                if (details != null){
                    String code = officeService.findCodeByUnitId(unitId);
                    String userId = officeService.findUserIdByCode(code);
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(year+"年"+month+"月"+unit+"单位下"+details+"教育考核管理，三基成绩，基本知识，未参加");
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setRemark("每人次");
                    examAutoEvaluation.setAssess("人事训练室");
                    examAutoEvaluation.setModel("柳州处对人训室月度绩效考核评分标准(业务部分)");
                    examAutoEvaluation.setModelId("59bf5ce011ea439289f0fd9f6d2bf743");
                    // 对应了两条标准
                    examAutoEvaluation.setOption("未按上级规定，组织民警使用“铁路公安教育训练网络信息平台”自学和考试的，每人扣");
                    examAutoEvaluation.setOptionId("29660f14ae584f2f967b0994cbb2cfa7");
                    /*examAutoEvaluation.setModel("2020年月度南宁公安处对各部门绩效考核评分标准（队伍建设）");
                    examAutoEvaluation.setModelId("2ad5c152e330467da8454fa076b467c1");
                    examAutoEvaluation.setOption("未按上级规定，组织民警使用“铁路公安教育训练网络信息平台”自学和考试的");
                    examAutoEvaluation.setOptionId("2ecce6ca53364cd8ab01b811eeb29b14");*/
                    examAutoEvaluation.setScore(String.valueOf(1 * count));
                    examAutoEvaluation.setTime(date);
                    examAutoEvaluation.setHappenTime(date);
                    examAutoEvaluation.setCheckTime(date);
                    /*examAutoEvaluation.setRowNum("");*/
                    examAutoEvaluation.setRowNum("336");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","未参加教育考核");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
            else if(allInfo.get(i).getUnit().contains("北海处") && ((allInfo.get(i).getUnit().contains("派出所") == false) && (allInfo.get(i).getUnit().contains("大队") == false))){
                Integer count = 0;
                StringBuffer details = null;
                if ("3".equals(allInfo.get(i).getStatus())){
                    count += 1;
                    if (details == null){
                        details = new StringBuffer(allInfo.get(i).getName());
                    }else{
                        details.append(","+allInfo.get(i).getName());
                    }
                }
                if (details != null){
                    String code = officeService.findCodeByUnitId(unitId);
                    String userId = officeService.findUserIdByCode(code);
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(year+"年"+month+"月"+unit+"单位下"+details+"教育考核管理，三基成绩，基本知识，未参加");
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setRemark("每人次");
                    examAutoEvaluation.setAssess("人事训练室");
                    examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队扣分标准（队伍建设）");
                    examAutoEvaluation.setModelId("ee10e56a2c1347ef95dd303bb04d249a");
                    examAutoEvaluation.setOption("未按上级规定，组织民警使用“铁路公安教育训练网络信息平台”自学和考试的，每人扣");
                    examAutoEvaluation.setOptionId("5582ddc8d1434cb59152aa7558e8a39f");
                    examAutoEvaluation.setScore(String.valueOf(1 * count));
                    examAutoEvaluation.setTime(date);
                    examAutoEvaluation.setHappenTime(date);
                    examAutoEvaluation.setCheckTime(date);
                    examAutoEvaluation.setRowNum("93");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","未参加教育考核");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
        }
       /* List<Map<String, String>> allOffice = officeService.findAllOffice();
        for (int i = 0; i < allOffice.size(); i++) {
            String unit = allOffice.get(i).get("name");
            String unitId = allOffice.get(i).get("id");
            if (allOffice.get(i).get("name").contains("南宁处") && !allOffice.get(i).get("name").contains("派出所") && !allOffice.get(i).get("name").contains("大队")){
                List<PersonnelBase> userList = personnelBaseDao.findAllUserByUnitId(unitId);
                Integer count = 0;
                StringBuffer details = null;
                for (int j = 0; j < userList.size(); j++) {
                    String idNumber = userList.get(j).getIdNumber();
                    int unitCount = affairBasicKnowledgeService.unitCount(year, month, unitId, idNumber);
                    if (unitCount < 1){
                        count += 1;
                        if (details == null){
                            details = new StringBuffer(userList.get(j).getName());
                        }else{
                            details.append(","+userList.get(j).getName());
                        }
                    }
                }
                if (details != null){
                    String code = officeService.findCodeByUnitId(unitId);
                    String userId = officeService.findUserIdByCode(code);
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(year+"年"+month+"月"+unit+"单位下"+details+"教育考核管理，三基成绩，基本知识，未参加");
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setRemark("每人次");
                    examAutoEvaluation.setAssess("人事训练室");
                    examAutoEvaluation.setModel("南宁公安处月度对各单位（部门）2020年度绩效考核评分标准（队伍建设）");
                    examAutoEvaluation.setModelId("2ad5c152e330467da8454fa076b467c1");
                    examAutoEvaluation.setOption("未按上级规定，组织民警使用“铁路公安教育训练网络信息平台”自学和考试的");
                    examAutoEvaluation.setOptionId("2ecce6ca53364cd8ab01b811eeb29b14");
                    examAutoEvaluation.setScore(String.valueOf(1 * count));
                    examAutoEvaluation.setTime(date);
                    examAutoEvaluation.setHappenTime(date);
                    examAutoEvaluation.setCheckTime(date);
                    examAutoEvaluation.setRowNum("336");
                    examAutoEvaluation.setFromSys("智慧政工");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
            else if (allOffice.get(i).get("name").contains("柳州处") && !allOffice.get(i).get("name").contains("派出所") && !allOffice.get(i).get("name").contains("大队")){
                List<PersonnelBase> userList = personnelBaseDao.findAllUserByUnitId(unitId);
                Integer count = 0;
                StringBuffer details = null;
                for (int j = 0; j < userList.size(); j++) {
                    String idNumber = userList.get(j).getIdNumber();
                    int unitCount = affairBasicKnowledgeService.unitCount(year, month, unitId, idNumber);
                    if (unitCount < 1){
                        count += 1;
                        if (details == null){
                            details = new StringBuffer(userList.get(j).getName());
                        }else{
                            details.append(","+userList.get(j).getName());
                        }
                    }
                }
                if (details != null){
                    String code = officeService.findCodeByUnitId(unitId);
                    String userId = officeService.findUserIdByCode(code);
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(year+"年"+month+"月"+unit+"单位下"+details+"教育考核管理，三基成绩，基本知识，未参加");
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setRemark("每人次");
                    examAutoEvaluation.setAssess("人事训练室");
                *//*examAutoEvaluation.setModel("柳州处对单位（部门）2020年月度队伍建设绩效考核评分标准");
                examAutoEvaluation.setModelId("ad1ae5ab1a8f47df8f09bb05726fa14e");
                // 对应了两条标准
                examAutoEvaluation.setOption("");
                examAutoEvaluation.setOptionId("");*//*
                    examAutoEvaluation.setModel("南宁公安处月度对各单位（部门）2020年度绩效考核评分标准（队伍建设）");
                    examAutoEvaluation.setModelId("2ad5c152e330467da8454fa076b467c1");
                    examAutoEvaluation.setOption("未按上级规定，组织民警使用“铁路公安教育训练网络信息平台”自学和考试的");
                    examAutoEvaluation.setOptionId("2ecce6ca53364cd8ab01b811eeb29b14");
                    examAutoEvaluation.setScore(String.valueOf(1 * count));
                    examAutoEvaluation.setTime(date);
                    examAutoEvaluation.setHappenTime(date);
                    examAutoEvaluation.setCheckTime(date);
                    *//*examAutoEvaluation.setRowNum("");*//*
                    examAutoEvaluation.setRowNum("336");
                    examAutoEvaluation.setFromSys("智慧政工");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
            else if (allOffice.get(i).get("name").contains("北海处") && !allOffice.get(i).get("name").contains("派出所") && !allOffice.get(i).get("name").contains("大队")){
                List<PersonnelBase> userList = personnelBaseDao.findAllUserByUnitId(unitId);
                Integer count = 0;
                StringBuffer details = null;
                for (int j = 0; j < userList.size(); j++) {
                    String idNumber = userList.get(j).getIdNumber();
                    int unitCount = affairBasicKnowledgeService.unitCount(year, month, unitId, idNumber);
                    if (unitCount < 1){
                        count += 1;
                        if (details == null){
                            details = new StringBuffer(userList.get(j).getName());
                        }else{
                            details.append(","+userList.get(j).getName());
                        }
                    }
                }
                if (details != null){
                    String code = officeService.findCodeByUnitId(unitId);
                    String userId = officeService.findUserIdByCode(code);
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(year+"年"+month+"月"+unit+"单位下"+details+"教育考核管理，三基成绩，基本知识，未参加");
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setRemark("每人次");
                    examAutoEvaluation.setAssess("人事训练室");
                    examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队扣分标准（队伍建设）");
                    examAutoEvaluation.setModelId("ee10e56a2c1347ef95dd303bb04d249a");
                    examAutoEvaluation.setOption("未按上级规定，组织民警使用“铁路公安教育训练网络信息平台”自学和考试的，每人扣");
                    examAutoEvaluation.setOptionId("5582ddc8d1434cb59152aa7558e8a39f");
                    examAutoEvaluation.setScore(String.valueOf(1 * count));
                    examAutoEvaluation.setTime(date);
                    examAutoEvaluation.setHappenTime(date);
                    examAutoEvaluation.setCheckTime(date);
                    examAutoEvaluation.setRowNum("93");
                    examAutoEvaluation.setFromSys("智慧政工");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
        }*/
    }

    public void chuBasicKnowledgeYear(String year){
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        List<AffairBasicKnowledge> allInfo = affairBasicKnowledgeService.allInfo(year, "");
        for (int i = 0; i < allInfo.size(); i++) {
            String unit = allInfo.get(i).getUnit();
            String unitId = allInfo.get(i).getUnitId();
            if (allInfo.get(i).getUnit().contains("南宁处") && ((allInfo.get(i).getUnit().contains("派出所") == false) && (allInfo.get(i).getUnit().contains("大队") == false))){
                Integer count = 0;
                StringBuffer details = null;
                if ("3".equals(allInfo.get(i).getStatus())){
                    count += 1;
                    if (details == null){
                        details = new StringBuffer(allInfo.get(i).getName());
                    }else{
                        details.append(","+allInfo.get(i).getName());
                    }
                }
                if (details != null){
                    String code = officeService.findCodeByUnitId(unitId);
                    String userId = officeService.findUserIdByCode(code);
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(year+"年"+unit+"单位下"+details+"教育考核管理，三基成绩，基本知识，未参加");
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setRemark("每人次");
                    examAutoEvaluation.setAssess("人事训练室");
                    examAutoEvaluation.setModel("2020年年度南宁公安处对各部门扣分标准(队伍建设)");
                    examAutoEvaluation.setModelId("13ea683844d644cb8aa15e00fb07f825");
                    examAutoEvaluation.setOption("未按上级规定，组织民警使用“铁路公安教育训练网络信息平台”自学和考试的，每人扣");
                    examAutoEvaluation.setOptionId("6125aa6268994a5f8fcdb93c2c3e6447");
                    examAutoEvaluation.setScore(String.valueOf(0.2 * count));
                    examAutoEvaluation.setTime(date);
                    examAutoEvaluation.setHappenTime(date);
                    examAutoEvaluation.setCheckTime(date);
                    examAutoEvaluation.setRowNum("84");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","未参加教育考核");
                    //this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
            else if(allInfo.get(i).getUnit().contains("柳州处") && ((allInfo.get(i).getUnit().contains("派出所") == false) && (allInfo.get(i).getUnit().contains("大队") == false))){
                Integer count = 0;
                StringBuffer details = null;
                if ("3".equals(allInfo.get(i).getStatus())){
                    count += 1;
                    if (details == null){
                        details = new StringBuffer(allInfo.get(i).getName());
                    }else{
                        details.append(","+allInfo.get(i).getName());
                    }
                }
                if (details != null){
                    String code = officeService.findCodeByUnitId(unitId);
                    String userId = officeService.findUserIdByCode(code);
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(year+"年"+unit+"单位下"+details+"教育考核管理，三基成绩，基本知识，未参加");
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setRemark("每人次");
                    examAutoEvaluation.setAssess("人事训练室");
                    examAutoEvaluation.setModel("柳州处对人训室年度绩效考核评分标准(业务部分)");
                    examAutoEvaluation.setModelId("5b13af00fcd44b9f8e530db03c06fc95");
                    // 对应了两条标准
                    examAutoEvaluation.setOption("未按上级规定，组织民警使用“铁路公安教育训练网络信息平台”自学和考试的，每人扣");
                    examAutoEvaluation.setOptionId("9dea2384b71a49cfa488ffd97433c683");
                    /*examAutoEvaluation.setModel("2020年年度南宁处对各单位（部门）绩效考核扣分标准(队伍建设)");
                    examAutoEvaluation.setModelId("a06767b603d4489bb6659088df6d2d46");
                    examAutoEvaluation.setOption("未按上级规定，组织民警使用“铁路公安教育训练网络信息平台”自学和考试的，每人扣");
                    examAutoEvaluation.setOptionId("6125aa6268994a5f8fcdb93c2c3e6447");
                    examAutoEvaluation.setScore(String.valueOf(1 * count));*/
                    examAutoEvaluation.setTime(date);
                    examAutoEvaluation.setHappenTime(date);
                    examAutoEvaluation.setCheckTime(date);
                    /*examAutoEvaluation.setRowNum("");*/
                    examAutoEvaluation.setRowNum("84");
                    examAutoEvaluation.setFromSys("智慧政工");
                    //this.deleteInfoByMore(examAutoEvaluation);
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","未参加教育考核");
                    this.save(examAutoEvaluation);
                }
            }
            else if(allInfo.get(i).getUnit().contains("北海处") && ((allInfo.get(i).getUnit().contains("派出所") == false) && (allInfo.get(i).getUnit().contains("大队") == false))){
                Integer count = 0;
                StringBuffer details = null;
                if ("3".equals(allInfo.get(i).getStatus())){
                    count += 1;
                    if (details == null){
                        details = new StringBuffer(allInfo.get(i).getName());
                    }else{
                        details.append(","+allInfo.get(i).getName());
                    }
                }
                if (details != null){
                    String code = officeService.findCodeByUnitId(unitId);
                    String userId = officeService.findUserIdByCode(code);
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(year+"年"+unit+"单位下"+details+"教育考核管理，三基成绩，基本知识，未参加");
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setRemark("每人次");
                    examAutoEvaluation.setAssess("人事训练室");
                    examAutoEvaluation.setModel("2020年年度北海处对机关科室、支队扣分标准（队伍建设部分）");
                    examAutoEvaluation.setModelId("23c595a290ce4e9b90d042104d101a8b");
                    examAutoEvaluation.setOption("未按上级规定，组织民警使用“铁路公安教育训练网络信息平台”自学和考试的，每人扣");
                    examAutoEvaluation.setOptionId("3ddccdfc9dc049ecae0c296bed418309");
                    examAutoEvaluation.setScore(String.valueOf(0.2 * count));
                    examAutoEvaluation.setTime(date);
                    examAutoEvaluation.setHappenTime(date);
                    examAutoEvaluation.setCheckTime(date);
                    examAutoEvaluation.setRowNum("93");
                    examAutoEvaluation.setFromSys("智慧政工");
                    //this.deleteInfoByMore(examAutoEvaluation);
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","未参加教育考核");
                    this.save(examAutoEvaluation);
                }
            }
        }
        /*List<Map<String, String>> allOffice = officeService.findAllOffice();
        for (int i = 0; i < allOffice.size(); i++) {
            String unit = allOffice.get(i).get("name");
            String unitId = allOffice.get(i).get("id");
            if (allOffice.get(i).get("name").contains("南宁处") && !allOffice.get(i).get("name").contains("派出所") && !allOffice.get(i).get("name").contains("大队")){
                List<PersonnelBase> userList = personnelBaseDao.findAllUserByUnitId(unitId);
                Integer count = 0;
                StringBuffer details = null;
                for (int j = 0; j < userList.size(); j++) {
                    String idNumber = userList.get(j).getIdNumber();
                    int unitCount = affairBasicKnowledgeService.unitCount(year, "", unitId, idNumber);
                    if (unitCount < 1){
                        count += 1;
                        if (details == null){
                            details = new StringBuffer(userList.get(j).getName());
                        }else{
                            details.append(","+userList.get(j).getName());
                        }
                    }
                }
                if (details != null){
                    String code = officeService.findCodeByUnitId(unitId);
                    String userId = officeService.findUserIdByCode(code);
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(year+"年"+unit+"单位下"+details+"教育考核管理，三基成绩，基本知识，未参加");
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setRemark("每人次");
                    examAutoEvaluation.setAssess("人事训练室");
                    examAutoEvaluation.setModel("2020年年度南宁处对各单位（部门）绩效考核扣分标准(队伍建设)");
                    examAutoEvaluation.setModelId("a06767b603d4489bb6659088df6d2d46");
                    examAutoEvaluation.setOption("未按上级规定，组织民警使用“铁路公安教育训练网络信息平台”自学和考试的，每人扣");
                    examAutoEvaluation.setOptionId("6125aa6268994a5f8fcdb93c2c3e6447");
                    examAutoEvaluation.setScore(String.valueOf(0.2 * count));
                    examAutoEvaluation.setTime(date);
                    examAutoEvaluation.setHappenTime(date);
                    examAutoEvaluation.setCheckTime(date);
                    examAutoEvaluation.setRowNum("84");
                    examAutoEvaluation.setFromSys("智慧政工");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
            else if (allOffice.get(i).get("name").contains("柳州处") && !allOffice.get(i).get("name").contains("派出所") && !allOffice.get(i).get("name").contains("大队")){
                List<PersonnelBase> userList = personnelBaseDao.findAllUserByUnitId(unitId);
                Integer count = 0;
                StringBuffer details = null;
                for (int j = 0; j < userList.size(); j++) {
                    String idNumber = userList.get(j).getIdNumber();
                    int unitCount = affairBasicKnowledgeService.unitCount(year, "", unitId, idNumber);
                    if (unitCount < 1){
                        count += 1;
                        if (details == null){
                            details = new StringBuffer(userList.get(j).getName());
                        }else{
                            details.append(","+userList.get(j).getName());
                        }
                    }
                }
                if (details != null){
                    String code = officeService.findCodeByUnitId(unitId);
                    String userId = officeService.findUserIdByCode(code);
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(year+"年"+unit+"单位下"+details+"教育考核管理，三基成绩，基本知识，未参加");
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setRemark("每人次");
                    examAutoEvaluation.setAssess("人事训练室");
               *//* examAutoEvaluation.setModel("柳州处对单位（部门）2020年年度队伍建设绩效考核评分标准");
                examAutoEvaluation.setModelId("05eeb58bd7eb42058f479c6b6f26352d");
                // 对应了两条标准
                examAutoEvaluation.setOption("");
                examAutoEvaluation.setOptionId("");*//*
                    examAutoEvaluation.setModel("2020年年度南宁处对各单位（部门）绩效考核扣分标准(队伍建设)");
                    examAutoEvaluation.setModelId("a06767b603d4489bb6659088df6d2d46");
                    examAutoEvaluation.setOption("未按上级规定，组织民警使用“铁路公安教育训练网络信息平台”自学和考试的，每人扣");
                    examAutoEvaluation.setOptionId("6125aa6268994a5f8fcdb93c2c3e6447");
                    examAutoEvaluation.setScore(String.valueOf(1 * count));
                    examAutoEvaluation.setTime(date);
                    examAutoEvaluation.setHappenTime(date);
                    examAutoEvaluation.setCheckTime(date);
                    *//*examAutoEvaluation.setRowNum("");*//*
                    examAutoEvaluation.setRowNum("84");
                    examAutoEvaluation.setFromSys("智慧政工");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
            else if (allOffice.get(i).get("name").contains("北海处") && !allOffice.get(i).get("name").contains("派出所") && !allOffice.get(i).get("name").contains("大队")){
                List<PersonnelBase> userList = personnelBaseDao.findAllUserByUnitId(unitId);
                Integer count = 0;
                StringBuffer details = null;
                for (int j = 0; j < userList.size(); j++) {
                    String idNumber = userList.get(j).getIdNumber();
                    int unitCount = affairBasicKnowledgeService.unitCount(year, "", unitId, idNumber);
                    if (unitCount < 1){
                        count += 1;
                        if (details == null){
                            details = new StringBuffer(userList.get(j).getName());
                        }else{
                            details.append(","+userList.get(j).getName());
                        }
                    }
                }
                if (details != null){
                    String code = officeService.findCodeByUnitId(unitId);
                    String userId = officeService.findUserIdByCode(code);
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(year+"年"+unit+"单位下"+details+"教育考核管理，三基成绩，基本知识，未参加");
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setRemark("每人次");
                    examAutoEvaluation.setAssess("人事训练室");
                    examAutoEvaluation.setModel("2020年年度北海处对机关科室、支队扣分标准（队伍建设部分）");
                    examAutoEvaluation.setModelId("23c595a290ce4e9b90d042104d101a8b");
                    examAutoEvaluation.setOption("未按上级规定，组织民警使用“铁路公安教育训练网络信息平台”自学和考试的，每人扣");
                    examAutoEvaluation.setOptionId("3ddccdfc9dc049ecae0c296bed418309");
                    examAutoEvaluation.setScore(String.valueOf(0.2 * count));
                    examAutoEvaluation.setTime(date);
                    examAutoEvaluation.setHappenTime(date);
                    examAutoEvaluation.setCheckTime(date);
                    examAutoEvaluation.setRowNum("93");
                    examAutoEvaluation.setFromSys("智慧政工");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
        }*/
    }

    public void duiBasicKnowledgeMonth(String year, String month){
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        List<AffairBasicKnowledge> allInfo = affairBasicKnowledgeService.allInfo(year, month);
        for (int i = 0; i < allInfo.size(); i++) {
            String unit = allInfo.get(i).getUnit();
            String unitId = allInfo.get(i).getUnitId();
            if (allInfo.get(i).getUnit().contains("南宁处") && (allInfo.get(i).getUnit().contains("派出所") || allInfo.get(i).getUnit().contains("大队"))){
                Integer count = 0;
                StringBuffer details = null;
                if ("3".equals(allInfo.get(i).getStatus())){
                    count += 1;
                    if (details == null){
                        details = new StringBuffer(allInfo.get(i).getName());
                    }else{
                        details.append(","+allInfo.get(i).getName());
                    }
                }
                if (details != null){
                    String code = officeService.findCodeByUnitId(unitId);
                    String userId = officeService.findUserIdByCode(code);
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(year+"年"+month+"月"+unit+"单位下"+details+"教育考核管理，三基成绩，基本知识，未参加");
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setRemark("每人次");
                    examAutoEvaluation.setAssess("人事训练室");
                    examAutoEvaluation.setModel("2020年月度南宁公安处对派出所绩效考核评分标准（队伍建设）");
                    examAutoEvaluation.setModelId("ddc6d6dd210e4f428b3a5361f27389fa");
                    examAutoEvaluation.setOption("未按上级规定，组织民警使用“铁路公安教育训练网络信息平台”自学和考试的");
                    examAutoEvaluation.setOptionId("acbec340f51b4f02a1e9445b5e3ab035");
                    examAutoEvaluation.setScore(String.valueOf(10 * count));
                    examAutoEvaluation.setTime(date);
                    examAutoEvaluation.setHappenTime(date);
                    examAutoEvaluation.setCheckTime(date);
                    examAutoEvaluation.setRowNum("120");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","未参加教育考核");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
            else if(allInfo.get(i).getUnit().contains("柳州处") && (allInfo.get(i).getUnit().contains("派出所") || allInfo.get(i).getUnit().contains("大队"))){
                Integer count = 0;
                StringBuffer details = null;
                if ("3".equals(allInfo.get(i).getStatus())){
                    count += 1;
                    if (details == null){
                        details = new StringBuffer(allInfo.get(i).getName());
                    }else{
                        details.append(","+allInfo.get(i).getName());
                    }
                }
                if (details != null){
                    String code = officeService.findCodeByUnitId(unitId);
                    String userId = officeService.findUserIdByCode(code);
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(year+"年"+month+"月"+unit+"单位下"+details+"教育考核管理，三基成绩，基本知识，未参加");
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setRemark("每人次");
                    examAutoEvaluation.setAssess("人事训练室");
               /* examAutoEvaluation.setModel("柳州处对派出所2020年月度队伍建设绩效考核扣分标准");
                examAutoEvaluation.setModelId("833e7b9ae7084f9a993dfa802fff74e0");
                // 对应了两条标准
                examAutoEvaluation.setOption("");
                examAutoEvaluation.setOptionId("");*/
                    examAutoEvaluation.setModel("2020年月度南宁公安处对派出所绩效考核评分标准（队伍建设）");
                    examAutoEvaluation.setModelId("ddc6d6dd210e4f428b3a5361f27389fa");
                    examAutoEvaluation.setOption("未按上级规定，组织民警使用“铁路公安教育训练网络信息平台”自学和考试的");
                    examAutoEvaluation.setOptionId("acbec340f51b4f02a1e9445b5e3ab035");
                    examAutoEvaluation.setScore(String.valueOf(10 * count));
                    examAutoEvaluation.setTime(date);
                    examAutoEvaluation.setHappenTime(date);
                    examAutoEvaluation.setCheckTime(date);
                    /*examAutoEvaluation.setRowNum("");*/
                    examAutoEvaluation.setRowNum("120");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","未参加教育考核");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
            else if(allInfo.get(i).getUnit().contains("北海处") && (allInfo.get(i).getUnit().contains("派出所") || allInfo.get(i).getUnit().contains("大队"))){
                Integer count = 0;
                StringBuffer details = null;
                if ("3".equals(allInfo.get(i).getStatus())){
                    count += 1;
                    if (details == null){
                        details = new StringBuffer(allInfo.get(i).getName());
                    }else{
                        details.append(","+allInfo.get(i).getName());
                    }
                }
                if (details != null){
                    String code = officeService.findCodeByUnitId(unitId);
                    String userId = officeService.findUserIdByCode(code);
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(year+"年"+month+"月"+unit+"单位下"+details+"教育考核管理，三基成绩，基本知识，未参加");
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setRemark("每人次");
                    examAutoEvaluation.setAssess("人事训练室");
                    examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队扣分标准（队伍建设）");
                    examAutoEvaluation.setModelId("4911c543e6b442aba644ad0eafe0e702");
                    examAutoEvaluation.setOption("未按上级规定，组织民警使用“铁路公安教育训练网络信息平台”自学和考试的，每人扣");
                    examAutoEvaluation.setOptionId("f08f39b9174a4613a5027e5038a45009");
                    examAutoEvaluation.setScore(String.valueOf(10 * count));
                    examAutoEvaluation.setTime(date);
                    examAutoEvaluation.setHappenTime(date);
                    examAutoEvaluation.setCheckTime(date);
                    examAutoEvaluation.setRowNum("91");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","未参加教育考核");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
        }
       /* List<Map<String, String>> allOffice = officeService.findAllOffice();
        for (int i = 0; i < allOffice.size(); i++) {
            String unit = allOffice.get(i).get("name");
            String unitId = allOffice.get(i).get("id");
            if (allOffice.get(i).get("name").contains("南宁处") && (allOffice.get(i).get("name").contains("派出所") || allOffice.get(i).get("name").contains("大队"))){
                List<PersonnelBase> userList = personnelBaseDao.findAllUserByUnitId(unitId);
                Integer count = 0;
                StringBuffer details = null;
                for (int j = 0; j < userList.size(); j++) {
                    String idNumber = userList.get(j).getIdNumber();
                    int unitCount = affairBasicKnowledgeService.unitCount(year, month, unitId, idNumber);
                    if (unitCount < 1){
                        count += 1;
                        if (details == null){
                            details = new StringBuffer(userList.get(j).getName());
                        }else{
                            details.append(","+userList.get(j).getName());
                        }
                    }
                }
                if (details != null){
                    String code = officeService.findCodeByUnitId(unitId);
                    String userId = officeService.findUserIdByCode(code);
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(year+"年"+month+"月"+unit+"单位下"+details+"教育考核管理，三基成绩，基本知识，未参加");
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setRemark("每人次");
                    examAutoEvaluation.setAssess("人事训练室");
                    examAutoEvaluation.setModel("南宁公安处月度对派出所2020年度绩效考核评分标准（队伍建设）");
                    examAutoEvaluation.setModelId("ca4082a1227943dbae0726d3e10c2d9a");
                    examAutoEvaluation.setOption("未按上级规定，组织民警使用“铁路公安教育训练网络信息平台”自学和考试的");
                    examAutoEvaluation.setOptionId("acbec340f51b4f02a1e9445b5e3ab035");
                    examAutoEvaluation.setScore(String.valueOf(10 * count));
                    examAutoEvaluation.setTime(date);
                    examAutoEvaluation.setHappenTime(date);
                    examAutoEvaluation.setCheckTime(date);
                    examAutoEvaluation.setRowNum("120");
                    examAutoEvaluation.setFromSys("智慧政工");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
            else if (allOffice.get(i).get("name").contains("柳州处") && (allOffice.get(i).get("name").contains("派出所") || allOffice.get(i).get("name").contains("大队"))){
                List<PersonnelBase> userList = personnelBaseDao.findAllUserByUnitId(unitId);
                Integer count = 0;
                StringBuffer details = null;
                for (int j = 0; j < userList.size(); j++) {
                    String idNumber = userList.get(j).getIdNumber();
                    int unitCount = affairBasicKnowledgeService.unitCount(year, month, unitId, idNumber);
                    if (unitCount < 1){
                        count += 1;
                        if (details == null){
                            details = new StringBuffer(userList.get(j).getName());
                        }else{
                            details.append(","+userList.get(j).getName());
                        }
                    }
                }
                if (details != null){
                    String code = officeService.findCodeByUnitId(unitId);
                    String userId = officeService.findUserIdByCode(code);
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(year+"年"+month+"月"+unit+"单位下"+details+"教育考核管理，三基成绩，基本知识，未参加");
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setRemark("每人次");
                    examAutoEvaluation.setAssess("人事训练室");
               *//* examAutoEvaluation.setModel("柳州处对派出所2020年月度队伍建设绩效考核扣分标准");
                examAutoEvaluation.setModelId("833e7b9ae7084f9a993dfa802fff74e0");
                // 对应了两条标准
                examAutoEvaluation.setOption("");
                examAutoEvaluation.setOptionId("");*//*
                    examAutoEvaluation.setModel("南宁公安处月度对派出所2020年度绩效考核评分标准（队伍建设）");
                    examAutoEvaluation.setModelId("ca4082a1227943dbae0726d3e10c2d9a");
                    examAutoEvaluation.setOption("未按上级规定，组织民警使用“铁路公安教育训练网络信息平台”自学和考试的");
                    examAutoEvaluation.setOptionId("acbec340f51b4f02a1e9445b5e3ab035");
                    examAutoEvaluation.setScore(String.valueOf(10 * count));
                    examAutoEvaluation.setTime(date);
                    examAutoEvaluation.setHappenTime(date);
                    examAutoEvaluation.setCheckTime(date);
                    *//*examAutoEvaluation.setRowNum("");*//*
                    examAutoEvaluation.setRowNum("120");
                    examAutoEvaluation.setFromSys("智慧政工");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
            else if (allOffice.get(i).get("name").contains("北海处") && (allOffice.get(i).get("name").contains("派出所") || allOffice.get(i).get("name").contains("大队"))){
                List<PersonnelBase> userList = personnelBaseDao.findAllUserByUnitId(unitId);
                Integer count = 0;
                StringBuffer details = null;
                for (int j = 0; j < userList.size(); j++) {
                    String idNumber = userList.get(j).getIdNumber();
                    int unitCount = affairBasicKnowledgeService.unitCount(year, month, unitId, idNumber);
                    if (unitCount < 1){
                        count += 1;
                        if (details == null){
                            details = new StringBuffer(userList.get(j).getName());
                        }else{
                            details.append(","+userList.get(j).getName());
                        }
                    }
                }
                if (details != null){
                    String code = officeService.findCodeByUnitId(unitId);
                    String userId = officeService.findUserIdByCode(code);
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(year+"年"+month+"月"+unit+"单位下"+details+"教育考核管理，三基成绩，基本知识，未参加");
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setRemark("每人次");
                    examAutoEvaluation.setAssess("人事训练室");
                    examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队扣分标准（队伍建设）");
                    examAutoEvaluation.setModelId("4911c543e6b442aba644ad0eafe0e702");
                    examAutoEvaluation.setOption("未按上级规定，组织民警使用“铁路公安教育训练网络信息平台”自学和考试的，每人扣");
                    examAutoEvaluation.setOptionId("f08f39b9174a4613a5027e5038a45009");
                    examAutoEvaluation.setScore(String.valueOf(10 * count));
                    examAutoEvaluation.setTime(date);
                    examAutoEvaluation.setHappenTime(date);
                    examAutoEvaluation.setCheckTime(date);
                    examAutoEvaluation.setRowNum("91");
                    examAutoEvaluation.setFromSys("智慧政工");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
        }*/
    }

    public void duiBasicKnowledgeYear(String year){
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        List<AffairBasicKnowledge> allInfo = affairBasicKnowledgeService.allInfo(year, "");
        for (int i = 0; i < allInfo.size(); i++) {
            String unit = allInfo.get(i).getUnit();
            String unitId = allInfo.get(i).getUnitId();
            if (allInfo.get(i).getUnit().contains("南宁处") && (allInfo.get(i).getUnit().contains("派出所") || allInfo.get(i).getUnit().contains("大队"))){
                Integer count = 0;
                StringBuffer details = null;
                if ("3".equals(allInfo.get(i).getStatus())){
                    count += 1;
                    if (details == null){
                        details = new StringBuffer(allInfo.get(i).getName());
                    }else{
                        details.append(","+allInfo.get(i).getName());
                    }
                }
                if (details != null){
                    String code = officeService.findCodeByUnitId(unitId);
                    String userId = officeService.findUserIdByCode(code);
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(year+"年"+unit+"单位下"+details+"教育考核管理，三基成绩，基本知识，未参加");
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setRemark("每人次");
                    examAutoEvaluation.setAssess("人事训练室");
                    examAutoEvaluation.setModel("2020年年度南宁公安处对派出所绩效考核扣分标准(队伍建设)");
                    examAutoEvaluation.setModelId("f43cb06efe6b42acb625d2cef27bad1e");
                    examAutoEvaluation.setOption("未按上级规定，组织民警使用“铁路公安教育训练网络信息平台”自学和考试的，每人扣");
                    examAutoEvaluation.setOptionId("b87e2c7137ca487cacc210a1109d9c2a");
                    examAutoEvaluation.setScore(String.valueOf(2 * count));
                    examAutoEvaluation.setTime(date);
                    examAutoEvaluation.setHappenTime(date);
                    examAutoEvaluation.setCheckTime(date);
                    examAutoEvaluation.setRowNum("84");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","未参加教育考核");
                    //this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
            else if(allInfo.get(i).getUnit().contains("柳州处") && (allInfo.get(i).getUnit().contains("派出所") || allInfo.get(i).getUnit().contains("大队"))){
                Integer count = 0;
                StringBuffer details = null;
                if ("3".equals(allInfo.get(i).getStatus())){
                    count += 1;
                    if (details == null){
                        details = new StringBuffer(allInfo.get(i).getName());
                    }else{
                        details.append(","+allInfo.get(i).getName());
                    }
                }
                if (details != null){
                    String code = officeService.findCodeByUnitId(unitId);
                    String userId = officeService.findUserIdByCode(code);
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(year+"年"+unit+"单位下"+details+"教育考核管理，三基成绩，基本知识，未参加");
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setRemark("每人次");
                    examAutoEvaluation.setAssess("人事训练室");
              /*  examAutoEvaluation.setModel("柳州处对派出所2020年年度队伍建设绩效考核扣分标准");
                examAutoEvaluation.setModelId("74fe8a5471d84a6b969974a556d7a409");
                // 对应了两条标准
                examAutoEvaluation.setOption("");
                examAutoEvaluation.setOptionId("");*/
                    examAutoEvaluation.setModel("2020年年度南宁公安处对派出所绩效考核扣分标准(队伍建设)");
                    examAutoEvaluation.setModelId("f43cb06efe6b42acb625d2cef27bad1e");
                    examAutoEvaluation.setOption("未按上级规定，组织民警使用“铁路公安教育训练网络信息平台”自学和考试的，每人扣");
                    examAutoEvaluation.setOptionId("b87e2c7137ca487cacc210a1109d9c2a");
                    examAutoEvaluation.setScore(String.valueOf(2 * count));
                    examAutoEvaluation.setTime(date);
                    examAutoEvaluation.setHappenTime(date);
                    examAutoEvaluation.setCheckTime(date);
                    /*examAutoEvaluation.setRowNum("");*/
                    examAutoEvaluation.setRowNum("84");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","未参加教育考核");
                    //this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
            else if(allInfo.get(i).getUnit().contains("北海处") && (allInfo.get(i).getUnit().contains("派出所") || allInfo.get(i).getUnit().contains("大队"))){
                Integer count = 0;
                StringBuffer details = null;
                if ("3".equals(allInfo.get(i).getStatus())){
                    count += 1;
                    if (details == null){
                        details = new StringBuffer(allInfo.get(i).getName());
                    }else{
                        details.append(","+allInfo.get(i).getName());
                    }
                }
                if (details != null){
                    String code = officeService.findCodeByUnitId(unitId);
                    String userId = officeService.findUserIdByCode(code);
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(year+"年"+unit+"单位下"+details+"教育考核管理，三基成绩，基本知识，未参加");
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setRemark("每人次");
                    examAutoEvaluation.setAssess("宣教室");
                    examAutoEvaluation.setModel("2020年年度北海处对派出所、刑警三大队绩效考核扣分标准(队伍建设部分)");
                    examAutoEvaluation.setModelId("caf3fe64fd9e4d60b33fc16c2ce062e2");
                    examAutoEvaluation.setOption("未按上级规定，组织民警使用“铁路公安教育训练网络信息平台”自学和考试的，每人扣");
                    examAutoEvaluation.setOptionId("244cb9c5521a43a38ff50467fb322c6d");
                    examAutoEvaluation.setScore(String.valueOf(2 * count));
                    examAutoEvaluation.setTime(date);
                    examAutoEvaluation.setHappenTime(date);
                    examAutoEvaluation.setCheckTime(date);
                    examAutoEvaluation.setRowNum("65");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","未参加教育考核");
                    //this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
        }
       /* List<Map<String, String>> allOffice = officeService.findAllOffice();
        for (int i = 0; i < allOffice.size(); i++) {
            String unit = allOffice.get(i).get("name");
            String unitId = allOffice.get(i).get("id");
            if (allOffice.get(i).get("name").contains("南宁处") && (allOffice.get(i).get("name").contains("派出所") || allOffice.get(i).get("name").contains("大队"))){
                List<PersonnelBase> userList = personnelBaseDao.findAllUserByUnitId(unitId);
                Integer count = 0;
                StringBuffer details = null;
                for (int j = 0; j < userList.size(); j++) {
                    String idNumber = userList.get(j).getIdNumber();
                    int unitCount = affairBasicKnowledgeService.unitCount(year, "", unitId, idNumber);
                    if (unitCount < 1){
                        count += 1;
                        if (details == null){
                            details = new StringBuffer(userList.get(j).getName());
                        }else{
                            details.append(","+userList.get(j).getName());
                        }
                    }
                }
                if (details != null){
                    String code = officeService.findCodeByUnitId(unitId);
                    String userId = officeService.findUserIdByCode(code);
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(year+"年"+unit+"单位下"+details+"教育考核管理，三基成绩，基本知识，未参加");
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setRemark("每人次");
                    examAutoEvaluation.setAssess("人事训练室");
                    examAutoEvaluation.setModel("2020年年度南宁处对派出所绩效考核扣分标准(队伍建设)");
                    examAutoEvaluation.setModelId("86942af35ce04d009a7ad3e95b7caa68");
                    examAutoEvaluation.setOption("未按上级规定，组织民警使用“铁路公安教育训练网络信息平台”自学和考试的，每人扣");
                    examAutoEvaluation.setOptionId("b87e2c7137ca487cacc210a1109d9c2a");
                    examAutoEvaluation.setScore(String.valueOf(2 * count));
                    examAutoEvaluation.setTime(date);
                    examAutoEvaluation.setHappenTime(date);
                    examAutoEvaluation.setCheckTime(date);
                    examAutoEvaluation.setRowNum("84");
                    examAutoEvaluation.setFromSys("智慧政工");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
            else if (allOffice.get(i).get("name").contains("柳州处") && (allOffice.get(i).get("name").contains("派出所") || allOffice.get(i).get("name").contains("大队"))){
                List<PersonnelBase> userList = personnelBaseDao.findAllUserByUnitId(unitId);
                Integer count = 0;
                StringBuffer details = null;
                for (int j = 0; j < userList.size(); j++) {
                    String idNumber = userList.get(j).getIdNumber();
                    int unitCount = affairBasicKnowledgeService.unitCount(year, "", unitId, idNumber);
                    if (unitCount < 1){
                        count += 1;
                        if (details == null){
                            details = new StringBuffer(userList.get(j).getName());
                        }else{
                            details.append(","+userList.get(j).getName());
                        }
                    }
                }
                if (details != null){
                    String code = officeService.findCodeByUnitId(unitId);
                    String userId = officeService.findUserIdByCode(code);
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(year+"年"+unit+"单位下"+details+"教育考核管理，三基成绩，基本知识，未参加");
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setRemark("每人次");
                    examAutoEvaluation.setAssess("人事训练室");
              *//*  examAutoEvaluation.setModel("柳州处对派出所2020年年度队伍建设绩效考核扣分标准");
                examAutoEvaluation.setModelId("74fe8a5471d84a6b969974a556d7a409");
                // 对应了两条标准
                examAutoEvaluation.setOption("");
                examAutoEvaluation.setOptionId("");*//*
                    examAutoEvaluation.setModel("2020年年度南宁处对派出所绩效考核扣分标准(队伍建设)");
                    examAutoEvaluation.setModelId("86942af35ce04d009a7ad3e95b7caa68");
                    examAutoEvaluation.setOption("未按上级规定，组织民警使用“铁路公安教育训练网络信息平台”自学和考试的，每人扣");
                    examAutoEvaluation.setOptionId("b87e2c7137ca487cacc210a1109d9c2a");
                    examAutoEvaluation.setScore(String.valueOf(2 * count));
                    examAutoEvaluation.setTime(date);
                    examAutoEvaluation.setHappenTime(date);
                    examAutoEvaluation.setCheckTime(date);
                    *//*examAutoEvaluation.setRowNum("");*//*
                    examAutoEvaluation.setRowNum("84");
                    examAutoEvaluation.setFromSys("智慧政工");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
            else if (allOffice.get(i).get("name").contains("北海处") && (allOffice.get(i).get("name").contains("派出所") || allOffice.get(i).get("name").contains("大队"))){
                List<PersonnelBase> userList = personnelBaseDao.findAllUserByUnitId(unitId);
                Integer count = 0;
                StringBuffer details = null;
                for (int j = 0; j < userList.size(); j++) {
                    String idNumber = userList.get(j).getIdNumber();
                    int unitCount = affairBasicKnowledgeService.unitCount(year, "", unitId, idNumber);
                    if (unitCount < 1){
                        count += 1;
                        if (details == null){
                            details = new StringBuffer(userList.get(j).getName());
                        }else{
                            details.append(","+userList.get(j).getName());
                        }
                    }
                }
                if (details != null){
                    String code = officeService.findCodeByUnitId(unitId);
                    String userId = officeService.findUserIdByCode(code);
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(year+"年"+unit+"单位下"+details+"教育考核管理，三基成绩，基本知识，未参加");
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setRemark("每人次");
                    examAutoEvaluation.setAssess("宣教室");
                    examAutoEvaluation.setModel("2020年年度北海处对派出所、刑警三大队绩效考核扣分标准(队伍建设部分)");
                    examAutoEvaluation.setModelId("caf3fe64fd9e4d60b33fc16c2ce062e2");
                    examAutoEvaluation.setOption("未按上级规定，组织民警使用“铁路公安教育训练网络信息平台”自学和考试的，每人扣");
                    examAutoEvaluation.setOptionId("244cb9c5521a43a38ff50467fb322c6d");
                    examAutoEvaluation.setScore(String.valueOf(2 * count));
                    examAutoEvaluation.setTime(date);
                    examAutoEvaluation.setHappenTime(date);
                    examAutoEvaluation.setCheckTime(date);
                    examAutoEvaluation.setRowNum("65");
                    examAutoEvaluation.setFromSys("智慧政工");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
        }*/
    }

    /**
     * 教育训练-基本知识(参加 未通过)
     */
    public void chuNoPassBasicKnowledgeMonth(String year, String month){
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        List<Map<String, String>> allOffice = officeService.findAllOffice();
        for (int i = 0; i < allOffice.size(); i++) {
            String unit = allOffice.get(i).get("name");
            String unitId = allOffice.get(i).get("id");
            if (allOffice.get(i).get("name").contains("南宁处") && ((allOffice.get(i).get("name").contains("派出所") == false) && (allOffice.get(i).get("name").contains("大队") == false))){
                Integer count = 0;
                StringBuffer details = null;
                List<AffairBasicKnowledge> noPassInfo = affairBasicKnowledgeService.noPassInfo(year, month, unitId);
                for (int j = 0; j < noPassInfo.size(); j++) {
                    count += 1;
                    if (details == null){
                        details = new StringBuffer(noPassInfo.get(j).getName());
                    }else{
                        details.append(","+noPassInfo.get(j).getName());
                    }
                }
                if (details != null){
                    String code = officeService.findCodeByUnitId(unitId);
                    String userId = officeService.findUserIdByCode(code);
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(year+"年"+month+"月"+unit+"单位下"+details+"教育考核管理，三基成绩，基本知识考试未通过");
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setRemark("每人次");
                    examAutoEvaluation.setAssess("人事训练室");
                    examAutoEvaluation.setModel("2020年月度南宁公安处对各部门绩效考核评分标准（队伍建设）");
                    examAutoEvaluation.setModelId("5d9645f6da694060a2f6cbbdf388343f");
                    examAutoEvaluation.setOption("未按要求完成“铁路公安教育训练网络信息平台”自学、考试不及格的");
                    examAutoEvaluation.setOptionId("139bded100864ca8a30c34b22bffe55d");
                    examAutoEvaluation.setScore(String.valueOf(0.5 * count));
                    examAutoEvaluation.setTime(date);
                    examAutoEvaluation.setHappenTime(date);
                    examAutoEvaluation.setCheckTime(date);
                    examAutoEvaluation.setRowNum("121");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","教育考核未及格");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
            else if (allOffice.get(i).get("name").contains("柳州处") && ((allOffice.get(i).get("name").contains("派出所") == false) && (allOffice.get(i).get("name").contains("大队") == false))){
                Integer count = 0;
                StringBuffer details = null;
                List<AffairBasicKnowledge> noPassInfo = affairBasicKnowledgeService.noPassInfo(year, month, unitId);
                for (int j = 0; j < noPassInfo.size(); j++) {
                    count += 1;
                    if (details == null){
                        details = new StringBuffer(noPassInfo.get(j).getName());
                    }else{
                        details.append(","+noPassInfo.get(j).getName());
                    }
                }
                if (details != null){
                    String code = officeService.findCodeByUnitId(unitId);
                    String userId = officeService.findUserIdByCode(code);
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(year+"年"+month+"月"+unit+"单位下"+details+"教育考核管理，三基成绩，基本知识未通过");
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setRemark("每人次");
                    examAutoEvaluation.setAssess("人事训练室");
              /*  examAutoEvaluation.setModel("柳州处对单位（部门）2020年月度队伍建设绩效考核评分标准");
                examAutoEvaluation.setModelId("ad1ae5ab1a8f47df8f09bb05726fa14e");
                examAutoEvaluation.setOption("");
                examAutoEvaluation.setOptionId("");*/
                    examAutoEvaluation.setModel("2020年月度南宁公安处对各部门绩效考核评分标准（队伍建设）");
                    examAutoEvaluation.setModelId("5d9645f6da694060a2f6cbbdf388343f");
                    examAutoEvaluation.setOption("未按要求完成“铁路公安教育训练网络信息平台”自学、考试不及格的");
                    examAutoEvaluation.setOptionId("139bded100864ca8a30c34b22bffe55d");
                    examAutoEvaluation.setScore(String.valueOf(0.5 * count));
                    examAutoEvaluation.setTime(date);
                    examAutoEvaluation.setHappenTime(date);
                    examAutoEvaluation.setCheckTime(date);
                    /*examAutoEvaluation.setRowNum("");*/
                    examAutoEvaluation.setRowNum("121");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","教育考核未及格");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
            else if (allOffice.get(i).get("name").contains("北海处") && ((allOffice.get(i).get("name").contains("派出所") == false) && (allOffice.get(i).get("name").contains("大队") == false))){
                Integer count = 0;
                StringBuffer details = null;
                List<AffairBasicKnowledge> noPassInfo = affairBasicKnowledgeService.noPassInfo(year, month, unitId);
                for (int j = 0; j < noPassInfo.size(); j++) {
                    count += 1;
                    if (details == null){
                        details = new StringBuffer(noPassInfo.get(j).getName());
                    }else{
                        details.append(","+noPassInfo.get(j).getName());
                    }
                }
                if (details != null){
                    String code = officeService.findCodeByUnitId(unitId);
                    String userId = officeService.findUserIdByCode(code);
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(year+"年"+month+"月"+unit+"单位下"+details+"教育考核管理，三基成绩，基本知识未通过");
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setRemark("每人次");
                    examAutoEvaluation.setAssess("人事训练室");
               /* examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队扣分标准（队伍建设）");
                examAutoEvaluation.setModelId("ee10e56a2c1347ef95dd303bb04d249a");
                examAutoEvaluation.setOption("未按上级规定，组织民警使用“铁路公安教育训练网络信息平台”自学和考试的，每人扣");
                examAutoEvaluation.setOptionId("5582ddc8d1434cb59152aa7558e8a39f");*/
                    examAutoEvaluation.setModel("2020年月度南宁公安处对各部门绩效考核评分标准（队伍建设）");
                    examAutoEvaluation.setModelId("5d9645f6da694060a2f6cbbdf388343f");
                    examAutoEvaluation.setOption("未按要求完成“铁路公安教育训练网络信息平台”自学、考试不及格的");
                    examAutoEvaluation.setOptionId("139bded100864ca8a30c34b22bffe55d");
                    examAutoEvaluation.setScore(String.valueOf(0.5 * count));
                    examAutoEvaluation.setTime(date);
                    examAutoEvaluation.setHappenTime(date);
                    examAutoEvaluation.setCheckTime(date);
                    /*examAutoEvaluation.setRowNum("93");*/
                    examAutoEvaluation.setRowNum("121");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","教育考核未及格");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
        }
    }

    public void duiNoPassBasicKnowledgeMonth(String year, String month){
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        List<Map<String, String>> allOffice = officeService.findAllOffice();
        for (int i = 0; i < allOffice.size(); i++) {
            String unit = allOffice.get(i).get("name");
            String unitId = allOffice.get(i).get("id");
            if (allOffice.get(i).get("name").contains("南宁处") && (allOffice.get(i).get("name").contains("派出所") || allOffice.get(i).get("name").contains("大队"))){
                Integer count = 0;
                StringBuffer details = null;
                List<AffairBasicKnowledge> noPassInfo = affairBasicKnowledgeService.noPassInfo(year, month, unitId);
                for (int j = 0; j < noPassInfo.size(); j++) {
                    count += 1;
                    if (details == null){
                        details = new StringBuffer(noPassInfo.get(j).getName());
                    }else{
                        details.append(","+noPassInfo.get(j).getName());
                    }
                }
                if (details != null){
                    String code = officeService.findCodeByUnitId(unitId);
                    String userId = officeService.findUserIdByCode(code);
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(year+"年"+month+"月"+unit+"单位下"+details+"教育考核管理，三基成绩，基本知识，未参加");
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setRemark("每人次");
                    examAutoEvaluation.setAssess("人事训练室");
                    examAutoEvaluation.setModel("2020年月度南宁公安处对派出所绩效考核评分标准（队伍建设）");
                    examAutoEvaluation.setModelId("ca4082a1227943dbae0726d3e10c2d9a");
                    examAutoEvaluation.setOption("未按要求完成“铁路公安教育训练网络信息平台”自学、考试不及格的");
                    examAutoEvaluation.setOptionId("bd71ba46475f4f6093c40ec65d436dec");
                    examAutoEvaluation.setScore(String.valueOf(5 * count));
                    examAutoEvaluation.setTime(date);
                    examAutoEvaluation.setHappenTime(date);
                    examAutoEvaluation.setCheckTime(date);
                    examAutoEvaluation.setRowNum("121");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","教育考核未及格");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
            else if (allOffice.get(i).get("name").contains("柳州处") && (allOffice.get(i).get("name").contains("派出所") || allOffice.get(i).get("name").contains("大队"))){
                Integer count = 0;
                StringBuffer details = null;
                List<AffairBasicKnowledge> noPassInfo = affairBasicKnowledgeService.noPassInfo(year, month, unitId);
                for (int j = 0; j < noPassInfo.size(); j++) {
                    count += 1;
                    if (details == null){
                        details = new StringBuffer(noPassInfo.get(j).getName());
                    }else{
                        details.append(","+noPassInfo.get(j).getName());
                    }
                }
                if (details != null){
                    String code = officeService.findCodeByUnitId(unitId);
                    String userId = officeService.findUserIdByCode(code);
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(year+"年"+month+"月"+unit+"单位下"+details+"教育考核管理，三基成绩，基本知识，未参加");
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setRemark("每人次");
                    examAutoEvaluation.setAssess("人事训练室");
               /* examAutoEvaluation.setModel("柳州处对派出所2020年月度队伍建设绩效考核扣分标准");
                examAutoEvaluation.setModelId("833e7b9ae7084f9a993dfa802fff74e0");
                // 对应了两条标准
                examAutoEvaluation.setOption("");
                examAutoEvaluation.setOptionId("");*/
                    examAutoEvaluation.setModel("2020年月度南宁公安处对派出所绩效考核评分标准（队伍建设）");
                    examAutoEvaluation.setModelId("ca4082a1227943dbae0726d3e10c2d9a");
                    examAutoEvaluation.setOption("未按要求完成“铁路公安教育训练网络信息平台”自学、考试不及格的");
                    examAutoEvaluation.setOptionId("bd71ba46475f4f6093c40ec65d436dec");
                    examAutoEvaluation.setScore(String.valueOf(5 * count));
                    examAutoEvaluation.setTime(date);
                    examAutoEvaluation.setHappenTime(date);
                    examAutoEvaluation.setCheckTime(date);
                    /*examAutoEvaluation.setRowNum("");*/
                    examAutoEvaluation.setRowNum("121");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","教育考核未及格");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
            else if (allOffice.get(i).get("name").contains("北海处") && (allOffice.get(i).get("name").contains("派出所") || allOffice.get(i).get("name").contains("大队"))){
                Integer count = 0;
                StringBuffer details = null;
                List<AffairBasicKnowledge> noPassInfo = affairBasicKnowledgeService.noPassInfo(year, month, unitId);
                for (int j = 0; j < noPassInfo.size(); j++) {
                    count += 1;
                    if (details == null){
                        details = new StringBuffer(noPassInfo.get(j).getName());
                    }else{
                        details.append(","+noPassInfo.get(j).getName());
                    }
                }
                if (details != null){
                    String code = officeService.findCodeByUnitId(unitId);
                    String userId = officeService.findUserIdByCode(code);
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(year+"年"+month+"月"+unit+"单位下"+details+"教育考核管理，三基成绩，基本知识，未参加");
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setRemark("每人次");
                    examAutoEvaluation.setAssess("人事训练室");
                    examAutoEvaluation.setModel("2020年月度南宁公安处对派出所绩效考核评分标准（队伍建设）");
                    examAutoEvaluation.setModelId("ca4082a1227943dbae0726d3e10c2d9a");
                    examAutoEvaluation.setOption("未按要求完成“铁路公安教育训练网络信息平台”自学、考试不及格的");
                    examAutoEvaluation.setOptionId("bd71ba46475f4f6093c40ec65d436dec");
               /* examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队扣分标准（队伍建设）");
                examAutoEvaluation.setModelId("4911c543e6b442aba644ad0eafe0e702");
                examAutoEvaluation.setOption("未按上级规定，组织民警使用“铁路公安教育训练网络信息平台”自学和考试的，每人扣");
                examAutoEvaluation.setOptionId("f08f39b9174a4613a5027e5038a45009");*/
                    examAutoEvaluation.setScore(String.valueOf(5 * count));
                    examAutoEvaluation.setTime(date);
                    examAutoEvaluation.setHappenTime(date);
                    examAutoEvaluation.setCheckTime(date);
                    examAutoEvaluation.setRowNum("121");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","教育考核未及格");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
        }
    }

    /**
     * 教育训练-练兵台账
     */
    public void juLedgerEntryTimesMonth(String year, String month){
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        List<Map<String, String>> allOffice = officeService.findAllOffice();
        for (int i = 0; i < allOffice.size(); i++) {
            String unit = allOffice.get(i).get("name");
            String unitId = allOffice.get(i).get("id");
            if (allOffice.get(i).get("name").contains("公安局") && !allOffice.get(i).get("name").contains("大队")){
                String monthTimes = affairLedgerEntryTimesService.monthTimes(year, month, unitId);
                if (StringUtils.isNotBlank(monthTimes)){
                    if (Integer.valueOf(monthTimes) < 4){
                        String code = officeService.findCodeByUnitId(unitId);
                        String userId = officeService.findUserIdByCode(code);
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setEvaluationId(userId);
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("2");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails(year+"年"+month+"月"+unit+"单位"+"教育考核管理，练兵台账统计，教育训练平台台账录入次数，实际"+(4 - Integer.valueOf(monthTimes))+"次，少于每月4次");
                        examAutoEvaluation.setUnit(unit);
                        examAutoEvaluation.setUnitId(unitId);
                        examAutoEvaluation.setRemark("每人次");
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setModel("2020年公安局对局机关各处室直属支队月度绩效考核扣分标准");
                        examAutoEvaluation.setModelId("2a025e9d64ed403687ef6f076223d2d7");
                        examAutoEvaluation.setOption("未按要求完善“铁路公安教育训练网络信息平台”数据，影响全局工作的");
                        examAutoEvaluation.setOptionId("9ccc395548604a589fa819d236da4292");
                        examAutoEvaluation.setScore("1");
                        examAutoEvaluation.setTime(date);
                        examAutoEvaluation.setHappenTime(date);
                        examAutoEvaluation.setCheckTime(date);
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"未完善铁路公安信息平台数据");
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                }
            }
        }
    }

    public void chuLedgerEntryTimesMonth(String year, String month){
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        List<Map<String, String>> allOffice = officeService.findAllOffice();
        for (int i = 0; i < allOffice.size(); i++) {
            String unit = allOffice.get(i).get("name");
            String unitId = allOffice.get(i).get("id");
            if (allOffice.get(i).get("name").contains("南宁处") && ((allOffice.get(i).get("name").contains("派出所") == false) && (allOffice.get(i).get("name").contains("大队") == false))){
                String monthTimes = affairLedgerEntryTimesService.monthTimes(year, month, unitId);
                if (StringUtils.isNotBlank(monthTimes)) {
                    if (Integer.valueOf(monthTimes) < 4) {
                        String code = officeService.findCodeByUnitId(unitId);
                        String userId = officeService.findUserIdByCode(code);
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setEvaluationId(userId);
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("4");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails(year+"年"+month+"月"+unit+"单位"+"教育考核管理，练兵台账统计，教育训练平台台账录入次数，实际"+(4 - Integer.valueOf(monthTimes))+"次，少于每月4次");
                        examAutoEvaluation.setUnit(unit);
                        examAutoEvaluation.setUnitId(unitId);
                        examAutoEvaluation.setRemark("每人次");
                        examAutoEvaluation.setAssess("人事训练室");
                        examAutoEvaluation.setModel("2020年月度南宁公安处对各部门绩效考核评分标准（队伍建设）");
                        examAutoEvaluation.setModelId("5d9645f6da694060a2f6cbbdf388343f");
                        examAutoEvaluation.setOption("未按要求完善“铁路公安教育训练网络信息平台”输入资料的，影响全处工作的");
                        examAutoEvaluation.setOptionId("bf9a656baa244bb7a1d3ab6b04ad019c");
                        examAutoEvaluation.setScore(String.valueOf(1));
                        examAutoEvaluation.setTime(date);
                        examAutoEvaluation.setHappenTime(date);
                        examAutoEvaluation.setCheckTime(date);
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","未完善铁路公安信息平台数据");
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                }
            }
            else if (allOffice.get(i).get("name").contains("柳州处") && ((allOffice.get(i).get("name").contains("派出所") == false) && (allOffice.get(i).get("name").contains("大队") == false))){
                String monthTimes = affairLedgerEntryTimesService.monthTimes(year, month, unitId);
                if (StringUtils.isNotBlank(monthTimes)) {
                    if (Integer.valueOf(monthTimes) < 4) {
                        String code = officeService.findCodeByUnitId(unitId);
                        String userId = officeService.findUserIdByCode(code);
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setEvaluationId(userId);
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("4");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails(year+"年"+month+"月"+unit+"单位"+"教育考核管理，练兵台账统计，教育训练平台台账录入次数，实际"+(4 - Integer.valueOf(monthTimes))+"次，少于每月4次");
                        examAutoEvaluation.setUnit(unit);
                        examAutoEvaluation.setUnitId(unitId);
                        examAutoEvaluation.setRemark("每人次");
                        examAutoEvaluation.setAssess("人事训练室");
                        examAutoEvaluation.setModel("柳州处对人训室月度绩效考核评分标准(业务部分)");
                        examAutoEvaluation.setModelId("59bf5ce011ea439289f0fd9f6d2bf743");
                        // 对应了两条标准
                        examAutoEvaluation.setOption("未按要求完善“铁路公安教育训练网络信息平台”数据，影响全局工作的");
                        examAutoEvaluation.setOptionId("bf2a83861d204723bedf58d27d20132d");
                        /*examAutoEvaluation.setModel("南宁公安处月度对各单位（部门）2020年度绩效考核评分标准（队伍建设）");
                        examAutoEvaluation.setModelId("2ad5c152e330467da8454fa076b467c1");
                        examAutoEvaluation.setOption("未按要求完善“铁路公安教育训练网络信息平台”输入资料的，影响全处工作的");
                        examAutoEvaluation.setOptionId("bf9a656baa244bb7a1d3ab6b04ad019c");*/
                        examAutoEvaluation.setScore(String.valueOf(1));
                        examAutoEvaluation.setTime(date);
                        examAutoEvaluation.setHappenTime(date);
                        examAutoEvaluation.setCheckTime(date);
                        /*examAutoEvaluation.setRowNum("");*/
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","未完善铁路公安信息平台数据");
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                }
            }
            else if (allOffice.get(i).get("name").contains("北海处") && ((allOffice.get(i).get("name").contains("派出所") == false) && (allOffice.get(i).get("name").contains("大队") == false))){
                String monthTimes = affairLedgerEntryTimesService.monthTimes(year, month, unitId);
                if (StringUtils.isNotBlank(monthTimes)) {
                    if (Integer.valueOf(monthTimes) < 4) {
                        String code = officeService.findCodeByUnitId(unitId);
                        String userId = officeService.findUserIdByCode(code);
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setEvaluationId(userId);
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("4");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails(year+"年"+month+"月"+unit+"单位"+"教育考核管理，练兵台账统计，教育训练平台台账录入次数，实际"+(4 - Integer.valueOf(monthTimes))+"次，少于每月4次");
                        examAutoEvaluation.setUnit(unit);
                        examAutoEvaluation.setUnitId(unitId);
                        examAutoEvaluation.setRemark("每人次");
                        examAutoEvaluation.setAssess("人事训练室");
                        examAutoEvaluation.setModel("2020年月度北海处对机关科室扣分标准(业务部分)");
                        examAutoEvaluation.setModelId("9d566eb5263843daa3be3ae3eb562f58");
                        examAutoEvaluation.setOption("未按要求完善“铁路公安教育训练网络信息平台”数据，影响全局工作的");
                        examAutoEvaluation.setOptionId("23cbe90b3a064b64a9c7566fb376a198");
                        /*examAutoEvaluation.setModel("南宁公安处月度对各单位（部门）2020年度绩效考核评分标准（队伍建设）");
                        examAutoEvaluation.setModelId("2ad5c152e330467da8454fa076b467c1");
                        examAutoEvaluation.setOption("未按要求完善“铁路公安教育训练网络信息平台”输入资料的，影响全处工作的");
                        examAutoEvaluation.setOptionId("bf9a656baa244bb7a1d3ab6b04ad019c");*/
                        examAutoEvaluation.setScore(String.valueOf(1));
                        examAutoEvaluation.setTime(date);
                        examAutoEvaluation.setHappenTime(date);
                        examAutoEvaluation.setCheckTime(date);
                        /*examAutoEvaluation.setRowNum("93");*/
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","未完善铁路公安信息平台数据");
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                }
            }
        }
    }

    public void chuLedgerEntryTimesYear(String year){
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        List<Map<String, String>> allOffice = officeService.findAllOffice();
        for (int i = 0; i < allOffice.size(); i++) {
            String unit = allOffice.get(i).get("name");
            String unitId = allOffice.get(i).get("id");
            if (allOffice.get(i).get("name").contains("南宁处") && ((allOffice.get(i).get("name").contains("派出所") == false) && (allOffice.get(i).get("name").contains("大队") == false))){
                Integer count = 0;
                Boolean flag = false;
                List<AffairLedgerEntryTimes> list = affairLedgerEntryTimesService.yearTimes(year, unitId);
                if (list.size() > 0){
                    flag = true;
                    for (int j = 0; j < list.size(); j++) {
                        if (Integer.valueOf(list.get(j).getJanuary()) < 4){
                            count += 1;
                        }else if (Integer.valueOf(list.get(j).getFebruary()) < 4){
                            count += 1;
                        }else if (Integer.valueOf(list.get(j).getMarch()) < 4){
                            count += 1;
                        }else if (Integer.valueOf(list.get(j).getApril()) < 4){
                            count += 1;
                        }else if (Integer.valueOf(list.get(j).getMay()) < 4){
                            count += 1;
                        }else if (Integer.valueOf(list.get(j).getJune()) < 4){
                            count += 1;
                        }else if (Integer.valueOf(list.get(j).getJuly()) < 4){
                            count += 1;
                        }else if (Integer.valueOf(list.get(j).getAugust()) < 4){
                            count += 1;
                        }else if (Integer.valueOf(list.get(j).getSeptember()) < 4){
                            count += 1;
                        }else if (Integer.valueOf(list.get(j).getOctober()) < 4){
                            count += 1;
                        }else if (Integer.valueOf(list.get(j).getNovember()) < 4){
                            count += 1;
                        }else if (Integer.valueOf(list.get(j).getDecember()) < 4){
                            count += 1;
                        }
                    }
                }
                if (flag){
                    String code = officeService.findCodeByUnitId(unitId);
                    String userId = officeService.findUserIdByCode(code);
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(year+"年"+unit+"单位"+"教育考核管理，练兵台账统计，教育训练平台台账录入次数，每月少于4次共"+count+"次");
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setRemark("每人次");
                    examAutoEvaluation.setAssess("人事训练室");
                    examAutoEvaluation.setModel("2020年年度南宁公安处对各部门扣分标准(队伍建设)");
                    examAutoEvaluation.setModelId("13ea683844d644cb8aa15e00fb07f825");
                    examAutoEvaluation.setOption("未按要求完善“铁路公安教育训练网络信息平台”输入资料，影响全处工作的");
                    examAutoEvaluation.setOptionId("6961200863a34b1b9dda15144b1d057c");
                    examAutoEvaluation.setScore(String.valueOf(0.5 * count));
                    examAutoEvaluation.setTime(date);
                    examAutoEvaluation.setHappenTime(date);
                    examAutoEvaluation.setCheckTime(date);
                    /*examAutoEvaluation.setRowNum("84");*/
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","未完善铁路公安信息平台数据");
                    //this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
            else if (allOffice.get(i).get("name").contains("柳州处") && ((allOffice.get(i).get("name").contains("派出所") == false) && (allOffice.get(i).get("name").contains("大队") == false))) {
                Integer count = 0;
                Boolean flag = false;
                List<AffairLedgerEntryTimes> list = affairLedgerEntryTimesService.yearTimes(year, unitId);
                if (list.size() > 0) {
                    flag = true;
                    for (int j = 0; j < list.size(); j++) {
                        if (Integer.valueOf(list.get(j).getJanuary()) < 4) {
                            count += 1;
                        } else if (Integer.valueOf(list.get(j).getFebruary()) < 4) {
                            count += 1;
                        } else if (Integer.valueOf(list.get(j).getMarch()) < 4) {
                            count += 1;
                        } else if (Integer.valueOf(list.get(j).getApril()) < 4) {
                            count += 1;
                        } else if (Integer.valueOf(list.get(j).getMay()) < 4) {
                            count += 1;
                        } else if (Integer.valueOf(list.get(j).getJune()) < 4) {
                            count += 1;
                        } else if (Integer.valueOf(list.get(j).getJuly()) < 4) {
                            count += 1;
                        } else if (Integer.valueOf(list.get(j).getAugust()) < 4) {
                            count += 1;
                        } else if (Integer.valueOf(list.get(j).getSeptember()) < 4) {
                            count += 1;
                        } else if (Integer.valueOf(list.get(j).getOctober()) < 4) {
                            count += 1;
                        } else if (Integer.valueOf(list.get(j).getNovember()) < 4) {
                            count += 1;
                        } else if (Integer.valueOf(list.get(j).getDecember()) < 4) {
                            count += 1;
                        }
                    }
                }
                if (flag) {
                    String code = officeService.findCodeByUnitId(unitId);
                    String userId = officeService.findUserIdByCode(code);
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(year+"年"+unit+"单位"+"教育考核管理，练兵台账统计，教育训练平台台账录入次数，每月少于4次共"+count+"次");
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setRemark("每人次");
                    examAutoEvaluation.setAssess("人事训练室");
                    examAutoEvaluation.setModel("柳州处对人训室年度绩效考核评分标准(业务部分)");
                    examAutoEvaluation.setModelId("5b13af00fcd44b9f8e530db03c06fc95");
                    // 对应了两条标准
                    examAutoEvaluation.setOption("未按要求完善“铁路公安教育训练网络信息平台”数据，影响全局工作的");
                    examAutoEvaluation.setOptionId("e559055f6e004f04933c0a2ce3e6079a");
                    /*examAutoEvaluation.setModel("2020年年度南宁处对各单位（部门）绩效考核扣分标准(队伍建设)");
                    examAutoEvaluation.setModelId("a06767b603d4489bb6659088df6d2d46");
                    examAutoEvaluation.setOption("未按要求完善“铁路公安教育训练网络信息平台”输入资料，影响全处工作的");
                    examAutoEvaluation.setOptionId("6961200863a34b1b9dda15144b1d057c");*/
                    examAutoEvaluation.setScore(String.valueOf(0.5 * count));
                    examAutoEvaluation.setTime(date);
                    examAutoEvaluation.setHappenTime(date);
                    examAutoEvaluation.setCheckTime(date);
                    /*examAutoEvaluation.setRowNum("");*/
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","未完善铁路公安信息平台数据");
                    //this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
            else if (allOffice.get(i).get("name").contains("北海处") && ((allOffice.get(i).get("name").contains("派出所") == false) && (allOffice.get(i).get("name").contains("大队") == false))){
                Integer count = 0;
                Boolean flag = false;
                List<AffairLedgerEntryTimes> list = affairLedgerEntryTimesService.yearTimes(year, unitId);
                if (list.size() > 0) {
                    flag = true;
                    for (int j = 0; j < list.size(); j++) {
                        if (Integer.valueOf(list.get(j).getJanuary()) < 4) {
                            count += 1;
                        } else if (Integer.valueOf(list.get(j).getFebruary()) < 4) {
                            count += 1;
                        } else if (Integer.valueOf(list.get(j).getMarch()) < 4) {
                            count += 1;
                        } else if (Integer.valueOf(list.get(j).getApril()) < 4) {
                            count += 1;
                        } else if (Integer.valueOf(list.get(j).getMay()) < 4) {
                            count += 1;
                        } else if (Integer.valueOf(list.get(j).getJune()) < 4) {
                            count += 1;
                        } else if (Integer.valueOf(list.get(j).getJuly()) < 4) {
                            count += 1;
                        } else if (Integer.valueOf(list.get(j).getAugust()) < 4) {
                            count += 1;
                        } else if (Integer.valueOf(list.get(j).getSeptember()) < 4) {
                            count += 1;
                        } else if (Integer.valueOf(list.get(j).getOctober()) < 4) {
                            count += 1;
                        } else if (Integer.valueOf(list.get(j).getNovember()) < 4) {
                            count += 1;
                        } else if (Integer.valueOf(list.get(j).getDecember()) < 4) {
                            count += 1;
                        }
                    }
                }
                if (flag){
                    String code = officeService.findCodeByUnitId(unitId);
                    String userId = officeService.findUserIdByCode(code);
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(year+"年"+unit+"单位"+"教育考核管理，练兵台账统计，教育训练平台台账录入次数，每月少于4次共"+count+"次");
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setRemark("每人次");
                    examAutoEvaluation.setAssess("人事训练室");
                    examAutoEvaluation.setModel("2020年年度北海处对机关科室绩效考核扣分标准(业务部分)");
                    examAutoEvaluation.setModelId("01bcee76bf194541b89220959b83b09a");
                    examAutoEvaluation.setOption("未按要求完善“铁路公安教育训练网络信息平台”数据，影响全局工作的");
                    examAutoEvaluation.setOptionId("9654348b64a044c08ea03a727fbcf311");
                    /*examAutoEvaluation.setModel("2020年年度南宁处对各单位（部门）绩效考核扣分标准(队伍建设)");
                    examAutoEvaluation.setModelId("a06767b603d4489bb6659088df6d2d46");
                    examAutoEvaluation.setOption("未按要求完善“铁路公安教育训练网络信息平台”输入资料，影响全处工作的");
                    examAutoEvaluation.setOptionId("6961200863a34b1b9dda15144b1d057c");*/
                    examAutoEvaluation.setScore(String.valueOf(0.5 * count));
                    examAutoEvaluation.setTime(date);
                    examAutoEvaluation.setHappenTime(date);
                    examAutoEvaluation.setCheckTime(date);
                    /*examAutoEvaluation.setRowNum("93");*/
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","未完善铁路公安信息平台数据");
                    //this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
        }
    }

    public void duiLedgerEntryTimesMonth(String year, String month){
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        List<Map<String, String>> allOffice = officeService.findAllOffice();
        for (int i = 0; i < allOffice.size(); i++) {
            String unit = allOffice.get(i).get("name");
            String unitId = allOffice.get(i).get("id");
            if (allOffice.get(i).get("name").contains("南宁处") && (allOffice.get(i).get("name").contains("派出所") || allOffice.get(i).get("name").contains("大队"))){
                String monthTimes = affairLedgerEntryTimesService.monthTimes(year, month, unitId);
                if (StringUtils.isNotBlank(monthTimes)) {
                    if (Integer.valueOf(monthTimes) < 4) {
                        String code = officeService.findCodeByUnitId(unitId);
                        String userId = officeService.findUserIdByCode(code);
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setEvaluationId(userId);
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails(year+"年"+month+"月"+unit+"单位"+"教育考核管理，练兵台账统计，教育训练平台台账录入次数，实际"+(4 - Integer.valueOf(monthTimes))+"次，少于每月4次");
                        examAutoEvaluation.setUnit(unit);
                        examAutoEvaluation.setUnitId(unitId);
                        examAutoEvaluation.setRemark("每人次");
                        examAutoEvaluation.setAssess("人事训练室");
                        examAutoEvaluation.setModel("2020年月度南宁公安处对派出所绩效考核评分标准（队伍建设）");
                        examAutoEvaluation.setModelId("ddc6d6dd210e4f428b3a5361f27389fa");
                        examAutoEvaluation.setOption("未按要求完善“铁路公安教育训练网络信息平台”输入资料的，影响全处工作的");
                        examAutoEvaluation.setOptionId("996dd7ee80054011bd7ae582dc47368c");
                        examAutoEvaluation.setScore(String.valueOf(10));
                        examAutoEvaluation.setTime(date);
                        examAutoEvaluation.setHappenTime(date);
                        examAutoEvaluation.setCheckTime(date);
                        /*examAutoEvaluation.setRowNum("120");*/
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","未完善铁路公安信息平台数据");
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                }
            }
            else if (allOffice.get(i).get("name").contains("柳州处") && (allOffice.get(i).get("name").contains("派出所") || allOffice.get(i).get("name").contains("大队"))){
                String monthTimes = affairLedgerEntryTimesService.monthTimes(year, month, unitId);
                if (StringUtils.isNotBlank(monthTimes)) {
                    if (Integer.valueOf(monthTimes) < 4) {
                        String code = officeService.findCodeByUnitId(unitId);
                        String userId = officeService.findUserIdByCode(code);
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setEvaluationId(userId);
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails(year+"年"+month+"月"+unit+"单位"+"教育考核管理，练兵台账统计，教育训练平台台账录入次数，实际"+(4 - Integer.valueOf(monthTimes))+"次，少于每月4次");
                        examAutoEvaluation.setUnit(unit);
                        examAutoEvaluation.setUnitId(unitId);
                        examAutoEvaluation.setRemark("每人次");
                        examAutoEvaluation.setAssess("人事训练室");
               /* examAutoEvaluation.setModel("柳州处对派出所2020年月度队伍建设绩效考核扣分标准");
                examAutoEvaluation.setModelId("833e7b9ae7084f9a993dfa802fff74e0");
                // 对应了两条标准
                examAutoEvaluation.setOption("");
                examAutoEvaluation.setOptionId("");*/
                        examAutoEvaluation.setModel("2020年月度南宁公安处对派出所绩效考核评分标准（队伍建设）");
                        examAutoEvaluation.setModelId("ddc6d6dd210e4f428b3a5361f27389fa");
                        examAutoEvaluation.setOption("未按要求完善“铁路公安教育训练网络信息平台”输入资料的，影响全处工作的");
                        examAutoEvaluation.setOptionId("996dd7ee80054011bd7ae582dc47368c");
                        examAutoEvaluation.setScore(String.valueOf(10));
                        examAutoEvaluation.setTime(date);
                        examAutoEvaluation.setHappenTime(date);
                        examAutoEvaluation.setCheckTime(date);
                        /*examAutoEvaluation.setRowNum("");*/
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","未完善铁路公安信息平台数据");
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                }
            }
            else if (allOffice.get(i).get("name").contains("北海处") && (allOffice.get(i).get("name").contains("派出所") || allOffice.get(i).get("name").contains("大队"))){
                String monthTimes = affairLedgerEntryTimesService.monthTimes(year, month, unitId);
                if (StringUtils.isNotBlank(monthTimes)) {
                    if (Integer.valueOf(monthTimes) < 4) {
                        String code = officeService.findCodeByUnitId(unitId);
                        String userId = officeService.findUserIdByCode(code);
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setEvaluationId(userId);
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setDetails(year+"年"+month+"月"+unit+"单位"+"教育考核管理，练兵台账统计，教育训练平台台账录入次数，实际"+(4 - Integer.valueOf(monthTimes))+"次，少于每月4次");
                        examAutoEvaluation.setUnit(unit);
                        examAutoEvaluation.setUnitId(unitId);
                        examAutoEvaluation.setRemark("每人次");
                        examAutoEvaluation.setAssess("人事训练室");
                       /* examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队扣分标准（队伍建设）");
                        examAutoEvaluation.setModelId("4911c543e6b442aba644ad0eafe0e702");
                        examAutoEvaluation.setOption("未按上级规定，组织民警使用“铁路公安教育训练网络信息平台”自学和考试的，每人扣");
                        examAutoEvaluation.setOptionId("f08f39b9174a4613a5027e5038a45009");*/
                        examAutoEvaluation.setModel("2020年月度南宁公安处对派出所绩效考核评分标准（队伍建设）");
                        examAutoEvaluation.setModelId("ddc6d6dd210e4f428b3a5361f27389fa");
                        examAutoEvaluation.setOption("未按要求完善“铁路公安教育训练网络信息平台”输入资料的，影响全处工作的");
                        examAutoEvaluation.setOptionId("996dd7ee80054011bd7ae582dc47368c");
                        examAutoEvaluation.setScore(String.valueOf(10));
                        examAutoEvaluation.setTime(date);
                        examAutoEvaluation.setHappenTime(date);
                        examAutoEvaluation.setCheckTime(date);
                        /*examAutoEvaluation.setRowNum("91");*/
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","未完善铁路公安信息平台数据");
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                }
            }
        }
    }

    public void duiLedgerEntryTimesYear(String year){
        Date date = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        List<Map<String, String>> allOffice = officeService.findAllOffice();
        for (int i = 0; i < allOffice.size(); i++) {
            String unit = allOffice.get(i).get("name");
            String unitId = allOffice.get(i).get("id");
            if (allOffice.get(i).get("name").contains("南宁处") && (allOffice.get(i).get("name").contains("派出所") || allOffice.get(i).get("name").contains("大队"))){
                Integer count = 0;
                Boolean flag = false;
                List<AffairLedgerEntryTimes> list = affairLedgerEntryTimesService.yearTimes(year, unitId);
                if (list.size() > 0){
                    flag = true;
                    for (int j = 0; j < list.size(); j++) {
                        if (Integer.valueOf(list.get(j).getJanuary()) < 4){
                            count += 1;
                        }else if (Integer.valueOf(list.get(j).getFebruary()) < 4){
                            count += 1;
                        }else if (Integer.valueOf(list.get(j).getMarch()) < 4){
                            count += 1;
                        }else if (Integer.valueOf(list.get(j).getApril()) < 4){
                            count += 1;
                        }else if (Integer.valueOf(list.get(j).getMay()) < 4){
                            count += 1;
                        }else if (Integer.valueOf(list.get(j).getJune()) < 4){
                            count += 1;
                        }else if (Integer.valueOf(list.get(j).getJuly()) < 4){
                            count += 1;
                        }else if (Integer.valueOf(list.get(j).getAugust()) < 4){
                            count += 1;
                        }else if (Integer.valueOf(list.get(j).getSeptember()) < 4){
                            count += 1;
                        }else if (Integer.valueOf(list.get(j).getOctober()) < 4){
                            count += 1;
                        }else if (Integer.valueOf(list.get(j).getNovember()) < 4){
                            count += 1;
                        }else if (Integer.valueOf(list.get(j).getDecember()) < 4){
                            count += 1;
                        }
                    }
                }
                if (flag){
                    String code = officeService.findCodeByUnitId(unitId);
                    String userId = officeService.findUserIdByCode(code);
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(year+"年"+unit+"单位"+"教育考核管理，练兵台账统计，教育训练平台台账录入次数，每月少于4次共"+count+"次");
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setRemark("每人次");
                    examAutoEvaluation.setAssess("人事训练室");
                    examAutoEvaluation.setModel("2020年年度南宁公安处对派出所绩效考核扣分标准(队伍建设)");
                    examAutoEvaluation.setModelId("f43cb06efe6b42acb625d2cef27bad1e");
                    examAutoEvaluation.setOption("未按要求完善“铁路公安教育训练网络信息平台”输入资料，影响全处工作的");
                    examAutoEvaluation.setOptionId("df073b4969c04e9bb126afd2a74ebf0d");
                    examAutoEvaluation.setScore(String.valueOf(5 * count));
                    examAutoEvaluation.setTime(date);
                    examAutoEvaluation.setHappenTime(date);
                    examAutoEvaluation.setCheckTime(date);
                   /* examAutoEvaluation.setRowNum("84");*/
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","未完善铁路公安信息平台数据");
                    //this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
            else if (allOffice.get(i).get("name").contains("柳州处") && (allOffice.get(i).get("name").contains("派出所") || allOffice.get(i).get("name").contains("大队"))){
                Integer count = 0;
                Boolean flag = false;
                List<AffairLedgerEntryTimes> list = affairLedgerEntryTimesService.yearTimes(year, unitId);
                if (list.size() > 0){
                    flag = true;
                    for (int j = 0; j < list.size(); j++) {
                        if (Integer.valueOf(list.get(j).getJanuary()) < 4){
                            count += 1;
                        }else if (Integer.valueOf(list.get(j).getFebruary()) < 4){
                            count += 1;
                        }else if (Integer.valueOf(list.get(j).getMarch()) < 4){
                            count += 1;
                        }else if (Integer.valueOf(list.get(j).getApril()) < 4){
                            count += 1;
                        }else if (Integer.valueOf(list.get(j).getMay()) < 4){
                            count += 1;
                        }else if (Integer.valueOf(list.get(j).getJune()) < 4){
                            count += 1;
                        }else if (Integer.valueOf(list.get(j).getJuly()) < 4){
                            count += 1;
                        }else if (Integer.valueOf(list.get(j).getAugust()) < 4){
                            count += 1;
                        }else if (Integer.valueOf(list.get(j).getSeptember()) < 4){
                            count += 1;
                        }else if (Integer.valueOf(list.get(j).getOctober()) < 4){
                            count += 1;
                        }else if (Integer.valueOf(list.get(j).getNovember()) < 4){
                            count += 1;
                        }else if (Integer.valueOf(list.get(j).getDecember()) < 4){
                            count += 1;
                        }
                    }
                }
                if (flag){
                    String code = officeService.findCodeByUnitId(unitId);
                    String userId = officeService.findUserIdByCode(code);
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(year+"年"+unit+"单位"+"教育考核管理，练兵台账统计，教育训练平台台账录入次数，每月少于4次共"+count+"次");
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setRemark("每人次");
                    examAutoEvaluation.setAssess("人事训练室");
              /*  examAutoEvaluation.setModel("柳州处对派出所2020年年度队伍建设绩效考核扣分标准");
                examAutoEvaluation.setModelId("74fe8a5471d84a6b969974a556d7a409");
                // 对应了两条标准
                examAutoEvaluation.setOption("");
                examAutoEvaluation.setOptionId("");*/
                    examAutoEvaluation.setModel("2020年年度南宁公安处对派出所绩效考核扣分标准(队伍建设)");
                    examAutoEvaluation.setModelId("f43cb06efe6b42acb625d2cef27bad1e");
                    examAutoEvaluation.setOption("未按要求完善“铁路公安教育训练网络信息平台”输入资料，影响全处工作的");
                    examAutoEvaluation.setOptionId("df073b4969c04e9bb126afd2a74ebf0d");
                    examAutoEvaluation.setScore(String.valueOf(5 * count));
                    examAutoEvaluation.setTime(date);
                    examAutoEvaluation.setHappenTime(date);
                    examAutoEvaluation.setCheckTime(date);
                    /*examAutoEvaluation.setRowNum("");*/
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","未完善铁路公安信息平台数据");
                    //this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
            else if (allOffice.get(i).get("name").contains("北海处") && (allOffice.get(i).get("name").contains("派出所") || allOffice.get(i).get("name").contains("大队"))){
                Integer count = 0;
                Boolean flag = false;
                List<AffairLedgerEntryTimes> list = affairLedgerEntryTimesService.yearTimes(year, unitId);
                if (list.size() > 0){
                    flag = true;
                    for (int j = 0; j < list.size(); j++) {
                        if (Integer.valueOf(list.get(j).getJanuary()) < 4){
                            count += 1;
                        }else if (Integer.valueOf(list.get(j).getFebruary()) < 4){
                            count += 1;
                        }else if (Integer.valueOf(list.get(j).getMarch()) < 4){
                            count += 1;
                        }else if (Integer.valueOf(list.get(j).getApril()) < 4){
                            count += 1;
                        }else if (Integer.valueOf(list.get(j).getMay()) < 4){
                            count += 1;
                        }else if (Integer.valueOf(list.get(j).getJune()) < 4){
                            count += 1;
                        }else if (Integer.valueOf(list.get(j).getJuly()) < 4){
                            count += 1;
                        }else if (Integer.valueOf(list.get(j).getAugust()) < 4){
                            count += 1;
                        }else if (Integer.valueOf(list.get(j).getSeptember()) < 4){
                            count += 1;
                        }else if (Integer.valueOf(list.get(j).getOctober()) < 4){
                            count += 1;
                        }else if (Integer.valueOf(list.get(j).getNovember()) < 4){
                            count += 1;
                        }else if (Integer.valueOf(list.get(j).getDecember()) < 4){
                            count += 1;
                        }
                    }
                }
                if (flag){
                    String code = officeService.findCodeByUnitId(unitId);
                    String userId = officeService.findUserIdByCode(code);
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(year+"年"+unit+"单位"+"教育考核管理，练兵台账统计，教育训练平台台账录入次数，每月少于4次共"+count+"次");
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setRemark("每人次");
                    examAutoEvaluation.setAssess("宣教室");
                   /* examAutoEvaluation.setModel("2020年年度北海处对派出所、刑警三大队绩效考核扣分标准(队伍建设部分)");
                    examAutoEvaluation.setModelId("caf3fe64fd9e4d60b33fc16c2ce062e2");
                    examAutoEvaluation.setOption("未按上级规定，组织民警使用“铁路公安教育训练网络信息平台”自学和考试的，每人扣");
                    examAutoEvaluation.setOptionId("244cb9c5521a43a38ff50467fb322c6d");*/
                    examAutoEvaluation.setModel("2020年年度南宁公安处对派出所绩效考核扣分标准(队伍建设)");
                    examAutoEvaluation.setModelId("f43cb06efe6b42acb625d2cef27bad1e");
                    examAutoEvaluation.setOption("未按要求完善“铁路公安教育训练网络信息平台”输入资料，影响全处工作的");
                    examAutoEvaluation.setOptionId("df073b4969c04e9bb126afd2a74ebf0d");
                    examAutoEvaluation.setScore(String.valueOf(5 * count));
                    examAutoEvaluation.setTime(date);
                    examAutoEvaluation.setHappenTime(date);
                    examAutoEvaluation.setCheckTime(date);
                    /*examAutoEvaluation.setRowNum("65");*/
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","未完善铁路公安信息平台数据");
                    //this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
        }
    }

    /*public List<AffairPartyRewardPunish> selectParty(String year, String idNumber) {
        return examAutoEvaluationDao.selectParty(year, idNumber);
    }
*/
    /**
     * 智慧政工-惩戒信息（党建工作）
     * <p>
     * -年度  局考处
     *
     * @param year
     */
    public void jkcCjYear(String year) {

        /*Map<String,Object> yearMap = this.getTimeQuantumByYear(year);
        Date nowYearDate = (Date) yearMap.get("nowYear");
        Date lastYearDate = (Date) yearMap.get("lastYear");
        year = (String) yearMap.get("year");*/

        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        Map<String, String> yearTime = this.yearTime(year);
        Date lastYearDate = null;
        Date nowYearDate = null;
        try {
            lastYearDate = format.parse(yearTime.get("yearL"));
            nowYearDate = format.parse(yearTime.get("yearT"));
        } catch (ParseException e) {
            e.printStackTrace();
        }


        List<AffairGeneralSituation> affairGeneralSituationsList = affairGeneralSituationService.selectChuPartyBranch();//查询处下所有党支部
        StringBuffer nncUnitNam = null;
        Boolean nncIs0 = false;
        StringBuffer lzcUnitNam = null;
        Boolean lzcIs0 = false;
        StringBuffer bhcUnitNam = null;
        Boolean bhcIs0 = false;
        int nncjgScore = 0;
        int nncyzjgScore = 0;
        int nncdjScore = 0;

        int lzcjgScore = 0;
        int lzcyzjgScore = 0;
        int lzcdjScore = 0;

        int bhcjgScore = 0;
        int bhcyzjgScore = 0;
        int bhcdjScore = 0;

        StringBuffer nncjgDetails = null;
        StringBuffer nncyzjgDetails = null;
        StringBuffer nncdjDetails = null;

        StringBuffer lzcjgDetails = null;
        StringBuffer lzcyzjgDetails = null;
        StringBuffer lzcdjDetails = null;

        StringBuffer bhcjgDetails = null;
        StringBuffer bhcyzjgDetails = null;
        StringBuffer bhcdjDetails = null;

        for (AffairGeneralSituation affairGeneralSituation : affairGeneralSituationsList) {
            //党组织名称
            String partyName = affairGeneralSituation.getPartyOrganization();
            //党组织id
            String partyId = affairGeneralSituation.getId();
            List<AffairPartyRewardPunish> list = examAutoEvaluationDao.selectParty(lastYearDate,nowYearDate,partyId);

            if (list != null && list.size() > 0) {
                if (affairGeneralSituation.getParentIds().contains(",34,")) {
                    //南宁处
                    nncIs0 = true;
                    if (nncUnitNam == null) {
                        nncUnitNam = new StringBuffer(partyName);
                    } else {
                        nncUnitNam.append("," + partyName);
                    }

                } else if (affairGeneralSituation.getParentIds().contains(",95,")) {
                    //柳州处
                    lzcIs0 = true;
                    if (lzcUnitNam == null) {
                        lzcUnitNam = new StringBuffer(partyName);
                    } else {
                        lzcUnitNam.append("," + partyName);
                    }
                } else if (affairGeneralSituation.getParentIds().contains(",156,")){
                    //北海处
                    bhcIs0 = true;
                    if (bhcUnitNam == null) {
                        bhcUnitNam = new StringBuffer(partyName);
                    } else {
                        bhcUnitNam.append("," + partyName);
                    }
                }
                for (int i = 0; i < list.size(); i++) {
                    if (affairGeneralSituation.getParentIds().contains(",34,")) {
                        AffairPartyRewardPunish affairPartyRewardPunish = list.get(i);
                        Date approvalTime = affairPartyRewardPunish.getApprovalTime();
                        if("1".equals(affairPartyRewardPunish.getCjType())){
                            nncjgScore += 1;
                            if (nncjgDetails == null) {
                                nncjgDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                            } else {
                                nncjgDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                            }
                        }else if("2".equals(affairPartyRewardPunish.getCjType())){
                            nncyzjgScore += 1.5;
                            if (nncyzjgDetails == null) {
                                String dict = DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", "");
                                nncyzjgDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+dict);
                            } else {
                                nncyzjgDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                            }
                        }else if("3".equals(affairPartyRewardPunish.getCjType()) || "4".equals(affairPartyRewardPunish.getCjType()) || "5".equals(affairPartyRewardPunish.getCjType())){
                            nncdjScore += 5;
                            if (nncdjDetails == null) {
                                nncdjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                            } else {
                                nncdjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                            }
                        }
                    } else if (affairGeneralSituation.getParentIds().contains(",95,")) {
                        AffairPartyRewardPunish affairPartyRewardPunish = list.get(i);
                        Date approvalTime = affairPartyRewardPunish.getApprovalTime();
                        if("1".equals(affairPartyRewardPunish.getCjType())){
                            lzcjgScore += 1;
                            if (lzcjgDetails == null) {
                                lzcjgDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                            } else {
                                lzcjgDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                            }
                        }else if("2".equals(affairPartyRewardPunish.getCjType())){
                            lzcyzjgScore += 1.5;
                            if (lzcyzjgDetails == null) {
                                lzcyzjgDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                            } else {
                                lzcyzjgDetails.append(","+ affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                            }
                        }else if("3".equals(affairPartyRewardPunish.getCjType()) || "4".equals(affairPartyRewardPunish.getCjType()) || "5".equals(affairPartyRewardPunish.getCjType())){
                            lzcdjScore += 5;
                            if (lzcdjDetails == null) {
                                lzcdjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                            } else {
                                lzcdjDetails.append(","+affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                            }
                        }
                    } else if (affairGeneralSituation.getParentIds().contains(",156,")){
                        AffairPartyRewardPunish affairPartyRewardPunish = list.get(i);
                        Date approvalTime = affairPartyRewardPunish.getApprovalTime();
                        if("1".equals(affairPartyRewardPunish.getCjType())){
                            bhcjgScore += 1;
                            if (bhcjgDetails == null) {
                                bhcjgDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                            } else {
                                bhcjgDetails.append("," +affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                            }
                        }else if("2".equals(affairPartyRewardPunish.getCjType())){
                            bhcyzjgScore += 1.5;
                            if (bhcyzjgDetails == null) {
                                bhcyzjgDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                            } else {
                                bhcyzjgDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                            }
                        }else if("3".equals(affairPartyRewardPunish.getCjType()) || "4".equals(affairPartyRewardPunish.getCjType()) || "5".equals(affairPartyRewardPunish.getCjType())){
                            bhcdjScore += 5;
                            if (bhcdjDetails == null) {
                                bhcdjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                            } else {
                                bhcdjDetails.append("," +affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                            }
                        }
                    }
                }
            }
        }
        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
        examAutoEvaluation.setType("1");
        examAutoEvaluation.setEvalType("1");
        examAutoEvaluation.setPeriod("2");
        examAutoEvaluation.setYear(year);
        examAutoEvaluation.setFromSys("智慧政工");
        examAutoEvaluation.setAssess("南宁局政治部组织干部处");//初审人员
        examAutoEvaluation.setAssessId("bfdf74f010c9466dba12c1589ecab7f3");//初审人员id
        if (nncIs0) {
            examAutoEvaluation.setIsNewRecord(true);
            examAutoEvaluation.setUnit("南宁处政治处组织干部室");
            examAutoEvaluation.setUnitId("27");
            examAutoEvaluation.setEvaluationId("34e8d855cf6b4b1ab5e7e23e7aaba658");
            if(nncjgScore > 0) {
                examAutoEvaluation.setId(IdGen.uuid());
                examAutoEvaluation.setDetails(nncUnitNam+nncjgDetails.toString());
                examAutoEvaluation.setModel("2020年年度公安局对公安处考评公共扣分标准");
                examAutoEvaluation.setModelId("bb3eea8554314e04b170f26f2694574e");
                examAutoEvaluation.setOption("民警受到行政记过、党内警告处分的");
                examAutoEvaluation.setOptionId("998c01aafa49499caec3427b9eb93b09");
                examAutoEvaluation.setScore(String.valueOf(nncjgScore));
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建惩戒信息_警告");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if(nncyzjgScore > 0){
                examAutoEvaluation.setId(IdGen.uuid());
                examAutoEvaluation.setDetails(nncUnitNam+nncyzjgDetails.toString());
                examAutoEvaluation.setModel("2020年年度公安局对公安处考评公共扣分标准");
                examAutoEvaluation.setModelId("bb3eea8554314e04b170f26f2694574e");
                examAutoEvaluation.setOption("民警受到行政记大过、党内严重警告处分的");
                examAutoEvaluation.setOptionId("064a9200a1364e83925360aac160aad6");
                examAutoEvaluation.setScore(String.valueOf(nncyzjgScore));
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建惩戒信息_严重警告");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if(nncdjScore > 0){
                examAutoEvaluation.setId(IdGen.uuid());
                examAutoEvaluation.setDetails(nncUnitNam+nncdjDetails.toString());
                examAutoEvaluation.setModel("2020年年度公安局对公安处考评公共扣分标准");
                examAutoEvaluation.setModelId("bb3eea8554314e04b170f26f2694574e");
                examAutoEvaluation.setOption("因教育管理责任落实不到位，民警受到降级、撤销党内职务及以上处分的（因个人原因发生问题的按30%扣分）");
                examAutoEvaluation.setOptionId("afadb33e034a48a78d4101fe1c5c6561");
                examAutoEvaluation.setScore(String.valueOf(nncdjScore));
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建惩戒信息_撤销党内职务、留党察看、开除党籍");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
        }
        if (lzcIs0) {
            examAutoEvaluation.setIsNewRecord(true);
            examAutoEvaluation.setUnit("柳州处政治处组织干部室");
            examAutoEvaluation.setUnitId("142");
            examAutoEvaluation.setEvaluationId("ec3ba2efdd404f2faa520f6e8a71ec4c");
            if(lzcjgScore > 0) {
                examAutoEvaluation.setId(IdGen.uuid());
                examAutoEvaluation.setDetails(lzcUnitNam+lzcjgDetails.toString());
                examAutoEvaluation.setModel("2020年年度公安局对公安处考评公共扣分标准");
                examAutoEvaluation.setModelId("bb3eea8554314e04b170f26f2694574e");
                examAutoEvaluation.setOption("民警受到行政记过、党内警告处分的");
                examAutoEvaluation.setOptionId("998c01aafa49499caec3427b9eb93b09");
                examAutoEvaluation.setScore(String.valueOf(lzcjgScore));
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建惩戒信息_警告");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if(lzcyzjgScore > 0){
                examAutoEvaluation.setId(IdGen.uuid());
                examAutoEvaluation.setDetails(lzcUnitNam+lzcyzjgDetails.toString());
                examAutoEvaluation.setModel("2020年年度公安局对公安处考评公共扣分标准");
                examAutoEvaluation.setModelId("bb3eea8554314e04b170f26f2694574e");
                examAutoEvaluation.setOption("民警受到行政记大过、党内严重警告处分的");
                examAutoEvaluation.setOptionId("064a9200a1364e83925360aac160aad6");
                examAutoEvaluation.setScore(String.valueOf(lzcyzjgScore));
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建惩戒信息_严重警告");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if(lzcdjScore > 0){
                examAutoEvaluation.setId(IdGen.uuid());
                examAutoEvaluation.setDetails(lzcUnitNam+lzcdjDetails.toString());
                examAutoEvaluation.setModel("2020年年度公安局对公安处考评公共扣分标准");
                examAutoEvaluation.setModelId("bb3eea8554314e04b170f26f2694574e");
                examAutoEvaluation.setOption("因教育管理责任落实不到位，民警受到降级、撤销党内职务及以上处分的（因个人原因发生问题的按30%扣分）");
                examAutoEvaluation.setOptionId("afadb33e034a48a78d4101fe1c5c6561");
                examAutoEvaluation.setScore(String.valueOf(lzcdjScore));
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建惩戒信息_撤销党内职务、留党察看、开除党籍");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
        }
        if (bhcIs0) {
            examAutoEvaluation.setIsNewRecord(true);
            examAutoEvaluation.setUnit("北海处政治处组织干部室");
            examAutoEvaluation.setUnitId("264");
            examAutoEvaluation.setEvaluationId("c90918faf2614baa8fa85230482bd43e");
            if(bhcjgScore > 0) {
                examAutoEvaluation.setId(IdGen.uuid());
                examAutoEvaluation.setDetails(bhcUnitNam+bhcjgDetails.toString());
                examAutoEvaluation.setModel("2020年年度公安局对公安处考评公共扣分标准");
                examAutoEvaluation.setModelId("bb3eea8554314e04b170f26f2694574e");
                examAutoEvaluation.setOption("民警受到行政记过、党内警告处分的");
                examAutoEvaluation.setOptionId("998c01aafa49499caec3427b9eb93b09");
                examAutoEvaluation.setScore(String.valueOf(bhcjgScore));
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建惩戒信息_警告");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if(bhcyzjgScore > 0){
                examAutoEvaluation.setId(IdGen.uuid());
                examAutoEvaluation.setDetails(bhcUnitNam+bhcyzjgDetails.toString());
                examAutoEvaluation.setModel("2020年年度公安局对公安处考评公共扣分标准");
                examAutoEvaluation.setModelId("bb3eea8554314e04b170f26f2694574e");
                examAutoEvaluation.setOption("民警受到行政记大过、党内严重警告处分的");
                examAutoEvaluation.setOptionId("064a9200a1364e83925360aac160aad6");
                examAutoEvaluation.setScore(String.valueOf(bhcyzjgScore));
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建惩戒信息_严重警告");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if(bhcdjScore > 0){
                examAutoEvaluation.setId(IdGen.uuid());
                examAutoEvaluation.setDetails(bhcUnitNam+bhcdjDetails.toString());
                examAutoEvaluation.setModel("2020年年度公安局对公安处考评公共扣分标准");
                examAutoEvaluation.setModelId("bb3eea8554314e04b170f26f2694574e");
                examAutoEvaluation.setOption("因教育管理责任落实不到位，民警受到降级、撤销党内职务及以上处分的（因个人原因发生问题的按30%扣分）");
                examAutoEvaluation.setOptionId("afadb33e034a48a78d4101fe1c5c6561");
                examAutoEvaluation.setScore(String.valueOf(bhcdjScore));
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建惩戒信息_撤销党内职务、留党察看、开除党籍");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
        }
    }

    /**
     * 智慧政工-惩戒信息（党建工作）
     * <p>
     * -月度  局考处
     *
     * @param checkTime
     */
    public void jkcCjMonth(String checkTime) {
        String year = checkTime.substring(0, 4);
        String month = checkTime.substring(checkTime.length() - 2);

        /*Map<String,Object> monthMap = this.getTimeQuantumByMonth(year,month);
        Date nowMonthDate = (Date) monthMap.get("nowTime");
        Date lastMonthDate = (Date) monthMap.get("lastTime");
        year = (String) monthMap.get("year");
        month = (String) monthMap.get("month");*/

        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        Map<String, String> monthTime = this.monthTime(checkTime);
        Date lastMonthDate = null;
        Date nowMonthDate = null;
        try {
            lastMonthDate = format.parse(monthTime.get("yearL"));
            nowMonthDate = format.parse(monthTime.get("yearT"));
        } catch (ParseException e) {
            e.printStackTrace();
        }


        List<AffairGeneralSituation> affairGeneralSituationsList = affairGeneralSituationService.selectChuPartyBranch();//查询处下所有党支部
        StringBuffer nncUnitNam = null;
        Boolean nncIs0 = false;
        StringBuffer lzcUnitNam = null;
        Boolean lzcIs0 = false;
        StringBuffer bhcUnitNam = null;
        Boolean bhcIs0 = false;
        int nncjgScore = 0;
        int nncyzjgScore = 0;
        int nncdjScore = 0;

        int lzcjgScore = 0;
        int lzcyzjgScore = 0;
        int lzcdjScore = 0;

        int bhcjgScore = 0;
        int bhcyzjgScore = 0;
        int bhcdjScore = 0;

        StringBuffer nncjgDetails = null;
        StringBuffer nncyzjgDetails = null;
        StringBuffer nncdjDetails = null;

        StringBuffer lzcjgDetails = null;
        StringBuffer lzcyzjgDetails = null;
        StringBuffer lzcdjDetails = null;

        StringBuffer bhcjgDetails = null;
        StringBuffer bhcyzjgDetails = null;
        StringBuffer bhcdjDetails = null;

        for (AffairGeneralSituation affairGeneralSituation : affairGeneralSituationsList) {
            //党组织名称
            String partyName = affairGeneralSituation.getPartyOrganization();
            //党组织id
            String partyId = affairGeneralSituation.getId();
            List<AffairPartyRewardPunish> list = examAutoEvaluationDao.selectPartyMonth(nowMonthDate,lastMonthDate, partyId);

            if (list != null && list.size() > 0) {
                if (affairGeneralSituation.getParentIds().contains(",34,")) {
                    //南宁处
                    nncIs0 = true;
                    if (nncUnitNam == null) {
                        nncUnitNam = new StringBuffer(partyName);
                    } else {
                        nncUnitNam.append("," + partyName);
                    }

                } else if (affairGeneralSituation.getParentIds().contains(",95,")) {
                    //柳州处
                    lzcIs0 = true;
                    if (lzcUnitNam == null) {
                        lzcUnitNam = new StringBuffer(partyName);
                    } else {
                        lzcUnitNam.append("," + partyName);
                    }
                } else if (affairGeneralSituation.getParentIds().contains(",156,")){
                    //北海处
                    bhcIs0 = true;
                    if (bhcUnitNam == null) {
                        bhcUnitNam = new StringBuffer(partyName);
                    } else {
                        bhcUnitNam.append("," + partyName);
                    }
                }
                for (int i = 0; i < list.size(); i++) {
                    if (affairGeneralSituation.getParentIds().contains(",34,")) {
                        AffairPartyRewardPunish affairPartyRewardPunish = list.get(i);
                        Date approvalTime = affairPartyRewardPunish.getApprovalTime();
                        if("1".equals(affairPartyRewardPunish.getCjType())){
                            nncjgScore += 1;
                            if (nncjgDetails == null) {
                                nncjgDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                            } else {
                                nncjgDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                            }
                        }else if("2".equals(affairPartyRewardPunish.getCjType())){
                            nncyzjgScore += 1.5;
                            if (nncyzjgDetails == null) {
                                String dict = DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", "");
                                nncyzjgDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+dict);
                            } else {
                                nncyzjgDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                            }
                        }else if("3".equals(affairPartyRewardPunish.getCjType()) || "4".equals(affairPartyRewardPunish.getCjType()) || "5".equals(affairPartyRewardPunish.getCjType())){
                            nncdjScore += 5;
                            if (nncdjDetails == null) {
                                nncdjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                            } else {
                                nncdjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                            }
                        }
                    } else if (affairGeneralSituation.getParentIds().contains(",95,")) {
                        AffairPartyRewardPunish affairPartyRewardPunish = list.get(i);
                        Date approvalTime = affairPartyRewardPunish.getApprovalTime();
                        if("1".equals(affairPartyRewardPunish.getCjType())){
                            lzcjgScore += 1;
                            if (lzcjgDetails == null) {
                                lzcjgDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                            } else {
                                lzcjgDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                            }
                        }else if("2".equals(affairPartyRewardPunish.getCjType())){
                            lzcyzjgScore += 1.5;
                            if (lzcyzjgDetails == null) {
                                lzcyzjgDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                            } else {
                                lzcyzjgDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                            }
                        }else if("3".equals(affairPartyRewardPunish.getCjType()) || "4".equals(affairPartyRewardPunish.getCjType()) || "5".equals(affairPartyRewardPunish.getCjType())){
                            lzcdjScore += 5;
                            if (lzcdjDetails == null) {
                                lzcdjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                            } else {
                                lzcdjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                            }
                        }
                    } else if (affairGeneralSituation.getParentIds().contains(",156,")){
                        AffairPartyRewardPunish affairPartyRewardPunish = list.get(i);
                        Date approvalTime = affairPartyRewardPunish.getApprovalTime();
                        if("1".equals(affairPartyRewardPunish.getCjType())){
                            bhcjgScore += 1;
                            if (bhcjgDetails == null) {
                                bhcjgDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                            } else {
                                bhcjgDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                            }
                        }else if("2".equals(affairPartyRewardPunish.getCjType())){
                            bhcyzjgScore += 1.5;
                            if (bhcyzjgDetails == null) {
                                bhcyzjgDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                            } else {
                                bhcyzjgDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                            }
                        }else if("3".equals(affairPartyRewardPunish.getCjType()) || "4".equals(affairPartyRewardPunish.getCjType()) || "5".equals(affairPartyRewardPunish.getCjType())){
                            bhcdjScore += 5;
                            if (bhcdjDetails == null) {
                                bhcdjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                            } else {
                                bhcdjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                            }
                        }
                    }
                }
            }
        }
        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
        examAutoEvaluation.setType("1");
        examAutoEvaluation.setEvalType("1");
        examAutoEvaluation.setPeriod("1");
        examAutoEvaluation.setMonth(month);
        examAutoEvaluation.setYear(year);
        examAutoEvaluation.setFromSys("智慧政工");
        examAutoEvaluation.setAssess("南宁局政治部组织干部处");//初审人员
        examAutoEvaluation.setAssessId("bfdf74f010c9466dba12c1589ecab7f3");//初审人员id
        if (nncIs0) {
            examAutoEvaluation.setIsNewRecord(true);
            examAutoEvaluation.setUnit("南宁处政治处组织干部室");
            examAutoEvaluation.setUnitId("27");
            examAutoEvaluation.setEvaluationId("34e8d855cf6b4b1ab5e7e23e7aaba658");
            if(nncjgScore > 0) {
                examAutoEvaluation.setId(IdGen.uuid());
                examAutoEvaluation.setDetails(nncUnitNam+nncjgDetails.toString());
                examAutoEvaluation.setModel("2020年月度公安局对公安处公共扣分标准");
                examAutoEvaluation.setModelId("91f2f146a8b9417ea2f04b42ee80e2aa");
                examAutoEvaluation.setOption("民警受到行政记过、党内警告处分的");
                examAutoEvaluation.setOptionId("479ecf327f814f41a07a64a8ad4403bf");
                examAutoEvaluation.setScore(String.valueOf(nncjgScore));
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建惩戒信息_警告");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if(nncyzjgScore > 0){
                examAutoEvaluation.setId(IdGen.uuid());
                examAutoEvaluation.setDetails(nncUnitNam+nncyzjgDetails.toString());
                examAutoEvaluation.setModel("2020年月度公安局对公安处公共扣分标准");
                examAutoEvaluation.setModelId("91f2f146a8b9417ea2f04b42ee80e2aa");
                examAutoEvaluation.setOption("民警受到行政记大过、党内严重警告处分的");
                examAutoEvaluation.setOptionId("ddf7fa258eeb418ca9dacdc952fb78ca");
                examAutoEvaluation.setScore(String.valueOf(nncyzjgScore));
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建惩戒信息_严重警告");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if(nncdjScore > 0){
                examAutoEvaluation.setId(IdGen.uuid());
                examAutoEvaluation.setDetails(nncUnitNam+nncdjDetails.toString());
                examAutoEvaluation.setModel("2020年月度公安局对公安处公共扣分标准");
                examAutoEvaluation.setModelId("91f2f146a8b9417ea2f04b42ee80e2aa");
                examAutoEvaluation.setOption("因教育管理责任落实不到位，民警受到降级、撤销党内职务以上处分的（当月该项业务工作及责任单位分数为零；因个人原因发生问题的按30%扣分）");
                examAutoEvaluation.setOptionId("ad2704dd1a524789ac0e3be880f1f4cc");
                examAutoEvaluation.setScore(String.valueOf(nncdjScore));
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建惩戒信息_撤销党内职务、留党察看、开除党籍");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
        }
        if (lzcIs0) {
            examAutoEvaluation.setIsNewRecord(true);
            examAutoEvaluation.setUnit("柳州处政治处组织干部室");
            examAutoEvaluation.setUnitId("142");
            examAutoEvaluation.setEvaluationId("ec3ba2efdd404f2faa520f6e8a71ec4c");
            if(lzcjgScore > 0) {
                examAutoEvaluation.setId(IdGen.uuid());
                examAutoEvaluation.setDetails(lzcUnitNam+lzcjgDetails.toString());
                examAutoEvaluation.setModel("2020年月度公安局对公安处公共扣分标准");
                examAutoEvaluation.setModelId("91f2f146a8b9417ea2f04b42ee80e2aa");
                examAutoEvaluation.setOption("民警受到行政记过、党内警告处分的");
                examAutoEvaluation.setOptionId("479ecf327f814f41a07a64a8ad4403bf");
                examAutoEvaluation.setScore(String.valueOf(lzcjgScore));
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建惩戒信息_警告");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if(lzcyzjgScore > 0){
                examAutoEvaluation.setId(IdGen.uuid());
                examAutoEvaluation.setDetails(lzcUnitNam+lzcyzjgDetails.toString());
                examAutoEvaluation.setModel("2020年月度公安局对公安处公共扣分标准");
                examAutoEvaluation.setModelId("91f2f146a8b9417ea2f04b42ee80e2aa");
                examAutoEvaluation.setOption("民警受到行政记大过、党内严重警告处分的");
                examAutoEvaluation.setOptionId("ddf7fa258eeb418ca9dacdc952fb78ca");
                examAutoEvaluation.setScore(String.valueOf(lzcyzjgScore));
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建惩戒信息_严重警告");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if(lzcdjScore > 0){
                examAutoEvaluation.setId(IdGen.uuid());
                examAutoEvaluation.setDetails(lzcUnitNam+lzcdjDetails.toString());
                examAutoEvaluation.setModel("2020年月度公安局对公安处公共扣分标准");
                examAutoEvaluation.setModelId("91f2f146a8b9417ea2f04b42ee80e2aa");
                examAutoEvaluation.setOption("因教育管理责任落实不到位，民警受到降级、撤销党内职务以上处分的（当月该项业务工作及责任单位分数为零；因个人原因发生问题的按30%扣分）");
                examAutoEvaluation.setOptionId("ad2704dd1a524789ac0e3be880f1f4cc");
                examAutoEvaluation.setScore(String.valueOf(lzcdjScore));
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建惩戒信息_撤销党内职务、留党察看、开除党籍");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
        }
        if (bhcIs0) {
            examAutoEvaluation.setIsNewRecord(true);
            examAutoEvaluation.setUnit("北海处政治处组织干部室");
            examAutoEvaluation.setUnitId("264");
            examAutoEvaluation.setEvaluationId("c90918faf2614baa8fa85230482bd43e");
            if(bhcjgScore > 0) {
                examAutoEvaluation.setId(IdGen.uuid());
                examAutoEvaluation.setDetails(bhcUnitNam+bhcjgDetails.toString());
                examAutoEvaluation.setModel("2020年月度公安局对公安处公共扣分标准");
                examAutoEvaluation.setModelId("91f2f146a8b9417ea2f04b42ee80e2aa");
                examAutoEvaluation.setOption("民警受到行政记过、党内警告处分的");
                examAutoEvaluation.setOptionId("479ecf327f814f41a07a64a8ad4403bf");
                examAutoEvaluation.setScore(String.valueOf(bhcjgScore));
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建惩戒信息_警告");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if(bhcyzjgScore > 0){
                examAutoEvaluation.setId(IdGen.uuid());
                examAutoEvaluation.setDetails(bhcUnitNam+bhcyzjgDetails.toString());
                examAutoEvaluation.setModel("2020年月度公安局对公安处公共扣分标准");
                examAutoEvaluation.setModelId("91f2f146a8b9417ea2f04b42ee80e2aa");
                examAutoEvaluation.setOption("民警受到行政记大过、党内严重警告处分的");
                examAutoEvaluation.setOptionId("ddf7fa258eeb418ca9dacdc952fb78ca");
                examAutoEvaluation.setScore(String.valueOf(bhcyzjgScore));
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建惩戒信息_严重警告");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if(bhcdjScore > 0){
                examAutoEvaluation.setId(IdGen.uuid());
                examAutoEvaluation.setDetails(bhcUnitNam+bhcdjDetails.toString());
                examAutoEvaluation.setModel("2020年月度公安局对公安处公共扣分标准");
                examAutoEvaluation.setModelId("91f2f146a8b9417ea2f04b42ee80e2aa");
                examAutoEvaluation.setOption("因教育管理责任落实不到位，民警受到降级、撤销党内职务以上处分的（当月该项业务工作及责任单位分数为零；因个人原因发生问题的按30%扣分）");
                examAutoEvaluation.setOptionId("ad2704dd1a524789ac0e3be880f1f4cc");
                examAutoEvaluation.setScore(String.valueOf(bhcdjScore));
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建惩戒信息_撤销党内职务、留党察看、开除党籍");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
        }
    }


    /**
     * 智慧政工-惩戒信息（党建工作）
     * <p>
     * -年度  局考局机关
     *
     * @param year
     */
    public void jkjCjYear(String year) {
        /*
        Map<String,Object> yearMap = this.getTimeQuantumByYear(year);
        Date nowYearDate = (Date) yearMap.get("nowYear");
        Date lastYearDate = (Date) yearMap.get("lastYear");
        year = (String) yearMap.get("year");*/

        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        Map<String, String> yearTime = this.yearTime(year);
        Date lastYearDate = null;
        Date nowYearDate = null;
        try {
            lastYearDate = format.parse(yearTime.get("yearL"));
            nowYearDate = format.parse(yearTime.get("yearT"));
        } catch (ParseException e) {
            e.printStackTrace();
        }

        List<AffairGeneralSituation> jjgPartyList = affairGeneralSituationService.getJJGPartyBranch();

        for (AffairGeneralSituation affairGeneralSituation : jjgPartyList) {
            StringBuffer jgDetails = null;
            StringBuffer yzjgDetails = null;
            StringBuffer djDetails = null;
            int jgScore = 0;
            int yzjgScore = 0;
            int djScore = 0;
            String partyId = affairGeneralSituation.getId();
            String partyOrganization = affairGeneralSituation.getPartyOrganization();
            List<AffairPartyRewardPunish> list = examAutoEvaluationDao.selectParty(lastYearDate,nowYearDate,partyId);
            if (list.size() > 0 && list != null) {
                for (int j = 0; j < list.size(); j++) {
                    AffairPartyRewardPunish affairPartyRewardPunish = list.get(j);
                    Date approvalTime = affairPartyRewardPunish.getApprovalTime();
                    if("1".equals(affairPartyRewardPunish.getCjType())){
                        jgScore += 4;
                        if (jgDetails == null) {
                            jgDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        } else {
                            jgDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        }
                    }else if("2".equals(affairPartyRewardPunish.getCjType())){
                        yzjgScore += 5;
                        if (yzjgDetails == null) {
                            yzjgDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        } else {
                            yzjgDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        }
                    }else if("3".equals(affairPartyRewardPunish.getCjType()) || "4".equals(affairPartyRewardPunish.getCjType()) || "5".equals(affairPartyRewardPunish.getCjType())){
                        djScore += 20;
                        if (djDetails == null) {
                            djDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        } else {
                            djDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        }
                    }
                }
                if (jgScore > 0) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("2");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(partyOrganization +jgDetails.toString());
                    examAutoEvaluation.setAssessId("南宁局绩效办");
                    examAutoEvaluation.setAssess("cca66e1339f14799b01f6db43ed16e16");
                    examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队年度绩效考核公共扣分标准");
                    examAutoEvaluation.setModelId("653c088f3e754adcaa659a3706d304b9");
                    examAutoEvaluation.setOption("民警受到行政记过、党内警告处分的");
                    examAutoEvaluation.setOptionId("b4e91bf76f934792ac6386e6d7379110");
                    examAutoEvaluation.setScore(String.valueOf(jgScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建惩戒信息_警告");
                    examAutoEvaluation.setFromSys("智慧政工");//数据来源
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if(!user.getOffice().getName().contains("大队")) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId(IdGen.uuid());
                            examAutoEvaluation.setIsNewRecord(true);
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
                if (yzjgScore > 0) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("2");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(partyOrganization +yzjgDetails.toString());
                    examAutoEvaluation.setAssessId("南宁局绩效办");
                    examAutoEvaluation.setAssess("cca66e1339f14799b01f6db43ed16e16");
                    examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队年度绩效考核公共扣分标准");
                    examAutoEvaluation.setModelId("653c088f3e754adcaa659a3706d304b9");
                    examAutoEvaluation.setOption("民警受到行政记大过、党内严重警告处分的");
                    examAutoEvaluation.setOptionId("7a8914d3fedf47078c7107eb803e7e98");
                    examAutoEvaluation.setScore(String.valueOf(yzjgScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建惩戒信息_严重警告");
                    examAutoEvaluation.setFromSys("智慧政工");//数据来源
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if(!user.getOffice().getName().contains("大队")) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId(IdGen.uuid());
                            examAutoEvaluation.setIsNewRecord(true);
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
                if (djScore > 0) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("2");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(partyOrganization +djDetails.toString());
                    examAutoEvaluation.setAssessId("南宁局绩效办");
                    examAutoEvaluation.setAssess("cca66e1339f14799b01f6db43ed16e16");
                    examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队年度绩效考核公共扣分标准");
                    examAutoEvaluation.setModelId("653c088f3e754adcaa659a3706d304b9");
                    examAutoEvaluation.setOption("因教育管理责任落实不到位，民警受到降级、撤销党内职务及以上处分的（因个人原因发生问题的按30%扣分）");
                    examAutoEvaluation.setOptionId("fa1dadd94896475d8778c43122a95c2e");
                    examAutoEvaluation.setScore(String.valueOf(djScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建惩戒信息_撤销党内职务、留党察看、开除党籍");
                    examAutoEvaluation.setFromSys("智慧政工");//数据来源
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if(!user.getOffice().getName().contains("大队")) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId(IdGen.uuid());
                            examAutoEvaluation.setIsNewRecord(true);
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
            }
        }
    }

    /**
     * 智慧政工-惩戒信息（党建工作）
     * <p>
     * -月度  局考局机关
     *
     * @param checkTime
     */
    public void jkjCjMonth(String checkTime) {

        String year = checkTime.substring(0, 4);
        String month = checkTime.substring(checkTime.length() - 2);
       /* Map<String,Object> monthMap = this.getTimeQuantumByMonth(year,month);
        Date nowMonthDate = (Date) monthMap.get("nowTime");
        Date lastMonthDate = (Date) monthMap.get("lastTime");
        year = (String) monthMap.get("year");
        month = (String) monthMap.get("month");
        */

        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        Map<String, String> monthTime = this.monthTime(checkTime);
        Date lastMonthDate = null;
        Date nowMonthDate = null;
        try {
            lastMonthDate = format.parse(monthTime.get("yearL"));
            nowMonthDate = format.parse(monthTime.get("yearT"));
        } catch (ParseException e) {
            e.printStackTrace();
        }



        List<AffairGeneralSituation> jjgPartyList = affairGeneralSituationService.getJJGPartyBranch();
        for (AffairGeneralSituation affairGeneralSituation : jjgPartyList) {
            StringBuffer jgDetails = null;
            StringBuffer yzjgDetails = null;
            StringBuffer djDetails = null;
            int jgScore = 0;
            int yzjgScore = 0;
            int djScore = 0;
            String partyId = affairGeneralSituation.getId();
            String partyOrganization = affairGeneralSituation.getPartyOrganization();
            List<AffairPartyRewardPunish> list = examAutoEvaluationDao.selectPartyMonth(nowMonthDate,lastMonthDate, partyId);
            if (list.size() > 0 && list != null) {
                for (int j = 0; j < list.size(); j++) {
                    AffairPartyRewardPunish affairPartyRewardPunish = list.get(j);
                    Date approvalTime = affairPartyRewardPunish.getApprovalTime();
                    if("1".equals(affairPartyRewardPunish.getCjType())){
                        jgScore += 8;
                        if (jgDetails == null) {
                            jgDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        } else {
                            jgDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        }
                    }else if("2".equals(affairPartyRewardPunish.getCjType())){
                        yzjgScore += 10;
                        if (yzjgDetails == null) {
                            yzjgDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        } else {
                            yzjgDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        }
                    }else if("3".equals(affairPartyRewardPunish.getCjType()) || "4".equals(affairPartyRewardPunish.getCjType()) || "5".equals(affairPartyRewardPunish.getCjType())){
                        djScore += 40;
                        if (djDetails == null) {
                            djDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        } else {
                            djDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        }
                    }
                }
                if (jgScore > 0) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("2");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(partyOrganization +jgDetails.toString());
                    examAutoEvaluation.setAssessId("南宁局绩效办");
                    examAutoEvaluation.setAssess("cca66e1339f14799b01f6db43ed16e16");
                    examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队月度绩效考核公共扣分标准");
                    examAutoEvaluation.setModelId("e8aa72ffe54a4118aeae9077ff7898ec");
                    examAutoEvaluation.setOption("民警受到行政记过、党内警告处分的");
                    examAutoEvaluation.setOptionId("ad9dd12ad8c34f8aad72f5d9b50f189a");
                    examAutoEvaluation.setScore(String.valueOf(jgScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建惩戒信息_警告");
                    examAutoEvaluation.setFromSys("智慧政工");//数据来源
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if(!user.getOffice().getName().contains("大队")) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId(IdGen.uuid());
                            examAutoEvaluation.setIsNewRecord(true);
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
                if (yzjgScore > 0) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("2");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(partyOrganization +yzjgDetails.toString());
                    examAutoEvaluation.setAssessId("南宁局绩效办");
                    examAutoEvaluation.setAssess("cca66e1339f14799b01f6db43ed16e16");
                    examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队月度绩效考核公共扣分标准");
                    examAutoEvaluation.setModelId("e8aa72ffe54a4118aeae9077ff7898ec");
                    examAutoEvaluation.setOption("民警受到行政记大过、党内严重警告处分的");
                    examAutoEvaluation.setOptionId("d3bbc7f81be84b6ebe90ae7484f7938c");
                    examAutoEvaluation.setScore(String.valueOf(yzjgScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建惩戒信息_严重警告");
                    examAutoEvaluation.setFromSys("智慧政工");//数据来源
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if(!user.getOffice().getName().contains("大队")) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId(IdGen.uuid());
                            examAutoEvaluation.setIsNewRecord(true);
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
                if (djScore > 0) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("2");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(partyOrganization +djDetails.toString());
                    examAutoEvaluation.setAssessId("南宁局绩效办");
                    examAutoEvaluation.setAssess("cca66e1339f14799b01f6db43ed16e16");
                    examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队月度绩效考核公共扣分标准");
                    examAutoEvaluation.setModelId("e8aa72ffe54a4118aeae9077ff7898ec");
                    examAutoEvaluation.setOption("因教育管理责任落实不到位，民警受到降级、撤销党内职务及以上处分的（因个人原因发生问题的按30%扣分）");
                    examAutoEvaluation.setOptionId("01067a8c2c5a4718a1fd7bb5a571945b");
                    examAutoEvaluation.setScore(String.valueOf(djScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建惩戒信息_撤销党内职务、留党察看、开除党籍");
                    examAutoEvaluation.setFromSys("智慧政工");//数据来源
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if(!user.getOffice().getName().contains("大队")) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId(IdGen.uuid());
                            examAutoEvaluation.setIsNewRecord(true);
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
            }
        }
    }

    /**
     * 智慧政工-惩戒信息（党建工作）
     * <p>
     * -年度  处考处机关
     *
     * @param year
     */
    public void ckcCjYear(String year) {
        /*Map<String,Object> yearMap = this.getTimeQuantumByYear(year);
        Date nowYearDate = (Date) yearMap.get("nowYear");
        Date lastYearDate = (Date) yearMap.get("lastYear");
        year = (String) yearMap.get("year");
        */
        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        Map<String, String> yearTime = this.yearTime(year);
        Date lastYearDate = null;
        Date nowYearDate = null;
        try {
            lastYearDate = format.parse(yearTime.get("yearL"));
            nowYearDate = format.parse(yearTime.get("yearT"));
        } catch (ParseException e) {
            e.printStackTrace();
        }
        //获取各处处机关党组织
        List<AffairGeneralSituation> nncPartyList = affairGeneralSituationService.getChuPartyBranch("34", "1");
        List<AffairGeneralSituation> lzcPartyList = affairGeneralSituationService.getChuPartyBranch("95", "1");
        List<AffairGeneralSituation> bhcPartyList = affairGeneralSituationService.getChuPartyBranch("156", "1");
        for (AffairGeneralSituation affairGeneralSituation : nncPartyList) {
            StringBuffer nncjgDetails = null;
            StringBuffer nncyzjgDetails = null;
            StringBuffer nncdjDetails = null;
            int nncjgScore = 0;
            int nncyzjgScore = 0;
            int nncdjScore = 0;
            String partyId = affairGeneralSituation.getId();
            String partyOrganization = affairGeneralSituation.getPartyOrganization();
            List<AffairPartyRewardPunish> list = examAutoEvaluationDao.selectParty(lastYearDate,nowYearDate,partyId);
            if(list.size() > 0 && list != null){
                for (int j = 0; j < list.size(); j++) {
                    AffairPartyRewardPunish affairPartyRewardPunish = list.get(j);
                    Date approvalTime = affairPartyRewardPunish.getApprovalTime();
                    if("1".equals(affairPartyRewardPunish.getCjType())){
                        nncjgScore += 4;
                        if (nncjgDetails == null) {
                            nncjgDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        } else {
                            nncjgDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        }
                    }else if("2".equals(affairPartyRewardPunish.getCjType())){
                        nncyzjgScore += 5;
                        if (nncyzjgDetails == null) {
                            nncyzjgDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        } else {
                            nncyzjgDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        }
                    }else if("3".equals(affairPartyRewardPunish.getCjType()) || "4".equals(affairPartyRewardPunish.getCjType()) || "5".equals(affairPartyRewardPunish.getCjType())){
                        nncdjScore += 20;
                        if (nncdjDetails == null) {
                            nncdjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        } else {
                            nncdjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        }
                    }
                }
                if (nncjgScore > 0) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(partyOrganization +nncjgDetails.toString());
                    examAutoEvaluation.setAssess("南宁处绩效办");
                    examAutoEvaluation.setAssessId("978958003ea44a4bba3eed8ee6ceff3c");
                    examAutoEvaluation.setModel("2020年年度南宁公安处对全处各部门公共扣分标准");
                    examAutoEvaluation.setModelId("5587177f089e4ea8926b2feca9b3bf63");
                    examAutoEvaluation.setOption("民警受到行政记过、党内警告处分的");
                    examAutoEvaluation.setOptionId("8405304420e54299b2cca3825d71f611");
                    examAutoEvaluation.setScore(String.valueOf(nncjgScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","党建惩戒信息_警告");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (!user.getOffice().getName().contains("派出所")) {
                            if(!user.getOffice().getName().contains("大队")) {
                                examAutoEvaluation.setUnit(user.getOffice().getName());
                                examAutoEvaluation.setUnitId(user.getOffice().getId());
                                examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                                //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                                examAutoEvaluation.setId(IdGen.uuid());
                                examAutoEvaluation.setIsNewRecord(true);
                                this.deleteInfoByMore(examAutoEvaluation);
                                this.save(examAutoEvaluation);
                            }
                        }
                    }
                }
                if(nncyzjgScore > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(partyOrganization +nncyzjgDetails.toString());
                    examAutoEvaluation.setAssess("南宁处绩效办");
                    examAutoEvaluation.setAssessId("978958003ea44a4bba3eed8ee6ceff3c");
                    examAutoEvaluation.setModel("2020年年度南宁公安处对全处各部门公共扣分标准");
                    examAutoEvaluation.setModelId("5587177f089e4ea8926b2feca9b3bf63");
                    examAutoEvaluation.setOption("民警受到行政记大过、党内严重警告处分的");
                    examAutoEvaluation.setOptionId("c68521a8602b446bbc0c24824db88a1b");
                    examAutoEvaluation.setScore(String.valueOf(nncyzjgScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","党建惩戒信息_严重警告");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (!user.getOffice().getName().contains("派出所")) {
                            if(!user.getOffice().getName().contains("大队")) {
                                examAutoEvaluation.setUnit(user.getOffice().getName());
                                examAutoEvaluation.setUnitId(user.getOffice().getId());
                                examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                                //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                                examAutoEvaluation.setId(IdGen.uuid());
                                examAutoEvaluation.setIsNewRecord(true);
                                this.deleteInfoByMore(examAutoEvaluation);
                                this.save(examAutoEvaluation);
                            }
                        }
                    }
                }
                if(nncdjScore > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(partyOrganization +nncdjDetails.toString());
                    examAutoEvaluation.setAssess("南宁处绩效办");
                    examAutoEvaluation.setAssessId("978958003ea44a4bba3eed8ee6ceff3c");
                    examAutoEvaluation.setModel("2020年年度南宁公安处对全处各部门公共扣分标准");
                    examAutoEvaluation.setModelId("5587177f089e4ea8926b2feca9b3bf63");
                    examAutoEvaluation.setOption("因教育管理责任落实不到位，民警受到降级、撤销党内职务及以上处分的（因个人原因发生问题的按30%扣分）");
                    examAutoEvaluation.setOptionId("1d6557fcad444f6eb8bdab957bcbf113");
                    examAutoEvaluation.setScore(String.valueOf(nncdjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","党建惩戒信息_撤销党内职务、留党察看、开除党籍");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (!user.getOffice().getName().contains("派出所")) {
                            if(!user.getOffice().getName().contains("大队")) {
                                examAutoEvaluation.setUnit(user.getOffice().getName());
                                examAutoEvaluation.setUnitId(user.getOffice().getId());
                                examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                                //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                                examAutoEvaluation.setId(IdGen.uuid());
                                examAutoEvaluation.setIsNewRecord(true);
                                this.deleteInfoByMore(examAutoEvaluation);
                                this.save(examAutoEvaluation);
                            }
                        }
                    }
                }

            }
        }
        for (AffairGeneralSituation affairGeneralSituation : lzcPartyList) {
            StringBuffer lzcjgDetails = null;
            StringBuffer lzcyzjgDetails = null;
            StringBuffer lzcdjDetails = null;
            int lzcjgScore = 0;
            int lzcyzjgScore = 0;
            int lzcdjScore = 0;
            String partyId = affairGeneralSituation.getId();
            String partyOrganization = affairGeneralSituation.getPartyOrganization();
            List<AffairPartyRewardPunish> list = examAutoEvaluationDao.selectParty(lastYearDate,nowYearDate,partyId);
            if(list.size() > 0 && list != null){
                for (int j = 0; j < list.size(); j++) {
                    AffairPartyRewardPunish affairPartyRewardPunish = list.get(j);
                    Date approvalTime = affairPartyRewardPunish.getApprovalTime();
                    if("1".equals(affairPartyRewardPunish.getCjType())){
                        lzcjgScore += 4;
                        if (lzcjgDetails == null) {
                            lzcjgDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        } else {
                            lzcjgDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        }
                    }else if("2".equals(affairPartyRewardPunish.getCjType())){
                        lzcyzjgScore += 5;
                        if (lzcyzjgDetails == null) {
                            lzcyzjgDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        } else {
                            lzcyzjgDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        }
                    }else if("3".equals(affairPartyRewardPunish.getCjType()) || "4".equals(affairPartyRewardPunish.getCjType()) || "5".equals(affairPartyRewardPunish.getCjType())){
                        lzcdjScore += 20;
                        if (lzcdjDetails == null) {
                            lzcdjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        } else {
                            lzcdjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        }
                    }
                }
                if (lzcjgScore > 0) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(partyOrganization +lzcjgDetails.toString());
                    examAutoEvaluation.setAssess("柳州处绩效办");
                    examAutoEvaluation.setAssessId("6af0e615e9b0477da82eff06ff532c8b");
                    examAutoEvaluation.setModel("2020年年度柳州处对单位（部门）绩效考评公共扣分标准");
                    examAutoEvaluation.setModelId("bed0dbae608b43879d002a52258a9f34");
                    examAutoEvaluation.setOption("民警受到行政记过、党内警告处分的");
                    examAutoEvaluation.setOptionId("91abf8b97e764f1da221356cc87f5c79");
                    examAutoEvaluation.setScore(String.valueOf(lzcjgScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","党建惩戒信息_警告");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (!user.getOffice().getName().contains("派出所")) {
                            if(!user.getOffice().getName().contains("大队")) {
                                examAutoEvaluation.setUnit(user.getOffice().getName());
                                examAutoEvaluation.setUnitId(user.getOffice().getId());
                                examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                                //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                                examAutoEvaluation.setId(IdGen.uuid());
                                examAutoEvaluation.setIsNewRecord(true);
                                this.deleteInfoByMore(examAutoEvaluation);
                                this.save(examAutoEvaluation);
                            }
                        }
                    }
                }
                if(lzcyzjgScore > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(partyOrganization +lzcyzjgDetails.toString());
                    examAutoEvaluation.setAssess("柳州处绩效办");
                    examAutoEvaluation.setAssessId("6af0e615e9b0477da82eff06ff532c8b");
                    examAutoEvaluation.setModel("2020年年度柳州处对单位（部门）绩效考评公共扣分标准");
                    examAutoEvaluation.setModelId("bed0dbae608b43879d002a52258a9f34");
                    examAutoEvaluation.setOption("民警受到行政记大过、党内严重警告处分的");
                    examAutoEvaluation.setOptionId("eab1e023b7e9438c85141f3b3d7d6113");
                    examAutoEvaluation.setScore(String.valueOf(lzcyzjgScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","党建惩戒信息_严重警告");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (!user.getOffice().getName().contains("派出所")) {
                            if(!user.getOffice().getName().contains("大队")) {
                                examAutoEvaluation.setUnit(user.getOffice().getName());
                                examAutoEvaluation.setUnitId(user.getOffice().getId());
                                examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                                //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                                examAutoEvaluation.setId(IdGen.uuid());
                                examAutoEvaluation.setIsNewRecord(true);
                                this.deleteInfoByMore(examAutoEvaluation);
                                this.save(examAutoEvaluation);
                            }
                        }
                    }
                }
                if(lzcdjScore > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(partyOrganization +lzcdjDetails.toString());
                    examAutoEvaluation.setAssess("柳州处绩效办");
                    examAutoEvaluation.setAssessId("6af0e615e9b0477da82eff06ff532c8b");
                    examAutoEvaluation.setModel("2020年年度柳州处对单位（部门）绩效考评公共扣分标准");
                    examAutoEvaluation.setModelId("bed0dbae608b43879d002a52258a9f34");
                    examAutoEvaluation.setOption("因教育管理责任落实不到位，民警受到降级、撤销党内职务及以上处分的（因个人原因发生问题的按30%扣分）");
                    examAutoEvaluation.setOptionId("a086a17bdad24d27be436d6e95f9f5d5");
                    examAutoEvaluation.setScore(String.valueOf(lzcdjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","党建惩戒信息_撤销党内职务、留党察看、开除党籍");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (!user.getOffice().getName().contains("派出所")) {
                            if(!user.getOffice().getName().contains("大队")) {
                                examAutoEvaluation.setUnit(user.getOffice().getName());
                                examAutoEvaluation.setUnitId(user.getOffice().getId());
                                examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                                //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                                examAutoEvaluation.setId("");
                                examAutoEvaluation.setIsNewRecord(false);
                                this.deleteInfoByMore(examAutoEvaluation);
                                this.save(examAutoEvaluation);
                            }
                        }
                    }
                }

            }
        }
        for (AffairGeneralSituation affairGeneralSituation : bhcPartyList) {
            StringBuffer bhcjgDetails = null;
            StringBuffer bhcyzjgDetails = null;
            StringBuffer bhcdjDetails = null;
            int bhcjgScore = 0;
            int bhcyzjgScore = 0;
            int bhcdjScore = 0;
            String partyId = affairGeneralSituation.getId();
            String partyOrganization = affairGeneralSituation.getPartyOrganization();
            List<AffairPartyRewardPunish> list = examAutoEvaluationDao.selectParty(lastYearDate,nowYearDate,partyId);
            if(list.size() > 0 && list != null){
                for (int j = 0; j < list.size(); j++) {
                    AffairPartyRewardPunish affairPartyRewardPunish = list.get(j);
                    Date approvalTime = affairPartyRewardPunish.getApprovalTime();
                    if("1".equals(affairPartyRewardPunish.getCjType())){
                        bhcjgScore += 4;
                        if (bhcjgDetails == null) {
                            bhcjgDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        } else {
                            bhcjgDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        }
                    }else if("2".equals(affairPartyRewardPunish.getCjType())){
                        bhcyzjgScore += 5;
                        if (bhcyzjgDetails == null) {
                            bhcyzjgDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        } else {
                            bhcyzjgDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        }
                    }else if("3".equals(affairPartyRewardPunish.getCjType()) || "4".equals(affairPartyRewardPunish.getCjType()) || "5".equals(affairPartyRewardPunish.getCjType())){
                        bhcdjScore += 20;
                        if (bhcdjDetails == null) {
                            bhcdjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        } else {
                            bhcdjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        }
                    }
                }
                if (bhcjgScore > 0) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(partyOrganization +bhcjgDetails.toString());
                    examAutoEvaluation.setAssess("北海处绩效办");
                    examAutoEvaluation.setAssessId("46c521bf67e24db28772b3eac52dc454");
                    examAutoEvaluation.setModel("2020年年度北海处对机关科室、支队绩效考评公共扣分标准");
                    examAutoEvaluation.setModelId("260748e24b19426ba5d8bd632cca3a0c");
                    examAutoEvaluation.setOption("民警受到行政记过、党内警告处分的");
                    examAutoEvaluation.setOptionId("a2c20030714a436680767feb160265eb");
                    examAutoEvaluation.setScore(String.valueOf(bhcjgScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","党建惩戒信息_警告");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (!user.getOffice().getName().contains("派出所")) {
                            if(!user.getOffice().getName().contains("大队")) {
                                examAutoEvaluation.setUnit(user.getOffice().getName());
                                examAutoEvaluation.setUnitId(user.getOffice().getId());
                                examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                                //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                                examAutoEvaluation.setId(IdGen.uuid());
                                examAutoEvaluation.setIsNewRecord(true);
                                this.deleteInfoByMore(examAutoEvaluation);
                                this.save(examAutoEvaluation);
                            }
                        }
                    }
                }
                if(bhcyzjgScore > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(partyOrganization +bhcyzjgDetails.toString());
                    examAutoEvaluation.setAssess("北海处绩效办");
                    examAutoEvaluation.setAssessId("46c521bf67e24db28772b3eac52dc454");
                    examAutoEvaluation.setModel("2020年年度北海处对机关科室、支队绩效考评公共扣分标准");
                    examAutoEvaluation.setModelId("260748e24b19426ba5d8bd632cca3a0c");
                    examAutoEvaluation.setOption("民警受到行政记大过、党内严重警告处分的");
                    examAutoEvaluation.setOptionId("d65fc66252874048a01cf9970e9c5621");
                    examAutoEvaluation.setScore(String.valueOf(bhcyzjgScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","党建惩戒信息_严重警告");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (!user.getOffice().getName().contains("派出所")) {
                            if(!user.getOffice().getName().contains("大队")) {
                                examAutoEvaluation.setUnit(user.getOffice().getName());
                                examAutoEvaluation.setUnitId(user.getOffice().getId());
                                examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                                //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                                examAutoEvaluation.setId(IdGen.uuid());
                                examAutoEvaluation.setIsNewRecord(true);
                                this.deleteInfoByMore(examAutoEvaluation);
                                this.save(examAutoEvaluation);
                            }
                        }
                    }
                }
                if(bhcdjScore > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(partyOrganization +bhcdjDetails.toString());
                    examAutoEvaluation.setAssess("北海处绩效办");
                    examAutoEvaluation.setAssessId("46c521bf67e24db28772b3eac52dc454");
                    examAutoEvaluation.setModel("2020年年度北海处对机关科室、支队绩效考评公共扣分标准");
                    examAutoEvaluation.setModelId("260748e24b19426ba5d8bd632cca3a0c");
                    examAutoEvaluation.setOption("因教育管理责任落实不到位，民警受到降级、撤销党内职务及以上处分的（因个人原因发生问题的按30%扣分）");
                    examAutoEvaluation.setOptionId("d00173ee7f814a7d9531a1620cf768b2");
                    examAutoEvaluation.setScore(String.valueOf(bhcdjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","党建惩戒信息_撤销党内职务、留党察看、开除党籍");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (!user.getOffice().getName().contains("派出所")) {
                            if(!user.getOffice().getName().contains("大队")) {
                                examAutoEvaluation.setUnit(user.getOffice().getName());
                                examAutoEvaluation.setUnitId(user.getOffice().getId());
                                examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                                //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                                examAutoEvaluation.setId(IdGen.uuid());
                                examAutoEvaluation.setIsNewRecord(true);
                                this.deleteInfoByMore(examAutoEvaluation);
                                this.save(examAutoEvaluation);
                            }
                        }
                    }
                }
            }
        }
    }

    /**
     * 智慧政工-惩戒信息（党建工作）
     * <p>
     * -月度  处考处机关
     *
     * @param checkTime
     */
    public void ckcCjMonth(String checkTime) {

        String year = checkTime.substring(0, 4);
        String month = checkTime.substring(checkTime.length() - 2);
        /*Map<String,Object> monthMap = this.getTimeQuantumByMonth(year,month);
        Date nowMonthDate = (Date) monthMap.get("nowTime");
        Date lastMonthDate = (Date) monthMap.get("lastTime");
        year = (String) monthMap.get("year");
        month = (String) monthMap.get("month");*/

        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        Map<String, String> monthTime = this.monthTime(checkTime);
        Date lastMonthDate = null;
        Date nowMonthDate = null;
        try {
            lastMonthDate = format.parse(monthTime.get("yearL"));
            nowMonthDate = format.parse(monthTime.get("yearT"));
        } catch (ParseException e) {
            e.printStackTrace();
        }


        //获取各处处机关党组织
        List<AffairGeneralSituation> nncPartyList = affairGeneralSituationService.getChuPartyBranch("34", "1");
        List<AffairGeneralSituation> lzcPartyList = affairGeneralSituationService.getChuPartyBranch("95", "1");
        List<AffairGeneralSituation> bhcPartyList = affairGeneralSituationService.getChuPartyBranch("156", "1");
        for (AffairGeneralSituation affairGeneralSituation : nncPartyList) {
            StringBuffer nncjgDetails = null;
            StringBuffer nncyzjgDetails = null;
            StringBuffer nncdjDetails = null;
            int nncjgScore = 0;
            int nncyzjgScore = 0;
            int nncdjScore = 0;
            String partyId = affairGeneralSituation.getId();
            String partyOrganization = affairGeneralSituation.getPartyOrganization();
            List<AffairPartyRewardPunish> list = examAutoEvaluationDao.selectPartyMonth(nowMonthDate,lastMonthDate, partyId);
            if(list.size() > 0 && list != null){
                for (int j = 0; j < list.size(); j++) {
                    AffairPartyRewardPunish affairPartyRewardPunish = list.get(j);
                    Date approvalTime = affairPartyRewardPunish.getApprovalTime();
                    if("1".equals(affairPartyRewardPunish.getCjType())){
                        nncjgScore += 8;
                        if (nncjgDetails == null) {
                            nncjgDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        } else {
                            nncjgDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        }
                    }else if("2".equals(affairPartyRewardPunish.getCjType())){
                        nncyzjgScore += 10;
                        if (nncyzjgDetails == null) {
                            nncyzjgDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        } else {
                            nncyzjgDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        }
                    }else if("3".equals(affairPartyRewardPunish.getCjType()) || "4".equals(affairPartyRewardPunish.getCjType()) || "5".equals(affairPartyRewardPunish.getCjType())){
                        nncdjScore += 40;
                        if (nncdjDetails == null) {
                            nncdjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        } else {
                            nncdjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        }
                    }
                }
                if (nncjgScore > 0) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setDetails(partyOrganization +nncjgDetails.toString());
                    examAutoEvaluation.setAssess("南宁处绩效办");
                    examAutoEvaluation.setAssessId("978958003ea44a4bba3eed8ee6ceff3c");
                    examAutoEvaluation.setModel("2020年月度南宁公安处对全处各部门公共扣分标准");
                    examAutoEvaluation.setModelId("691f98a054654bfc9ce3f6f85b7fe4a6");
                    examAutoEvaluation.setOption("民警受到行政记过、党内警告处分的");
                    examAutoEvaluation.setOptionId("a4206fa9e5554f1a8bff42b3f5a38e17");
                    examAutoEvaluation.setScore(String.valueOf(nncjgScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","党建惩戒信息_警告");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (!user.getOffice().getName().contains("派出所")) {
                            if(!user.getOffice().getName().contains("大队")) {
                                examAutoEvaluation.setUnit(user.getOffice().getName());
                                examAutoEvaluation.setUnitId(user.getOffice().getId());
                                examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                                //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                                examAutoEvaluation.setId(IdGen.uuid());
                                examAutoEvaluation.setIsNewRecord(true);
                                this.deleteInfoByMore(examAutoEvaluation);
                                this.save(examAutoEvaluation);
                            }
                        }
                    }
                }
                if(nncyzjgScore > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setDetails(partyOrganization + nncyzjgDetails.toString());
                    examAutoEvaluation.setAssess("南宁处绩效办");
                    examAutoEvaluation.setAssessId("978958003ea44a4bba3eed8ee6ceff3c");
                    examAutoEvaluation.setModel("2020年月度南宁公安处对全处各部门公共扣分标准");
                    examAutoEvaluation.setModelId("691f98a054654bfc9ce3f6f85b7fe4a6");
                    examAutoEvaluation.setOption("民警受到行政记大过、党内严重警告处分的");
                    examAutoEvaluation.setOptionId("16ec2ab7b62b46e1915bc0d7c9ae656e");
                    examAutoEvaluation.setScore(String.valueOf(nncyzjgScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","党建惩戒信息_严重警告");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (!user.getOffice().getName().contains("派出所")) {
                            if(!user.getOffice().getName().contains("大队")) {
                                examAutoEvaluation.setUnit(user.getOffice().getName());
                                examAutoEvaluation.setUnitId(user.getOffice().getId());
                                examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                                //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                                examAutoEvaluation.setId(IdGen.uuid());
                                examAutoEvaluation.setIsNewRecord(true);
                                this.deleteInfoByMore(examAutoEvaluation);
                                this.save(examAutoEvaluation);
                            }
                        }
                    }
                }
                if(nncdjScore > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setDetails(partyOrganization +nncdjDetails.toString());
                    examAutoEvaluation.setAssess("南宁处绩效办");
                    examAutoEvaluation.setAssessId("978958003ea44a4bba3eed8ee6ceff3c");
                    examAutoEvaluation.setModel("2020年月度南宁公安处对全处各部门公共扣分标准");
                    examAutoEvaluation.setModelId("691f98a054654bfc9ce3f6f85b7fe4a6");
                    examAutoEvaluation.setOption("因教育管理责任落实不到位，民警受到降级、撤销党内职务以上处分的（因个人原因发生问题的按30%扣分）");
                    examAutoEvaluation.setOptionId("7d21fddfa60047beb136f1dc953ddad8");
                    examAutoEvaluation.setScore(String.valueOf(nncdjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","党建惩戒信息_撤销党内职务、留党察看、开除党籍");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (!user.getOffice().getName().contains("派出所")) {
                            if(!user.getOffice().getName().contains("大队")) {
                                examAutoEvaluation.setUnit(user.getOffice().getName());
                                examAutoEvaluation.setUnitId(user.getOffice().getId());
                                examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                                //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                                examAutoEvaluation.setId(IdGen.uuid());
                                examAutoEvaluation.setIsNewRecord(true);
                                this.deleteInfoByMore(examAutoEvaluation);
                                this.save(examAutoEvaluation);
                            }
                        }
                    }
                }

            }
        }
        for (AffairGeneralSituation affairGeneralSituation : lzcPartyList) {
            StringBuffer lzcjgDetails = null;
            StringBuffer lzcyzjgDetails = null;
            StringBuffer lzcdjDetails = null;

            int lzcjgScore = 0;
            int lzcyzjgScore = 0;
            int lzcdjScore = 0;
            String partyId = affairGeneralSituation.getId();
            String partyOrganization = affairGeneralSituation.getPartyOrganization();
            List<AffairPartyRewardPunish> list = examAutoEvaluationDao.selectPartyMonth(nowMonthDate,lastMonthDate, partyId);
            if(list.size() > 0 && list != null){
                for (int j = 0; j < list.size(); j++) {
                    AffairPartyRewardPunish affairPartyRewardPunish = list.get(j);
                    Date approvalTime = affairPartyRewardPunish.getApprovalTime();
                    if("1".equals(affairPartyRewardPunish.getCjType())){
                        lzcjgScore += 8;
                        if (lzcjgDetails == null) {
                            lzcjgDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        } else {
                            lzcjgDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        }
                    }else if("2".equals(affairPartyRewardPunish.getCjType())){
                        lzcyzjgScore += 10;
                        if (lzcyzjgDetails == null) {
                            lzcyzjgDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        } else {
                            lzcyzjgDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        }
                    }else if("3".equals(affairPartyRewardPunish.getCjType()) || "4".equals(affairPartyRewardPunish.getCjType()) || "5".equals(affairPartyRewardPunish.getCjType())){
                        lzcdjScore += 40;
                        if (lzcdjDetails == null) {
                            lzcdjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        } else {
                            lzcdjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        }
                    }
                }
                if (lzcjgScore > 0) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setDetails(partyOrganization +lzcjgDetails.toString());
                    examAutoEvaluation.setAssess("柳州处绩效办");
                    examAutoEvaluation.setAssessId("6af0e615e9b0477da82eff06ff532c8b");
                    examAutoEvaluation.setModel("2020年月度柳州处对单位（部门）绩效考评公共扣分标准");
                    examAutoEvaluation.setModelId("ebe11e36d28f4c58a3088001c7ab7089");
                    examAutoEvaluation.setOption("民警受到行政记过、党内警告处分的");
                    examAutoEvaluation.setOptionId("a5ecaeed1e114a1ebf22b98f6587e6a6");
                    examAutoEvaluation.setScore(String.valueOf(lzcjgScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","党建惩戒信息_警告");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (!user.getOffice().getName().contains("派出所")) {
                            if(!user.getOffice().getName().contains("大队")) {
                                examAutoEvaluation.setUnit(user.getOffice().getName());
                                examAutoEvaluation.setUnitId(user.getOffice().getId());
                                examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                                //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                                examAutoEvaluation.setId(IdGen.uuid());
                                examAutoEvaluation.setIsNewRecord(true);
                                this.deleteInfoByMore(examAutoEvaluation);
                                this.save(examAutoEvaluation);
                            }
                        }
                    }
                }
                if(lzcyzjgScore > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setDetails(partyOrganization +lzcyzjgDetails.toString());
                    examAutoEvaluation.setAssess("柳州处绩效办");
                    examAutoEvaluation.setAssessId("6af0e615e9b0477da82eff06ff532c8b");
                    examAutoEvaluation.setModel("2020年月度柳州处对单位（部门）绩效考评公共扣分标准");
                    examAutoEvaluation.setModelId("ebe11e36d28f4c58a3088001c7ab7089");
                    examAutoEvaluation.setOption("民警受到行政记大过、党内严重警告处分的");
                    examAutoEvaluation.setOptionId("27e5d596ff6a4a4ba00a0d47ecf43ea1");
                    examAutoEvaluation.setScore(String.valueOf(lzcyzjgScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","党建惩戒信息_严重警告");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (!user.getOffice().getName().contains("派出所")) {
                            if(!user.getOffice().getName().contains("大队")) {
                                examAutoEvaluation.setUnit(user.getOffice().getName());
                                examAutoEvaluation.setUnitId(user.getOffice().getId());
                                examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                                //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                                examAutoEvaluation.setId(IdGen.uuid());
                                examAutoEvaluation.setIsNewRecord(true);
                                this.deleteInfoByMore(examAutoEvaluation);
                                this.save(examAutoEvaluation);
                            }
                        }
                    }
                }
                if(lzcdjScore > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setDetails(partyOrganization +lzcdjDetails.toString());
                    examAutoEvaluation.setAssess("柳州处绩效办");
                    examAutoEvaluation.setAssessId("6af0e615e9b0477da82eff06ff532c8b");
                    examAutoEvaluation.setModel("2020年月度柳州处对单位（部门）绩效考评公共扣分标准");
                    examAutoEvaluation.setModelId("ebe11e36d28f4c58a3088001c7ab7089");
                    examAutoEvaluation.setOption("因教育管理责任落实不到位，民警受到降级、撤销党内职务以上处分的（当月考评分数为零，因个人原因发生问题的按30%扣分）");
                    examAutoEvaluation.setOptionId("123810ae524c4e029c32ad75d58a2248");
                    examAutoEvaluation.setScore(String.valueOf(lzcdjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","党建惩戒信息_撤销党内职务、留党察看、开除党籍");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (!user.getOffice().getName().contains("派出所")) {
                            if(!user.getOffice().getName().contains("大队")) {
                                examAutoEvaluation.setUnit(user.getOffice().getName());
                                examAutoEvaluation.setUnitId(user.getOffice().getId());
                                examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                                //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                                examAutoEvaluation.setId(IdGen.uuid());
                                examAutoEvaluation.setIsNewRecord(true);
                                this.deleteInfoByMore(examAutoEvaluation);
                                this.save(examAutoEvaluation);
                            }
                        }
                    }
                }

            }
        }
        for (AffairGeneralSituation affairGeneralSituation : bhcPartyList) {
            StringBuffer bhcjgDetails = null;
            StringBuffer bhcyzjgDetails = null;
            StringBuffer bhcdjDetails = null;

            int bhcjgScore = 0;
            int bhcyzjgScore = 0;
            int bhcdjScore = 0;

            String partyId = affairGeneralSituation.getId();
            String partyOrganization = affairGeneralSituation.getPartyOrganization();
            List<AffairPartyRewardPunish> list = examAutoEvaluationDao.selectPartyMonth(nowMonthDate,lastMonthDate, partyId);
            if(list.size() > 0 && list != null){
                for (int j = 0; j < list.size(); j++) {
                    AffairPartyRewardPunish affairPartyRewardPunish = list.get(j);
                    Date approvalTime = affairPartyRewardPunish.getApprovalTime();
                    if("1".equals(affairPartyRewardPunish.getCjType())){
                        bhcjgScore += 8;
                        if (bhcjgDetails == null) {
                            bhcjgDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        } else {
                            bhcjgDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        }
                    }else if("2".equals(affairPartyRewardPunish.getCjType())){
                        bhcyzjgScore += 10;
                        if (bhcyzjgDetails == null) {
                            bhcyzjgDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        } else {
                            bhcyzjgDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        }
                    }else if("3".equals(affairPartyRewardPunish.getCjType()) || "4".equals(affairPartyRewardPunish.getCjType()) || "5".equals(affairPartyRewardPunish.getCjType())){
                        bhcdjScore += 40;
                        if (bhcdjDetails == null) {
                            bhcdjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        } else {
                            bhcdjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        }
                    }
                }
                if (bhcjgScore > 0) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setDetails(partyOrganization +bhcjgDetails.toString());
                    examAutoEvaluation.setAssess("北海处绩效办");
                    examAutoEvaluation.setAssessId("46c521bf67e24db28772b3eac52dc454");
                    examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队公共扣分标准");
                    examAutoEvaluation.setModelId("053c03b372694ae2aaa42344d7e7f019");
                    examAutoEvaluation.setOption("民警受到行政记过、党内警告处分的");
                    examAutoEvaluation.setOptionId("745db20cf9964bffa8e7983731bb789f");
                    examAutoEvaluation.setScore(String.valueOf(bhcjgScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","党建惩戒信息_警告");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (!user.getOffice().getName().contains("派出所")) {
                            if(!user.getOffice().getName().contains("大队")) {
                                examAutoEvaluation.setUnit(user.getOffice().getName());
                                examAutoEvaluation.setUnitId(user.getOffice().getId());
                                examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                                //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                                examAutoEvaluation.setId(IdGen.uuid());
                                examAutoEvaluation.setIsNewRecord(true);
                                this.deleteInfoByMore(examAutoEvaluation);
                                this.save(examAutoEvaluation);
                            }
                        }
                    }
                }
                if(bhcyzjgScore > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setDetails(partyOrganization +bhcyzjgDetails.toString());
                    examAutoEvaluation.setAssess("北海处绩效办");
                    examAutoEvaluation.setAssessId("46c521bf67e24db28772b3eac52dc454");
                    examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队公共扣分标准");
                    examAutoEvaluation.setModelId("053c03b372694ae2aaa42344d7e7f019");
                    examAutoEvaluation.setOption("民警受到行政记大过、党内严重警告处分的");
                    examAutoEvaluation.setOptionId("7693b228e23a4b9596dabd2e5a32fde1");
                    examAutoEvaluation.setScore(String.valueOf(bhcyzjgScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","党建惩戒信息_严重警告");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (!user.getOffice().getName().contains("派出所")) {
                            if(!user.getOffice().getName().contains("大队")) {
                                examAutoEvaluation.setUnit(user.getOffice().getName());
                                examAutoEvaluation.setUnitId(user.getOffice().getId());
                                examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                                //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                                examAutoEvaluation.setId(IdGen.uuid());
                                examAutoEvaluation.setIsNewRecord(true);
                                this.deleteInfoByMore(examAutoEvaluation);
                                this.save(examAutoEvaluation);
                            }
                        }
                    }
                }
                if(bhcdjScore > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setDetails(partyOrganization +bhcdjDetails.toString());
                    examAutoEvaluation.setAssess("北海处绩效办");
                    examAutoEvaluation.setAssessId("46c521bf67e24db28772b3eac52dc454");
                    examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队公共扣分标准");
                    examAutoEvaluation.setModelId("053c03b372694ae2aaa42344d7e7f019");
                    examAutoEvaluation.setOption("因教育管理责任落实不到位，民警受到降级、撤销党内职务以上处分的（当月该项业务工作及责任单位分数为零；因个人原因发生问题的按30%扣分）");
                    examAutoEvaluation.setOptionId("b33a865de89841b2a1fdeb8187df0859");
                    examAutoEvaluation.setScore(String.valueOf(bhcdjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","党建惩戒信息_撤销党内职务、留党察看、开除党籍");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (!user.getOffice().getName().contains("派出所")) {
                            if(!user.getOffice().getName().contains("大队")) {
                                examAutoEvaluation.setUnit(user.getOffice().getName());
                                examAutoEvaluation.setUnitId(user.getOffice().getId());
                                examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                                //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                                examAutoEvaluation.setId(IdGen.uuid());
                                examAutoEvaluation.setIsNewRecord(true);
                                this.deleteInfoByMore(examAutoEvaluation);
                                this.save(examAutoEvaluation);
                            }
                        }
                    }
                }
            }
        }
    }

    /**
     * 智慧政工-惩戒信息（党建工作）
     * <p>
     * -月度  处考派出所
     *
     * @param checkTime
     */
    public void ckpcsCjMonth(String checkTime) {

        String year = checkTime.substring(0, 4);
        String month = checkTime.substring(checkTime.length() - 2);
       /* Map<String,Object> monthMap = this.getTimeQuantumByMonth(year,month);
        Date nowMonthDate = (Date) monthMap.get("nowTime");
        Date lastMonthDate = (Date) monthMap.get("lastTime");
        year = (String) monthMap.get("year");
        month = (String) monthMap.get("month");*/

        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        Map<String, String> monthTime = this.monthTime(checkTime);
        Date lastMonthDate = null;
        Date nowMonthDate = null;
        try {
            lastMonthDate = format.parse(monthTime.get("yearL"));
            nowMonthDate = format.parse(monthTime.get("yearT"));
        } catch (ParseException e) {
            e.printStackTrace();
        }


        List<AffairGeneralSituation> nncPartyList = affairGeneralSituationService.getChuPartyBranch("34", "2");
        List<AffairGeneralSituation> lzcPartyList = affairGeneralSituationService.getChuPartyBranch("95", "2");
        List<AffairGeneralSituation> bhcPartyList = affairGeneralSituationService.getChuPartyBranch("156", "2");
        for (AffairGeneralSituation affairGeneralSituation : nncPartyList) {
            StringBuffer nncjgDetails = null;
            StringBuffer nncyzjgDetails = null;
            StringBuffer nncdjDetails = null;
            int nncjgScore = 0;
            int nncyzjgScore = 0;
            int nncdjScore = 0;

            String partyId = affairGeneralSituation.getId();
            String partyOrganization = affairGeneralSituation.getPartyOrganization();
            List<AffairPartyRewardPunish> list = examAutoEvaluationDao.selectPartyMonth(lastMonthDate,nowMonthDate, partyId);
            if(list.size() > 0 && list != null){
                for (int j = 0; j < list.size(); j++) {
                    AffairPartyRewardPunish affairPartyRewardPunish = list.get(j);
                    Date approvalTime = affairPartyRewardPunish.getApprovalTime();
                    if("1".equals(affairPartyRewardPunish.getCjType())){
                        nncjgScore += 8;
                        if (nncjgDetails == null) {
                            nncjgDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        } else {
                            nncjgDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        }
                    }else if("2".equals(affairPartyRewardPunish.getCjType())){
                        nncyzjgScore += 10;
                        if (nncyzjgDetails == null) {
                            nncyzjgDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        } else {
                            nncyzjgDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        }
                    }else if("3".equals(affairPartyRewardPunish.getCjType()) || "4".equals(affairPartyRewardPunish.getCjType()) || "5".equals(affairPartyRewardPunish.getCjType())){
                        nncdjScore += 40;
                        if (nncdjDetails == null) {
                            nncdjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        } else {
                            nncdjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        }
                    }
                }
                if (nncjgScore > 0) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setDetails(partyOrganization +nncjgDetails.toString());
                    examAutoEvaluation.setAssess("南宁处政治处组织干部室");
                    examAutoEvaluation.setAssessId("34e8d855cf6b4b1ab5e7e23e7aaba658");
                    examAutoEvaluation.setModel("2020年月度南宁公安处对全处各派出所公共扣分标准");
                    examAutoEvaluation.setModelId("0fc0af711a6e41afb066ce77fda210e5");
                    examAutoEvaluation.setOption("民警受到行政记过、党内警告处分的");
                    examAutoEvaluation.setOptionId("51dcc6d418ea440691d4b3fcd99ad5c0");
                    examAutoEvaluation.setScore(String.valueOf(nncjgScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","党建惩戒信息_警告");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (user.getOffice().getName().contains("派出所")) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId("");
                            examAutoEvaluation.setIsNewRecord(false);
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
                if(nncyzjgScore > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setDetails(partyOrganization +nncyzjgDetails.toString());
                    examAutoEvaluation.setAssess("南宁处政治处组织干部室");
                    examAutoEvaluation.setAssessId("34e8d855cf6b4b1ab5e7e23e7aaba658");
                    examAutoEvaluation.setModel("2020年月度南宁公安处对全处各派出所公共扣分标准");
                    examAutoEvaluation.setModelId("0fc0af711a6e41afb066ce77fda210e5");
                    examAutoEvaluation.setOption("民警受到行政记大过、党内严重警告处分的");
                    examAutoEvaluation.setOptionId("955bad00a7a242b68321199dd2c0a969");
                    examAutoEvaluation.setScore(String.valueOf(nncyzjgScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","党建惩戒信息_严重警告");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (user.getOffice().getName().contains("派出所")) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId("");
                            examAutoEvaluation.setIsNewRecord(false);
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
                if(nncdjScore > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setDetails(partyOrganization +nncdjDetails.toString());
                    examAutoEvaluation.setAssess("南宁处政治处组织干部室");
                    examAutoEvaluation.setAssessId("34e8d855cf6b4b1ab5e7e23e7aaba658");
                    examAutoEvaluation.setModel("2020年月度南宁公安处对全处各派出所公共扣分标准");
                    examAutoEvaluation.setModelId("0fc0af711a6e41afb066ce77fda210e5");
                    examAutoEvaluation.setOption("因教育管理责任落实不到位，民警受到降级、撤销党内职务以上处分的（因个人原因发生问题的按30%扣分）");
                    examAutoEvaluation.setOptionId("f81003efb34842158c2d17788621bf53");
                    examAutoEvaluation.setScore(String.valueOf(nncdjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","党建惩戒信息_撤销党内职务、留党察看、开除党籍");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (user.getOffice().getName().contains("派出所")) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId("");
                            examAutoEvaluation.setIsNewRecord(false);
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
            }
        }
        for (AffairGeneralSituation affairGeneralSituation : lzcPartyList) {
            StringBuffer lzcjgDetails = null;
            StringBuffer lzcyzjgDetails = null;
            StringBuffer lzcdjDetails = null;

            int lzcjgScore = 0;
            int lzcyzjgScore = 0;
            int lzcdjScore = 0;
            String partyId = affairGeneralSituation.getId();
            String partyOrganization = affairGeneralSituation.getPartyOrganization();
            List<AffairPartyRewardPunish> list = examAutoEvaluationDao.selectPartyMonth(lastMonthDate, nowMonthDate,partyId);
            if(list.size() > 0 && list != null){
                for (int j = 0; j < list.size(); j++) {
                    AffairPartyRewardPunish affairPartyRewardPunish = list.get(j);
                    Date approvalTime = affairPartyRewardPunish.getApprovalTime();
                    if("1".equals(affairPartyRewardPunish.getCjType())){
                        lzcjgScore += 8;
                        if (lzcjgDetails == null) {
                            lzcjgDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        } else {
                            lzcjgDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        }
                    }else if("2".equals(affairPartyRewardPunish.getCjType())){
                        lzcyzjgScore += 10;
                        if (lzcyzjgDetails == null) {
                            lzcyzjgDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        } else {
                            lzcyzjgDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        }
                    }else if("3".equals(affairPartyRewardPunish.getCjType()) || "4".equals(affairPartyRewardPunish.getCjType()) || "5".equals(affairPartyRewardPunish.getCjType())){
                        lzcdjScore += 40;
                        if (lzcdjDetails == null) {
                            lzcdjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        } else {
                            lzcdjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        }
                    }
                }
                if (lzcjgScore > 0) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setDetails(partyOrganization +lzcjgDetails.toString());
                    examAutoEvaluation.setAssess("柳州处政治处组织干部室");
                    examAutoEvaluation.setAssessId("ec3ba2efdd404f2faa520f6e8a71ec4c");
                    examAutoEvaluation.setModel("2020年月度柳州处对派出所绩效考评公共扣分标准");
                    examAutoEvaluation.setModelId("fa161b1fbf1741949b632f6b341020e4");
                    examAutoEvaluation.setOption("民警受到行政记过、党内警告处分的");
                    examAutoEvaluation.setOptionId("54a1d964dfe54955bde1106ad535eed2");
                    examAutoEvaluation.setScore(String.valueOf(lzcjgScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","党建惩戒信息_警告");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (user.getOffice().getName().contains("派出所")) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId("");
                            examAutoEvaluation.setIsNewRecord(false);
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
                if(lzcyzjgScore > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setDetails(partyOrganization +lzcyzjgDetails.toString());
                    examAutoEvaluation.setAssess("柳州处政治处组织干部室");
                    examAutoEvaluation.setAssessId("ec3ba2efdd404f2faa520f6e8a71ec4c");
                    examAutoEvaluation.setModel("2020年月度柳州处对派出所绩效考评公共扣分标准");
                    examAutoEvaluation.setModelId("fa161b1fbf1741949b632f6b341020e4");
                    examAutoEvaluation.setOption("民警受到行政记大过、党内严重警告处分的");
                    examAutoEvaluation.setOptionId("9bc2c81ad3eb4d11bebaad42cbbd5bd8");
                    examAutoEvaluation.setScore(String.valueOf(lzcyzjgScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","党建惩戒信息_严重警告");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (user.getOffice().getName().contains("派出所")) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId("");
                            examAutoEvaluation.setIsNewRecord(false);
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
                if(lzcdjScore > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setDetails(partyOrganization +lzcdjDetails.toString());
                    examAutoEvaluation.setAssess("柳州处政治处组织干部室");
                    examAutoEvaluation.setAssessId("ec3ba2efdd404f2faa520f6e8a71ec4c");
                    examAutoEvaluation.setModel("2020年月度柳州处对派出所绩效考评公共扣分标准");
                    examAutoEvaluation.setModelId("fa161b1fbf1741949b632f6b341020e4");
                    examAutoEvaluation.setOption("因教育管理责任落实不到位，民警受到降级、撤销党内职务以上处分的（当月考评分数为零，因个人原因发生问题的按30%扣分）");
                    examAutoEvaluation.setOptionId("2a9ebc238f8f4c3999e46cbdb08a5ac7");
                    examAutoEvaluation.setScore(String.valueOf(lzcdjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","党建惩戒信息_撤销党内职务、留党察看、开除党籍");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (user.getOffice().getName().contains("派出所")) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId("");
                            examAutoEvaluation.setIsNewRecord(false);
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
            }
        }
        for (AffairGeneralSituation affairGeneralSituation : bhcPartyList) {
            StringBuffer bhcjgDetails = null;
            StringBuffer bhcyzjgDetails = null;
            StringBuffer bhcdjDetails = null;
            int bhcjgScore = 0;
            int bhcyzjgScore = 0;
            int bhcdjScore = 0;
            String partyId = affairGeneralSituation.getId();
            String partyOrganization = affairGeneralSituation.getPartyOrganization();
            List<AffairPartyRewardPunish> list = examAutoEvaluationDao.selectPartyMonth(lastMonthDate,nowMonthDate,partyId);
            if(list.size() > 0 && list != null){
                for (int j = 0; j < list.size(); j++) {
                    AffairPartyRewardPunish affairPartyRewardPunish = list.get(j);
                    Date approvalTime = affairPartyRewardPunish.getApprovalTime();
                    if("1".equals(affairPartyRewardPunish.getCjType())){
                        bhcjgScore += 8;
                        if (bhcjgDetails == null) {
                            bhcjgDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        } else {
                            bhcjgDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        }
                    }else if("2".equals(affairPartyRewardPunish.getCjType())){
                        bhcyzjgScore += 10;
                        if (bhcyzjgDetails == null) {
                            bhcyzjgDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        } else {
                            bhcyzjgDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        }
                    }else if("3".equals(affairPartyRewardPunish.getCjType()) || "4".equals(affairPartyRewardPunish.getCjType()) || "5".equals(affairPartyRewardPunish.getCjType())){
                        bhcdjScore += 40;
                        if (bhcdjDetails == null) {
                            bhcdjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        } else {
                            bhcdjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        }
                    }
                }
                if (bhcjgScore > 0) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setDetails(partyOrganization +bhcjgDetails.toString());
                    examAutoEvaluation.setAssess("北海处政治处组织干部室");
                    examAutoEvaluation.setAssessId("c90918faf2614baa8fa85230482bd43e");
                    examAutoEvaluation.setModel("2020年月度北海处对派出所、大队公共扣分标准");
                    examAutoEvaluation.setModelId("09fbdd772cad4fadabab7c92e3e760b1");
                    examAutoEvaluation.setOption("民警受到行政记过、党内警告处分的");
                    examAutoEvaluation.setOptionId("c95fbfaa037a4f63a9951225a5825811");
                    examAutoEvaluation.setScore(String.valueOf(bhcjgScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","党建惩戒信息_警告");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (user.getOffice().getName().contains("派出所") || user.getOffice().getName().contains("刑警三大队")) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId("");
                            examAutoEvaluation.setIsNewRecord(false);
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
                if(bhcyzjgScore > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setDetails(partyOrganization +bhcyzjgDetails.toString());
                    examAutoEvaluation.setAssess("北海处政治处组织干部室");
                    examAutoEvaluation.setAssessId("c90918faf2614baa8fa85230482bd43e");
                    examAutoEvaluation.setModel("2020年月度北海处对派出所、大队公共扣分标准");
                    examAutoEvaluation.setModelId("09fbdd772cad4fadabab7c92e3e760b1");
                    examAutoEvaluation.setOption("民警受到行政记大过、党内严重警告处分的");
                    examAutoEvaluation.setOptionId("3172554c82f643fa94b7f6f7f2605dd7");
                    examAutoEvaluation.setScore(String.valueOf(bhcyzjgScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","党建惩戒信息_严重警告");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (user.getOffice().getName().contains("派出所") || user.getOffice().getName().contains("刑警三大队")) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId("");
                            examAutoEvaluation.setIsNewRecord(false);
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
                if(bhcdjScore > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setDetails(partyOrganization +bhcdjDetails.toString());
                    examAutoEvaluation.setAssess("北海处政治处组织干部室");
                    examAutoEvaluation.setAssessId("c90918faf2614baa8fa85230482bd43e");
                    examAutoEvaluation.setModel("2020年月度北海处对派出所、大队公共扣分标准");
                    examAutoEvaluation.setModelId("09fbdd772cad4fadabab7c92e3e760b1");
                    examAutoEvaluation.setOption("因教育管理责任落实不到位，民警受到降级、撤销党内职务以上处分的（当月该项业务工作及责任单位分数为零；因个人原因发生问题的按30%扣分）");
                    examAutoEvaluation.setOptionId("4cc0b2dff0d4436ba7342eafc0b57168");
                    examAutoEvaluation.setScore(String.valueOf(bhcdjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","党建惩戒信息_撤销党内职务、留党察看、开除党籍");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (user.getOffice().getName().contains("派出所") || user.getOffice().getName().contains("刑警三大队")) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId("");
                            examAutoEvaluation.setIsNewRecord(false);
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
            }
        }
    }

    /**
     * 智慧政工-惩戒信息（党建工作）
     * <p>
     * -年度  处考派出所
     *
     * @param year
     */
    public void ckpcsCjYear(String year) {
        /*Map<String,Object> yearMap = this.getTimeQuantumByYear(year);
        Date nowYearDate = (Date) yearMap.get("nowYear");
        Date lastYearDate = (Date) yearMap.get("lastYear");
        year = (String) yearMap.get("year");*/

        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        Map<String, String> yearTime = this.yearTime(year);
        Date lastYearDate = null;
        Date nowYearDate = null;
        try {
            lastYearDate = format.parse(yearTime.get("yearL"));
            nowYearDate = format.parse(yearTime.get("yearT"));
        } catch (ParseException e) {
            e.printStackTrace();
        }

        //获取各处处机关党组织
        List<AffairGeneralSituation> nncPartyList = affairGeneralSituationService.getChuPartyBranch("34", "2");
        List<AffairGeneralSituation> lzcPartyList = affairGeneralSituationService.getChuPartyBranch("95", "2");
        List<AffairGeneralSituation> bhcPartyList = affairGeneralSituationService.getChuPartyBranch("156", "2");
        for (AffairGeneralSituation affairGeneralSituation : nncPartyList) {
            StringBuffer nncjgDetails = null;
            StringBuffer nncyzjgDetails = null;
            StringBuffer nncdjDetails = null;
            int nncjgScore = 0;
            int nncyzjgScore = 0;
            int nncdjScore = 0;
            String partyId = affairGeneralSituation.getId();
            String partyOrganization = affairGeneralSituation.getPartyOrganization();
            List<AffairPartyRewardPunish> list = examAutoEvaluationDao.selectParty(lastYearDate,nowYearDate,partyId);
            if (list.size() > 0 && list != null) {
                for (int j = 0; j < list.size(); j++) {
                    AffairPartyRewardPunish affairPartyRewardPunish = list.get(j);
                    Date approvalTime = affairPartyRewardPunish.getApprovalTime();
                    if("1".equals(affairPartyRewardPunish.getCjType())){
                        nncjgScore += 4;
                        if (nncjgDetails == null) {
                            nncjgDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        } else {
                            nncjgDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        }
                    }else if("2".equals(affairPartyRewardPunish.getCjType())){
                        nncyzjgScore += 5;
                        if (nncyzjgDetails == null) {
                            nncyzjgDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        } else {
                            nncyzjgDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        }
                    }else if("3".equals(affairPartyRewardPunish.getCjType()) || "4".equals(affairPartyRewardPunish.getCjType()) || "5".equals(affairPartyRewardPunish.getCjType())){
                        nncdjScore += 20;
                        if (nncdjDetails == null) {
                            nncdjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        } else {
                            nncdjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        }
                    }
                }
                if (nncjgScore > 0) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(partyOrganization +nncjgDetails.toString());
                    examAutoEvaluation.setAssess("南宁处政治处组织干部室");
                    examAutoEvaluation.setAssessId("34e8d855cf6b4b1ab5e7e23e7aaba658");
                    examAutoEvaluation.setModel("2020年度南宁公安处对全处各派出所公共扣分标准");
                    examAutoEvaluation.setModelId("ff1f5d6ab7694f3db4e013fb01a13b9d");
                    examAutoEvaluation.setOption("民警受到行政记过、党内警告处分的");
                    examAutoEvaluation.setOptionId("553d507c2309481ba358060380bde3af");
                    examAutoEvaluation.setScore(String.valueOf(nncjgScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","党建惩戒信息_警告");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (user.getOffice().getName().contains("派出所")) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId(IdGen.uuid());
                            examAutoEvaluation.setIsNewRecord(true);
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
                if(nncyzjgScore > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(partyOrganization +nncyzjgDetails.toString());
                    examAutoEvaluation.setAssess("南宁处政治处组织干部室");
                    examAutoEvaluation.setAssessId("34e8d855cf6b4b1ab5e7e23e7aaba658");
                    examAutoEvaluation.setModel("2020年度南宁公安处对全处各派出所公共扣分标准");
                    examAutoEvaluation.setModelId("ff1f5d6ab7694f3db4e013fb01a13b9d");
                    examAutoEvaluation.setOption("民警受到行政记大过、党内严重警告处分的");
                    examAutoEvaluation.setOptionId("5200485d2d1644ca897fe82d239c7a61");
                    examAutoEvaluation.setScore(String.valueOf(nncyzjgScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","党建惩戒信息_严重警告");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (user.getOffice().getName().contains("派出所")) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId(IdGen.uuid());
                            examAutoEvaluation.setIsNewRecord(true);
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
                if(nncdjScore > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(partyOrganization +nncdjDetails.toString());
                    examAutoEvaluation.setAssess("南宁处政治处组织干部室");
                    examAutoEvaluation.setAssessId("34e8d855cf6b4b1ab5e7e23e7aaba658");
                    examAutoEvaluation.setModel("2020年度南宁公安处对全处各派出所公共扣分标准");
                    examAutoEvaluation.setModelId("ff1f5d6ab7694f3db4e013fb01a13b9d");
                    examAutoEvaluation.setOption("因教育管理责任落实不到位，民警受到降级、撤销党内职务及以上处分的（因个人原因发生问题的按30%扣分）");
                    examAutoEvaluation.setOptionId("fb63b0ff8bd840aaa2b0f664ec0efb94");
                    examAutoEvaluation.setScore(String.valueOf(nncdjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","党建惩戒信息_撤销党内职务、留党察看、开除党籍");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (user.getOffice().getName().contains("派出所")) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId(IdGen.uuid());
                            examAutoEvaluation.setIsNewRecord(true);
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
            }
        }
        for (AffairGeneralSituation affairGeneralSituation : lzcPartyList) {
            StringBuffer lzcjgDetails = null;
            StringBuffer lzcyzjgDetails = null;
            StringBuffer lzcdjDetails = null;
            int lzcjgScore = 0;
            int lzcyzjgScore = 0;
            int lzcdjScore = 0;
            String partyId = affairGeneralSituation.getId();
            String partyOrganization = affairGeneralSituation.getPartyOrganization();
            List<AffairPartyRewardPunish> list = examAutoEvaluationDao.selectParty(lastYearDate,nowYearDate,partyId);
            if (list.size() > 0 && list != null) {
                for (int j = 0; j < list.size(); j++) {
                    AffairPartyRewardPunish affairPartyRewardPunish = list.get(j);
                    Date approvalTime = affairPartyRewardPunish.getApprovalTime();
                    if("1".equals(affairPartyRewardPunish.getCjType())){
                        lzcjgScore += 4;
                        if (lzcjgDetails == null) {
                            lzcjgDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        } else {
                            lzcjgDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        }
                    }else if("2".equals(affairPartyRewardPunish.getCjType())){
                        lzcyzjgScore += 5;
                        if (lzcyzjgDetails == null) {
                            lzcyzjgDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        } else {
                            lzcyzjgDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        }
                    }else if("3".equals(affairPartyRewardPunish.getCjType()) || "4".equals(affairPartyRewardPunish.getCjType()) || "5".equals(affairPartyRewardPunish.getCjType())){
                        lzcdjScore += 20;
                        if (lzcdjDetails == null) {
                            lzcdjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        } else {
                            lzcdjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        }
                    }
                }
                if (lzcjgScore > 0) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(partyOrganization +lzcjgDetails.toString());
                    examAutoEvaluation.setAssess("柳州处政治处组织干部室");
                    examAutoEvaluation.setAssessId("ec3ba2efdd404f2faa520f6e8a71ec4c");
                    examAutoEvaluation.setModel("2020年年度柳州处对派出所绩效考评公共扣分标准");
                    examAutoEvaluation.setModelId("8506c629ac9d4ecead9143bf40bd1cc7");
                    examAutoEvaluation.setOption("民警受到行政记过、党内警告处分的");
                    examAutoEvaluation.setOptionId("d51bb7a248d8454188f0dac6cdc6e891");
                    examAutoEvaluation.setScore(String.valueOf(lzcjgScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","党建惩戒信息_警告");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (user.getOffice().getName().contains("派出所")) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId(IdGen.uuid());
                            examAutoEvaluation.setIsNewRecord(true);
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
                if(lzcyzjgScore > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(partyOrganization +lzcyzjgDetails.toString());
                    examAutoEvaluation.setAssess("柳州处政治处组织干部室");
                    examAutoEvaluation.setAssessId("ec3ba2efdd404f2faa520f6e8a71ec4c");
                    examAutoEvaluation.setModel("2020年年度柳州处对派出所绩效考评公共扣分标准");
                    examAutoEvaluation.setModelId("8506c629ac9d4ecead9143bf40bd1cc7");
                    examAutoEvaluation.setOption("民警受到行政记大过、党内严重警告处分的");
                    examAutoEvaluation.setOptionId("5d48a5d2d445458fa6ba06d212c2f526");
                    examAutoEvaluation.setScore(String.valueOf(lzcyzjgScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","党建惩戒信息_严重警告");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (user.getOffice().getName().contains("派出所")) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId(IdGen.uuid());
                            examAutoEvaluation.setIsNewRecord(true);
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
                if(lzcdjScore > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(partyOrganization +lzcdjDetails.toString());
                    examAutoEvaluation.setAssess("柳州处政治处组织干部室");
                    examAutoEvaluation.setAssessId("ec3ba2efdd404f2faa520f6e8a71ec4c");
                    examAutoEvaluation.setModel("2020年年度柳州处对派出所绩效考评公共扣分标准");
                    examAutoEvaluation.setModelId("8506c629ac9d4ecead9143bf40bd1cc7");
                    examAutoEvaluation.setOption("因教育管理责任落实不到位，民警受到降级、撤销党内职务及以上处分的（因个人原因发生问题的按30%扣分）");
                    examAutoEvaluation.setOptionId("978d9a8f2664439c885d9531698c4c27");
                    examAutoEvaluation.setScore(String.valueOf(lzcdjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","党建惩戒信息_撤销党内职务、留党察看、开除党籍");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (user.getOffice().getName().contains("派出所")) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId(IdGen.uuid());
                            examAutoEvaluation.setIsNewRecord(true);
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
            }
        }
        for (AffairGeneralSituation affairGeneralSituation : bhcPartyList) {
            StringBuffer bhcjgDetails = null;
            StringBuffer bhcyzjgDetails = null;
            StringBuffer bhcdjDetails = null;

            int bhcjgScore = 0;
            int bhcyzjgScore = 0;
            int bhcdjScore = 0;
            String partyId = affairGeneralSituation.getId();
            String partyOrganization = affairGeneralSituation.getPartyOrganization();
            List<AffairPartyRewardPunish> list = examAutoEvaluationDao.selectParty(lastYearDate,nowYearDate,partyId);
            if (list.size() > 0 && list != null) {
                for (int j = 0; j < list.size(); j++) {
                    AffairPartyRewardPunish affairPartyRewardPunish = list.get(j);
                    Date approvalTime = affairPartyRewardPunish.getApprovalTime();
                    if("1".equals(affairPartyRewardPunish.getCjType())){
                        bhcjgScore += 4;
                        if (bhcjgDetails == null) {
                            bhcjgDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        } else {
                            bhcjgDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        }
                    }else if("2".equals(affairPartyRewardPunish.getCjType())){
                        bhcyzjgScore += 5;
                        if (bhcyzjgDetails == null) {
                            bhcyzjgDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        } else {
                            bhcyzjgDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        }
                    }else if("3".equals(affairPartyRewardPunish.getCjType()) || "4".equals(affairPartyRewardPunish.getCjType()) || "5".equals(affairPartyRewardPunish.getCjType())){
                        bhcdjScore += 20;
                        if (bhcdjDetails == null) {
                            bhcdjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        } else {
                            bhcdjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到"+DictUtils.getDictLabel(affairPartyRewardPunish.getCjType(),"cj_type", ""));
                        }
                    }
                }
                if (bhcjgScore > 0) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(partyOrganization +bhcjgDetails.toString());
                    examAutoEvaluation.setAssess("北海处政治处组织干部室");
                    examAutoEvaluation.setAssessId("c90918faf2614baa8fa85230482bd43e");
                    examAutoEvaluation.setModel("2020年年度北海处对派出所、刑警三大队绩效考评公共扣分标准");
                    examAutoEvaluation.setModelId("c25e5dbae97f46c683ad276ed33580c0");
                    examAutoEvaluation.setOption("民警受到行政记过、党内警告处分的");
                    examAutoEvaluation.setOptionId("7bb5752d426547d6b34ae70131cf77ef");
                    examAutoEvaluation.setScore(String.valueOf(bhcjgScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","党建惩戒信息_警告");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (user.getOffice().getName().contains("派出所") || user.getOffice().getName().contains("刑警三大队")) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId(IdGen.uuid());
                            examAutoEvaluation.setIsNewRecord(true);
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
                if(bhcyzjgScore > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(partyOrganization +bhcyzjgDetails.toString());
                    examAutoEvaluation.setAssess("北海处政治处组织干部室");
                    examAutoEvaluation.setAssessId("c90918faf2614baa8fa85230482bd43e");
                    examAutoEvaluation.setModel("2020年年度北海处对派出所、刑警三大队绩效考评公共扣分标准");
                    examAutoEvaluation.setModelId("c25e5dbae97f46c683ad276ed33580c0");
                    examAutoEvaluation.setOption("民警受到行政记大过、党内严重警告处分的");
                    examAutoEvaluation.setOptionId("4ee41aee71254a038d2d293be0efaeb8");
                    examAutoEvaluation.setScore(String.valueOf(bhcyzjgScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","党建惩戒信息_严重警告");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (user.getOffice().getName().contains("派出所") || user.getOffice().getName().contains("刑警三大队")) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId(IdGen.uuid());
                            examAutoEvaluation.setIsNewRecord(true);
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
                if(bhcdjScore > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(partyOrganization +bhcdjDetails.toString());
                    examAutoEvaluation.setAssess("北海处政治处组织干部室");
                    examAutoEvaluation.setAssessId("c90918faf2614baa8fa85230482bd43e");
                    examAutoEvaluation.setModel("2020年年度北海处对派出所、刑警三大队绩效考评公共扣分标准");
                    examAutoEvaluation.setModelId("c25e5dbae97f46c683ad276ed33580c0");
                    examAutoEvaluation.setOption("因教育管理责任落实不到位，民警受到降级、撤销党内职务及以上处分的（因个人原因发生问题的按30%扣分）");
                    examAutoEvaluation.setOptionId("1838c65406e4460996e9f775d54c0a7b");
                    examAutoEvaluation.setScore(String.valueOf(bhcdjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","党建惩戒信息_撤销党内职务、留党察看、开除党籍");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (user.getOffice().getName().contains("派出所") || user.getOffice().getName().contains("刑警三大队")) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId(IdGen.uuid());
                            examAutoEvaluation.setIsNewRecord(true);
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
            }
        }
    }


    /**
     * 智慧政工-惩戒信息（党建工作）
     * <p>
     * -年度  公安处领导班子考核（局）
     *
     * @param year
     */
    public void ckldbzCjYear(String year) {

        /*Map<String,Object> yearMap = this.getTimeQuantumByYear(year);
        Date nowYearDate = (Date) yearMap.get("nowYear");
        Date lastYearDate = (Date) yearMap.get("lastYear");
        year = (String) yearMap.get("year");*/

        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        Map<String, String> yearTime = this.yearTime(year);
        Date lastYearDate = null;
        Date nowYearDate = null;
        try {
            lastYearDate = format.parse(yearTime.get("yearL"));
            nowYearDate = format.parse(yearTime.get("yearT"));
        } catch (ParseException e) {
            e.printStackTrace();
        }

        //所有的公安处领导身份证
        String chuRoleId = "230e916609a349e68f7186f784e11419";

        ExamWorkflowDefine define = new ExamWorkflowDefine();
        define.setName(chuRoleId);
        List<User> chuList = examWorkflowSegmentsDefineService.queryPoliceDatas(define);

        for (int i = 0; i < chuList.size(); i++) {
            User user = chuList.get(i);
            String name = user.getName();
            String idNumber = user.getNo();//Illustration
            List<AffairPartyRewardPunish> list = examAutoEvaluationDao.selectAssessPerson(lastYearDate,nowYearDate,idNumber);
            String userId = examAutoEvaluationDao.selectNoUserid(idNumber);
            for (int j = 0; j < list.size(); j++) {
                AffairPartyRewardPunish affairPartyRewardPunish = list.get(j);
                Date approvalTime = affairPartyRewardPunish.getApprovalTime();
                if (affairPartyRewardPunish.getCjType() != null && "1".equals(affairPartyRewardPunish.getCjType())) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("5");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name +DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到党内警告处分");
                    examAutoEvaluation.setName(name);
                    examAutoEvaluation.setIdNumber(idNumber);
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setModel("2020年年度对公安处领导班子成员绩效考核公共扣分标准");
                    examAutoEvaluation.setModelId("39175e4e4f3a4c498313176dab9f5e10");
                    examAutoEvaluation.setOption("因违法违纪、工作失职或其他问题受到行政警告处分的");
                    examAutoEvaluation.setOptionId("b20ac492a15e43d6ad897abe7655c065");
                    examAutoEvaluation.setScore("15");
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setFromSys("智慧政工");//数据来源
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建惩戒信息_警告");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if (affairPartyRewardPunish.getCjType() != null && "2".equals(affairPartyRewardPunish.getCjType())) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("5");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到党内严重警告处分");
                    examAutoEvaluation.setName(name);
                    examAutoEvaluation.setIdNumber(idNumber);
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setModel("2020年年度对公安处领导班子成员绩效考核公共扣分标准");
                    examAutoEvaluation.setModelId("39175e4e4f3a4c498313176dab9f5e10");
                    examAutoEvaluation.setOption("因违法违纪、工作失职或其他问题受到党内严重警告处分的");
                    examAutoEvaluation.setOptionId("07874298f043452197fd708ae393f38d");
                    examAutoEvaluation.setScore("100");
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setFromSys("智慧政工");//数据来源
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建惩戒信息_严重警告");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if (affairPartyRewardPunish.getCjType() != null && "3".equals(affairPartyRewardPunish.getCjType()) || "4".equals(affairPartyRewardPunish.getCjType())
                        || "5".equals(affairPartyRewardPunish.getCjType())) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("5");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name +DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+ "被撤销党内职务、留党察看、开除党籍");
                    examAutoEvaluation.setName(name);
                    examAutoEvaluation.setIdNumber(idNumber);
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setModel("2020年年度对公安处领导班子成员绩效考核公共扣分标准");
                    examAutoEvaluation.setModelId("39175e4e4f3a4c498313176dab9f5e10");
                    examAutoEvaluation.setOption("因违法违纪、工作失职或其他问题受到免职、责令辞职的（本人当月为零，年度不定等次）");
                    examAutoEvaluation.setOptionId("3789210dce234da2a1ee33f50f84dee9");
                    examAutoEvaluation.setScore("100");
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setFromSys("智慧政工");//数据来源
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建惩戒信息_撤销党内职务、留党察看、开除党籍");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
        }
    }


    /**
     * 智慧政工-惩戒信息（党建工作）
     * <p>
     * -月度  公安处领导班子考核（局）
     *
     * @param checkTime
     */
    public void ckldbzCjMonth(String checkTime) {

        String year = checkTime.substring(0, 4);
        String month = checkTime.substring(checkTime.length() - 2);
        /*Map<String,Object> monthMap = this.getTimeQuantumByMonth(year,month);
        Date nowMonthDate = (Date) monthMap.get("nowTime");
        Date lastMonthDate = (Date) monthMap.get("lastTime");
        year = (String) monthMap.get("year");
        month = (String) monthMap.get("month");*/

        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        Map<String, String> monthTime = this.monthTime(checkTime);
        Date lastMonthDate = null;
        Date nowMonthDate = null;
        try {
            lastMonthDate = format.parse(monthTime.get("yearL"));
            nowMonthDate = format.parse(monthTime.get("yearT"));
        } catch (ParseException e) {
            e.printStackTrace();
        }



        //所有的公安处领导身份证
        String chuRoleId = "230e916609a349e68f7186f784e11419";

        ExamWorkflowDefine define = new ExamWorkflowDefine();
        define.setName(chuRoleId);
        List<User> chuList = examWorkflowSegmentsDefineService.queryPoliceDatas(define);

        for (int i = 0; i < chuList.size(); i++) {
            User user = chuList.get(i);
            String name = user.getName();
            String idNumber = user.getNo();//Illustration
            List<AffairPartyRewardPunish> list = examAutoEvaluationDao.selectAssessPersonMonth(lastMonthDate,nowMonthDate, idNumber);
            String userId = examAutoEvaluationDao.selectNoUserid(idNumber);
            for (int j = 0; j < list.size(); j++) {
                AffairPartyRewardPunish affairPartyRewardPunish = list.get(j);
                Date approvalTime = affairPartyRewardPunish.getApprovalTime();
                if (affairPartyRewardPunish.getCjType() != null && "1".equals(affairPartyRewardPunish.getCjType())) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("5");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name +DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"受到党内警告处分");
                    examAutoEvaluation.setName(name);
                    examAutoEvaluation.setIdNumber(idNumber);
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setModel("2020年月度对公安处领导班子成员绩效考核公共扣分标准");
                    examAutoEvaluation.setModelId("93f0ce15f62b4c479e5681a93ccb248b");
                    examAutoEvaluation.setOption("因违法违纪、工作失职或其他问题受到党内警告处分的");
                    examAutoEvaluation.setOptionId("f9df6459ba8e461d85c1e53ac2d70834");
                    examAutoEvaluation.setScore("40");
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setFromSys("智慧政工");//数据来源
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建惩戒信息_警告");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if (affairPartyRewardPunish.getCjType() != null && "2".equals(affairPartyRewardPunish.getCjType())) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("5");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name +DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+ "受到党内严重警告处分");
                    examAutoEvaluation.setName(name);
                    examAutoEvaluation.setIdNumber(idNumber);
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setModel("2020年月度对公安处领导班子成员绩效考核公共扣分标准");
                    examAutoEvaluation.setModelId("93f0ce15f62b4c479e5681a93ccb248b");
                    examAutoEvaluation.setOption("因违法违纪、工作失职或其他问题受到行政记过处分及以上的");
                    examAutoEvaluation.setOptionId("cd987717805841d5afffd60b68c6b2b4");
                    examAutoEvaluation.setScore("100");
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setFromSys("智慧政工");//数据来源
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建惩戒信息_严重警告");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if (affairPartyRewardPunish.getCjType() != null && "3".equals(affairPartyRewardPunish.getCjType()) || "4".equals(affairPartyRewardPunish.getCjType())
                        || "5".equals(affairPartyRewardPunish.getCjType())) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("5");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+ "被撤销党内职务、留党察看、开除党籍");
                    examAutoEvaluation.setName(name);
                    examAutoEvaluation.setIdNumber(idNumber);
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setModel("2020年月度对公安处领导班子成员绩效考核公共扣分标准");
                    examAutoEvaluation.setModelId("93f0ce15f62b4c479e5681a93ccb248b");
                    examAutoEvaluation.setOption("因违法违纪、工作失职或其他问题受到免职、责令辞职的");
                    examAutoEvaluation.setOptionId("6a4696f4595b4e44a644f82d087c9ce3");
                    examAutoEvaluation.setScore("100");
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setFromSys("智慧政工");//数据来源
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建惩戒信息_撤销党内职务、留党察看、开除党籍");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
        }
    }

    /**
     * 智慧政工-惩戒信息（党建工作）
     * <p>
     * -月度  中基层领导班子考核（局）
     *
     * @param checkTime
     */
    public void zjcCjMonth(String checkTime) {

        String year = checkTime.substring(0, 4);
        String month = checkTime.substring(checkTime.length() - 2);
        /*Map<String,Object> monthMap = this.getTimeQuantumByMonth(year,month);
        Date nowMonthDate = (Date) monthMap.get("nowTime");
        Date lastMonthDate = (Date) monthMap.get("lastTime");
        year = (String) monthMap.get("year");
        month = (String) monthMap.get("month");*/

        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        Map<String, String> monthTime = this.monthTime(checkTime);
        Date lastMonthDate = null;
        Date nowMonthDate = null;
        try {
            lastMonthDate = format.parse(monthTime.get("yearL"));
            nowMonthDate = format.parse(monthTime.get("yearT"));
        } catch (ParseException e) {
            e.printStackTrace();
        }



        //所有的中基层领导班子身份证
        String juJiGuanRoleId = "13bac520ae4d4160b595384691b443fd";
        String chuJiGuanRoleId = "62cf6aaea0184d3b8cfbce1700ad0e38";
        //String chuJiGuanRoleId = "230e916609a349e68f7186f784e11419";
        String suoduiJiGuanRoleId = "ff24c3288860447d867d08d462a2a2b9";

        String[] zhongJiCeng = new String[3];
        zhongJiCeng[0] = chuJiGuanRoleId;
        zhongJiCeng[1] = juJiGuanRoleId;
        zhongJiCeng[2] = suoduiJiGuanRoleId;
        String companyId = "156";
        List<User> zjcList = new ArrayList<>();
        /*Arrays.stream(zhongJiCeng).forEach(s -> {
            ExamWorkflowDefine zhongDefine = new ExamWorkflowDefine();
            zhongDefine.setName(s);
            if (companyId.equals("1")) {
                zhongDefine.getSqlMap().put("dsf", "and u.company_id = '" + companyId + "' and u.office_id not in ('34','95','156')");
            } else {
                zhongDefine.getSqlMap().put("dsf", "and u.company_id = '" + companyId + "'");
            }
            zjcList.addAll(examWorkflowSegmentsDefineService.queryPoliceDatas(zhongDefine));
        });*/
        Arrays.stream(zhongJiCeng).forEach(s -> {
            ExamWorkflowDefine zhongDefine = new ExamWorkflowDefine();
            zhongDefine.setName(s);
            zjcList.addAll(examWorkflowSegmentsDefineService.queryPoliceDatas(zhongDefine));
        });


        for (int i = 0; i < zjcList.size(); i++) {
            User user = zjcList.get(i);
            String name = user.getName();
            String idNumber = user.getNo();//Illustration
            List<AffairPartyRewardPunish> list = examAutoEvaluationDao.selectAssessPersonMonth(lastMonthDate,nowMonthDate, idNumber);
            String userId = examAutoEvaluationDao.selectNoUserid(idNumber);
            for (int j = 0; j < list.size(); j++) {
                AffairPartyRewardPunish affairPartyRewardPunish = list.get(j);
                Date approvalTime = affairPartyRewardPunish.getApprovalTime();
                if (affairPartyRewardPunish.getCjType() != null && "1".equals(affairPartyRewardPunish.getCjType())) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("6");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+ "受到党内警告处分");
                    examAutoEvaluation.setName(name);
                    examAutoEvaluation.setIdNumber(idNumber);
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setModel("2020年月度对全局中层和基层领导干部考核公共扣分标准 (公安处领导班子成员除外)");
                    examAutoEvaluation.setModelId("d498bf52ce334e3da66851fc57143639");
                    examAutoEvaluation.setOption("单位（部门）或个人因违法违纪、工作失职或其他问题被党内警告处分的");
                    examAutoEvaluation.setOptionId("c132963f29d4443999556218e9c9fc61");
                    examAutoEvaluation.setScore("40");
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setFromSys("智慧政工");//数据来源
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建惩戒信息_警告");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if (affairPartyRewardPunish.getCjType() != null && "2".equals(affairPartyRewardPunish.getCjType())) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("6");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+ "党内严重警告处分");
                    examAutoEvaluation.setName(name);
                    examAutoEvaluation.setIdNumber(idNumber);
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setModel("2020年月度对全局中层和基层领导干部考核公共扣分标准 (公安处领导班子成员除外)");
                    examAutoEvaluation.setModelId("d498bf52ce334e3da66851fc57143639");
                    examAutoEvaluation.setOption("单位（部门）或个人因违法违纪、工作失职或其他问题被行政记过处分及以上的");
                    examAutoEvaluation.setOptionId("218841af7ddb4f269b2e57ae104cdd9e");
                    examAutoEvaluation.setScore("100");
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setFromSys("智慧政工");//数据来源
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建惩戒信息_严重警告");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if (affairPartyRewardPunish.getCjType() != null && "3".equals(affairPartyRewardPunish.getCjType()) || "4".equals(affairPartyRewardPunish.getCjType())
                        || "5".equals(affairPartyRewardPunish.getCjType())) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("6");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+ "撤销党内职务、留党察看、开除党籍");
                    examAutoEvaluation.setName(name);
                    examAutoEvaluation.setIdNumber(idNumber);
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setModel("2020年月度对全局中层和基层领导干部考核公共扣分标准 (公安处领导班子成员除外)");
                    examAutoEvaluation.setModelId("d498bf52ce334e3da66851fc57143639");
                    examAutoEvaluation.setOption("单位（部门）或个人因违法违纪、工作失职或其他问题被行政记过处分及以上的");
                    examAutoEvaluation.setOptionId("218841af7ddb4f269b2e57ae104cdd9e");
                    examAutoEvaluation.setScore("100");
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setFromSys("智慧政工");//数据来源
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建惩戒信息_撤销党内职务、留党察看、开除党籍");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
        }
    }


    /**
     * 智慧政工-惩戒信息（党建工作）
     * <p>
     * -年度  中基层领导班子考核（局）
     *
     * @param year
     */
    public void zjcCjYear(String year) {

        /*Map<String,Object> yearMap = this.getTimeQuantumByYear(year);
        Date nowYearDate = (Date) yearMap.get("nowYear");
        Date lastYearDate = (Date) yearMap.get("lastYear");
        year = (String) yearMap.get("year");*/

        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        Map<String, String> yearTime = this.yearTime(year);
        Date lastYearDate = null;
        Date nowYearDate = null;
        try {
            lastYearDate = format.parse(yearTime.get("yearL"));
            nowYearDate = format.parse(yearTime.get("yearT"));
        } catch (ParseException e) {
            e.printStackTrace();
        }

        //所有的中基层领导班子身份证
        String juJiGuanRoleId = "13bac520ae4d4160b595384691b443fd";
        String chuJiGuanRoleId = "62cf6aaea0184d3b8cfbce1700ad0e38";
        //String chuJiGuanRoleId = "230e916609a349e68f7186f784e11419";
        String suoduiJiGuanRoleId = "ff24c3288860447d867d08d462a2a2b9";

        String[] zhongJiCeng = new String[3];
        zhongJiCeng[0] = chuJiGuanRoleId;
        zhongJiCeng[1] = juJiGuanRoleId;
        zhongJiCeng[2] = suoduiJiGuanRoleId;
        String companyId = "156";
        List<User> zjcList = new ArrayList<>();
        /*Arrays.stream(zhongJiCeng).forEach(s -> {
            ExamWorkflowDefine zhongDefine = new ExamWorkflowDefine();
            zhongDefine.setName(s);
            if (companyId.equals("1")) {
                zhongDefine.getSqlMap().put("dsf", "and u.company_id = '" + companyId + "' and u.office_id not in ('34','95','156')");
            } else {
                zhongDefine.getSqlMap().put("dsf", "and u.company_id = '" + companyId + "'");
            }
            zjcList.addAll(examWorkflowSegmentsDefineService.queryPoliceDatas(zhongDefine));
        });*/

        Arrays.stream(zhongJiCeng).forEach(s -> {
            ExamWorkflowDefine zhongDefine = new ExamWorkflowDefine();
            zhongDefine.setName(s);
            zjcList.addAll(examWorkflowSegmentsDefineService.queryPoliceDatas(zhongDefine));
        });


        for (int i = 0; i < zjcList.size(); i++) {
            User user = zjcList.get(i);
            String name = user.getName();
            String idNumber = user.getNo();//Illustration
            List<AffairPartyRewardPunish> list = examAutoEvaluationDao.selectAssessPerson(lastYearDate,nowYearDate,idNumber);
            String userId = examAutoEvaluationDao.selectNoUserid(idNumber);
            for (int j = 0; j < list.size(); j++) {
                AffairPartyRewardPunish affairPartyRewardPunish = list.get(j);
                Date approvalTime = affairPartyRewardPunish.getApprovalTime();
                if (affairPartyRewardPunish.getCjType() != null && "1".equals(affairPartyRewardPunish.getCjType())) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("6");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name +DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+ "受到党内警告处分的");
                    examAutoEvaluation.setName(name);
                    examAutoEvaluation.setIdNumber(idNumber);
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setModel("2020年年度全局中层和基层领导干部考核公共扣分标准(公安处领导班子成员除外)");
                    examAutoEvaluation.setModelId("c00cebbbc62c48d888316206d38e02c7");
                    examAutoEvaluation.setOption("单位（部门）或个人因违法违纪、工作失职或其他问题被党内警告处分的");
                    examAutoEvaluation.setOptionId("f874784886714365b499d7caad61ed92");
                    examAutoEvaluation.setScore("15");
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setFromSys("智慧政工");//数据来源
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建惩戒信息_警告");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if (affairPartyRewardPunish.getCjType() != null && "2".equals(affairPartyRewardPunish.getCjType())) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("6");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+ "党内严重警告处分");
                    examAutoEvaluation.setName(name);
                    examAutoEvaluation.setIdNumber(idNumber);
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setModel("2020年年度全局中层和基层领导干部考核公共扣分标准(公安处领导班子成员除外)");
                    examAutoEvaluation.setModelId("c00cebbbc62c48d888316206d38e02c7");
                    examAutoEvaluation.setOption("单位（部门）或个人因违法违纪、工作失职或其他问题被行政记过处分及以上（不定等次）");
                    examAutoEvaluation.setOptionId("e6c74b50071641c4805a0d073be03fb9");
                    examAutoEvaluation.setScore("100");
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setFromSys("智慧政工");//数据来源
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建惩戒信息_严重警告");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if (affairPartyRewardPunish.getCjType() != null && "3".equals(affairPartyRewardPunish.getCjType()) || "4".equals(affairPartyRewardPunish.getCjType())
                        || "5".equals(affairPartyRewardPunish.getCjType())) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("6");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+ "撤销党内职务、留党察看、开除党籍");
                    examAutoEvaluation.setName(name);
                    examAutoEvaluation.setIdNumber(idNumber);
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setModel("2020年年度全局中层和基层领导干部考核公共扣分标准(公安处领导班子成员除外)");
                    examAutoEvaluation.setModelId("c00cebbbc62c48d888316206d38e02c7");
                    examAutoEvaluation.setOption("单位（部门）或个人因违法违纪、工作失职或其他问题被行政记过处分及以上（不定等次）");
                    examAutoEvaluation.setOptionId("e6c74b50071641c4805a0d073be03fb9");
                    examAutoEvaluation.setScore("100");
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setFromSys("智慧政工");//数据来源
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建惩戒信息_撤销党内职务、留党察看、开除党籍");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
        }
    }

    /**
     * 智慧政工-惩戒信息（党建工作）
     * <p>
     * -年度  民警考核（局处）
     *
     * @param year
     */
    public void mjCjYear(String year) {
        /*Map<String,Object> yearMap = this.getTimeQuantumByYear(year);
        Date nowYearDate = (Date) yearMap.get("nowYear");
        Date lastYearDate = (Date) yearMap.get("lastYear");
        year = (String) yearMap.get("year");*/

        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        Map<String, String> yearTime = this.yearTime(year);
        Date lastYearDate = null;
        Date nowYearDate = null;
        try {
            lastYearDate = format.parse(yearTime.get("yearL"));
            nowYearDate = format.parse(yearTime.get("yearT"));
        } catch (ParseException e) {
            e.printStackTrace();
        }

        //所有的民警身份证
        String policeRoleId = "2a7ea380b14f4870b6c44be21d2443c3";

        StringBuffer policeIds = new StringBuffer();
        StringBuffer policePersonNames = new StringBuffer();
        ExamWorkflowDefine policeDefine = new ExamWorkflowDefine();
        policeDefine.setName(policeRoleId);
        /*String companyId = "156";
        if (companyId.equals("1")) {
            policeDefine.getSqlMap().put("dsf", "and u.company_id = '" + companyId + "' and u.office_id not in ('34','95','156')");
        } else {
            policeDefine.getSqlMap().put("dsf", "and u.company_id = '" + companyId + "'");
        }*/
        List<User> idNumberList = examWorkflowSegmentsDefineService.queryPoliceDatas(policeDefine);


        for (int i = 0; i < idNumberList.size(); i++) {
            User user = idNumberList.get(i);
            String name = user.getName();
            String idNumber = user.getNo();//Illustration
            List<AffairPartyRewardPunish> list = examAutoEvaluationDao.selectAssessPerson(lastYearDate,nowYearDate,idNumber);
            String userId = examAutoEvaluationDao.selectNoUserid(idNumber);
            for (int j = 0; j < list.size(); j++) {
                AffairPartyRewardPunish affairPartyRewardPunish = list.get(j);
                Date approvalTime = affairPartyRewardPunish.getApprovalTime();
                if (affairPartyRewardPunish.getCjType() != null && "1".equals(affairPartyRewardPunish.getCjType())) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("7");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+ "受到党内警告处分");
                    examAutoEvaluation.setName(name);
                    examAutoEvaluation.setIdNumber(idNumber);
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setModel("2020年年度南宁铁路公安局民警绩效考评公共扣分标准");
                    examAutoEvaluation.setModelId("a4acf3d881c6489d9a112fead04d8504");
                    examAutoEvaluation.setOption("民警受到党内警告处分的");
                    examAutoEvaluation.setOptionId("fc8760c24a624186a7abc1e96098b6bd");
                    examAutoEvaluation.setScore("20");
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建惩戒信息_警告");
                    examAutoEvaluation.setFromSys("智慧政工");//数据来源
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if (affairPartyRewardPunish.getCjType() != null && "2".equals(affairPartyRewardPunish.getCjType())) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("7");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+ "党内严重警告处分");
                    examAutoEvaluation.setName(name);
                    examAutoEvaluation.setIdNumber(idNumber);
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setModel("2020年年度南宁铁路公安局民警绩效考评公共扣分标准");
                    examAutoEvaluation.setModelId("a4acf3d881c6489d9a112fead04d8504");
                    examAutoEvaluation.setOption("民警受到党内严重警告处分");
                    examAutoEvaluation.setOptionId("0a537798ba3843d0b54fca959b389dbf");
                    examAutoEvaluation.setScore("100");
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建惩戒信息_严重警告");
                    examAutoEvaluation.setFromSys("智慧政工");//数据来源
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if (affairPartyRewardPunish.getCjType() != null && "3".equals(affairPartyRewardPunish.getCjType()) || "4".equals(affairPartyRewardPunish.getCjType())
                        || "5".equals(affairPartyRewardPunish.getCjType())) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("7");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+ "撤销党内职务、留党察看、开除党籍");
                    examAutoEvaluation.setName(name);
                    examAutoEvaluation.setIdNumber(idNumber);
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setModel("2020年年度南宁铁路公安局民警绩效考评公共扣分标准");
                    examAutoEvaluation.setModelId("a4acf3d881c6489d9a112fead04d8504");
                    examAutoEvaluation.setOption("民警受到停止执行职务、禁闭的");
                    examAutoEvaluation.setOptionId("032df768f23546128e58f522b5e0116b");
                    examAutoEvaluation.setScore("100");
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建惩戒信息_撤销党内职务、留党察看、开除党籍");
                    examAutoEvaluation.setFromSys("智慧政工");//数据来源
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
        }
    }

    /**
     * 智慧政工-惩戒信息（党建工作）
     * <p>
     * -月度  民警考核（局处）
     *      没找到对应模板
     *
     * @param checkTime
     */
    public void mjCjMonrh(String checkTime) {

        String year = checkTime.substring(0, 4);
        String month = checkTime.substring(checkTime.length() - 2);
        Map<String,Object> monthMap = this.getTimeQuantumByMonth(year,month,"政工");
        Date nowMonthDate = (Date) monthMap.get("nowTime");
        Date lastMonthDate = (Date) monthMap.get("lastTime");
        year = (String) monthMap.get("year");
        month = (String) monthMap.get("month");


        //所有的民警身份证
        String policeRoleId = "2a7ea380b14f4870b6c44be21d2443c3";

        StringBuffer policeIds = new StringBuffer();
        StringBuffer policePersonNames = new StringBuffer();
        ExamWorkflowDefine policeDefine = new ExamWorkflowDefine();
        policeDefine.setName(policeRoleId);
       /* String companyId = "156";
        if (companyId.equals("1")) {
            policeDefine.getSqlMap().put("dsf", "and u.company_id = '" + companyId + "' and u.office_id not in ('34','95','156')");
        } else {
            policeDefine.getSqlMap().put("dsf", "and u.company_id = '" + companyId + "'");
        }*/
        List<User> idNumberList = examWorkflowSegmentsDefineService.queryPoliceDatas(policeDefine);


        for (int i = 0; i < idNumberList.size(); i++) {
            User user = idNumberList.get(i);
            String name = user.getName();
            String idNumber = user.getNo();//Illustration
            List<AffairPartyRewardPunish> list = examAutoEvaluationDao.selectAssessPersonMonth(lastMonthDate,nowMonthDate, idNumber);
            String userId = examAutoEvaluationDao.selectNoUserid(idNumber);
            for (int j = 0; j < list.size(); j++) {
                AffairPartyRewardPunish affairPartyRewardPunish = list.get(j);
                Date approvalTime = affairPartyRewardPunish.getApprovalTime();
                if (affairPartyRewardPunish.getCjType() != null && "1".equals(affairPartyRewardPunish.getCjType())) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("7");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+ "受到党内警告处分");
                    examAutoEvaluation.setName(name);
                    examAutoEvaluation.setIdNumber(idNumber);
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setModel("2020年月度南宁铁路公安局民警绩效考核公共扣分标准");
                    examAutoEvaluation.setModelId("0c4b8784733d4aff83c94394ab1064dc");
                    examAutoEvaluation.setOption("民警受到党内警告处分的");
                    examAutoEvaluation.setOptionId("164c68626faa4386b82e097bb3dfa90f");
                    examAutoEvaluation.setScore("40");
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建惩戒信息_警告");
                    examAutoEvaluation.setFromSys("智慧政工");//数据来源
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if (affairPartyRewardPunish.getCjType() != null && "2".equals(affairPartyRewardPunish.getCjType())) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("7");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+ "党内严重警告处分");
                    examAutoEvaluation.setName(name);
                    examAutoEvaluation.setIdNumber(idNumber);
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setModel("2020年月度南宁铁路公安局民警绩效考核公共扣分标准");
                    examAutoEvaluation.setModelId("0c4b8784733d4aff83c94394ab1064dc");
                    examAutoEvaluation.setOption("民警受到行政记过及以上的");
                    examAutoEvaluation.setOptionId("88a78c9f3fd545e58b8a29ddb69fa089");
                    examAutoEvaluation.setScore("100");
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建惩戒信息_严重警告");
                    examAutoEvaluation.setFromSys("智慧政工");//数据来源
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if (affairPartyRewardPunish.getCjType() != null && "3".equals(affairPartyRewardPunish.getCjType()) || "4".equals(affairPartyRewardPunish.getCjType())
                        || "5".equals(affairPartyRewardPunish.getCjType())) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("7");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+ "撤销党内职务、留党察看、开除党籍");
                    examAutoEvaluation.setName(name);
                    examAutoEvaluation.setIdNumber(idNumber);
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setModel("2020年月度南宁铁路公安局民警绩效考核公共扣分标准");
                    examAutoEvaluation.setModelId("0c4b8784733d4aff83c94394ab1064dc");
                    examAutoEvaluation.setOption("民警受到行政记过及以上的");
                    examAutoEvaluation.setOptionId("88a78c9f3fd545e58b8a29ddb69fa089");
                    examAutoEvaluation.setScore("100");
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建惩戒信息_撤销党内职务、留党察看、开除党籍");
                    examAutoEvaluation.setFromSys("智慧政工");//数据来源
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
        }
    }


    /**
     * 智慧政工-民警体检
     * <p>
     * -年度  局考处
     *
     * @param year
     */
    public void mjtjYear(String year) {

       /* Map<String,Object> yearMap = this.getTimeQuantumByYear(year);
        Date nowYearDate = (Date) yearMap.get("nowYear");
        Date lastYearDate = (Date) yearMap.get("lastYear");
        year = (String) yearMap.get("year");*/
        Integer y = Integer.valueOf(year);
        Integer lastYear = y - 1;
        String lastYearDate = lastYear + "-" + "12-11";
        String nowYearDate = year + "-" + "12-10";

        //公安处
        List<Office> officeList = new ArrayList<>();
        Office nncoffice = officeDao.selectBeanById("32");
        Office lzcoffice = officeDao.selectBeanById("147");
        Office bhcoffice = officeDao.selectBeanById("267");
        officeList.add(nncoffice);
        officeList.add(lzcoffice);
        officeList.add(bhcoffice);

        StringBuffer nncUnitNam = null;
        Boolean nncIs0 = false;
        StringBuffer lzcUnitNam = null;
        Boolean lzcIs0 = false;
        StringBuffer bhcUnitNam = null;
        Boolean bhcIs0 = false;
        for (int o = 0; o < officeList.size(); o++) {
            Office office = officeList.get(o);
            //公安处名称
            String name = office.getName();
            //公安处id
            String unitId = office.getId();
            int num = affairHealthCheckupService.selectIsTiJian(lastYearDate,nowYearDate, unitId);
            if (num == 0) {
                if (office.getParentIds().contains(",34,")) {
                    //南宁处
                    nncIs0 = true;
                    if (nncUnitNam == null) {
                        nncUnitNam = new StringBuffer(name);
                    } else {
                        nncUnitNam.append("," + name);
                    }
                } else if (office.getParentIds().contains(",95,")) {
                    //柳州处
                    lzcIs0 = true;
                    if (lzcUnitNam == null) {
                        lzcUnitNam = new StringBuffer(name);
                    } else {
                        lzcUnitNam.append("," + name);
                    }
                } else if (office.getParentIds().contains(",156,")) {
                    //北海处
                    bhcIs0 = true;
                    if (bhcUnitNam == null) {
                        bhcUnitNam = new StringBuffer(name);
                    } else {
                        bhcUnitNam.append("," + name);
                    }
                }
            }
        }
        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
        examAutoEvaluation.setType("1");
        examAutoEvaluation.setEvalType("1");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
        examAutoEvaluation.setPeriod("2");
        examAutoEvaluation.setYear(year);
        examAutoEvaluation.setFromSys("智慧政工");
        examAutoEvaluation.setAssess("南宁局工会");//初审人员
        examAutoEvaluation.setAssessId("b91d9ac0c32847c4ab6f21e910959198");//初审人员id
        examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考核扣分标准(业务部分26项)");
        examAutoEvaluation.setModelId("a959d8865ea74bf68cf818adc710c75c");
        examAutoEvaluation.setOption("民警体检数据未及时录入平台的");
        examAutoEvaluation.setOptionId("d4767f44d18344488afb463b910d6615");
        examAutoEvaluation.setScore("1");
        if (nncIs0) {
            examAutoEvaluation.setIsNewRecord(false);
            examAutoEvaluation.setId("");
            examAutoEvaluation.setUnit("南宁处工会");
            examAutoEvaluation.setUnitId("32");
            examAutoEvaluation.setEvaluationId("1d6572cc99604313b93905e5ff3f47a4");
            examAutoEvaluation.setDetails(year + "年，" + nncUnitNam + "民警体检数据未及时录入平台");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"民警体检");
            this.save(examAutoEvaluation);
        }
        if (lzcIs0) {
            examAutoEvaluation.setIsNewRecord(false);
            examAutoEvaluation.setId("");
            examAutoEvaluation.setUnit("柳州处工会");
            examAutoEvaluation.setUnitId("147");
            examAutoEvaluation.setEvaluationId("ca07f09482154be0b10136171b19b90e");
            examAutoEvaluation.setDetails(year + "年，" + lzcUnitNam + "民警体检数据未及时录入平台");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"民警体检");
            this.save(examAutoEvaluation);
        }
        if (bhcIs0) {
            examAutoEvaluation.setIsNewRecord(false);
            examAutoEvaluation.setId("");
            examAutoEvaluation.setUnit("北海处工会");
            examAutoEvaluation.setUnitId("267");
            examAutoEvaluation.setEvaluationId("73607645d2e040359dbcb66640f92e07");
            examAutoEvaluation.setDetails(year + "年，" + bhcUnitNam + "民警体检数据未及时录入平台");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"民警体检");
            this.save(examAutoEvaluation);
        }
    }


    /**
     * 智慧政工-一帮一
     * <p>
     * -年度  局考处
     *
     * @param year
     */
    public void ybyYear(String year) {
        String month = DateUtils.getMonth();
        String day = DateUtils.getDay();
        if("04".equals(month) && (("01".equals(day) || "02".equals(day)))) {
            String year1 = year.substring(0, 4);
            String lastYearDate = year1 + "-" + "01-01";
            String nowYearDate = year + "-" + month + "-" + day;

            //公安处
            List<Office> officeList = new ArrayList<>();
            officeList = officeDao.selectChuUnit();

            StringBuffer nncUnitNam = null;
            Boolean nncIs0 = false;
            StringBuffer lzcUnitNam = null;
            Boolean lzcIs0 = false;
            StringBuffer bhcUnitNam = null;
            Boolean bhcIs0 = false;

            for (int o = 0; o < officeList.size(); o++) {
                Office office = officeList.get(o);
                //公安处名称
                String name = office.getName();
                //公安处id
                String unitId = office.getId();
                int num = affairOneHelpOneService.selectOneHelpOne(lastYearDate, nowYearDate, unitId);
                if (num == 0) {
                    if (office.getParentIds().contains(",34,")) {
                        //南宁处
                        nncIs0 = true;
                        if (nncUnitNam == null) {
                            nncUnitNam = new StringBuffer(name);
                        } else {
                            nncUnitNam.append("," + name);
                        }
                    } else if (office.getParentIds().contains(",95,")) {
                        //柳州处
                        lzcIs0 = true;
                        if (lzcUnitNam == null) {
                            lzcUnitNam = new StringBuffer(name);
                        } else {
                            lzcUnitNam.append("," + name);
                        }
                    } else if (office.getParentIds().contains(",156,")) {
                        //北海处
                        bhcIs0 = true;
                        if (bhcUnitNam == null) {
                            bhcUnitNam = new StringBuffer(name);
                        } else {
                            bhcUnitNam.append("," + name);
                        }
                    }
                }
            }
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
            examAutoEvaluation.setPeriod("2");
            examAutoEvaluation.setYear(year1);
            examAutoEvaluation.setFromSys("智慧政工");
            examAutoEvaluation.setAssess("南宁局工会");//初审人员
            examAutoEvaluation.setAssessId("b91d9ac0c32847c4ab6f21e910959198");//初审人员id
            examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考核扣分标准(业务部分26项)");
            examAutoEvaluation.setModelId("a959d8865ea74bf68cf818adc710c75c");
            examAutoEvaluation.setOption("一帮一数据未及时录入平台的");
            examAutoEvaluation.setOptionId("f28057ea3806428aa278f764bbc588f4");
            examAutoEvaluation.setScore("1");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"一帮一");
            if (nncIs0) {
                examAutoEvaluation.setIsNewRecord(false);
                examAutoEvaluation.setId("");
                examAutoEvaluation.setUnit("南宁处工会");
                examAutoEvaluation.setUnitId("32");
                examAutoEvaluation.setEvaluationId("1d6572cc99604313b93905e5ff3f47a4");
                examAutoEvaluation.setDetails(year1 + "年，" + nncUnitNam + "一帮一数据未及时录入平台的");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"一帮一");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (lzcIs0) {
                examAutoEvaluation.setIsNewRecord(false);
                examAutoEvaluation.setId("");
                examAutoEvaluation.setUnit("柳州处工会");
                examAutoEvaluation.setUnitId("147");
                examAutoEvaluation.setEvaluationId("ca07f09482154be0b10136171b19b90e");
                examAutoEvaluation.setDetails(year1 + "年，" + lzcUnitNam + "一帮一数据未及时录入平台的");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"一帮一");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (bhcIs0) {
                examAutoEvaluation.setIsNewRecord(false);
                examAutoEvaluation.setId("");
                examAutoEvaluation.setUnit("北海处工会");
                examAutoEvaluation.setUnitId("267");
                examAutoEvaluation.setEvaluationId("73607645d2e040359dbcb66640f92e07");
                examAutoEvaluation.setDetails(year1 + "年，" + bhcUnitNam + "一帮一数据未及时录入平台的");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"一帮一");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
        }
    }


    /**
     * 智慧政工-工会文体活动记录
     * <p>
     * -年度  局考处
     *
     * @param year
     */
    public void ghhdYear(String year) {

        /*Map<String,Object> yearMap = this.getTimeQuantumByYear(year);
        Date nowYearDate = (Date) yearMap.get("nowYear");
        Date lastYearDate = (Date) yearMap.get("lastYear");
        year = (String) yearMap.get("year");*/
        Integer y = Integer.valueOf(year);
        Integer lastYear = y - 1;
        String lastYearDate = lastYear + "-" + "12-11";
        String nowYearDate = year + "-" + "12-10";

        //公安处
        List<Office> officeList = new ArrayList<>();

        Office nncoffice = officeDao.selectBeanById("32");
        Office lzcoffice = officeDao.selectBeanById("147");
        Office bhcoffice = officeDao.selectBeanById("267");
        officeList.add(nncoffice);
        officeList.add(lzcoffice);
        officeList.add(bhcoffice);

        StringBuffer nncUnitNam = null;
        Boolean nncIs0 = false;
        StringBuffer lzcUnitNam = null;
        Boolean lzcIs0 = false;
        StringBuffer bhcUnitNam = null;
        Boolean bhcIs0 = false;

        for (int o = 0; o < officeList.size(); o++) {
            Office office = officeList.get(o);
            //公安处名称
            String name = office.getName();
            //公安处id
            String unitId = office.getId();
            int num = affairGhActivityRecordService.selectGhhd(lastYearDate, nowYearDate, unitId);
            if (num < 4) {
                if (office.getParentIds().contains(",34,")) {
                    //南宁处
                    nncIs0 = true;
                    if (nncUnitNam == null) {
                        nncUnitNam = new StringBuffer(name);
                    } else {
                        nncUnitNam.append("," + name);
                    }
                } else if (office.getParentIds().contains(",95,")) {
                    //柳州处
                    lzcIs0 = true;
                    if (lzcUnitNam == null) {
                        lzcUnitNam = new StringBuffer(name);
                    } else {
                        lzcUnitNam.append("," + name);
                    }
                } else if (office.getParentIds().contains(",156,")) {
                    //北海处
                    bhcIs0 = true;
                    if (bhcUnitNam == null) {
                        bhcUnitNam = new StringBuffer(name);
                    } else {
                        bhcUnitNam.append("," + name);
                    }
                }
            }
        }
        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
        examAutoEvaluation.setType("1");
        examAutoEvaluation.setEvalType("1");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
        examAutoEvaluation.setPeriod("2");
        examAutoEvaluation.setYear(year);
        examAutoEvaluation.setFromSys("智慧政工");
        examAutoEvaluation.setAssess("南宁局工会");//初审人员
        examAutoEvaluation.setAssessId("b91d9ac0c32847c4ab6f21e910959198");//初审人员id
        examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考核扣分标准(业务部分26项)");
        examAutoEvaluation.setModelId("a959d8865ea74bf68cf818adc710c75c");
        examAutoEvaluation.setOption("分地区或在全处范围内至少开展4次文体活动，未达到的");
        examAutoEvaluation.setOptionId("5719f26a1c6f4ac19112b11c54b9a110");
        examAutoEvaluation.setScore("2");

        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"工会文体活动");
        if (nncIs0) {
            examAutoEvaluation.setIsNewRecord(false);
            examAutoEvaluation.setId("");
            examAutoEvaluation.setUnit("南宁处工会");
            examAutoEvaluation.setUnitId("32");
            examAutoEvaluation.setEvaluationId("1d6572cc99604313b93905e5ff3f47a4");
            examAutoEvaluation.setDetails(year + "年，" + nncUnitNam + "分地区或在全处范围内至少开展4次文体活动，未达到");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"工会文体活动");
            this.save(examAutoEvaluation);
        }
        if (lzcIs0) {
            examAutoEvaluation.setIsNewRecord(false);
            examAutoEvaluation.setId("");
            examAutoEvaluation.setUnit("柳州处工会");
            examAutoEvaluation.setUnitId("147");
            examAutoEvaluation.setEvaluationId("ca07f09482154be0b10136171b19b90e");
            examAutoEvaluation.setDetails(year + "年，" + lzcUnitNam + "分地区或在全处范围内至少开展4次文体活动，未达到");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"工会文体活动");
            this.save(examAutoEvaluation);
        }
        if (bhcIs0) {
            examAutoEvaluation.setIsNewRecord(false);
            examAutoEvaluation.setId("");
            examAutoEvaluation.setUnit("北海处工会");
            examAutoEvaluation.setUnitId("267");
            examAutoEvaluation.setEvaluationId("73607645d2e040359dbcb66640f92e07");
            examAutoEvaluation.setDetails(year + "年，" + bhcUnitNam + "分地区或在全处范围内至少开展4次文体活动，未达到");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"工会文体活动");
            this.save(examAutoEvaluation);
        }
    }
//       ------------------------------------------------------------------

    /*
     * 志愿服务
     *
     * 局考处
     *
     * 年度
     *
     * */
    public void jkcZyYear(String year) {

        Integer y = Integer.valueOf(year);
        Integer lastYear = y - 1;
        String yearL = lastYear + "-" + "12-02";
        String yearT = year + "-" + "12-01";

        List<AffairGeneralSituation> affairGeneralSituationsList = affairGeneralSituationService.selectChuPartyBranch();//查询处下所有党支部
        StringBuffer nncUnitNam = null;
        Boolean nncIs0 = false;
        StringBuffer lzcUnitNam = null;
        Boolean lzcIs0 = false;
        StringBuffer bhcUnitNam = null;
        Boolean bhcIs0 = false;
        for (AffairGeneralSituation affairGeneralSituation : affairGeneralSituationsList) {
            //AffairGeneralSituation affairGeneralSituation = affairGeneralSituationsList.get(o);
            //党组织名称
            String partyName = affairGeneralSituation.getPartyOrganization();
            //党组织id
            String partyId = affairGeneralSituation.getId();
            //志愿服务次数
            Integer num = affairVolunteerServiceService.selectNumByName(partyId, yearL,yearT);
            if (num < 1) {
                if (affairGeneralSituation.getParentIds().contains(",34,")) {
                    //南宁处
                    nncIs0 = true;
                    if (nncUnitNam == null) {
                        nncUnitNam = new StringBuffer(partyName);
                    } else {
                        nncUnitNam.append("," + partyName);
                    }
                } else if (affairGeneralSituation.getParentIds().contains(",95,")) {
                    //柳州处
                    lzcIs0 = true;
                    if (lzcUnitNam == null) {
                        lzcUnitNam = new StringBuffer(partyName);
                    } else {
                        lzcUnitNam.append("," + partyName);
                    }
                } else {
                    //北海处
                    bhcIs0 = true;
                    if (bhcUnitNam == null) {
                        bhcUnitNam = new StringBuffer(partyName);
                    } else {
                        bhcUnitNam.append("," + partyName);
                    }
                }
            }
        }

        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
        examAutoEvaluation.setType("1");
        examAutoEvaluation.setEvalType("1");
        examAutoEvaluation.setPeriod("2");
        examAutoEvaluation.setYear(year);
        examAutoEvaluation.setFromSys("智慧政工");
        examAutoEvaluation.setRemark("每次");
        examAutoEvaluation.setAssess("南宁局政治部组织干部处");//初审人员
        examAutoEvaluation.setAssessId("bfdf74f010c9466dba12c1589ecab7f3");//初审人员id
        //examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队年度绩效考核公共扣分标准（直接扣大分）");
        examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考核扣分标准(业务部分26项)");
        //examAutoEvaluation.setModelId("653c088f3e754adcaa659a3706d304b9");
        examAutoEvaluation.setModelId("a959d8865ea74bf68cf818adc710c75c");
        //examAutoEvaluation.setOption("各平台数据未及时录入的");
        examAutoEvaluation.setOption("公安处及管内单位党建活动组织不力，被上级检查发现的");
        //examAutoEvaluation.setOptionId("f7b968cead674bb2a553602db7f490f4");
        examAutoEvaluation.setOptionId("924dd81816a34620915683d19cc749c1");
        examAutoEvaluation.setScore("2");
        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"志愿服务");
        if (nncIs0) {
            examAutoEvaluation.setIsNewRecord(false);
            examAutoEvaluation.setId("");
            examAutoEvaluation.setUnit("南宁处政治处组织干部室");
            examAutoEvaluation.setUnitId("27");
            examAutoEvaluation.setEvaluationId("34e8d855cf6b4b1ab5e7e23e7aaba658");
            examAutoEvaluation.setDetails(year + "年，志愿服务，" + nncUnitNam + "未按时录入扣分（每年最少1次，年度考）。");
            /*处理考评标准一样，汇总*/
            this.summaryStandard(examAutoEvaluation,2.0,year + "年，志愿服务，" + nncUnitNam + "未按时录入扣分（每年最少1次，年度考）。");
          /*  ExamAutoEvaluation old = this.getInfoByMore(examAutoEvaluation);
            if(old!=null){
                String oldDetails = old.getDetails();
                Double oldScore;
                try {
                    oldScore = Double.valueOf(old.getScore());
                }catch (Exception e){
                    e.printStackTrace();
                    oldScore = 0.0;
                }
                this.deleteInfoByMore(old);
                examAutoEvaluation.setScore(String.valueOf(oldScore+2.0));
                examAutoEvaluation.setDetails(oldDetails+"<br>"+year + "年，志愿服务，" + nncUnitNam + "未按时录入扣分（每年最少1次，年度考）。");
            }*/
            this.save(examAutoEvaluation);
        }
        if (lzcIs0) {
            examAutoEvaluation.setIsNewRecord(false);
            examAutoEvaluation.setId("");
            examAutoEvaluation.setUnit("柳州处政治处组织干部室");
            examAutoEvaluation.setUnitId("142");
            examAutoEvaluation.setEvaluationId("ec3ba2efdd404f2faa520f6e8a71ec4c");
            examAutoEvaluation.setDetails(year + "年，志愿服务，" + lzcUnitNam + "未按时录入扣分（每年最少1次，年度考）。");
            /*处理考评标准一样，汇总*/
            this.summaryStandard(examAutoEvaluation,2.0,year + "年，志愿服务，" + lzcUnitNam + "未按时录入扣分（每年最少1次，年度考）。");
            /*ExamAutoEvaluation old = this.getInfoByMore(examAutoEvaluation);
            if(old!=null){
                String oldDetails = old.getDetails();
                Double oldScore;
                try {
                    oldScore = Double.valueOf(old.getScore());
                }catch (Exception e){
                    e.printStackTrace();
                    oldScore = 0.0;
                }
                this.deleteInfoByMore(old);
                examAutoEvaluation.setScore(String.valueOf(oldScore+2.0));
                examAutoEvaluation.setDetails(oldDetails+"<br>"+year + "年，志愿服务，" + lzcUnitNam + "未按时录入扣分（每年最少1次，年度考）。");
            }*/
            this.save(examAutoEvaluation);
        }
        if (bhcIs0) {
            examAutoEvaluation.setIsNewRecord(false);
            examAutoEvaluation.setId("");
            examAutoEvaluation.setUnit("北海处政治处组织干部室");
            examAutoEvaluation.setUnitId("264");
            examAutoEvaluation.setEvaluationId("c90918faf2614baa8fa85230482bd43e");
            examAutoEvaluation.setDetails(year + "年，志愿服务，" + bhcUnitNam + "未按时录入扣分（每年最少1次，年度考）。");
            /*处理考评标准一样，汇总*/
            this.summaryStandard(examAutoEvaluation,2.0,year + "年，志愿服务，" + bhcUnitNam + "未按时录入扣分（每年最少1次，年度考）。");
          /*  ExamAutoEvaluation old = this.getInfoByMore(examAutoEvaluation);
            if(old!=null){
                String oldDetails = old.getDetails();
                Double oldScore;
                try {
                    oldScore = Double.valueOf(old.getScore());
                }catch (Exception e){
                    e.printStackTrace();
                    oldScore = 0.0;
                }
                this.deleteInfoByMore(old);
                examAutoEvaluation.setScore(String.valueOf(oldScore+2.0));
                examAutoEvaluation.setDetails(oldDetails+"<br>"+year + "年，志愿服务，" + bhcUnitNam + "未按时录入扣分（每年最少1次，年度考）。");
            }*/
            this.save(examAutoEvaluation);
        }


    }

    /*
     * 党员队伍思想分析
     *
     * 局考处
     *
     * 季度
     *
     * */
    public void jkcSxfx(String checkTime) {
        String year = checkTime.substring(0, 4);
        int y = Integer.valueOf(year);
        String lastYear = String.valueOf(y);
        String month = checkTime.substring(checkTime.length() - 2);

        AffairGeneralSituation nnAffairGeneralSituation = affairGeneralSituationDao.selectBeanByChuId("34");
        AffairGeneralSituation lzAffairGeneralSituation = affairGeneralSituationDao.selectBeanByChuId("95");
        AffairGeneralSituation bhAffairGeneralSituation = affairGeneralSituationDao.selectBeanByChuId("156");
        //获取各处处机关党组织
        List<AffairGeneralSituation> nncPartyList = new ArrayList<>();
        nncPartyList.add(nnAffairGeneralSituation);
        List<AffairGeneralSituation> lzcPartyList = new ArrayList<>();
        lzcPartyList.add(lzAffairGeneralSituation);
        List<AffairGeneralSituation> bhcPartyList = new ArrayList<>();
        bhcPartyList.add(bhAffairGeneralSituation);


        StringBuilder nncdetails = new StringBuilder();
        StringBuilder lzcdetails = new StringBuilder();
        StringBuilder bhcdetails = new StringBuilder();
        Integer nncnumSum = 0;
        Integer lzcnumSum = 0;
        Integer bhcnumSum = 0;

        Map<String, String> timeMap = jdTime(checkTime);
        String yearL = timeMap.get("yearL");
        String yearT = timeMap.get("yearT");
        String jd = timeMap.get("jd");

        if (StringUtils.isNotBlank(jd) && "01".equals(jd)) {
            for (int o = 0; o < nncPartyList.size(); o++) {
                AffairGeneralSituation affairGeneralSituation = nncPartyList.get(o);

                //公安处名称
                String name = affairGeneralSituation.getPartyOrganization();

                //公安处id
                String unitId = affairGeneralSituation.getId();


                Integer number = affairIdeaAnalysisService.selectNumber(yearL, yearT, unitId);

                if (number < 1) {
                    nncnumSum++;
                    nncdetails.append(name);
                }
            }
            if (nncnumSum > 0) {

                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("1");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(lastYear);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setDetails(nncdetails + lastYear + "年" + jd + "季度" + "公安处未开展民警季度思想动态分析并形成报告的，每次扣党建工作0.6分。");
                examAutoEvaluation.setUnit("南宁处政治处组织干部室");

                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setUnitId("27");
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("2020年月度公安局对公安处重点工作扣分标准（直接扣大分）");
                examAutoEvaluation.setModelId("7b8ae271253c4932b89091efb8ab2e1f");
                examAutoEvaluation.setOption("公安处未开展民警季度思想动态分析并形成报告的");
                examAutoEvaluation.setOptionId("9a1022e92c594f799db7301bfa407e8f");
                examAutoEvaluation.setScore(String.valueOf(0.6 * nncnumSum));
                examAutoEvaluation.setEvaluationId("34e8d855cf6b4b1ab5e7e23e7aaba658");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党员队伍思想分析");
                this.summaryStandard(examAutoEvaluation,0.6 * nncnumSum,nncdetails + year + "年，党员队伍思想分析未按时录入");
                this.save(examAutoEvaluation);
            }
            for (int o = 0; o < lzcPartyList.size(); o++) {
                AffairGeneralSituation affairGeneralSituation = lzcPartyList.get(o);

                //公安处名称
                String name = affairGeneralSituation.getPartyOrganization();

                //公安处id
                String unitId = affairGeneralSituation.getId();


                Integer number = affairIdeaAnalysisService.selectNumber(yearL, yearT, unitId);

                if (number < 1) {
                    lzcnumSum++;
                    lzcdetails.append(name);
                }
            }
            if (lzcnumSum > 0) {

                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("1");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setDetails(lzcdetails + year + "年" + jd + "季度" + "公安处未开展民警季度思想动态分析并形成报告的，每次扣党建工作0.6分。");
                examAutoEvaluation.setUnit("柳州处政治处组织干部室");

                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setUnitId("142");
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("2020年月度公安局对公安处重点工作扣分标准（直接扣大分）");
                examAutoEvaluation.setModelId("7b8ae271253c4932b89091efb8ab2e1f");
                examAutoEvaluation.setOption("公安处未开展民警季度思想动态分析并形成报告的");
                examAutoEvaluation.setOptionId("9a1022e92c594f799db7301bfa407e8f");
                examAutoEvaluation.setScore(String.valueOf(0.6 * lzcnumSum));
                examAutoEvaluation.setEvaluationId("ec3ba2efdd404f2faa520f6e8a71ec4c");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党员队伍思想分析");
                this.summaryStandard(examAutoEvaluation,0.6 * lzcnumSum,lzcdetails + year + "年，党员队伍思想分析未按时录入");
                this.save(examAutoEvaluation);
            }
            for (int o = 0; o < bhcPartyList.size(); o++) {
                AffairGeneralSituation affairGeneralSituation = bhcPartyList.get(o);

                //公安处名称
                String name = affairGeneralSituation.getPartyOrganization();

                //公安处id
                String unitId = affairGeneralSituation.getId();


                Integer number = affairIdeaAnalysisService.selectNumber(yearL, yearT, unitId);

                if (number < 1) {
                    bhcnumSum++;
                    bhcdetails.append(name);
                }
            }
            if (bhcnumSum > 0) {

                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("1");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setDetails(bhcdetails + year + "年" + jd + "季度" + "公安处未开展民警季度思想动态分析并形成报告的，每次扣党建工作0.6分。");
                examAutoEvaluation.setUnit("北海处政治处组织干部室");

                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setUnitId("264");
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("2020年月度公安局对公安处重点工作扣分标准（直接扣大分）");
                examAutoEvaluation.setModelId("7b8ae271253c4932b89091efb8ab2e1f");
                examAutoEvaluation.setOption("公安处未开展民警季度思想动态分析并形成报告的");
                examAutoEvaluation.setOptionId("9a1022e92c594f799db7301bfa407e8f");
                examAutoEvaluation.setScore(String.valueOf(0.6 * bhcnumSum));
                examAutoEvaluation.setEvaluationId("c90918faf2614baa8fa85230482bd43e");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党员队伍思想分析");
                this.summaryStandard(examAutoEvaluation,0.6 * bhcnumSum,bhcdetails + year + "年，党员队伍思想分析未按时录入");
                this.save(examAutoEvaluation);
            }
        }
        else if (StringUtils.isNotBlank(jd) && ("04".equals(jd) || "07".equals(jd) || "10".equals(jd))) {
            for (int o = 0; o < nncPartyList.size(); o++) {
                AffairGeneralSituation affairGeneralSituation = nncPartyList.get(o);

                //公安处名称
                String name = affairGeneralSituation.getPartyOrganization();

                //公安处id
                String unitId = affairGeneralSituation.getId();


                Integer number = affairIdeaAnalysisService.selectNumber(yearL, yearT, unitId);

                if (number < 1) {
                    nncnumSum++;
                    nncdetails.append(name);
                }
            }
            if (nncnumSum > 0) {

                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("1");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setDetails(nncdetails + year + "年" + jd + "季度" + "公安处未开展民警季度思想动态分析并形成报告的，每次扣党建工作0.6分。");
                examAutoEvaluation.setUnit("南宁处政治处组织干部室");

                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setUnitId("27");
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("2020年月度公安局对公安处重点工作扣分标准（直接扣大分）");
                examAutoEvaluation.setModelId("7b8ae271253c4932b89091efb8ab2e1f");
                examAutoEvaluation.setOption("公安处未开展民警季度思想动态分析并形成报告的");
                examAutoEvaluation.setOptionId("9a1022e92c594f799db7301bfa407e8f");
                examAutoEvaluation.setScore(String.valueOf(0.6 * nncnumSum));
                examAutoEvaluation.setEvaluationId("34e8d855cf6b4b1ab5e7e23e7aaba658");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党员队伍思想分析");
                this.summaryStandard(examAutoEvaluation,0.6 * nncnumSum,nncdetails + year + "年，党员队伍思想分析未按时录入");
                this.save(examAutoEvaluation);
            }
            for (int o = 0; o < lzcPartyList.size(); o++) {
                AffairGeneralSituation affairGeneralSituation = lzcPartyList.get(o);

                //公安处名称
                String name = affairGeneralSituation.getPartyOrganization();

                //公安处id
                String unitId = affairGeneralSituation.getId();


                Integer number = affairIdeaAnalysisService.selectNumber(yearL, yearT, unitId);

                if (number < 1) {
                    lzcnumSum++;
                    lzcdetails.append(name);
                }
            }
            if (lzcnumSum > 0) {

                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("1");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setDetails(lzcdetails + year + "年" + jd + "季度" + "公安处未开展民警季度思想动态分析并形成报告的，每次扣党建工作0.6分。");
                examAutoEvaluation.setUnit("柳州处政治处组织干部室");

                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setUnitId("142");
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("2020年月度公安局对公安处重点工作扣分标准（直接扣大分）");
                examAutoEvaluation.setModelId("7b8ae271253c4932b89091efb8ab2e1f");
                examAutoEvaluation.setOption("公安处未开展民警季度思想动态分析并形成报告的");
                examAutoEvaluation.setOptionId("9a1022e92c594f799db7301bfa407e8f");
                examAutoEvaluation.setScore(String.valueOf(0.6 * lzcnumSum));
                examAutoEvaluation.setEvaluationId("ec3ba2efdd404f2faa520f6e8a71ec4c");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党员队伍思想分析");
                this.summaryStandard(examAutoEvaluation,0.6 * lzcnumSum,lzcdetails + year + "年，党员队伍思想分析未按时录入");
                this.save(examAutoEvaluation);
            }
            for (int o = 0; o < bhcPartyList.size(); o++) {
                AffairGeneralSituation affairGeneralSituation = bhcPartyList.get(o);

                //公安处名称
                String name = affairGeneralSituation.getPartyOrganization();

                //公安处id
                String unitId = affairGeneralSituation.getId();


                Integer number = affairIdeaAnalysisService.selectNumber(yearL, yearT, unitId);

                if (number < 1) {
                    bhcnumSum++;
                    bhcdetails.append(name);
                }
            }
            if (bhcnumSum > 0) {

                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("1");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setDetails(bhcdetails + year + "年" + jd + "季度" + "公安处未开展民警季度思想动态分析并形成报告的，每次扣党建工作0.6分。");
                examAutoEvaluation.setUnit("北海处政治处组织干部室");

                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setUnitId("264");
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("2020年月度公安局对公安处重点工作扣分标准（直接扣大分）");
                examAutoEvaluation.setModelId("7b8ae271253c4932b89091efb8ab2e1f");
                examAutoEvaluation.setOption("公安处未开展民警季度思想动态分析并形成报告的");
                examAutoEvaluation.setOptionId("9a1022e92c594f799db7301bfa407e8f");
                examAutoEvaluation.setScore(String.valueOf(0.6 * bhcnumSum));
                examAutoEvaluation.setEvaluationId("c90918faf2614baa8fa85230482bd43e");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党员队伍思想分析");
                this.summaryStandard(examAutoEvaluation,0.6 * bhcnumSum,bhcdetails + year + "年，党员队伍思想分析未按时录入");
                this.save(examAutoEvaluation);
            }
        }
    }
    /*
     * 党员队伍思想分析
     *
     * 局考处
     *
     * 年度
     *
     * */
    public void jkcSxfxYear(String year) {

        Integer y = Integer.valueOf(year);
        Integer lastYear = y - 1;
        Map<String, String> timeMap = this.yearTime(year);
        String yearL = timeMap.get("yearL");
        String yearT = timeMap.get("yearT");


        AffairGeneralSituation nnAffairGeneralSituation = affairGeneralSituationDao.selectBeanByChuId("34");
        AffairGeneralSituation lzAffairGeneralSituation = affairGeneralSituationDao.selectBeanByChuId("95");
        AffairGeneralSituation bhAffairGeneralSituation = affairGeneralSituationDao.selectBeanByChuId("156");
        //获取各处处机关党组织
        List<AffairGeneralSituation> nncPartyList = new ArrayList<>();
        nncPartyList.add(nnAffairGeneralSituation);
        List<AffairGeneralSituation> lzcPartyList = new ArrayList<>();
        lzcPartyList.add(lzAffairGeneralSituation);
        List<AffairGeneralSituation> bhcPartyList = new ArrayList<>();
        bhcPartyList.add(bhAffairGeneralSituation);


        StringBuilder nncdetails = new StringBuilder();
        StringBuilder lzcdetails = new StringBuilder();
        StringBuilder bhcdetails = new StringBuilder();
        Integer nncnumSum = 0;
        Integer lzcnumSum = 0;
        Integer bhcnumSum = 0;
        for (int o = 0; o < nncPartyList.size(); o++) {
            AffairGeneralSituation affairGeneralSituation = nncPartyList.get(o);

            //公安处名称
            String name = affairGeneralSituation.getPartyOrganization();

            //公安处id
            String unitId = affairGeneralSituation.getId();

            Integer number = affairIdeaAnalysisService.selectNumber(yearL,yearT, unitId);

            if (number < 1) {
                nncnumSum++;
                nncdetails.append(",").append(name);
            }
        }
        if (nncnumSum > 0){

            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("2");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setDetails(nncdetails + year + "年" + "公安处未开展民警季度思想动态分析并形成报告的，每次扣党建工作0.6分。");
            examAutoEvaluation.setUnit("南宁处政治处组织干部室");

            examAutoEvaluation.setFromSys("智慧政工");
            examAutoEvaluation.setUnitId("27");
            examAutoEvaluation.setAssess("");
            examAutoEvaluation.setAssessId("");
            examAutoEvaluation.setModel("2020年年度公安局对公安处重点工作考核扣分标准（直接扣大分）");
            examAutoEvaluation.setModelId("241d14b81fbc43ac9025dbf6599e6b55");
            examAutoEvaluation.setOption("公安处未开展民警季度思想动态分析并形成报告的");
            examAutoEvaluation.setOptionId("911fa69a452149b1b0917bc7bb9cdf17");
            examAutoEvaluation.setScore(String.valueOf(0.6 * nncnumSum));
            examAutoEvaluation.setEvaluationId("34e8d855cf6b4b1ab5e7e23e7aaba658");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党员队伍思想分析");
            this.summaryStandard(examAutoEvaluation,0.6 * nncnumSum,nncdetails + year + "年，党员队伍思想分析未按时录入");
            this.save(examAutoEvaluation);
        }
        for (int o = 0; o < lzcPartyList.size(); o++) {
            AffairGeneralSituation affairGeneralSituation = lzcPartyList.get(o);

            //公安处名称
            String name = affairGeneralSituation.getPartyOrganization();

            //公安处id
            String unitId = affairGeneralSituation.getId();

            Integer number = affairIdeaAnalysisService.selectNumber(yearL,yearT, unitId);

            if (number < 1) {
                lzcnumSum++;
                lzcdetails.append(",").append(name);
            }
        }
        if (lzcnumSum > 0){

            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("2");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setDetails(lzcdetails + year + "年" + "公安处未开展民警季度思想动态分析并形成报告的，每次扣党建工作0.6分。");
            examAutoEvaluation.setUnit("柳州处政治处组织干部室");

            examAutoEvaluation.setFromSys("智慧政工");
            examAutoEvaluation.setUnitId("142");
            examAutoEvaluation.setAssess("");
            examAutoEvaluation.setAssessId("");
            examAutoEvaluation.setModel("2020年年度公安局对公安处重点工作考核扣分标准（直接扣大分）");
            examAutoEvaluation.setModelId("241d14b81fbc43ac9025dbf6599e6b55");
            examAutoEvaluation.setOption("公安处未开展民警季度思想动态分析并形成报告的");
            examAutoEvaluation.setOptionId("911fa69a452149b1b0917bc7bb9cdf17");
            examAutoEvaluation.setScore(String.valueOf(0.6 * lzcnumSum));
            examAutoEvaluation.setEvaluationId("ec3ba2efdd404f2faa520f6e8a71ec4c");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党员队伍思想分析");
            this.summaryStandard(examAutoEvaluation,0.6 * lzcnumSum,lzcdetails + year + "年，党员队伍思想分析未按时录入");
            this.save(examAutoEvaluation);
        }
        for (int o = 0; o < bhcPartyList.size(); o++) {
            AffairGeneralSituation affairGeneralSituation = bhcPartyList.get(o);

            //公安处名称
            String name = affairGeneralSituation.getPartyOrganization();

            //公安处id
            String unitId = affairGeneralSituation.getId();

            Integer number = affairIdeaAnalysisService.selectNumber(yearL,yearT, unitId);

            if (number < 1) {
                bhcnumSum++;
                bhcdetails.append(",").append(name);
            }
        }
        if (bhcnumSum > 0){

            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("2");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setDetails(bhcdetails + year + "年" + "公安处未开展民警季度思想动态分析并形成报告的，每次扣党建工作0.6分。");
            examAutoEvaluation.setUnit("北海处政治处组织干部室");

            examAutoEvaluation.setFromSys("智慧政工");
            examAutoEvaluation.setUnitId("264");
            examAutoEvaluation.setAssess("");
            examAutoEvaluation.setAssessId("");
            examAutoEvaluation.setModel("2020年年度公安局对公安处重点工作考核扣分标准（直接扣大分）");
            examAutoEvaluation.setModelId("241d14b81fbc43ac9025dbf6599e6b55");
            examAutoEvaluation.setOption("公安处未开展民警季度思想动态分析并形成报告的");
            examAutoEvaluation.setOptionId("911fa69a452149b1b0917bc7bb9cdf17");
            examAutoEvaluation.setScore(String.valueOf(0.6 * bhcnumSum));
            examAutoEvaluation.setEvaluationId("c90918faf2614baa8fa85230482bd43e");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党员队伍思想分析");
            this.summaryStandard(examAutoEvaluation,0.6 * bhcnumSum,bhcdetails + year + "年，党员队伍思想分析未按时录入");
            this.save(examAutoEvaluation);
        }
    }



    /*
     * 宣传思想-理论学习-党委中心组学习
     *
     * 局考处
     *
     * 月度
     *
     * */
    public void jkcDwzxzxx(String checkTime) {

        AffairGeneralSituation nnAffairGeneralSituation = affairGeneralSituationDao.selectBeanByChuId("34");
        AffairGeneralSituation lzAffairGeneralSituation = affairGeneralSituationDao.selectBeanByChuId("95");
        AffairGeneralSituation bhAffairGeneralSituation = affairGeneralSituationDao.selectBeanByChuId("156");
        //获取各处处机关党组织
        List<AffairGeneralSituation> nncPartyList = new ArrayList<>();
        nncPartyList.add(nnAffairGeneralSituation);
        List<AffairGeneralSituation> lzcPartyList = new ArrayList<>();
        lzcPartyList.add(lzAffairGeneralSituation);
        List<AffairGeneralSituation> bhcPartyList = new ArrayList<>();
        bhcPartyList.add(bhAffairGeneralSituation);

        Map<String, String> timeMap = this.monthTime(checkTime);
        String yearL = timeMap.get("yearL");
        String yearT = timeMap.get("yearT");

        StringBuilder nncdetails = new StringBuilder();
        StringBuilder lzcdetails = new StringBuilder();
        StringBuilder bhcdetails = new StringBuilder();

        Integer nncnumSum = 0;
        Integer lzcnumSum = 0;
        Integer bhcnumSum = 0;

        String year = checkTime.substring(0, 4);
        Integer y = Integer.valueOf(year);
        String month = checkTime.substring(checkTime.length() - 2);
        Integer m = Integer.valueOf(month);
        Integer lastMonth = m - 1;
        Integer lastYear = y - 1;

        for (int o = 0; o < nncPartyList.size(); o++) {
            AffairGeneralSituation affairGeneralSituation = nncPartyList.get(o);

            //公安处名称
            String name = affairGeneralSituation.getPartyOrganization();

            //公安处id
            String unitId = affairGeneralSituation.getId();

            Integer num = affairGroupStudyService.selectTime(yearL,yearT, unitId);

            if (num < 1) {
                nncnumSum++;
                nncdetails.append(name);
            }
        }
        if (nncnumSum > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setDetails(nncdetails + year + "年" + month + "月" + "未按规定要求落实党委中心组学习制度，每次扣1分。（已有，直接在大分扣）");
            examAutoEvaluation.setUnit("南宁处政治处宣传教育室（民警训练基地）");
            examAutoEvaluation.setUnitId("5");

            examAutoEvaluation.setFromSys("智慧政工");
            examAutoEvaluation.setAssess("");
            examAutoEvaluation.setAssessId("");
            examAutoEvaluation.setModel("2020年月度公安局对公安处重点工作扣分标准（直接扣大分）");
            examAutoEvaluation.setModelId("7b8ae271253c4932b89091efb8ab2e1f");
            examAutoEvaluation.setOption("未按规定要求落实党委中心组学习制度");
            examAutoEvaluation.setOptionId("674b6eca49fd4cfb8b9f7d8eee4bb66a");
            examAutoEvaluation.setScore(String.valueOf(nncnumSum));
            examAutoEvaluation.setEvaluationId("a4e40825e3b34c37895ee2ed168f24a0");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"宣教党委中心组学习");
            this.save(examAutoEvaluation);
        }
        for (int o = 0; o < lzcPartyList.size(); o++) {
            AffairGeneralSituation affairGeneralSituation = lzcPartyList.get(o);

            //公安处名称
            String name = affairGeneralSituation.getPartyOrganization();

            //公安处id
            String unitId = affairGeneralSituation.getId();

            Integer num = affairGroupStudyService.selectTime(yearL,yearT, unitId);

            if (num < 1) {
                lzcnumSum++;
                lzcdetails.append(name);
            }
        }
        if (lzcnumSum > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setDetails(lzcdetails + year + "年" + month + "月" + "未按规定要求落实党委中心组学习制度，每次扣1分。（已有，直接在大分扣）");
            examAutoEvaluation.setUnit("柳州处政治处宣传教育室（民警训练基地）");
            examAutoEvaluation.setUnitId("144");

            examAutoEvaluation.setFromSys("智慧政工");
            examAutoEvaluation.setAssess("");
            examAutoEvaluation.setAssessId("");
            examAutoEvaluation.setModel("2020年月度公安局对公安处重点工作扣分标准（直接扣大分）");
            examAutoEvaluation.setModelId("7b8ae271253c4932b89091efb8ab2e1f");
            examAutoEvaluation.setOption("未按规定要求落实党委中心组学习制度");
            examAutoEvaluation.setOptionId("674b6eca49fd4cfb8b9f7d8eee4bb66a");
            examAutoEvaluation.setScore(String.valueOf(lzcnumSum));
            examAutoEvaluation.setEvaluationId("94ccb0bdb21441f997c72268b4d882db");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"宣教党委中心组学习");
            this.save(examAutoEvaluation);
        }
        for (int o = 0; o < bhcPartyList.size(); o++) {
            AffairGeneralSituation affairGeneralSituation = bhcPartyList.get(o);

            //公安处名称
            String name = affairGeneralSituation.getPartyOrganization();

            //公安处id
            String unitId = affairGeneralSituation.getId();

            Integer num = affairGroupStudyService.selectTime(yearL,yearT, unitId);

            if (num < 1) {
                bhcnumSum++;
                bhcdetails.append(name);
            }
        }
        if (bhcnumSum > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setDetails(bhcdetails + year + "年" + month + "月" + "未按规定要求落实党委中心组学习制度，每次扣1分。（已有，直接在大分扣）");
            examAutoEvaluation.setUnit("北海处政治处宣传教育室（民警训练基地）");
            examAutoEvaluation.setUnitId("265");

            examAutoEvaluation.setFromSys("智慧政工");
            examAutoEvaluation.setAssess("");
            examAutoEvaluation.setAssessId("");
            examAutoEvaluation.setModel("2020年月度公安局对公安处重点工作扣分标准（直接扣大分）");
            examAutoEvaluation.setModelId("7b8ae271253c4932b89091efb8ab2e1f");
            examAutoEvaluation.setOption("未按规定要求落实党委中心组学习制度");
            examAutoEvaluation.setOptionId("674b6eca49fd4cfb8b9f7d8eee4bb66a");
            examAutoEvaluation.setScore(String.valueOf(bhcnumSum));
            examAutoEvaluation.setEvaluationId("82f8e9ba1cd7446b99c084d5b4b5c038");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"宣教党委中心组学习");
            this.save(examAutoEvaluation);
        }
    }
    /*
     * 宣传思想-理论学习-党委中心组学习
     *
     * 局考处
     *
     * 年度
     * */
    public void jkcDwzxzxxYear(String year) {

        AffairGeneralSituation nnAffairGeneralSituation = affairGeneralSituationDao.selectBeanByChuId("34");
        AffairGeneralSituation lzAffairGeneralSituation = affairGeneralSituationDao.selectBeanByChuId("95");
        AffairGeneralSituation bhAffairGeneralSituation = affairGeneralSituationDao.selectBeanByChuId("156");
        //获取各处处机关党组织
        List<AffairGeneralSituation> nncPartyList = new ArrayList<>();
        nncPartyList.add(nnAffairGeneralSituation);
        List<AffairGeneralSituation> lzcPartyList = new ArrayList<>();
        lzcPartyList.add(lzAffairGeneralSituation);
        List<AffairGeneralSituation> bhcPartyList = new ArrayList<>();
        bhcPartyList.add(bhAffairGeneralSituation);

        Map<String, String> timeMap = this.yearTime(year);
        String yearL = timeMap.get("yearL");
        String yearT = timeMap.get("yearT");

        StringBuilder nncdetails = new StringBuilder();
        StringBuilder lzcdetails = new StringBuilder();
        StringBuilder bhcdetails = new StringBuilder();

        Integer nncnumSum = 0;
        Integer lzcnumSum = 0;
        Integer bhcnumSum = 0;

        for (int o = 0; o < nncPartyList.size(); o++) {
            AffairGeneralSituation affairGeneralSituation = nncPartyList.get(o);

            //公安处名称
            String name = affairGeneralSituation.getPartyOrganization();

            //公安处id
            String unitId = affairGeneralSituation.getId();

            Integer num = affairGroupStudyService.selectTime(yearL,yearT, unitId);

            if (num < 12) {
                nncnumSum++;
                nncdetails.append(",").append(name);
            }
        }
        if(nncnumSum > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("2");
            examAutoEvaluation.setFromSys("智慧政工");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setDetails(nncdetails + year + "年" + "未按规定要求落实党委中心组学习制度，每次扣0.5分。");
            examAutoEvaluation.setUnit("南宁处政治处宣传教育室（民警训练基地）");
            examAutoEvaluation.setUnitId("29");
            examAutoEvaluation.setAssess("");
            examAutoEvaluation.setAssessId("");
            examAutoEvaluation.setModel("2020年年度公安局对公安处重点工作考核扣分标准（直接扣大分）");
            examAutoEvaluation.setModelId("241d14b81fbc43ac9025dbf6599e6b55");
            examAutoEvaluation.setOption("未按规定要求落实党委中心组学习制度");
            examAutoEvaluation.setOptionId("7f2e897410a4447193a0a2e0115dc880");
            examAutoEvaluation.setScore(String.valueOf(nncnumSum * 0.5));
            examAutoEvaluation.setEvaluationId("a4e40825e3b34c37895ee2ed168f24a0");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"宣教党委中心组学习");
            this.save(examAutoEvaluation);
        }
        for (int o = 0; o < lzcPartyList.size(); o++) {
            AffairGeneralSituation affairGeneralSituation = lzcPartyList.get(o);

            //公安处名称
            String name = affairGeneralSituation.getPartyOrganization();

            //公安处id
            String unitId = affairGeneralSituation.getId();

            Integer num = affairGroupStudyService.selectTime(yearL,yearT, unitId);

            if (num < 12) {
                lzcnumSum++;
                lzcdetails.append(",").append(name);
            }
        }
        if(lzcnumSum > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("2");
            examAutoEvaluation.setFromSys("智慧政工");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setDetails(lzcdetails + year + "年" + "未按规定要求落实党委中心组学习制度，每次扣0.5分。");
            examAutoEvaluation.setUnit("柳州处政治处宣传教育室（民警训练基地）");
            examAutoEvaluation.setUnitId("144");
            examAutoEvaluation.setAssess("");
            examAutoEvaluation.setAssessId("");
            examAutoEvaluation.setModel("2020年年度公安局对公安处重点工作考核扣分标准（直接扣大分）");
            examAutoEvaluation.setModelId("241d14b81fbc43ac9025dbf6599e6b55");
            examAutoEvaluation.setOption("未按规定要求落实党委中心组学习制度");
            examAutoEvaluation.setOptionId("7f2e897410a4447193a0a2e0115dc880");
            examAutoEvaluation.setScore(String.valueOf(lzcnumSum * 0.5));
            examAutoEvaluation.setEvaluationId("94ccb0bdb21441f997c72268b4d882db");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"宣教党委中心组学习");
            this.save(examAutoEvaluation);
        }
        for (int o = 0; o < bhcPartyList.size(); o++) {
            AffairGeneralSituation affairGeneralSituation = bhcPartyList.get(o);

            //公安处名称
            String name = affairGeneralSituation.getPartyOrganization();

            //公安处id
            String unitId = affairGeneralSituation.getId();

            Integer num = affairGroupStudyService.selectTime(yearL,yearT, unitId);

            if (num < 12) {
                bhcnumSum++;
                bhcdetails.append(",").append(name);
            }
        }
        if(bhcnumSum > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("2");
            examAutoEvaluation.setFromSys("智慧政工");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setDetails(bhcdetails + year + "年" + "未按规定要求落实党委中心组学习制度，每次扣0.5分。");
            examAutoEvaluation.setUnit("北海处政治处宣传教育室（民警训练基地）");
            examAutoEvaluation.setUnitId("29");
            examAutoEvaluation.setAssess("");
            examAutoEvaluation.setAssessId("");
            examAutoEvaluation.setModel("2020年年度公安局对公安处重点工作考核扣分标准（直接扣大分）");
            examAutoEvaluation.setModelId("241d14b81fbc43ac9025dbf6599e6b55");
            examAutoEvaluation.setOption("未按规定要求落实党委中心组学习制度");
            examAutoEvaluation.setOptionId("7f2e897410a4447193a0a2e0115dc880");
            examAutoEvaluation.setScore(String.valueOf(bhcnumSum * 0.5));
            examAutoEvaluation.setEvaluationId("82f8e9ba1cd7446b99c084d5b4b5c038");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"宣教党委中心组学习");
            this.save(examAutoEvaluation);
        }
    }
    /*
     * 宣传思想-理论学习-单位政治学习-学习平台
     *
     * 局考处
     *
     * 月度
     *
     * */
/*    public void jkcXxpt(String checkTime) {

        //公安处
        List<Office> officeList = new ArrayList<>();
        officeList = officeDao.selectChuUnit();

        for (int o = 0; o < officeList.size(); o++) {
            Office office = officeList.get(o);

            //公安处名称
            String name = office.getName();

            //公安处id
            String unitId = office.getId();

            String year = checkTime.substring(0, 4);
            String month = checkTime.substring(checkTime.length() - 2);

            String time = year + "-" + month;

            Integer m = Integer.valueOf(month);
            Integer lastMonth = m - 1;
            String yearL = year + "-" + lastMonth + "-02";
            String yearT = year + "-" + month + "-25";

            Integer num = affairLearnPowerService.selectNumber(yearL,yearT, unitId);
            //单位code
            String code = office.getCode();

            String evI = userDao.selectJkcId(code);
            if (num < 1) {
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("1");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setDetails(name + year + "年" + month + "月" + "新闻稿件，央视《新闻联播》每篇加2.5分");
                examAutoEvaluation.setUnit(name);
                examAutoEvaluation.setUnitId(unitId);
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("2020年月度公安局对公安处公共扣分标准");
                examAutoEvaluation.setModelId("91f2f146a8b9417ea2f04b42ee80e2aa");
                examAutoEvaluation.setOption("各平台数据未及时录入的");
                examAutoEvaluation.setOptionId("12caa2cc2eb5457baa819a6adedc5112");
                examAutoEvaluation.setScore("0.2");
                examAutoEvaluation.setEvaluationId(evI);
                this.save(examAutoEvaluation);

            }
        }
    }*/

    /*
     * 宣传思想-理论学习-单位政治学习-学习平台
     *
     * 局考处
     *
     * 年度
     *
     * */
/*    public void jkcXxptYear(String year) {
        //公安处
        List<Office> officeList = new ArrayList<>();
        officeList = officeDao.selectChuUnit();
        for (int o = 0; o < officeList.size(); o++) {
            Office office = officeList.get(o);

            //公安处名称
            String name = office.getName();
            //公安处id
            String unitId = office.getId();

            Integer yl = Integer.valueOf(year);
            Integer lastYear = yl - 1;
            String yearL = lastYear + "-" + "12-02";
            String yearT = year + "-" + "12-01";

            Integer num = affairLearnPowerService.selectNumber(yearL,yearT, unitId);
            //单位code
            String code = office.getCode();

            String evI = userDao.selectJkcId(code);
            if (num < 12) {
                int nu = 12 - num;
                double n = nu * 0.1;
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("1");
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setDetails(name + year + "年" + "新闻稿件，央视《新闻联播》每篇加2.5分");
                examAutoEvaluation.setUnit(name);
                examAutoEvaluation.setUnitId(unitId);
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("2020年年度公安局对公安处考评公共扣分标准");
                examAutoEvaluation.setModelId("bb3eea8554314e04b170f26f0294574e");
                examAutoEvaluation.setOption("各平台数据未及时录入的");
                examAutoEvaluation.setOptionId("d44aa5dfde9c4418ad00c086e1084b69");
                examAutoEvaluation.setScore(String.valueOf(n));
                examAutoEvaluation.setEvaluationId(evI);
                this.save(examAutoEvaluation);

            }
        }
    }*/

    /*
     * 宣传思想-经常性思想工作-思想分析
     *
     * 局考处
     *
     * 月度
     *
    * */
    public void jkcXcsxfx(String checkTime) {

        String year = checkTime.substring(0, 4);
        Integer y = Integer.valueOf(year);
        String lastYear = String.valueOf(y - 1);
        String month = checkTime.substring(checkTime.length() - 2);
        Integer m = Integer.valueOf(month);

        Map<String, String> timeMap = jdTime(checkTime);
        String yearL = timeMap.get("yearL");
        String yearT = timeMap.get("yearT");
        String jd = timeMap.get("jd");

        if (StringUtils.isNotBlank(jd) && "01".equals(jd)) {
            List<String> unitIdList = new ArrayList<>();
            unitIdList.add("34");
            unitIdList.add("95");
            unitIdList.add("156");

            for (int u = 0; u < unitIdList.size(); u++) {
                String unitId = unitIdList.get(u);
                Integer number = affairPoliceThoughtAnalysisService.selectNumber(yearL, yearT, unitId);
                if (number < 1 && "34".equals(unitId)) {
                    Double score = 0.6;
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("1");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(lastYear);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails("南宁公安处" + lastYear + "年" + jd + "季度" + "未开展民警季度思想动态分析并形成报告的，每次扣党建工作0.6分");
                    examAutoEvaluation.setUnit("南宁处政治处宣传教育室（民警训练基地）");
                    examAutoEvaluation.setUnitId("29");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("2020年月度公安局对公安处重点工作扣分标准（直接扣大分）");
                    examAutoEvaluation.setModelId("7b8ae271253c4932b89091efb8ab2e1f");
                    examAutoEvaluation.setOption("公安处未开展民警季度思想动态分析并形成报告的");
                    examAutoEvaluation.setOptionId("9a1022e92c594f799db7301bfa407e8f");
                    examAutoEvaluation.setScore(String.valueOf(score));
                    examAutoEvaluation.setEvaluationId("a4e40825e3b34c37895ee2ed168f24a0");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"宣教思想分析");
                    this.summaryStandard(examAutoEvaluation,score,"南宁公安处" + lastYear + "年" + jd + "季度" + "未开展民警季度思想动态分析并形成报告的，每次扣党建工作0.6分");
                    this.save(examAutoEvaluation);
                }
                if (number < 1 && "95".equals(unitId)) {
                    Double score = 0.6;
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("1");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(lastYear);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails("柳州公安处" + lastYear + "年" + jd + "季度" + "未开展民警季度思想动态分析并形成报告的，每次扣党建工作0.6分");
                    examAutoEvaluation.setUnit("柳州处政治处宣传教育室（民警训练基地）");
                    examAutoEvaluation.setUnitId("144");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("2020年月度公安局对公安处重点工作扣分标准（直接扣大分）");
                    examAutoEvaluation.setModelId("7b8ae271253c4932b89091efb8ab2e1f");
                    examAutoEvaluation.setOption("公安处未开展民警季度思想动态分析并形成报告的");
                    examAutoEvaluation.setOptionId("9a1022e92c594f799db7301bfa407e8f");
                    examAutoEvaluation.setScore(String.valueOf(score));
                    examAutoEvaluation.setEvaluationId("94ccb0bdb21441f997c72268b4d882db");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"宣教思想分析");
                    this.summaryStandard(examAutoEvaluation,score,"柳州公安处" + lastYear + "年" + jd + "季度" + "未开展民警季度思想动态分析并形成报告的，每次扣党建工作0.6分");
                    this.save(examAutoEvaluation);
                }
                if (number < 1 && "156".equals(unitId)) {
                    Double score = 0.6;
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("1");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(lastYear);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails("北海公安处" + lastYear + "年" + jd + "季度" + "未开展民警季度思想动态分析并形成报告的，每次扣党建工作0.6分");
                    examAutoEvaluation.setUnit("北海处政治处宣传教育室（民警训练基地）");
                    examAutoEvaluation.setUnitId("265");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("2020年月度公安局对公安处重点工作扣分标准（直接扣大分）");
                    examAutoEvaluation.setModelId("7b8ae271253c4932b89091efb8ab2e1f");
                    examAutoEvaluation.setOption("公安处未开展民警季度思想动态分析并形成报告的");
                    examAutoEvaluation.setOptionId("9a1022e92c594f799db7301bfa407e8f");
                    examAutoEvaluation.setScore(String.valueOf(score));
                    examAutoEvaluation.setEvaluationId("82f8e9ba1cd7446b99c084d5b4b5c038");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"宣教思想分析");
                    this.summaryStandard(examAutoEvaluation,score,"北海公安处" + lastYear + "年" + jd + "季度" + "未开展民警季度思想动态分析并形成报告的，每次扣党建工作0.6分");
                    this.save(examAutoEvaluation);
                }
            }
        }
        else if (StringUtils.isNotBlank(jd) && ("04".equals(jd) || "07".equals(jd)) || "10".equals(jd)) {
            List<String> unitIdList = new ArrayList<>();
            unitIdList.add("34");
            unitIdList.add("95");
            unitIdList.add("156");

            for (int u = 0; u < unitIdList.size(); u++) {
                String unitId = unitIdList.get(u);
                Integer number = affairPoliceThoughtAnalysisService.selectNumber(yearL, yearT, unitId);
                if (number < 1 && "34".equals(unitId)) {
                    Double score = 0.6;
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("1");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails("南宁公安处" + year + "年" + jd + "季度" + "未开展民警季度思想动态分析并形成报告的，每次扣党建工作0.6分");
                    examAutoEvaluation.setUnit("南宁处政治处宣传教育室（民警训练基地）");
                    examAutoEvaluation.setUnitId("29");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("2020年月度公安局对公安处重点工作扣分标准（直接扣大分）");
                    examAutoEvaluation.setModelId("7b8ae271253c4932b89091efb8ab2e1f");
                    examAutoEvaluation.setOption("公安处未开展民警季度思想动态分析并形成报告的");
                    examAutoEvaluation.setOptionId("9a1022e92c594f799db7301bfa407e8f");
                    examAutoEvaluation.setScore(String.valueOf(score));
                    examAutoEvaluation.setEvaluationId("a4e40825e3b34c37895ee2ed168f24a0");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"宣教思想分析");
                    this.summaryStandard(examAutoEvaluation,score,"南宁公安处" + year + "年" + jd + "季度" + "未开展民警季度思想动态分析并形成报告的，每次扣党建工作0.6分");
                    this.save(examAutoEvaluation);
                }
                if (number < 1 && "95".equals(unitId)) {
                    Double score = 0.6;
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("1");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails("柳州公安处" + year + "年" + jd + "季度" + "未开展民警季度思想动态分析并形成报告的，每次扣党建工作0.6分");
                    examAutoEvaluation.setUnit("柳州处政治处宣传教育室（民警训练基地）");
                    examAutoEvaluation.setUnitId("144");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("2020年月度公安局对公安处重点工作扣分标准（直接扣大分）");
                    examAutoEvaluation.setModelId("7b8ae271253c4932b89091efb8ab2e1f");
                    examAutoEvaluation.setOption("公安处未开展民警季度思想动态分析并形成报告的");
                    examAutoEvaluation.setOptionId("9a1022e92c594f799db7301bfa407e8f");
                    examAutoEvaluation.setScore(String.valueOf(score));
                    examAutoEvaluation.setEvaluationId("94ccb0bdb21441f997c72268b4d882db");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"宣教思想分析");
                    this.summaryStandard(examAutoEvaluation,score,"柳州公安处" + year + "年" + jd + "季度" + "未开展民警季度思想动态分析并形成报告的，每次扣党建工作0.6分");
                    this.save(examAutoEvaluation);
                }
                if (number < 1 && "156".equals(unitId)) {
                    Double score = 0.6;
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("1");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails("北海公安处" + year + "年" + jd + "季度" + "未开展民警季度思想动态分析并形成报告的，每次扣党建工作0.6分");
                    examAutoEvaluation.setUnit("北海处政治处宣传教育室（民警训练基地）");
                    examAutoEvaluation.setUnitId("265");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("2020年月度公安局对公安处重点工作扣分标准（直接扣大分）");
                    examAutoEvaluation.setModelId("7b8ae271253c4932b89091efb8ab2e1f");
                    examAutoEvaluation.setOption("公安处未开展民警季度思想动态分析并形成报告的");
                    examAutoEvaluation.setOptionId("9a1022e92c594f799db7301bfa407e8f");
                    examAutoEvaluation.setScore(String.valueOf(score));
                    examAutoEvaluation.setEvaluationId("82f8e9ba1cd7446b99c084d5b4b5c038");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"宣教思想分析");
                    this.summaryStandard(examAutoEvaluation,score,"北海公安处" + year + "年" + jd + "季度" + "未开展民警季度思想动态分析并形成报告的，每次扣党建工作0.6分");
                    this.save(examAutoEvaluation);
                }
            }
        }
    }

    /*
     * 宣传思想-经常性思想工作-思想分析
     *
     * 局考处
     *
     * 年度
     *
     * */
    public void jkcXcsxfxYear(String year) {

        Integer numSum = 0;

        Integer y = Integer.valueOf(year);
        Integer lastYear = y - 1;
        Map<String, String> timeMap = this.yearTime(year);
        String yearL = timeMap.get("yearL");
        String yearT = timeMap.get("yearT");

        List<String> unitIdList = new ArrayList<>();
        unitIdList.add("34");
        unitIdList.add("95");
        unitIdList.add("156");
        for (int u = 0; u < unitIdList.size(); u++) {
            String unitId = unitIdList.get(u);
            Integer number = affairPoliceThoughtAnalysisService.selectNumber(yearL, yearT, unitId);
            if(number==null){
                number = 0;
            }
            if (number < 4 && "34".equals(unitId)){
                Double score = (4-number) * 0.3;
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("1");
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setDetails("南宁公安处" + year + "年" + "未开展民警季度思想动态分析并形成报告的，每次扣党建工作0.3分");
                examAutoEvaluation.setUnit("南宁处政治处宣传教育室（民警训练基地）");
                examAutoEvaluation.setUnitId("29");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考核扣分标准(业务部分26项)");
                examAutoEvaluation.setModelId("a959d8865ea74bf68cf818adc710c75c");
                examAutoEvaluation.setOption("不按时向公安局上报季度队伍思想分析报告（最后一个月20日前上报），不真实反映民警队伍中存在的问题(既有定性分析，又有定量分析，既有情况介绍，又有对策研究。要求以党委文件形式上报)，每少一次的");
                examAutoEvaluation.setOptionId("5036a6f6ef5a43838578df7e1f318c66");
                examAutoEvaluation.setScore(String.valueOf(score));
                examAutoEvaluation.setEvaluationId("a4e40825e3b34c37895ee2ed168f24a0");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"宣教思想分析");
                this.summaryStandard(examAutoEvaluation,score,"南宁公安处" + year + "年" + "未开展民警季度思想动态分析并形成报告的，每次扣党建工作0.3分");
                this.save(examAutoEvaluation);
            }
            if (number < 4 && "95".equals(unitId)){
                Double score = (4-number) * 0.3;
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("1");
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setDetails("柳州公安处" + year + "年" + "未开展民警季度思想动态分析并形成报告的，每次扣党建工作0.3分");
                examAutoEvaluation.setUnit("柳州处政治处宣传教育室（民警训练基地）");
                examAutoEvaluation.setUnitId("29");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考核扣分标准(业务部分26项)");
                examAutoEvaluation.setModelId("a959d8865ea74bf68cf818adc710c75c");
                examAutoEvaluation.setOption("不按时向公安局上报季度队伍思想分析报告（最后一个月20日前上报），不真实反映民警队伍中存在的问题(既有定性分析，又有定量分析，既有情况介绍，又有对策研究。要求以党委文件形式上报)，每少一次的");
                examAutoEvaluation.setOptionId("5036a6f6ef5a43838578df7e1f318c66");
                examAutoEvaluation.setScore(String.valueOf(score));
                examAutoEvaluation.setEvaluationId("a4e40825e3b34c37895ee2ed168f24a0");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"宣教思想分析");
                this.summaryStandard(examAutoEvaluation,score,"柳州公安处" + year + "年" + "未开展民警季度思想动态分析并形成报告的，每次扣党建工作0.3分");
                this.save(examAutoEvaluation);
            }
            if (number < 4 && "156".equals(unitId)){
                Double score = (4-number) * 0.3;
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("1");
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setDetails("南宁公安处" + year + "年" + "未开展民警季度思想动态分析并形成报告的，每次扣党建工作0.3分");
                examAutoEvaluation.setUnit("南宁处政治处宣传教育室（民警训练基地）");
                examAutoEvaluation.setUnitId("29");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考核扣分标准(业务部分26项)");
                examAutoEvaluation.setModelId("a959d8865ea74bf68cf818adc710c75c");
                examAutoEvaluation.setOption("不按时向公安局上报季度队伍思想分析报告（最后一个月20日前上报），不真实反映民警队伍中存在的问题(既有定性分析，又有定量分析，既有情况介绍，又有对策研究。要求以党委文件形式上报)，每少一次的");
                examAutoEvaluation.setOptionId("5036a6f6ef5a43838578df7e1f318c66");
                examAutoEvaluation.setScore(String.valueOf(score));
                examAutoEvaluation.setEvaluationId("a4e40825e3b34c37895ee2ed168f24a0");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"宣教思想分析");
                this.summaryStandard(examAutoEvaluation,score,"北海公安处" + year + "年" + "未开展民警季度思想动态分析并形成报告的，每次扣党建工作0.3分");
                this.save(examAutoEvaluation);
            }
        }
    }

    /*
     * 宣传思想-经常性思想工作-思想分析
     *
     * 处考处机关
     *
     * 月度
     *
     * */
    public void ckcXcsxfx(String checkTime) {

        String year = checkTime.substring(0, 4);
        Integer y = Integer.valueOf(year);
        String month = checkTime.substring(checkTime.length() - 2);
        Integer m = Integer.valueOf(month);
        Integer lastMonth = m - 1;
        Integer lastYear = y - 1;

        Map<String, String> timeMap = this.monthTime(checkTime);
        String yearL = timeMap.get("yearL");
        String yearT = timeMap.get("yearT");

        List<Office> nncPartyList = officeDao.getChuUnit("34", "1");
        List<Office> lzcPartyList = officeDao.getChuUnit("95", "1");
        List<Office> bhcPartyList = officeDao.getChuUnit("156", "1");

        for (int o = 0; o < nncPartyList.size(); o++) {
            Office office = nncPartyList.get(o);

            //公安处名称
            String name = office.getName();

            //公安处id
            String unitId = office.getId();

            Integer number = affairPoliceThoughtAnalysisService.selectNumber(yearL,yearT, unitId);

            if (number < 1) {
                Double score = 0.6;
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("4");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setDetails(name + year + "年" + month + "月" + "未开展民警季度思想动态分析并形成报告的，每次扣党建工作0.6分");
                examAutoEvaluation.setUnit(name);
                examAutoEvaluation.setUnitId(unitId);
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("2020年月度公安局对公安处公共扣分标准");
                examAutoEvaluation.setModelId("91f2f146a8b9417ea2f04b42ee80e2aa");
                examAutoEvaluation.setOption("各平台数据未及时录入的");
                examAutoEvaluation.setOptionId("12caa2cc2eb5457baa819a6adedc5112");
                examAutoEvaluation.setScore(String.valueOf(score));
                examAutoEvaluation.setEvaluationId(userDao.selectUserId(office.getCode()));

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","宣教思想分析");
                this.save(examAutoEvaluation);
            }
        }
        for (int o = 0; o < lzcPartyList.size(); o++) {
            Office office = lzcPartyList.get(o);

            //公安处名称
            String name = office.getName();

            //公安处id
            String unitId = office.getId();

            Integer number = affairPoliceThoughtAnalysisService.selectNumber(yearL,yearT, unitId);

            if (number < 1) {
                Double score = 0.6;
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("4");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setDetails(name + year + "年" + month + "月" + "未开展民警季度思想动态分析并形成报告的，每次扣党建工作0.6分");
                examAutoEvaluation.setUnit(name);
                examAutoEvaluation.setUnitId(unitId);
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("2020年月度公安局对公安处公共扣分标准");
                examAutoEvaluation.setModelId("91f2f146a8b9417ea2f04b42ee80e2aa");
                examAutoEvaluation.setOption("各平台数据未及时录入的");
                examAutoEvaluation.setOptionId("12caa2cc2eb5457baa819a6adedc5112");
                examAutoEvaluation.setScore(String.valueOf(score));
                examAutoEvaluation.setEvaluationId(userDao.selectUserId(office.getCode()));

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","宣教思想分析");
                this.save(examAutoEvaluation);
            }
        }
        for (int o = 0; o < bhcPartyList.size(); o++) {
            Office office = bhcPartyList.get(o);

            //公安处名称
            String name = office.getName();

            //公安处id
            String unitId = office.getId();

            Integer number = affairPoliceThoughtAnalysisService.selectNumber(yearL,yearT, unitId);

            if (number < 1) {
                Double score = 0.6;
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("4");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setDetails(name + year + "年" + month + "月" + "未开展民警季度思想动态分析并形成报告的，每次扣党建工作0.6分");
                examAutoEvaluation.setUnit(name);
                examAutoEvaluation.setUnitId(unitId);
                examAutoEvaluation.setEvaluationId(userDao.selectUserId(office.getCode()));
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("2020年月度公安局对公安处公共扣分标准");
                examAutoEvaluation.setModelId("91f2f146a8b9417ea2f04b42ee80e2aa");
                examAutoEvaluation.setOption("各平台数据未及时录入的");
                examAutoEvaluation.setOptionId("12caa2cc2eb5457baa819a6adedc5112");
                examAutoEvaluation.setScore(String.valueOf(score));

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","宣教思想分析");
                this.save(examAutoEvaluation);
            }
        }
    }

    /*
     * 宣传思想-经常性思想工作-思想分析
     *
     * 处考处机关
     *
     * 年度
     *
     * */
    public void ckcXcsxfxYear(String year) {

        Integer y = Integer.valueOf(year);
        Integer lastYear = y - 1;
        Map<String, String> timeMap = this.yearTime(year);
        String yearL = timeMap.get("yearL");
        String yearT = timeMap.get("yearT");

        List<Office> nncPartyList = officeDao.getChuUnit("34", "1");
        List<Office> lzcPartyList = officeDao.getChuUnit("95", "1");
        List<Office> bhcPartyList = officeDao.getChuUnit("156", "1");

        for (int o = 0; o < nncPartyList.size(); o++) {
            Office office = nncPartyList.get(o);

            //公安处名称
            String name = office.getName();

            //公安处id
            String unitId = office.getId();

            Integer number = affairPoliceThoughtAnalysisService.selectNumber(yearL,yearT, unitId);

            if (number < 12) {
                int i = 12 - number;
                Double score = i *0.6;
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("4");
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setDetails(name + year + "年" + "未开展民警季度思想动态分析并形成报告的，每次扣党建工作0.6分");
                examAutoEvaluation.setUnit(name);
                examAutoEvaluation.setUnitId(unitId);
                examAutoEvaluation.setEvaluationId(userDao.selectUserId(office.getCode()));
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("2020年年度南宁处对团委绩效考核扣分标准");
                examAutoEvaluation.setModelId("8c1965175aa54116ad2929ed533bb6e4");
                examAutoEvaluation.setOption("每半年不完成青年民警思想分析的");
                examAutoEvaluation.setOptionId("98af21b5223f4c73811e0e4f58196ab6");
                examAutoEvaluation.setScore(String.valueOf(score));

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","宣教思想分析");
                this.save(examAutoEvaluation);
            }
        }
        for (int o = 0; o < lzcPartyList.size(); o++) {
            Office office = lzcPartyList.get(o);

            //公安处名称
            String name = office.getName();

            //公安处id
            String unitId = office.getId();

            Integer number = affairPoliceThoughtAnalysisService.selectNumber(yearL,yearT, unitId);

            if (number < 12) {
                int i = 12 - number;
                Double score = i * 0.6;
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("4");
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setDetails(name + year + "年" + "未开展民警季度思想动态分析并形成报告的，每次扣党建工作0.6分");

                examAutoEvaluation.setUnit(name);
                examAutoEvaluation.setUnitId(unitId);
                examAutoEvaluation.setEvaluationId(userDao.selectUserId(office.getCode()));
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("柳州处对宣教室年度绩效考核评分标准(业务部分)");
                examAutoEvaluation.setModelId("990eb605e67a418686daa891abb1db45");
                examAutoEvaluation.setOption("不按时向公安局上报季度队伍思想分析报告（最后一个月20日前上报），不真实反映民警队伍中存在的问题(既有定性分析，又有定量分析，既有情况介绍，又有对策研究，要求以党委文件形式上报)，每少一次的");
                examAutoEvaluation.setOptionId("c2c5eb2e887c4ccfb223c242b41431a4");
                examAutoEvaluation.setScore(String.valueOf(score));

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","宣教思想分析");
                this.save(examAutoEvaluation);
            }
        }
        for (int o = 0; o < bhcPartyList.size(); o++) {
            Office office = bhcPartyList.get(o);

            //公安处名称
            String name = office.getName();

            //公安处id
            String unitId = office.getId();

            Integer number = affairPoliceThoughtAnalysisService.selectNumber(yearL,yearT, unitId);

            if (number < 12) {
                int i = 12 - number;
                Double score = i * 0.6;
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("4");
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setDetails(name + year + "年" + "未开展民警季度思想动态分析并形成报告的，每次扣党建工作0.6分");
                examAutoEvaluation.setUnit(name);
                examAutoEvaluation.setUnitId(unitId);
                examAutoEvaluation.setEvaluationId(userDao.selectUserId(office.getCode()));
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("2020年年度北海处对机关科室绩效考核扣分标准(业务部分)");
                examAutoEvaluation.setModelId("01bcee76bf194541b89220959b83b09a");
                examAutoEvaluation.setOption("每半年不完成青年民警思想分析的");
                examAutoEvaluation.setOptionId("3d766d8bbba3495cb4e37550f42b26a9");
                examAutoEvaluation.setScore(String.valueOf(score));

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","宣教思想分析");
                this.save(examAutoEvaluation);
            }
        }
    }

    /*
     * 宣传思想-经常性思想工作-思想分析
     *
     * 处考派出所
     *
     * 月度
     *
     * */
    public void ckpcsXcsxfx(String checkTime) {

        String year = checkTime.substring(0, 4);
        Integer y = Integer.valueOf(year);

        Map<String, String> timeMap = this.jdTime(checkTime);
        String yearL = timeMap.get("yearL");
        String yearT = timeMap.get("yearT");
        String jd = timeMap.get("jd");

        List<Office> nncPartyList = officeDao.getChuUnit("34", "2");
        List<Office> lzcPartyList = officeDao.getChuUnit("95", "2");
        List<Office> bhcPartyList = officeDao.getChuUnit("156", "2");

        for (int o = 0; o < nncPartyList.size(); o++) {
            Office office = nncPartyList.get(o);

            //公安处名称
            String name = office.getName();

            //公安处id
            String unitId = office.getId();

            Integer number = affairPoliceThoughtAnalysisService.selectNumber(yearL,yearT, unitId);

            if (number < 1) {
                Double score = 0.6;
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("3");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setDetails(name + year + "年" + jd + "季度" + "未开展民警季度思想动态分析并形成报告的，每次扣党建工作0.6分");

                examAutoEvaluation.setUnit(name);
                examAutoEvaluation.setUnitId(unitId);
                examAutoEvaluation.setEvaluationId(userDao.selectUserId(office.getCode()));
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("南宁公安处月度对派出所2020年度绩效考核评分标准（队伍建设）");
                examAutoEvaluation.setModelId("ddc6d6dd210e4f428b3a5361f27389fa");
                examAutoEvaluation.setOption("每季度未按要求上报青年民警思想状况分析的");
                examAutoEvaluation.setOptionId("4ac01ca5e75b41d4a14f35152ed13666");
                examAutoEvaluation.setScore(String.valueOf(score));

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","宣教思想分析");
                this.save(examAutoEvaluation);
            }
        }
        for (int o = 0; o < lzcPartyList.size(); o++) {
            Office office = lzcPartyList.get(o);

            //公安处名称
            String name = office.getName();

            //公安处id
            String unitId = office.getId();

            Integer number = affairPoliceThoughtAnalysisService.selectNumber(yearL,yearT, unitId);

            if (number < 1) {
                Double score = 0.6;
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("3");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setDetails(name + year + "年" + jd + "季度" + "未开展民警季度思想动态分析并形成报告的，每次扣党建工作0.6分");
                examAutoEvaluation.setUnit(name);
                examAutoEvaluation.setUnitId(unitId);
                examAutoEvaluation.setEvaluationId(userDao.selectUserId(office.getCode()));
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("柳州处对派出所2020年月度队伍建设绩效考核扣分标准");
                examAutoEvaluation.setModelId("f38535fc63a2418b8ed37c2e18f75ad6");
                examAutoEvaluation.setOption("未完成季度民警队伍思想分析报告或报告质量不高、应付了事的");
                examAutoEvaluation.setOptionId("576b42e4cf2f4463a4d21fb42b52db12");
                examAutoEvaluation.setScore(String.valueOf(score));

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","宣教思想分析");
                this.save(examAutoEvaluation);
            }
        }
        for (int o = 0; o < bhcPartyList.size(); o++) {
            Office office = bhcPartyList.get(o);

            //公安处名称
            String name = office.getName();

            //公安处id
            String unitId = office.getId();

            Integer number = affairPoliceThoughtAnalysisService.selectNumber(yearL,yearT, unitId);

            if (number < 1) {
                Double score = 0.6;
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("3");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setDetails(name + year + "年" + jd + "季度" + "未开展民警季度思想动态分析并形成报告的，每次扣党建工作0.6分");
                examAutoEvaluation.setUnit(name);
                examAutoEvaluation.setUnitId(unitId);
                examAutoEvaluation.setEvaluationId(userDao.selectUserId(office.getCode()));
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队扣分标准（队伍建设部分）");
                examAutoEvaluation.setModelId("82aa3bc55a7d42c79f8e2d50ad8b0927");
                examAutoEvaluation.setOption("未按要求上报青年民警思想情况分析的");
                examAutoEvaluation.setOptionId("105a8bb5668e4fc79e7ad9d3bd9f42e8");
                examAutoEvaluation.setScore(String.valueOf(score));

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","宣教思想分析");
                this.save(examAutoEvaluation);
            }
        }
    }

    /*
     * 宣传思想-经常性思想工作-思想分析
     *
     * 处考处机关
     *
     * 月度
     *
     * */
    public void ckpcsXcsxfxYear(String year) {

        Integer y = Integer.valueOf(year);
        Integer lastYear = y - 1;

        Map<String, String> timeMap = this.yearTime(year);
        String yearL = timeMap.get("yearL");
        String yearT = timeMap.get("yearT");

        List<Office> nncPartyList = officeDao.getChuUnit("34", "2");
        List<Office> lzcPartyList = officeDao.getChuUnit("95", "2");
        List<Office> bhcPartyList = officeDao.getChuUnit("156", "2");

        for (int o = 0; o < nncPartyList.size(); o++) {
            Office office = nncPartyList.get(o);

            //公安处名称
            String name = office.getName();

            //公安处id
            String unitId = office.getId();

            Integer number = affairPoliceThoughtAnalysisService.selectNumber(yearL,yearT, unitId);

            if (number < 12) {
                int i = 12 - number;
                Double score = i * 0.3;
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("3");
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setDetails(name + year + "年" + "未开展民警季度思想动态分析并形成报告的，每次扣党建工作0.6分");
                examAutoEvaluation.setUnit(name);
                examAutoEvaluation.setUnitId(unitId);
                examAutoEvaluation.setEvaluationId(userDao.selectUserId(office.getCode()));
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("2020年年度南宁处对派出所绩效考核扣分标准(队伍建设)");
                examAutoEvaluation.setModelId("f43cb06efe6b42acb625d2cef27bad1e");
                examAutoEvaluation.setOption("每季度未按要求上报青年民警思想状况分析的");
                examAutoEvaluation.setOptionId("243697158322456fb53af754f536a7c9");
                examAutoEvaluation.setScore(String.valueOf(score));
                examAutoEvaluation.setEvaluationId("4");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","宣教思想分析");
                this.save(examAutoEvaluation);
            }
        }
        for (int o = 0; o < lzcPartyList.size(); o++) {
            Office office = lzcPartyList.get(o);

            //公安处名称
            String name = office.getName();

            //公安处id
            String unitId = office.getId();

            Integer number = affairPoliceThoughtAnalysisService.selectNumber(yearL,yearT, unitId);

            if (number < 12) {
                int i = 12 - number;
                Double score = i * 0.3;
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("3");
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setDetails(name + year + "年" + "未开展民警季度思想动态分析并形成报告的，每次扣党建工作0.6分");
                examAutoEvaluation.setUnit(name);
                examAutoEvaluation.setUnitId(unitId);
                examAutoEvaluation.setEvaluationId(userDao.selectUserId(office.getCode()));
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("柳州处对派出所2020年年度队伍建设绩效考核扣分标准");
                examAutoEvaluation.setModelId("1ccfeca0f49543d49f8833feb21735e3");
                examAutoEvaluation.setOption("每半年未按要求上报青年民警思想情况分析的");
                examAutoEvaluation.setOptionId("3b7f8b8284444b63b0af685ead14f857");
                examAutoEvaluation.setScore(String.valueOf(score));

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","宣教思想分析");
                this.save(examAutoEvaluation);
            }
        }
        for (int o = 0; o < bhcPartyList.size(); o++) {
            Office office = bhcPartyList.get(o);

            //公安处名称
            String name = office.getName();

            //公安处id
            String unitId = office.getId();

            Integer number = affairPoliceThoughtAnalysisService.selectNumber(yearL,yearT, unitId);

            if (number < 12) {
                int i = 12 - number;
                Double score = i * 0.3;
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("3");
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setDetails(name + year + "年" + "未开展民警季度思想动态分析并形成报告的，每次扣党建工作0.6分");
                examAutoEvaluation.setUnit(name);
                examAutoEvaluation.setUnitId(unitId);
                examAutoEvaluation.setEvaluationId(userDao.selectUserId(office.getCode()));
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("2020年年度北海处对派出所重点工作考核扣分标准（直接扣大分）");
                examAutoEvaluation.setModelId("91f2f146a8b9417ea2f04b42ee80e2aa");
                examAutoEvaluation.setOption("单位未开展民警季度思想动态分析并形成报告的");
                examAutoEvaluation.setOptionId("91aa4e175a04417c9d6114980dc8e3aa");
                examAutoEvaluation.setScore(String.valueOf(score));

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","宣教思想分析");
                this.save(examAutoEvaluation);
            }
        }
    }

    /*
     *宣传思想-警营文化-读书活动-活动情况
     *
     * 局考处
     *
     * 月度
     * */
    public void jkcDshd(String checkTime) {

        String year = checkTime.substring(0, 4);
        Integer y = Integer.valueOf(year);
        String month = checkTime.substring(checkTime.length() - 2);
        Integer m = Integer.valueOf(month);
        Integer lastMonth = m - 1;
        Integer lastYear = y - 1;

        Map<String, String> timeMap = this.monthTime(checkTime);
        String yearL = timeMap.get("yearL");
        String yearT = timeMap.get("yearT");

        List<String> unitIdList = new ArrayList<>();
        unitIdList.add("34");
        unitIdList.add("95");
        unitIdList.add("156");

        for (int o = 0; o < unitIdList.size(); o++) {
            String unitId = unitIdList.get(o);

            Integer number = affairActiveService.selectNumber(yearL, yearT, unitId);

            if (number < 1 && "34".equals(unitId)) {
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("1");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setDetails("南宁公安处" + year + "年" + "业务扣分：未按要求组织开展读书交流活动的，每缺1项次扣1分");
                examAutoEvaluation.setUnit("南宁处政治处宣传教育室（民警训练基地）");
                examAutoEvaluation.setUnitId("29");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("2020年月度公安局对公安处公共扣分标准");
                examAutoEvaluation.setModelId("91f2f146a8b9417ea2f04b42ee80e2aa");
                examAutoEvaluation.setOption("各平台数据未及时录入的");
                examAutoEvaluation.setOptionId("12caa2cc2eb5457baa819a6adedc5112");
                examAutoEvaluation.setScore("1");
                examAutoEvaluation.setEvaluationId("a4e40825e3b34c37895ee2ed168f24a0");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"活动情况");
                this.save(examAutoEvaluation);
            }
            if (number < 1 && "95".equals(unitId)) {
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("1");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setDetails("柳州公安处" + year + "年" + "业务扣分：未按要求组织开展读书交流活动的，每缺1项次扣1分");
                examAutoEvaluation.setUnit("柳州处政治处宣传教育室（民警训练基地）");
                examAutoEvaluation.setUnitId("95");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("2020年月度公安局对公安处公共扣分标准");
                examAutoEvaluation.setModelId("91f2f146a8b9417ea2f04b42ee80e2aa");
                examAutoEvaluation.setOption("各平台数据未及时录入的");
                examAutoEvaluation.setOptionId("12caa2cc2eb5457baa819a6adedc5112");
                examAutoEvaluation.setScore("1");
                examAutoEvaluation.setEvaluationId("94ccb0bdb21441f997c72268b4d882db");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"活动情况");
                this.save(examAutoEvaluation);
            }
            if (number < 1 && "156".equals(unitId)) {
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("1");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setDetails("北海公安处" + year + "年" + "业务扣分：未按要求组织开展读书交流活动的，每缺1项次扣1分");
                examAutoEvaluation.setUnit("北海处政治处宣传教育室（民警训练基地）");
                examAutoEvaluation.setUnitId("265");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("2020年月度公安局对公安处公共扣分标准");
                examAutoEvaluation.setModelId("91f2f146a8b9417ea2f04b42ee80e2aa");
                examAutoEvaluation.setOption("各平台数据未及时录入的");
                examAutoEvaluation.setOptionId("12caa2cc2eb5457baa819a6adedc5112");
                examAutoEvaluation.setScore("1");
                examAutoEvaluation.setEvaluationId("82f8e9ba1cd7446b99c084d5b4b5c038");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"活动情况");
                this.save(examAutoEvaluation);
            }
        }
    }
    /*
     * 宣传思想-警营文化-读书活动-活动情况
     *
     * 局考处
     *
     * 年度
     *
     * */
    public void jkcDshdYear(String year) {
        List<String> unitIdList = new ArrayList<>();
        unitIdList.add("34");
        unitIdList.add("95");
        unitIdList.add("156");

        Integer y = Integer.valueOf(year);
        Integer yl = y - 1;

        Map<String, String> timeMap = this.yearTime(year);
        String yearL = timeMap.get("yearL");
        String yearT = timeMap.get("yearT");

        for (int o = 0; o < unitIdList.size(); o++) {
            String unitId = unitIdList.get(o);
            Integer num = affairActiveService.selectNumber(yearL,yearT,unitId);

            if (num < 12 && "34".equals(unitId)) {
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("1");
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setDetails("南宁公安处" + year + "年" + "未按要求组织开展读书交流活动的，每缺1项次扣0.5分；读书任务未完成，被通报的，每次扣0.5分");
                examAutoEvaluation.setUnit("南宁处政治处宣传教育室（民警训练基地）");
                examAutoEvaluation.setUnitId("29");
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("2020年年度公安局对公安处考评公共扣分标准");
                examAutoEvaluation.setModelId("bb3eea8554314e04b170f26f2694574e");
                examAutoEvaluation.setOption("各平台数据未及时录入的");
                examAutoEvaluation.setOptionId("d44aa5dfde9c4418ad00c086e1084b69");
                examAutoEvaluation.setScore("0.5");
                examAutoEvaluation.setEvaluationId("a4e40825e3b34c37895ee2ed168f24a0");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"活动情况");
                this.save(examAutoEvaluation);
            }
            if (num < 12 && "95".equals(unitId)) {
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("1");
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setDetails("柳州公安处" + year + "年" + "未按要求组织开展读书交流活动的，每缺1项次扣0.5分；读书任务未完成，被通报的，每次扣0.5分");
                examAutoEvaluation.setUnit("柳州处政治处宣传教育室（民警训练基地）");
                examAutoEvaluation.setUnitId("144");
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("2020年年度公安局对公安处考评公共扣分标准");
                examAutoEvaluation.setModelId("bb3eea8554314e04b170f26f2694574e");
                examAutoEvaluation.setOption("各平台数据未及时录入的");
                examAutoEvaluation.setOptionId("d44aa5dfde9c4418ad00c086e1084b69");
                examAutoEvaluation.setScore("0.5");
                examAutoEvaluation.setEvaluationId("94ccb0bdb21441f997c72268b4d882db");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"活动情况");
                this.save(examAutoEvaluation);
            }
            if (num < 12 && "156".equals(unitId)) {
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("1");
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setDetails("北海公安处" + year + "年" + "未按要求组织开展读书交流活动的，每缺1项次扣0.5分；读书任务未完成，被通报的，每次扣0.5分");
                examAutoEvaluation.setUnit("北海处政治处宣传教育室（民警训练基地）");
                examAutoEvaluation.setUnitId("265");
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("2020年年度公安局对公安处考评公共扣分标准");
                examAutoEvaluation.setModelId("bb3eea8554314e04b170f26f2694574e");
                examAutoEvaluation.setOption("各平台数据未及时录入的");
                examAutoEvaluation.setOptionId("d44aa5dfde9c4418ad00c086e1084b69");
                examAutoEvaluation.setScore("0.5");
                examAutoEvaluation.setEvaluationId("82f8e9ba1cd7446b99c084d5b4b5c038");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"活动情况");
                this.save(examAutoEvaluation);
            }
        }
    }
    /*
     * 团内民主（组织）生活会每年一次，未按时完成扣分
     *
     * 局考处
     *
     * 年度
     * */
    public void jkcTnmzYear(String year) {

        Integer y = Integer.valueOf(year);
        Integer lastYear = y - 1;

        Map<String, String> timeMap = this.yearTime(year);
        String yearL = timeMap.get("yearL");
        String yearT = timeMap.get("yearT");

        //民主生活会
        String tnzzshh = "4";

        List<AffairTwBase> nncPartyList = affairTwBaseService.selectBeanTwById("34");
        List<AffairTwBase> lzcPartyList = affairTwBaseService.selectBeanTwById("95");
        List<AffairTwBase> bhcPartyList = affairTwBaseService.selectBeanTwById("156");

        Integer nncnumSum = 0;
        Integer lzcnumSum = 0;
        Integer bhcnumSum = 0;
        StringBuilder nncdetails = new StringBuilder();
        StringBuilder lzcdetails = new StringBuilder();
        StringBuilder bhcdetails = new StringBuilder();

        for (int t = 0; t < nncPartyList.size(); t++) {
            AffairTwBase affairTwBase = nncPartyList.get(t);
            String twid = affairTwBase.getId();
            String name = affairTwBase.getName();
            Integer number = affairThreeOneService.selectNumber(yearL,yearT, name, tnzzshh);

            if (number < 1) {
                nncnumSum++;
                nncdetails.append(",").append(name);

            }
        }
        if (nncnumSum > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("2");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setDetails(nncdetails + year + "年" + "团内民主（组织）生活会每年一次，未按时完成扣分");
            examAutoEvaluation.setUnit("公安局团委");
            examAutoEvaluation.setUnitId("9");
            examAutoEvaluation.setAssess("");
            examAutoEvaluation.setFromSys("智慧政工");
            examAutoEvaluation.setAssessId("");
            examAutoEvaluation.setModel("2020年年度公安局对公安处考评公共扣分标准");
            examAutoEvaluation.setModelId("bb3eea8554314e04b170f26f2694574e");
            examAutoEvaluation.setOption("各平台数据未及时录入的");
            examAutoEvaluation.setOptionId("d44aa5dfde9c4418ad00c086e1084b69");
            examAutoEvaluation.setScore(String.valueOf(nncnumSum * 3));
            examAutoEvaluation.setEvaluationId("9");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","团内民主生活会");
            this.save(examAutoEvaluation);
        }
        for (int t = 0; t < lzcPartyList.size(); t++) {
            AffairTwBase affairTwBase = lzcPartyList.get(t);
            String twid = affairTwBase.getId();
            String name = affairTwBase.getName();
            Integer number = affairThreeOneService.selectNumber(yearL,yearT, name, tnzzshh);

            if (number < 1) {
                lzcnumSum++;
                lzcdetails.append(",").append(name);

            }
        }
        if (lzcnumSum > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("2");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setDetails(lzcdetails + year + "年" + "团内民主（组织）生活会每年一次，未按时完成扣分");
            examAutoEvaluation.setUnit("公安局团委");
            examAutoEvaluation.setUnitId("9");
            examAutoEvaluation.setAssess("");
            examAutoEvaluation.setFromSys("智慧政工");
            examAutoEvaluation.setAssessId("");
            examAutoEvaluation.setModel("2020年年度公安局对公安处考评公共扣分标准");
            examAutoEvaluation.setModelId("bb3eea8554314e04b170f26f2694574e");
            examAutoEvaluation.setOption("各平台数据未及时录入的");
            examAutoEvaluation.setOptionId("d44aa5dfde9c4418ad00c086e1084b69");
            examAutoEvaluation.setScore(String.valueOf(lzcnumSum * 3));
            examAutoEvaluation.setEvaluationId("9");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","团内民主生活会");
            this.save(examAutoEvaluation);
        }
        for (int t = 0; t < bhcPartyList.size(); t++) {
            AffairTwBase affairTwBase = bhcPartyList.get(t);
            String twid = affairTwBase.getId();
            String name = affairTwBase.getName();
            Integer number = affairThreeOneService.selectNumber(yearL,yearT, name, tnzzshh);

            if (number < 1) {
                bhcnumSum++;
                bhcdetails.append(",").append(name);

            }
        }
        if (bhcnumSum > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("2");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setDetails(bhcdetails + year + "年" + "团内民主（组织）生活会每年一次，未按时完成扣分");
            examAutoEvaluation.setUnit("公安局团委");
            examAutoEvaluation.setUnitId("9");
            examAutoEvaluation.setAssess("");
            examAutoEvaluation.setFromSys("智慧政工");
            examAutoEvaluation.setAssessId("");
            examAutoEvaluation.setModel("2020年年度公安局对公安处考评公共扣分标准");
            examAutoEvaluation.setModelId("bb3eea8554314e04b170f26f2694574e");
            examAutoEvaluation.setOption("各平台数据未及时录入的");
            examAutoEvaluation.setOptionId("d44aa5dfde9c4418ad00c086e1084b69");
            examAutoEvaluation.setScore(String.valueOf(bhcnumSum * 3));
            examAutoEvaluation.setEvaluationId("9");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","团内民主生活会");
            this.save(examAutoEvaluation);
        }
    }

    /*
     * 团内民主（组织）生活会每年一次，未按时完成扣分
     *
     * 处考派出所
     *
     * 年度
     * */
    public void ckpcsTnmzYear(String year) {

        Integer y = Integer.valueOf(year);
        Integer lastYear = y - 1;

        Map<String, String> timeMap = this.yearTime(year);
        String yearL = timeMap.get("yearL");
        String yearT = timeMap.get("yearT");

        //团内组织生活会
        String tnzzshh = "5";

        List<AffairTwBase> nncPartyList = affairTwBaseService.getChuPartyBranch("34", "2");
        List<AffairTwBase> lzcPartyList = affairTwBaseService.getChuPartyBranch("95", "2");
        List<AffairTwBase> bhcPartyList = affairTwBaseService.getChuPartyBranch("156", "2");

        for (int t = 0; t < nncPartyList.size(); t++) {
            AffairTwBase affairTwBase = nncPartyList.get(t);
            String twid = affairTwBase.getId();
            String name = affairTwBase.getName();
            Integer number = affairThreeOneService.selectNumber(yearL,yearT, name, tnzzshh);

            if (number < 1){
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("1");
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setDetails(name + year + "年" + "团内民主（组织）生活会未按时完成");
                examAutoEvaluation.setUnit(name);
                examAutoEvaluation.setUnitId(twid);
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("2020年年度公安局对公安处考评公共扣分标准");
                examAutoEvaluation.setModelId("bb3eea8554314e04b170f26f2694574e");
                examAutoEvaluation.setOption("各平台数据未及时录入的");
                examAutoEvaluation.setOptionId("d44aa5dfde9c4418ad00c086e1084b69");
                examAutoEvaluation.setScore("3");
                examAutoEvaluation.setEvaluationId(userDao.selectUserId(twid));

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","团内民主生活会");
                this.save(examAutoEvaluation);
            }
        }
        for (int t = 0; t < lzcPartyList.size(); t++) {
            AffairTwBase affairTwBase = lzcPartyList.get(t);
            String twid = affairTwBase.getId();
            String name = affairTwBase.getName();
            Integer number = affairThreeOneService.selectNumber(yearL,yearT, name, tnzzshh);
            if (number < 1){
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("1");
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setDetails(name + year + "年" + "团内民主（组织）生活会未按时完成");
                examAutoEvaluation.setUnit(name);
                examAutoEvaluation.setUnitId(twid);
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("2020年年度公安局对公安处考评公共扣分标准");
                examAutoEvaluation.setModelId("bb3eea8554314e04b170f26f2694574e");
                examAutoEvaluation.setOption("各平台数据未及时录入的");
                examAutoEvaluation.setOptionId("d44aa5dfde9c4418ad00c086e1084b69");
                examAutoEvaluation.setScore("3");
                examAutoEvaluation.setEvaluationId(userDao.selectUserId(twid));

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","团内民主生活会");
                this.save(examAutoEvaluation);
            }
        }
        for (int t = 0; t < bhcPartyList.size(); t++) {
            AffairTwBase affairTwBase = bhcPartyList.get(t);
            String twid = affairTwBase.getId();
            String name = affairTwBase.getName();
            Integer number = affairThreeOneService.selectNumber(yearL,yearT, name, tnzzshh);
            if (number < 1){
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("1");
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setDetails(name + year + "年" + "团内民主（组织）生活会未按时完成");
                examAutoEvaluation.setUnit(name);
                examAutoEvaluation.setUnitId(twid);
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("2020年年度公安局对公安处考评公共扣分标准");
                examAutoEvaluation.setModelId("bb3eea8554314e04b170f26f2694574e");
                examAutoEvaluation.setOption("各平台数据未及时录入的");
                examAutoEvaluation.setOptionId("d44aa5dfde9c4418ad00c086e1084b69");
                examAutoEvaluation.setScore("3");
                examAutoEvaluation.setEvaluationId(userDao.selectUserId(twid));

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","团内民主生活会");
                this.save(examAutoEvaluation);
            }
        }
    }

    /*
     * 上报团内图片信息3条，其中北海处1条
     *
     * 局考处
     *
     * 月度
     * */
    public void jkcTntp(String checkTime) {

        String year = checkTime.substring(0, 4);
        String month = checkTime.substring(checkTime.length() - 2);

/*        List<AffairTwBase> nncPartyList = affairTwBaseService.selectChuTw("34");
        List<AffairTwBase> lzcPartyList = affairTwBaseService.selectChuTw("95");
        List<AffairTwBase> bhcPartyList = affairTwBaseService.selectChuTw("156");*/

        Map<String, String> time = monthTime(checkTime);
        String yearL = time.get("yearL");
        String yearT = time.get("yearT");

        int nncNum = 0;
        StringBuilder nncDetails = new StringBuilder();
        int lzcNum = 0;
        StringBuilder lzcDetails = new StringBuilder();
        int bhcNum = 0;
        StringBuilder bhcDetails = new StringBuilder();
        /*for (int n = 0; n < bhcPartyList.size(); n++ ){
            AffairTwBase affairTwBase = bhcPartyList.get(n);
            String id = affairTwBase.getId();
            String name = affairTwBase.getName();

                int num = affairTnActivityRecordService.selectTpJkcNumber(yearL, yearT, id);
                if (num > 1){
                    bhcNum++;
                }else {
                    bhcDetails.append("北海处团委");
                }
        }*/



        bhcNum = affairTnActivityRecordService.selectJkcNum("156",yearL,yearT);


        if (bhcNum < 1){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setDetails("北海处团委上报团内图片未完成");
            examAutoEvaluation.setUnit("北海处团委");
            examAutoEvaluation.setUnitId("268");
            examAutoEvaluation.setAssess("");
            examAutoEvaluation.setAssessId("");
            examAutoEvaluation.setEvaluationId("78d0e07ed2e14ca0b6c73e14c11f4d55");
            examAutoEvaluation.setModel("2020年月度公安局对公安处扣分标准(业务部分26项)");
            examAutoEvaluation.setModelId("aef99f1b42054342ba71c25634d0f9fc");
            examAutoEvaluation.setOption("上报团内图片信息3条，并被上级团组织采用，其中北海处1条（含下级团支部）");
            examAutoEvaluation.setOptionId("1e80e6c81c6c4951adb6872584f3b8ef");
            examAutoEvaluation.setScore(String.valueOf(2));
            examAutoEvaluation.setFromSys("智慧政工");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"上报团内图片");
            this.save(examAutoEvaluation);
        }
       /* for (int n = 0; n < nncPartyList.size(); n++ ){
            AffairTwBase affairTwBase = nncPartyList.get(n);
            String id = affairTwBase.getId();
            String name = affairTwBase.getName();

            int num = affairTnActivityRecordService.selectTpJkcNumber(yearL, yearT, id);
            if (num > 0){
                nncNum++;
            }else {
                nncDetails.append("南宁处团委");
            }
        }*/

        nncNum = affairTnActivityRecordService.selectJkcNum("34",yearL,yearT);
        if (nncNum < 3) {
            int nu = 3 - nncNum;

            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setDetails("南宁处上报团内图片未完成");
            examAutoEvaluation.setUnit("南宁处团委");
            examAutoEvaluation.setUnitId("33");
            examAutoEvaluation.setAssess("");
            examAutoEvaluation.setAssessId("");
            examAutoEvaluation.setEvaluationId("28f59642a1e74d0588f0d515fe462775");
            examAutoEvaluation.setModel("2020年月度公安局对公安处扣分标准(业务部分26项)");
            examAutoEvaluation.setModelId("aef99f1b42054342ba71c25634d0f9fc");
            examAutoEvaluation.setOption("上报团内图片信息3条，并被上级团组织采用，其中北海处1条（含下级团支部）");
            examAutoEvaluation.setOptionId("1e80e6c81c6c4951adb6872584f3b8ef");
            examAutoEvaluation.setFromSys("智慧政工");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"上报团内图片");
            examAutoEvaluation.setScore(String.valueOf(nu * 2));

            this.save(examAutoEvaluation);
        }
        /*for (int n = 0; n < lzcPartyList.size(); n++ ){
            AffairTwBase affairTwBase = lzcPartyList.get(n);
            String id = affairTwBase.getId();
            String name = affairTwBase.getName();

                int num = affairTnActivityRecordService.selectTpJkcNumber(yearL, yearT, id);
                if (num > 0){
                    lzcNum++;
            }else {
                    lzcDetails.append("柳州处团委");
                }
        }*/


        lzcNum = affairTnActivityRecordService.selectJkcNum("95",yearL,yearT);
        if (lzcNum < 3) {
            int nu = 3 - lzcNum;

            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setDetails("柳州处上报团内图片未完成");
            examAutoEvaluation.setUnit("柳州处团委 ");
            examAutoEvaluation.setUnitId("148");
            examAutoEvaluation.setAssess("");
            examAutoEvaluation.setAssessId("");
            examAutoEvaluation.setEvaluationId("11d94fe57ede47a9bae4bffa36af487c");
            examAutoEvaluation.setModel("2020年月度公安局对公安处扣分标准(业务部分26项)");
            examAutoEvaluation.setModelId("aef99f1b42054342ba71c25634d0f9fc");
            examAutoEvaluation.setOption("上报团内图片信息3条，并被上级团组织采用，其中北海处1条（含下级团支部）");
            examAutoEvaluation.setOptionId("1e80e6c81c6c4951adb6872584f3b8ef");
            examAutoEvaluation.setScore(String.valueOf(nu * 2));
            examAutoEvaluation.setFromSys("智慧政工");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"上报团内图片");
            this.save(examAutoEvaluation);
        }
    }

    /*
     * 上报团内图片信息3条，其中北海处1条
     *
     * 局考处
     *
     * 年度
     * */
    public void jkcTntpYear(String year) {

        /*List<AffairTwBase> nncPartyList = affairTwBaseService.selectChuTw("34");
        List<AffairTwBase> lzcPartyList = affairTwBaseService.selectChuTw("95");
        List<AffairTwBase> bhcPartyList = affairTwBaseService.selectChuTw("156");*/

        Map<String, String> time = yearTime(year);
        String yearL = time.get("yearL");
        String yearT = time.get("yearT");

        int nncNum = 0;//上报条数
        int isPush_nncNum = 0;//被采用条数
        StringBuilder nncDetails = new StringBuilder();
        int lzcNum = 0;//上报条数
        int isPush_lzcNum = 0;//被采用条数
        StringBuilder lzcDetails = new StringBuilder();
        int bhcNum = 0;//上报条数
        int isPush_bhcNum = 0;//被采用条数
        StringBuilder bhcDetails = new StringBuilder();
        /*for (int n = 0; n < bhcPartyList.size(); n++ ){
            AffairTwBase affairTwBase = bhcPartyList.get(n);
            String id = affairTwBase.getId();
            String name = affairTwBase.getName();

            *//*int sbnum = affairTnActivityRecordService.selectTpsbNumber(yearL, yearT, id);*//*
            int cynum = affairTnActivityRecordService.selectTpJkcNumberYear(yearL, yearT, id);
            if (cynum > 0*//* && sbnum > 0*//*){
                bhcNum++;
            }else {
                bhcDetails.append("北海处团委");
            }
        }*/
        bhcNum = affairTnActivityRecordService.selectJkcNumYear("156",yearL,yearT);
        isPush_bhcNum = affairTnActivityRecordService.selectJkcIsPushNumYear("156",yearL,yearT);
        if (bhcNum < 12 || isPush_bhcNum < 10){
            int nu = 10 - isPush_bhcNum;
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("2");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setDetails("北海处团委上报团内图片(上报"+bhcNum+"条),并被上级团组织采用(采用"+isPush_bhcNum+"条)未完成");
            examAutoEvaluation.setUnit("北海处团委");
            examAutoEvaluation.setUnitId("268");
            examAutoEvaluation.setAssess("");
            examAutoEvaluation.setAssessId("");
            examAutoEvaluation.setEvaluationId("78d0e07ed2e14ca0b6c73e14c11f4d55");
            examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考核扣分标准(业务部分26项)");
            examAutoEvaluation.setModelId("a959d8865ea74bf68cf818adc710c75c");
            examAutoEvaluation.setOption("上报团内图片信息36条（北海处12条），并被上级团组织采用24条（北海处10条）");
            examAutoEvaluation.setOptionId("6eb3aa6d490c4670a3c18ad66533fa4e");
            examAutoEvaluation.setScore(String.valueOf(nu));
            examAutoEvaluation.setFromSys("智慧政工");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"上报团内图片");
            this.save(examAutoEvaluation);
        }
        /*for (int n = 0; n < nncPartyList.size(); n++ ){
            AffairTwBase affairTwBase = nncPartyList.get(n);
            String id = affairTwBase.getId();
            String name = affairTwBase.getName();

*//*
            int sbnum = affairTnActivityRecordService.selectTpsbNumber(yearL, yearT, id);
*//*
            int cynum = affairTnActivityRecordService.selectTpJkcNumberYear(yearL, yearT, id);
            if (cynum > 0*//* && sbnum > 0*//*){
                nncNum++;
            }else {
                nncDetails.append("南宁处团委");
            }
        }*/
        nncNum = affairTnActivityRecordService.selectJkcNumYear("34",yearL,yearT);
        isPush_nncNum = affairTnActivityRecordService.selectJkcIsPushNumYear("34",yearL,yearT);
        if (nncNum < 36 || isPush_nncNum < 24) {
            int nu = 36 - nncNum;
            nu = 24 - isPush_nncNum;
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setDetails("南宁处团委上报团内图片(上报"+nncNum+"条),并被上级团组织采用(采用"+isPush_nncNum+"条)未完成");
            examAutoEvaluation.setUnit("南宁处团委");
            examAutoEvaluation.setUnitId("33");
            examAutoEvaluation.setAssess("");
            examAutoEvaluation.setAssessId("");
            examAutoEvaluation.setEvaluationId("28f59642a1e74d0588f0d515fe462775");
            examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考核扣分标准(业务部分26项)");
            examAutoEvaluation.setModelId("a959d8865ea74bf68cf818adc710c75c");
            examAutoEvaluation.setOption("上报团内图片信息36条（北海处12条），并被上级团组织采用24条（北海处10条）");
            examAutoEvaluation.setOptionId("6eb3aa6d490c4670a3c18ad66533fa4e");
            examAutoEvaluation.setFromSys("智慧政工");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"上报团内图片");
            examAutoEvaluation.setScore(String.valueOf(nu));

            this.save(examAutoEvaluation);
        }
        /*for (int n = 0; n < lzcPartyList.size(); n++ ){
            AffairTwBase affairTwBase = lzcPartyList.get(n);
            String id = affairTwBase.getId();
            String name = affairTwBase.getName();

            *//*int sbnum = affairTnActivityRecordService.selectTpsbNumber(yearL, yearT, id);*//*
            int cynum = affairTnActivityRecordService.selectTpJkcNumberYear(yearL, yearT, id);
            if (cynum > 0 *//*&& sbnum > 0*//*){
                lzcNum++;
            }else {
                lzcDetails.append("柳州处团委");
            }
        }*/
        lzcNum = affairTnActivityRecordService.selectJkcNumYear("95",yearL,yearT);
        isPush_lzcNum = affairTnActivityRecordService.selectJkcIsPushNumYear("95",yearL,yearT);
        if (lzcNum < 36 || isPush_lzcNum < 24) {
            int nu = 36 - lzcNum;
            nu = 24 - isPush_lzcNum;
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setDetails("柳州处团委上报团内图片(上报"+lzcNum+"条),并被上级团组织采用(采用"+isPush_lzcNum+"条)未完成");
            examAutoEvaluation.setUnit("柳州处团委 ");
            examAutoEvaluation.setUnitId("148");
            examAutoEvaluation.setAssess("");
            examAutoEvaluation.setAssessId("");
            examAutoEvaluation.setEvaluationId("11d94fe57ede47a9bae4bffa36af487c");
            examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考核扣分标准(业务部分26项)");
            examAutoEvaluation.setModelId("a959d8865ea74bf68cf818adc710c75c");
            examAutoEvaluation.setOption("上报团内图片信息36条（北海处12条），并被上级团组织采用24条（北海处10条）");
            examAutoEvaluation.setOptionId("6eb3aa6d490c4670a3c18ad66533fa4e");
            examAutoEvaluation.setScore(String.valueOf(nu));
            examAutoEvaluation.setFromSys("智慧政工");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"上报团内图片");
            this.save(examAutoEvaluation);
        }
    }


    /*
     * 上报团内图片信息3条，其中北海处1条
     *
     * 处考派出所
     *
     * 月度
     * */
    public void ckpcsTntp(String checkTime) {

        List<AffairTwBase> nncPartyList = affairTwBaseService.getChuPartyBranch("34", "2");
        List<AffairTwBase> lzcPartyList = affairTwBaseService.getChuPartyBranch("95", "2");
        List<AffairTwBase> bhcPartyList = affairTwBaseService.getChuPartyBranch("156", "2");

        Map<String, String> time = monthTime(checkTime);
        String yearL = time.get("yearL");
        String yearT = time.get("yearT");

        String year = checkTime.substring(0, 4);
        String month = checkTime.substring(checkTime.length() - 2);


        for (int n = 0; n < nncPartyList.size(); n++) {
            AffairTwBase affairTwBase = nncPartyList.get(n);
            String id = affairTwBase.getId();
            String name = affairTwBase.getName();
            List<String> evId = examAutoEvaluationDao.selectTwEvId(id);
            for (int e = 0; e < evId.size(); e++) {
                String evI = evId.get(e);
                int num = affairTnActivityRecordService.selectTpNumber(yearL, yearT, id);
                if (num < 1) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(name + year + "年" + month + "月,团内图片未上报，扣两分");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(id);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("南宁公安处月度对派出所2020年度绩效考核评分标准（队伍建设）");
                    examAutoEvaluation.setModelId("ddc6d6dd210e4f428b3a5361f27389fa");
                    examAutoEvaluation.setOption("每月上报基层团支部开展护路法制宣传、青年志愿者活动、主题教育活动等反映青年民警工作、学习、生活情况的信息和图片各1条");
                    examAutoEvaluation.setOptionId("b79d3b1d97f4438b92600ce6138e811d");
                    examAutoEvaluation.setScore("10");
                    examAutoEvaluation.setEvaluationId(evI);

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","上报团内图片");
                    this.save(examAutoEvaluation);
                }
            }
        }
        for (int n = 0; n < lzcPartyList.size(); n++) {
            AffairTwBase affairTwBase = lzcPartyList.get(n);
            String id = affairTwBase.getId();
            String name = affairTwBase.getName();
            List<String> evId = examAutoEvaluationDao.selectTwEvId(id);
            for (int e = 0; e < evId.size(); e++) {
                String evI = evId.get(e);
                int num = affairTnActivityRecordService.selectTpNumber(yearL, yearT, id);
                if (num < 3) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(name + year + "年" + month + "月,团内图片未上报，扣两分");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(id);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("柳州处对派出所2020年月度队伍建设绩效考核扣分标准");
                    examAutoEvaluation.setModelId("f38535fc63a2418b8ed37c2e18f75ad6");
                    examAutoEvaluation.setOption("每月上报基层团支部开展护路法制宣传、青年志愿者活动、主题教育活动等反映青年民警工作、学习、生活情况的信息和图片各1条");
                    examAutoEvaluation.setOptionId("641fc5e0bdc143b891ff1372a70d377c");
                    examAutoEvaluation.setScore("10");
                    examAutoEvaluation.setEvaluationId(evI);
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","上报团内图片");
                    this.save(examAutoEvaluation);
                }
            }
        }
        for (int n = 0; n < bhcPartyList.size(); n++) {
            AffairTwBase affairTwBase = bhcPartyList.get(n);
            String id = affairTwBase.getId();
            String name = affairTwBase.getName();
            List<String> evId = examAutoEvaluationDao.selectTwEvId(id);
            for (int e = 0; e < evId.size(); e++) {
                String evI = evId.get(e);
                int num = affairTnActivityRecordService.selectTpNumber(yearL, yearT, id);
                if (num < 1) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(name + year + "年" + month + "月,团内图片未上报，扣两分");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(id);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队扣分标准（队伍建设部分）");
                    examAutoEvaluation.setModelId("82aa3bc55a7d42c79f8e2d50ad8b0927");
                    examAutoEvaluation.setOption("每月上报基层团支部开展护路法制宣传、青年志愿者活动、主题教育活动等反映青年民警工作、学习、生活情况的信息和图片各1条");
                    examAutoEvaluation.setOptionId("a1a331ff084046c3ab2b1c5c6fdcf6f7");
                    examAutoEvaluation.setScore("10");
                    examAutoEvaluation.setEvaluationId(evI);

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","上报团内图片");
                    this.save(examAutoEvaluation);
                }
            }
        }
    }

    /*
     * 上报团内图片信息3条，其中北海处1条
     *
     * 处考派出所
     *
     * 年度
     * */
    public void ckpcsTntpYear(String year) {

        List<AffairTwBase> nncPartyList = affairTwBaseService.getChuPartyBranch("34", "2");
        List<AffairTwBase> lzcPartyList = affairTwBaseService.getChuPartyBranch("95", "2");
        List<AffairTwBase> bhcPartyList = affairTwBaseService.getChuPartyBranch("156", "2");

        Map<String, String> time = yearTime(year);
        String yearL = time.get("yearL");
        String yearT = time.get("yearT");

        for (int n = 0; n < nncPartyList.size(); n++) {
            AffairTwBase affairTwBase = nncPartyList.get(n);
            String id = affairTwBase.getId();
            String name = affairTwBase.getName();
            List<String> evId = examAutoEvaluationDao.selectTwEvId(id);
            for (int e = 0; e < evId.size(); e++) {
                String evI = evId.get(e);
                int num = affairTnActivityRecordService.selectTpNumber(yearL, yearT, id);
                if (num < 12) {
                    int number = 12 - num;
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + year + "年" + "团内图片上报数量不足，缺" + number + "条，扣" + number + " 分");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(id);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("2020年年度南宁处对派出所绩效考核扣分标准(队伍建设)");
                    examAutoEvaluation.setModelId("f43cb06efe6b42acb625d2cef27bad1e");
                    examAutoEvaluation.setOption("全年上报基层团支部开展护路法制宣传、青年志愿者活动、主题教育活动等反映青年民警工作、学习、生活情况的信息和图片各12条");
                    examAutoEvaluation.setOptionId("8a7e4fa91a3f4fdab94e0a3ed9217c2b");
                    examAutoEvaluation.setScore(String.valueOf(number));
                    examAutoEvaluation.setEvaluationId(evI);

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","上报团内图片");
                    this.save(examAutoEvaluation);
                }
            }
        }
        for (int n = 0; n < lzcPartyList.size(); n++) {
            AffairTwBase affairTwBase = lzcPartyList.get(n);
            String id = affairTwBase.getId();
            String name = affairTwBase.getName();
            List<String> evId = examAutoEvaluationDao.selectTwEvId(id);
            for (int e = 0; e < evId.size(); e++) {
                String evI = evId.get(e);
                int num = affairTnActivityRecordService.selectTpNumber(yearL, yearT, id);
                if (num < 12) {
                    int number = 12 - num;
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + year + "年" + "团内图片上报数量不足，缺" + number + "条，扣" + number + " 分");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(id);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("柳州处对派出所2020年年度队伍建设绩效考核扣分标准");
                    examAutoEvaluation.setModelId("1ccfeca0f49543d49f8833feb21735e3");
                    examAutoEvaluation.setOption("全年上报基层团支部开展护路法制宣传、青年志愿者活动、主题教育活动等反映青年民警工作、学习、生活情况的信息和图片各12条");
                    examAutoEvaluation.setOptionId("c02803954b454669a57e6462ac371ec8");
                    examAutoEvaluation.setScore(String.valueOf(number));
                    examAutoEvaluation.setEvaluationId(evI);

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","上报团内图片");
                    this.save(examAutoEvaluation);
                }
            }
        }
        for (int n = 0; n < bhcPartyList.size(); n++) {
            AffairTwBase affairTwBase = bhcPartyList.get(n);
            String id = affairTwBase.getId();
            String name = affairTwBase.getName();
            List<String> evId = examAutoEvaluationDao.selectTwEvId(id);
            for (int e = 0; e < evId.size(); e++) {
                String evI = evId.get(e);
                int num = affairTnActivityRecordService.selectTpNumber(yearL, yearT, id);
                if (num < 12) {
                    int number = 12 - num;
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + year + "年" + "团内图片上报数量不足，缺" + number + "条，扣" + number + " 分");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(id);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel(" ");
                    examAutoEvaluation.setModelId(" ");
                    examAutoEvaluation.setOption(" ");
                    examAutoEvaluation.setOptionId(" ");
                    examAutoEvaluation.setScore(String.valueOf(number));
                    examAutoEvaluation.setEvaluationId(evI);

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","上报团内图片");
                    this.save(examAutoEvaluation);
                }
            }
        }
    }
    /*
     * 上报被上级团组织刊用图片信息24条，其中北海处10条
     *
     * 局考处
     *
     * 年度
     * */
/*    public void jkcSjky(String year) {

        *//*  if (name.contains("北海处")) {*//*
        int num = affairTnActivityRecordService.selectNumberPass(year, "北海处");
        if (num < 10) {
            int nu = 10 - num;
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("2");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setDetails("团内民主（组织）生活会每年一次，未按时完成扣分");
            examAutoEvaluation.setUnit("北海处团委");
            examAutoEvaluation.setUnitId("268");
            examAutoEvaluation.setAssess("");
            examAutoEvaluation.setAssessId("");
            examAutoEvaluation.setModel("2020年月度公安局对公安处公共扣分标准");
            examAutoEvaluation.setModelId("91f2f146a8b9417ea2f04b42ee80e2aa");
            examAutoEvaluation.setOption("各平台数据未及时录入的");
            examAutoEvaluation.setOptionId("12caa2cc2eb5457baa819a6adedc5112");
            examAutoEvaluation.setScore(String.valueOf(nu));

            this.save(examAutoEvaluation);
        }
        *//* }else{*//*
        int num2 = affairTnActivityRecordService.selectNumberPass(year, "南宁处");
        if (num2 < 24) {
            int nu = 24 - num2;

            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("2");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setDetails("团内民主（组织）生活会每年一次，未按时完成扣分");
            examAutoEvaluation.setUnit("南宁处团委");
            examAutoEvaluation.setUnitId("33");
            examAutoEvaluation.setAssess("");
            examAutoEvaluation.setAssessId("");
            examAutoEvaluation.setModel("2020年月度公安局对公安处公共扣分标准");
            examAutoEvaluation.setModelId("91f2f146a8b9417ea2f04b42ee80e2aa");
            examAutoEvaluation.setOption("各平台数据未及时录入的");
            examAutoEvaluation.setOptionId("12caa2cc2eb5457baa819a6adedc5112");
            examAutoEvaluation.setScore(String.valueOf(nu));

            this.save(examAutoEvaluation);
        }
        int num3 = affairTnActivityRecordService.selectNumberPass(year, "柳州处");
        if (num3 < 24) {
            int nu = 24 - num2;

            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("2");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setDetails("团内民主（组织）生活会每年一次，未按时完成扣分");
            examAutoEvaluation.setUnit("柳州处团委");
            examAutoEvaluation.setUnitId("148");
            examAutoEvaluation.setAssess("");
            examAutoEvaluation.setAssessId("");
            examAutoEvaluation.setModel("2020年月度公安局对公安处公共扣分标准");
            examAutoEvaluation.setModelId("91f2f146a8b9417ea2f04b42ee80e2aa");
            examAutoEvaluation.setOption("各平台数据未及时录入的");
            examAutoEvaluation.setOptionId("12caa2cc2eb5457baa819a6adedc5112");
            examAutoEvaluation.setScore(String.valueOf(nu));

            this.save(examAutoEvaluation);
        }
    }*/

    /*
     *关工委工作活动半年未上报信息总结，扣分
     *
     * 局考处
     *
     * 年度
     *
     * */
/*
    public void jkcGgwYear(String year){
        //公安处
        List<Office> officeList = new ArrayList<>();
        officeList = officeDao.selectChuUnit();

        for (int o = 0; o < officeList.size(); o++) {
            Office office = officeList.get(o);

            //公安处名称
            String name = office.getName();

            //公安处id
            String unitId = office.getId();
            Integer number = affairWorkSummaryDao.selectNumber(year,unitId);
            if (number < 2){
                int num = 2- number;
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("1");
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setDetails("团内民主（组织）生活会每年一次，未按时完成扣分");
                examAutoEvaluation.setUnit("南宁处团委");
                examAutoEvaluation.setUnitId("33");
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("2020年年度公安局对公安处考评公共扣分标准");
                examAutoEvaluation.setModelId("bb3eea8554314e04b170f26f2694574e");
                examAutoEvaluation.setOption("各平台数据未及时录入的");
                examAutoEvaluation.setOptionId("d44aa5dfde9c4418ad00c086e1084b69");
                examAutoEvaluation.setScore("-"+num * 5);

                this.save(examAutoEvaluation);

            }
        }
    }
*/

    /*
     * 每季编发廉政教育资料
     *
     * 局考处
     *
     * 年度
     *
     * */
    public void jkcLzjyYear(String year) {

        Integer y = Integer.valueOf(year);
        Integer lastYear = y - 1;

        Map<String, String> timeMap = this.yearTime(year);
        String yearL = timeMap.get("yearL");
        String yearT = timeMap.get("yearT");

        StringBuilder nncdetails = new StringBuilder();
        StringBuilder lzcdetails = new StringBuilder();
        StringBuilder bhcdetails = new StringBuilder();
        Integer nncnumSum = 0;
        Integer lzcnumSum = 0;
        Integer bhcnumSum = 0;

        List<Office> nncPartyList = new ArrayList<>();
        //南宁处纪检监察室
        Office nncOffice = officeDao.selectBeanById("31");
        nncPartyList.add(nncOffice);

        List<Office> lzcPartyList = new ArrayList<>();
        //柳州处纪检监察室
        Office lzcOffice = officeDao.selectBeanById("146");
        lzcPartyList.add(lzcOffice);

        List<Office> bhcPartyList = new ArrayList<>();
        //北海处纪检监察室
        Office bhcOffice = officeDao.selectBeanById("266");
        bhcPartyList.add(bhcOffice);

        for (int o = 0; o < nncPartyList.size(); o++) {
            Office office = nncPartyList.get(o);

            //公安处名称
            String name = office.getName();

            //公安处id
            String unitId = office.getId();

            Integer number = affairLzxxjyActivitiesDao.selectNumber(yearL,yearT, unitId);

            if (number < 4) {
                nncnumSum++;
                nncdetails.append(",").append(name);
            }
        }
        if (nncnumSum > 0){

        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
        examAutoEvaluation.setType("1");
        examAutoEvaluation.setEvalType("1");
        examAutoEvaluation.setPeriod("2");
        examAutoEvaluation.setYear(year);
        examAutoEvaluation.setDetails(nncdetails + year + "年" + "编发廉政教育资料不少于1期，每少1期的，扣3分。");
        examAutoEvaluation.setUnit("南宁处纪检监察室");
        examAutoEvaluation.setFromSys("智慧政工");
        examAutoEvaluation.setUnitId("31");
        examAutoEvaluation.setAssess("");
        examAutoEvaluation.setAssessId("");
        examAutoEvaluation.setModel("2020年年度公安局对公安处考评公共扣分标准");
        examAutoEvaluation.setModelId("bb3eea8554314e04b170f26f2694574e");
        examAutoEvaluation.setOption("各平台数据未及时录入的");
        examAutoEvaluation.setOptionId("d44aa5dfde9c4418ad00c086e1084b69");
        examAutoEvaluation.setScore(String.valueOf(nncnumSum * 3));
        examAutoEvaluation.setEvaluationId("19e70728419d4051bd4f9f496fbf0d7c");

        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"廉政教育资料");
        this.save(examAutoEvaluation);
    }
        for (int o = 0; o < lzcPartyList.size(); o++) {
            Office office = lzcPartyList.get(o);

            //公安处名称
            String name = office.getName();

            //公安处id
            String unitId = office.getId();

            Integer number = affairLzxxjyActivitiesDao.selectNumber(yearL,yearT, unitId);

            if (number < 4) {
                lzcnumSum++;
                lzcdetails.append(",").append(name);
            }
        }
        if (lzcnumSum > 0){

            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("2");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setDetails(lzcdetails + year + "年" + "编发廉政教育资料不少于1期，每少1期的，扣3分。");
            examAutoEvaluation.setUnit("柳州处纪检监察室");
            examAutoEvaluation.setFromSys("智慧政工");
            examAutoEvaluation.setUnitId("146");
            examAutoEvaluation.setAssess("");
            examAutoEvaluation.setAssessId("");
            examAutoEvaluation.setModel("2020年年度公安局对公安处考评公共扣分标准");
            examAutoEvaluation.setModelId("bb3eea8554314e04b170f26f2694574e");
            examAutoEvaluation.setOption("各平台数据未及时录入的");
            examAutoEvaluation.setOptionId("d44aa5dfde9c4418ad00c086e1084b69");
            examAutoEvaluation.setScore(String.valueOf(lzcnumSum * 3));
            examAutoEvaluation.setEvaluationId("49e960f9fe6c4f7786ae894ffac51c7d");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"廉政教育资料");
            this.save(examAutoEvaluation);
        }
        for (int o = 0; o < bhcPartyList.size(); o++) {
            Office office = bhcPartyList.get(o);

            //公安处名称
            String name = office.getName();

            //公安处id
            String unitId = office.getId();

            Integer number = affairLzxxjyActivitiesDao.selectNumber(yearL,yearT, unitId);

            if (number < 4) {
                bhcnumSum++;
                bhcdetails.append(",").append(name);
            }
        }
        if (bhcnumSum > 0){

            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("2");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setDetails(bhcdetails + year + "年" + "编发廉政教育资料不少于1期，每少1期的，扣3分。");
            examAutoEvaluation.setUnit("北海处纪检监察室");
            examAutoEvaluation.setFromSys("智慧政工");
            examAutoEvaluation.setUnitId("266");
            examAutoEvaluation.setAssess("");
            examAutoEvaluation.setAssessId("");
            examAutoEvaluation.setModel("2020年年度公安局对公安处考评公共扣分标准");
            examAutoEvaluation.setModelId("bb3eea8554314e04b170f26f2694574e");
            examAutoEvaluation.setOption("各平台数据未及时录入的");
            examAutoEvaluation.setOptionId("d44aa5dfde9c4418ad00c086e1084b69");
            examAutoEvaluation.setScore(String.valueOf(bhcnumSum * 3));
            examAutoEvaluation.setEvaluationId("f278b35db9ca4f5d8418cc44acec36de");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"廉政教育资料");
            this.save(examAutoEvaluation);
        }
}
    /*
     * 微信接警不及时
     *
     * 局考处
     *
     * 月度
     *
     * */
    public void jkcWechar(String checkTime) throws ParseException {


        String year = checkTime.substring(0, 4);
        Integer y = Integer.valueOf(year);
        String month = checkTime.substring(checkTime.length() - 2);
        Integer m = Integer.valueOf(month);
        Integer lastMonth = m - 1;
        Integer lastYear = y - 1;
        String yearL = null;
        if (m == 1){
            yearL = lastYear + "-12-26";
        }else {
            yearL = year + "-" + lastMonth + "-26";
        }
        String yearT = year + "-" + month +  "-25";

        //公安处
        List<Office> officeList = new ArrayList<>();
        officeList = officeDao.selectChuUnit();

        for (int o = 0; o < officeList.size(); o++) {
            Office office = officeList.get(o);

            //公安处名称
            String name = office.getName();

            //公安处id
            String unitId = office.getId();

            /*
             * 报警月度
             * */

            String code = officeDao.selectCode(name);
            List<TPoliceMessage> tPoliceMessageList = new ArrayList<>();
            tPoliceMessageList = tPoliceMessageService.selectAllList(yearL,yearT);

            for (int i = 0; i < tPoliceMessageList.size(); i++) {
                TPoliceMessage tPoliceMessage = tPoliceMessageList.get(i);
                if (!"系统管理员".equals(tPoliceMessage.getProcessPeople())) {
                    if (StringUtils.isNotBlank(tPoliceMessage.getProcessPeople())) {
                        String unit = personnelBaseDao.selectUnit(tPoliceMessage.getProcessPeople());
                        if (StringUtils.isNotBlank(unit)) {
                            if (unit.equals(unitId)) {


                                DateFormat format = new SimpleDateFormat("yyyyMMddHHmmssSSS");
                                Date sdate = format.parse(tPoliceMessage.getCreateTime());
                                Date edate = format.parse(tPoliceMessage.getProcessTime());
                                Calendar c1 = Calendar.getInstance();
                                Calendar c2 = Calendar.getInstance();

                                c1.setTime(sdate);
                                c2.setTime(edate);


                                int i1 = c2.get(Calendar.MINUTE);

                                int i2 = c1.get(Calendar.MINUTE);

                                int timeL = i2 - i1;
/*
                                //创建时间
                                String createTime = tPoliceMessage.getCreateTime();
                                // long create = createTime.getTime();

                                long create = Long.parseLong(createTime);

                                //受理时间
                                String processTime = tPoliceMessage.getProcessTime();
                                long process = Long.parseLong(processTime);
                                //long process = processTime.getTime();

                                //创建时间和受理时间的间隔
                                long fen = (process - create) / 60;*/

                                if (timeL > 5) {
                                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                    examAutoEvaluation.setType("1");
                                    examAutoEvaluation.setEvalType("1");
                                    examAutoEvaluation.setPeriod("1");
                                    examAutoEvaluation.setYear(year);
                                    examAutoEvaluation.setFromSys("微信报警");
                                    examAutoEvaluation.setMonth(month);
                                    examAutoEvaluation.setDetails(name + year + "年" + month + "月" + "微信报警接警不及时、处警不及时的，扣5");
                                    examAutoEvaluation.setUnit(name);
                                    examAutoEvaluation.setUnitId(unitId);
                                    examAutoEvaluation.setAssess("");
                                    examAutoEvaluation.setAssessId("");
                                    examAutoEvaluation.setModel("2020年月度公安局对公安处扣分标准(业务部分26项)");
                                    examAutoEvaluation.setModelId("aef99f1b42054342ba71c25634d0f9fc");
                                    examAutoEvaluation.setOption("微信报警接警不及时、处警不及时的");
                                    examAutoEvaluation.setOptionId("5ae19c53ea1f401b9121cbd5e0c1edfa");
                                    examAutoEvaluation.setScore("4");
                                    examAutoEvaluation.setEvaluationId(userDao.selectUserId(office.getCode()));
                                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"微信报警");
                                    this.save(examAutoEvaluation);
                                }
                            }

                        }
                    }
                }
            }
        }
    }

    /*
     * 微信接警不及时
     *
     * 局考处
     *
     * 年度
     *
     *
     * */
    public void jkcWecharYear(String year) throws ParseException {
        Integer m = Integer.valueOf(year);
        Integer lastYear = m - 1;
        String yearL = lastYear + "-" + "12-02";
        String yearT = year + "-" +"12-01";
        //公安处
        List<Office> officeList = new ArrayList<>();
        officeList = officeDao.selectChuUnit();

        for (int o = 0; o < officeList.size(); o++) {
            Office office = officeList.get(o);

            //公安处名称
            String name = office.getName();

            //公安处id
            String unitId = office.getId();

            List<TPoliceMessage> tPoliceMessageYearList = new ArrayList<>();
            tPoliceMessageYearList = tPoliceMessageService.selectAllList(yearL,yearT);

            for (int tp = 0; tp < tPoliceMessageYearList.size(); tp++) {

                TPoliceMessage tPoliceMessage = tPoliceMessageYearList.get(tp);

                if (StringUtils.isNotBlank(tPoliceMessage.getProcessPeople())) {
                    String unit = userDao.selectUnitName(tPoliceMessage.getProcessPeople());
                    if (StringUtils.isNotBlank(unit)) {
                        if (unit.equals(unitId)) {
                            DateFormat format = new SimpleDateFormat("yyyyMMddHHmmssSSS");
                            Date sdate = format.parse(tPoliceMessage.getCreateTime());
                            Date edate = format.parse(tPoliceMessage.getProcessTime());
                            Calendar c1 = Calendar.getInstance();
                            Calendar c2 = Calendar.getInstance();

                            c1.setTime(sdate);
                            c2.setTime(edate);


                            int i1 = c2.get(Calendar.MINUTE);

                            int i2 = c1.get(Calendar.MINUTE);

                            int timeL = i2 - i1;

                            if (timeL > 5) {
                                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                examAutoEvaluation.setType("1");
                                examAutoEvaluation.setEvalType("1");
                                examAutoEvaluation.setPeriod("2");
                                examAutoEvaluation.setYear(year);
                                examAutoEvaluation.setFromSys("微信报警");
                                examAutoEvaluation.setDetails(name + year + "年" + "微信报警接警不及时、处警不及时的，扣2");
                                examAutoEvaluation.setUnit(tPoliceMessage.getProcessOrganization());
                                examAutoEvaluation.setUnitId("");
                                examAutoEvaluation.setAssess("");
                                examAutoEvaluation.setAssessId("");
                                examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考核扣分标准(业务部分26项)");
                                examAutoEvaluation.setModelId("a959d8865ea74bf68cf818adc710c75c");
                                examAutoEvaluation.setOption("微信报警接警不及时、处警不及时的");
                                examAutoEvaluation.setOptionId("6936cf7061e14c7e96c2f0c347e10601");
                                examAutoEvaluation.setScore("2");

                                examAutoEvaluation.setEvaluationId(userDao.selectUserId(office.getCode()));
                                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"微信报警");
                                this.save(examAutoEvaluation);
                            }
                        }
                    }
                }
            }
        }
    }

    /*
     * 首页-政工简报
     *
     * 局考处
     *
     * 年度
     * */
    public void syZgjbYear(String year) {

        Integer y = Integer.valueOf(year);
        Integer lastYear = y - 1;
        String yearL = lastYear + "-" + "12-02";
        String yearT = year + "-" + "12-01";

        //公安处
        List<Office> officeList = new ArrayList<>();
        Office nncoffice = officeDao.selectBeanById("25");
        Office lzcoffice = officeDao.selectBeanById("140");
        Office bhcoffice = officeDao.selectBeanById("262");

        officeList.add(nncoffice);
        officeList.add(lzcoffice);
        officeList.add(bhcoffice);

        for (int o = 0; o < officeList.size(); o++) {
            Office office = officeList.get(o);

            //公安处id
            String unitId = office.getId();
            //公安处名称
            String name = office.getName();
            String code = office.getCode();
            if (name.contains("北海处")) {

                Integer number = examAutoEvaluationDao.selectZgjb(yearL,yearT,unitId);
                if (number < 8) {
                    int num = 8 - number;
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("1");
                        examAutoEvaluation.setPeriod("2");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setDetails(name + year + "年" + "首页-政工简报、调研交流，录入数未完成，北海处不少于8篇");
                        examAutoEvaluation.setUnit(name);
                        examAutoEvaluation.setUnitId(unitId);
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("2020年年度公安局对公安处考评公共扣分标准");
                        examAutoEvaluation.setModelId("bb3eea8554314e04b170f26f2694574e");
                        examAutoEvaluation.setOption("各平台数据未及时录入的");
                        examAutoEvaluation.setOptionId("d44aa5dfde9c4418ad00c086e1084b69");
                        examAutoEvaluation.setScore(String.valueOf(num * 4));
                        examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"政工简报北海");
                        this.save(examAutoEvaluation);

                }
            }
            Integer number = examAutoEvaluationDao.selectZgjb(yearL,yearT,unitId);
            if (number < 20) {
                int num = 20 - number;

                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("1");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails("首页-政工简报、调研交流，录入数未完成，不少于20篇");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("2020年年度公安局对公安处考评公共扣分标准");
                    examAutoEvaluation.setModelId("bb3eea8554314e04b170f26f2694574e");
                    examAutoEvaluation.setOption("各平台数据未及时录入的");
                    examAutoEvaluation.setOptionId("d44aa5dfde9c4418ad00c086e1084b69");
                    examAutoEvaluation.setScore(String.valueOf(num * 4));
                    examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"政工简报");
                    this.save(examAutoEvaluation);

            }
        }
    }

    /*
     * 首页-宁铁公安
     *
     * 局考处
     *
     * 年度
     * */
    public void syNtgaYear(String year) {

        Integer y = Integer.valueOf(year);
        Integer lastYear = y - 1;
        Map<String, String> timeMap = this.yearTime(year);
        String yearL = timeMap.get("yearL");
        String yearT = timeMap.get("yearT");

        //公安处
        List<Office> officeList = new ArrayList<>();
        Office nncoffice = officeDao.selectBeanById("25");
        Office lzcoffice = officeDao.selectBeanById("140");
        Office bhcoffice = officeDao.selectBeanById("262");

        officeList.add(nncoffice);
        officeList.add(lzcoffice);
        officeList.add(bhcoffice);

        for (int o = 0; o < officeList.size(); o++) {
            Office office = officeList.get(o);

            //公安处id
            String unitId = office.getId();
            //公安处名称
            String name = office.getName();
            String code = office.getCode();
            if (name.contains("北海处")) {

                Integer number = examAutoEvaluationDao.selectNtga(yearL,yearT,unitId);
                if (number < 2) {
                    int num = 2 - number;

                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("1");
                        examAutoEvaluation.setPeriod("2");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setDetails(name + year + "年" + "首页-宁铁公安、调研交流，录入数未完成，北海处不少于2篇");
                        examAutoEvaluation.setUnit(name);
                        examAutoEvaluation.setUnitId(unitId);
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setModel("2020年年度公安局对公安处考评公共扣分标准");
                        examAutoEvaluation.setModelId("bb3eea8554314e04b170f26f2694574e");
                        examAutoEvaluation.setOption("各平台数据未及时录入的");
                        examAutoEvaluation.setOptionId("d44aa5dfde9c4418ad00c086e1084b69");
                        examAutoEvaluation.setScore(String.valueOf(num * 4));
                        examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"宁铁公安");
                        this.save(examAutoEvaluation);

                }
            }
            Integer number = examAutoEvaluationDao.selectNtga(yearL,yearT, unitId);
            if (number < 6) {
                int num = 6 - number;

                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("1");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails("首页-宁铁公安、调研交流，录入数未完成，不少于6篇");
                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("2020年年度公安局对公安处考评公共扣分标准");
                    examAutoEvaluation.setModelId("bb3eea8554314e04b170f26f2694574e");
                    examAutoEvaluation.setOption("各平台数据未及时录入的");
                    examAutoEvaluation.setOptionId("d44aa5dfde9c4418ad00c086e1084b69");
                    examAutoEvaluation.setScore(String.valueOf(num * 4));
                    examAutoEvaluation.setEvaluationId(userDao.selectUserId(code));

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"宁铁公安");
                    this.save(examAutoEvaluation);

            }
        }
    }

    /*
     * 奖励信息（党建工作，组织）
     *
     * 局考处
     *
     * 月度
     * */
    public void jkcJlxx(String checkTime) {
        String year = checkTime.substring(0, 4);
        String month = checkTime.substring(checkTime.length() - 2);
        Map<String,Object> monthMap = this.getTimeQuantumByMonth(year,month,"政工");
        Date nowMonthDate = (Date) monthMap.get("nowTime");
        Date lastMonthDate = (Date) monthMap.get("lastTime");
        year = (String) monthMap.get("year");
        month = (String) monthMap.get("month");
        /* Integer monthInt = Integer.parseInt(month);
        Integer yearInt = Integer.parseInt(year);
        Integer dayInt = Integer.parseInt(DateUtils.getDay());
        String checkTime2 = "";
        //上月26号 至  本月 25号
        if(dayInt>=26){
            //当前日期大于等于26号，应采用本月26号到下月25号时间段时间
            checkTime2 = year+"-"+month+"-26";
            if(monthInt==12){
                checkTime = (yearInt+1)+"-01-25";
                month = "01";
            }else{
                checkTime = year+"-"+(monthInt+1)+"-25";
                String tempMonth = String.valueOf(monthInt+1);
                //month = String.valueOf(monthInt+1);
                if(tempMonth.length()<2){
                    StringBuffer sb = new StringBuffer();
                    sb.append("0").append(tempMonth);
                    month = sb.toString();
                }
            }
        }else{
            //上月26号  到  本月25号事件段
            if(monthInt==1){
                checkTime2 = yearInt-1+"-12-26";
            }else{
                checkTime2 = year+"-"+(monthInt-1)+"-26";
            }
            checkTime = year+"-"+month+"-25";
        }*/
        List<AffairGeneralSituation> affairGeneralSituationsList = affairGeneralSituationService.selectChuPartyBranch();//查询处下所有党支部
        StringBuffer nncUnitNam = null;
        Boolean nncIs0 = false;
        StringBuffer lzcUnitNam = null;
        Boolean lzcIs0 = false;
        StringBuffer bhcUnitNam = null;
        Boolean bhcIs0 = false;
        Double nncScore1 = 0.0;
        Double nncScore2 = 0.0;
        Double nncScore3 = 0.0;
        StringBuffer nncDetail1 = null;
        StringBuffer nncDetail2 = null;
        StringBuffer nncDetail3 = null;
        Double lzcScore1 = 0.0;
        Double lzcScore2 = 0.0;
        Double lzcScore3 = 0.0;
        StringBuffer lzcDetail1 = null;
        StringBuffer lzcDetail2 = null;
        StringBuffer lzcDetail3 = null;
        Double bhcScore1 = 0.0;
        Double bhcScore2 = 0.0;
        Double bhcScore3 = 0.0;
        StringBuffer bhcDetail1 = null;
        StringBuffer bhcDetail2 = null;
        StringBuffer bhcDetail3 = null;
        for (AffairGeneralSituation affairGeneralSituation : affairGeneralSituationsList) {
            //党组织id
            String partyId = affairGeneralSituation.getId();
            //党组织名称
            String partyName = affairGeneralSituation.getPartyOrganization();
            List<AffairOrgRewardPunish> orgRewardPunishList = affairOrgRewardPunishService.getJLXXByNowLastTime(partyId,nowMonthDate,lastMonthDate);
            if(orgRewardPunishList!=null && orgRewardPunishList.size()>0){
                Boolean isNncParty = false;
                Boolean isLzcParty = false;
                Boolean isBhcParty = false;
                if (affairGeneralSituation.getParentIds().contains(",34,")) {
                    //南宁处
                    nncIs0 = true;
                    isNncParty = true;
                    if (nncUnitNam == null) {
                        nncUnitNam = new StringBuffer(partyName);
                    } else {
                        nncUnitNam.append("," + partyName);
                    }
                } else if (affairGeneralSituation.getParentIds().contains(",95,")) {
                    //柳州处
                    lzcIs0 = true;
                    isLzcParty = true;
                    if (lzcUnitNam == null) {
                        lzcUnitNam = new StringBuffer(partyName);
                    } else {
                        lzcUnitNam.append("," + partyName);
                    }
                } else {
                    //北海处
                    bhcIs0 = true;
                    isBhcParty = true;
                    if (bhcUnitNam == null) {
                        bhcUnitNam = new StringBuffer(partyName);
                    } else {
                        bhcUnitNam.append("," + partyName);
                    }
                }
                /**
                 * 1.单位或部门评为厅（局）级先进(综合类)，加0.5分。
                 * 2.单位或部门评为省部级先进(综合类)，加2分。
                 * 3.单位或部门评为全国先进(综合类)，加3分。
                 */
                for(AffairOrgRewardPunish affairOrgRewardPunish : orgRewardPunishList){
                   String jlType = affairOrgRewardPunish.getType();//奖励类别
                    //1 中央级 2省部级  3铁路公安局级 4集团公司级 5公安局级 6 公安处级 7地市级
                    String jlTitle = affairOrgRewardPunish.getTitle();//奖励标题
                    Date jlDate = affairOrgRewardPunish.getDate();//奖励时间
                    if("3".equals(jlType)||"4".equals(jlType)){
                        //厅局
                        if(isNncParty){
                            if(nncDetail1==null){
                                nncDetail1 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"厅局级奖励");
                            }else{
                                nncDetail1.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"厅局级奖励");
                            }
                            nncScore1+=0.5;
                        }
                        if(isLzcParty){
                            if(lzcDetail1==null){
                                lzcDetail1 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"厅局级奖励");
                            }else{
                                lzcDetail1.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"厅局级奖励");
                            }
                            lzcScore1+=0.5;
                        }
                        if(isBhcParty){
                            if(bhcDetail1==null){
                                bhcDetail1 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"厅局级奖励");
                            }else{
                                bhcDetail1.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"厅局级奖励");
                            }
                            bhcScore1+=0.5;
                        }
                    }
                    if("2".equals(jlType)){
                        //省部级
                        if(isNncParty){
                            if(nncDetail2==null){
                                nncDetail2= new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"省部级奖励");
                            }else{
                                nncDetail2.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"省部级奖励");
                            }
                            nncScore2+=2;
                        }
                        if(isLzcParty){
                            if(lzcDetail2==null){
                                lzcDetail2= new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"省部级奖励");
                            }else{
                                lzcDetail2.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"省部级奖励");
                            }
                            lzcScore2+=2;
                        }
                        if(isBhcParty){
                            if(bhcDetail2==null){
                                bhcDetail2= new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"省部级奖励");
                            }else{
                                bhcDetail2.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"省部级奖励");
                            }
                            bhcScore2+=2;
                        }
                    }
                    if("1".equals(jlType)){
                        //国家级
                        if(isNncParty){
                            if(nncDetail3==null){
                                nncDetail3 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"国家级奖励");
                            }else{
                                nncDetail3.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"国家级奖励");
                            }
                            nncScore3+=3;
                        }
                        if(isLzcParty){
                            if(lzcDetail3==null){
                                lzcDetail3 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"国家级奖励");
                            }else{
                                lzcDetail3.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"国家级奖励");
                            }
                            lzcScore3+=3;
                        }
                        if(isBhcParty){
                            if(bhcDetail3==null){
                                bhcDetail3 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"国家级奖励");
                            }else{
                                bhcDetail3.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"国家级奖励");
                            }
                            bhcScore3+=3;
                        }
                    }

                }
            }

        }

        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
        examAutoEvaluation.setType("1");
        examAutoEvaluation.setEvalType("1");
        examAutoEvaluation.setPeriod("1");
        examAutoEvaluation.setYear(year);
        examAutoEvaluation.setMonth(month);
        examAutoEvaluation.setFromSys("智慧政工");
        examAutoEvaluation.setRemark("每次");
        examAutoEvaluation.setAssess("南宁局政治部组织干部处");//初审人员
        examAutoEvaluation.setAssessId("bfdf74f010c9466dba12c1589ecab7f3");//初审人员id
        examAutoEvaluation.setModel("2020年月度公安局对公安处绩效考评公共加分标准");
        examAutoEvaluation.setModelId("a20967b72dca4e6e9915fa43c46e153a");
        if (nncIs0) {
            examAutoEvaluation.setUnit("南宁处政治处组织干部室");
            examAutoEvaluation.setUnitId("27");
            examAutoEvaluation.setEvaluationId("34e8d855cf6b4b1ab5e7e23e7aaba658");
            if(nncScore1>0){
                examAutoEvaluation.setIsNewRecord(false);
                examAutoEvaluation.setId("");
                examAutoEvaluation.setOption("单位或部门被评为厅（局）级先进(综合类)");
                examAutoEvaluation.setOptionId("04609017a4284c18b45d6a2909c8878d");
                examAutoEvaluation.setScore(String.valueOf(nncScore1));
                examAutoEvaluation.setDetails(nncDetail1.toString());
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建组织奖励信息_厅局级");
                //删除已经存储的
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if(nncScore2>0){
                examAutoEvaluation.setIsNewRecord(false);
                examAutoEvaluation.setId("");
                examAutoEvaluation.setOption("单位或部门被评为省部级先进(综合类)");
                examAutoEvaluation.setOptionId("8e4b589738264a4ca1d36b2a115607c9");
                examAutoEvaluation.setScore(String.valueOf(nncScore2));
                examAutoEvaluation.setDetails(nncDetail2.toString());
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建组织奖励信息_省部级");
                //删除已经存储的
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if(nncScore3>0){
                examAutoEvaluation.setIsNewRecord(false);
                examAutoEvaluation.setId("");
                examAutoEvaluation.setOption("单位或部门被评为全国先进(综合类)");
                examAutoEvaluation.setOptionId("f30a40c66fbd40ac9ea29063a0069eb2");
                examAutoEvaluation.setScore(String.valueOf(nncScore3));
                examAutoEvaluation.setDetails(nncDetail3.toString());
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建组织奖励信息_全国级");
                //删除已经存储的
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }

        }
        if (lzcIs0) {
            examAutoEvaluation.setUnit("柳州处政治处组织干部室");
            examAutoEvaluation.setUnitId("142");
            examAutoEvaluation.setEvaluationId("ec3ba2efdd404f2faa520f6e8a71ec4c");
            if(lzcScore1>0){
                examAutoEvaluation.setIsNewRecord(false);
                examAutoEvaluation.setId("");
                examAutoEvaluation.setOption("单位或部门被评为厅（局）级先进(综合类)");
                examAutoEvaluation.setOptionId("04609017a4284c18b45d6a2909c8878d");
                examAutoEvaluation.setScore(String.valueOf(lzcScore1));
                examAutoEvaluation.setDetails(lzcDetail1.toString());
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建组织奖励信息_厅局级");
                //删除已经存储的
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if(lzcScore2>0){
                examAutoEvaluation.setIsNewRecord(false);
                examAutoEvaluation.setId("");
                examAutoEvaluation.setOption("单位或部门被评为省部级先进(综合类)");
                examAutoEvaluation.setOptionId("8e4b589738264a4ca1d36b2a115607c9");
                examAutoEvaluation.setScore(String.valueOf(lzcScore2));
                examAutoEvaluation.setDetails(lzcDetail2.toString());
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建组织奖励信息_省部级");
                //删除已经存储的
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if(lzcScore3>0){
                examAutoEvaluation.setIsNewRecord(false);
                examAutoEvaluation.setId("");
                examAutoEvaluation.setOption("单位或部门被评为全国先进(综合类)");
                examAutoEvaluation.setOptionId("f30a40c66fbd40ac9ea29063a0069eb2");
                examAutoEvaluation.setScore(String.valueOf(lzcScore2));
                examAutoEvaluation.setDetails(lzcDetail3.toString());
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建组织奖励信息_全国级");
                //删除已经存储的
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
        }
        if (bhcIs0) {
            examAutoEvaluation.setUnit("北海处政治处组织干部室");
            examAutoEvaluation.setUnitId("264");
            examAutoEvaluation.setEvaluationId("c90918faf2614baa8fa85230482bd43e");
            if(bhcScore1>0){
                examAutoEvaluation.setIsNewRecord(false);
                examAutoEvaluation.setId("");
                examAutoEvaluation.setOption("单位或部门被评为厅（局）级先进(综合类)");
                examAutoEvaluation.setOptionId("04609017a4284c18b45d6a2909c8878d");
                examAutoEvaluation.setScore(String.valueOf(bhcScore1));
                examAutoEvaluation.setDetails(bhcDetail1.toString());
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建组织奖励信息_厅局级");
                //删除已经存储的
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if(bhcScore2>0){
                examAutoEvaluation.setIsNewRecord(false);
                examAutoEvaluation.setId("");
                examAutoEvaluation.setOption("单位或部门被评为省部级先进(综合类)");
                examAutoEvaluation.setOptionId("8e4b589738264a4ca1d36b2a115607c9");
                examAutoEvaluation.setScore(String.valueOf(bhcScore2));
                examAutoEvaluation.setDetails(bhcDetail2.toString());
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建组织奖励信息_省部级");
                //删除已经存储的
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if(bhcScore3>0){
                examAutoEvaluation.setIsNewRecord(false);
                examAutoEvaluation.setId("");
                examAutoEvaluation.setOption("单位或部门被评为全国先进(综合类)");
                examAutoEvaluation.setOptionId("f30a40c66fbd40ac9ea29063a0069eb2");
                examAutoEvaluation.setScore(String.valueOf(bhcScore3));
                examAutoEvaluation.setDetails(bhcDetail3.toString());
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建组织奖励信息_全国级");
                //删除已经存储的
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
        }

    }

    /*
     * 奖励信息（党建工作，组织）
     *
     * 局考处
     *
     * 年度
     *
     * */
    public void jkcJlxxYear(String year) {

        Map<String,Object> yearMap = this.getTimeQuantumByYear(year);
        Date nowYearDate = (Date) yearMap.get("nowYear");
        Date lastYearDate = (Date) yearMap.get("lastYear");
        year = (String) yearMap.get("year");
        // 12月17 调整
        List<AffairGeneralSituation> affairGeneralSituationsList = affairGeneralSituationService.selectChuPartyBranch();//查询处下所有党支部
        StringBuffer nncUnitNam = null;//记录南宁处党支部名称
        Boolean nncIs0 = false;//判断本次考评是否是南宁处下单位
        StringBuffer lzcUnitNam = null;//记录柳州处党支部名称
        Boolean lzcIs0 = false;//判断本次考评是否是柳州处下单位
        StringBuffer bhcUnitNam = null;//记录北海处党支部名称
        Boolean bhcIs0 = false;//判断本次考评是否是北海处单位
        Double nncScore1 = 0.0;//南宁处厅局级分数
        Double nncScore2 = 0.0;//南宁处省部级分数
        Double nncScore3 = 0.0;//南宁处国家级分数
        StringBuffer nncDetail1 = null;//南宁处厅局级详情
        StringBuffer nncDetail2 = null;//南宁处省部级详情
        StringBuffer nncDetail3 = null;//南宁处国家级详情
        Double lzcScore1 = 0.0;//柳州处厅局级分数
        Double lzcScore2 = 0.0;//柳州处省部级分数
        Double lzcScore3 = 0.0;//柳州处国家级分数
        StringBuffer lzcDetail1 = null;//柳州处厅局级详情
        StringBuffer lzcDetail2 = null;//柳州处省部级详情
        StringBuffer lzcDetail3 = null;//柳州处国家级详情
        Double bhcScore1 = 0.0;//北海处厅局级分数
        Double bhcScore2 = 0.0;//北海处省部级分数
        Double bhcScore3 = 0.0;//北海处国家级分数
        StringBuffer bhcDetail1 = null;//北海处厅局级详情
        StringBuffer bhcDetail2 = null;//北海处省部级详情
        StringBuffer bhcDetail3 = null;//北海处国家级详情
        for (AffairGeneralSituation affairGeneralSituation : affairGeneralSituationsList) {
            //党组织id
            String partyId = affairGeneralSituation.getId();
            //党组织名称
            String partyName = affairGeneralSituation.getPartyOrganization();
            List<AffairOrgRewardPunish> orgRewardPunishList = affairOrgRewardPunishService.getJLXXByNowLastTime(partyId,nowYearDate,lastYearDate);//查询该党支部这一时间段的奖励信息
            if(orgRewardPunishList!=null && orgRewardPunishList.size()>0){
                //判断该党支部为那一公安处下
                Boolean isNncParty = false;
                Boolean isLzcParty = false;
                Boolean isBhcParty = false;
                if (affairGeneralSituation.getParentIds().contains(",34,")) {
                    //南宁处
                    nncIs0 = true;
                    isNncParty = true;
                    if (nncUnitNam == null) {
                        nncUnitNam = new StringBuffer(partyName);
                    } else {
                        nncUnitNam.append("," + partyName);
                    }
                } else if (affairGeneralSituation.getParentIds().contains(",95,")) {
                    //柳州处
                    lzcIs0 = true;
                    isLzcParty = true;
                    if (lzcUnitNam == null) {
                        lzcUnitNam = new StringBuffer(partyName);
                    } else {
                        lzcUnitNam.append("," + partyName);
                    }
                } else {
                    //北海处
                    bhcIs0 = true;
                    isBhcParty = true;
                    if (bhcUnitNam == null) {
                        bhcUnitNam = new StringBuffer(partyName);
                    } else {
                        bhcUnitNam.append("," + partyName);
                    }
                }
                /**
                 * 1.单位或部门评为厅（局）级先进(综合类)，加0.5分。
                 * 2.单位或部门评为省部级先进(综合类)，加2分。
                 * 3.单位或部门评为全国先进(综合类)，加3分。
                 */
                //然后遍历奖励信息根据奖励类别进行统计，分数，详情，及相应的公安处下
                for(AffairOrgRewardPunish affairOrgRewardPunish : orgRewardPunishList){
                    String jlType = affairOrgRewardPunish.getType();//奖励类别
                    //1 中央级 2省部级  3铁路公安局级 4集团公司级 5公安局级 6 公安处级 7地市级
                    String jlTitle = affairOrgRewardPunish.getTitle();//奖励标题
                    Date jlDate = affairOrgRewardPunish.getDate();//奖励时间
                    if("3".equals(jlType)||"4".equals(jlType)){
                        //厅局
                        if(isNncParty){
                            if(nncDetail1==null){
                                nncDetail1 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"厅局级奖励");
                            }else{
                                nncDetail1.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"厅局级奖励");
                            }
                            nncScore1+=0.1;
                        }
                        if(isLzcParty){
                            if(lzcDetail1==null){
                                lzcDetail1 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"厅局级奖励");
                            }else{
                                lzcDetail1.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"厅局级奖励");
                            }
                            lzcScore1+=0.1;
                        }
                        if(isBhcParty){
                            if(bhcDetail1==null){
                                bhcDetail1 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"厅局级奖励");
                            }else{
                                bhcDetail1.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"厅局级奖励");
                            }
                            bhcScore1+=0.1;
                        }
                    }
                    if("2".equals(jlType)){
                        //省部级
                        if(isNncParty){
                            if(nncDetail2==null){
                                nncDetail2= new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"省部级奖励");
                            }else{
                                nncDetail2.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"省部级奖励");
                            }
                            nncScore2+=0.4;
                        }
                        if(isLzcParty){
                            if(lzcDetail2==null){
                                lzcDetail2= new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"省部级奖励");
                            }else{
                                lzcDetail2.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"省部级奖励");
                            }
                            lzcScore2+=0.4;
                        }
                        if(isBhcParty){
                            if(bhcDetail2==null){
                                bhcDetail2= new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"省部级奖励");
                            }else{
                                bhcDetail2.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"省部级奖励");
                            }
                            bhcScore2+=0.4;
                        }
                    }
                    if("1".equals(jlType)){
                        //国家级
                        if(isNncParty){
                            if(nncDetail3==null){
                                nncDetail3 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"国家级奖励");
                            }else{
                                nncDetail3.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"国家级奖励");
                            }
                            nncScore3+=0.6;
                        }
                        if(isLzcParty){
                            if(lzcDetail3==null){
                                lzcDetail3 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"国家级奖励");
                            }else{
                                lzcDetail3.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"国家级奖励");
                            }
                            lzcScore3+=0.6;
                        }
                        if(isBhcParty){
                            if(bhcDetail3==null){
                                bhcDetail3 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"国家级奖励");
                            }else{
                                bhcDetail3.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"国家级奖励");
                            }
                            bhcScore3+=0.6;
                        }
                    }

                }
            }

        }

        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
        examAutoEvaluation.setType("1");
        examAutoEvaluation.setEvalType("1");
        examAutoEvaluation.setPeriod("2");
        examAutoEvaluation.setYear(year);
        examAutoEvaluation.setFromSys("智慧政工");
        examAutoEvaluation.setRemark("每次");
        examAutoEvaluation.setAssess("南宁局政治部组织干部处");//初审人员
        examAutoEvaluation.setAssessId("bfdf74f010c9466dba12c1589ecab7f3");//初审人员id
        examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考评公共加分标准");
        examAutoEvaluation.setModelId("d3cd787886e44edb95e0f7b4dd3de389");
        if (nncIs0) {
            //南宁处
            examAutoEvaluation.setUnit("南宁处政治处组织干部室");
            examAutoEvaluation.setUnitId("27");
            examAutoEvaluation.setEvaluationId("34e8d855cf6b4b1ab5e7e23e7aaba658");
            if(nncScore1>0){
                examAutoEvaluation.setIsNewRecord(false);
                examAutoEvaluation.setId("");
                examAutoEvaluation.setOption("单位或部门被评为厅（局）级先进(综合类)");
                examAutoEvaluation.setOptionId("f077d4aa02a849a79ae2a56b528f3ac7");
                examAutoEvaluation.setScore(String.valueOf(nncScore1));
                examAutoEvaluation.setDetails(nncDetail1.toString());
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建组织奖励信息_厅局级");
                //删除已经存储的
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if(nncScore2>0){
                examAutoEvaluation.setIsNewRecord(false);
                examAutoEvaluation.setId("");
                examAutoEvaluation.setOption("单位或部门被评为省部级先进(综合类)");
                examAutoEvaluation.setOptionId("2c9ee22847284c65a6bc48f90dee8bf4");
                examAutoEvaluation.setScore(String.valueOf(nncScore2));
                examAutoEvaluation.setDetails(nncDetail2.toString());
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建组织奖励信息_省部级");
                //删除已经存储的
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if(nncScore3>0){
                examAutoEvaluation.setIsNewRecord(false);
                examAutoEvaluation.setId("");
                examAutoEvaluation.setOption("单位或部门被评为全国先进(综合类)");
                examAutoEvaluation.setOptionId("0a6d926c713547c1a9db59c4d2f03bd0");
                examAutoEvaluation.setScore(String.valueOf(nncScore3));
                examAutoEvaluation.setDetails(nncDetail3.toString());
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建组织奖励信息_全国级");
                //删除已经存储的
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }

        }
        if (lzcIs0) {
            //柳州处
            examAutoEvaluation.setUnit("柳州处政治处组织干部室");
            examAutoEvaluation.setUnitId("142");
            examAutoEvaluation.setEvaluationId("ec3ba2efdd404f2faa520f6e8a71ec4c");
            if(lzcScore1>0){
                examAutoEvaluation.setIsNewRecord(false);
                examAutoEvaluation.setId("");
                examAutoEvaluation.setOption("单位或部门被评为厅（局）级先进(综合类)");
                examAutoEvaluation.setOptionId("f077d4aa02a849a79ae2a56b528f3ac7");
                examAutoEvaluation.setScore(String.valueOf(lzcScore1));
                examAutoEvaluation.setDetails(lzcDetail1.toString());
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建组织奖励信息_厅局级");
                //删除已经存储的
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if(lzcScore2>0){
                examAutoEvaluation.setIsNewRecord(false);
                examAutoEvaluation.setId("");
                examAutoEvaluation.setOption("单位或部门被评为省部级先进(综合类)");
                examAutoEvaluation.setOptionId("2c9ee22847284c65a6bc48f90dee8bf4");
                examAutoEvaluation.setScore(String.valueOf(lzcScore2));
                examAutoEvaluation.setDetails(lzcDetail2.toString());
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建组织奖励信息_省部级");
                //删除已经存储的
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if(lzcScore3>0){
                examAutoEvaluation.setIsNewRecord(false);
                examAutoEvaluation.setId("");
                examAutoEvaluation.setOption("单位或部门被评为全国先进(综合类)");
                examAutoEvaluation.setOptionId("0a6d926c713547c1a9db59c4d2f03bd0");
                examAutoEvaluation.setScore(String.valueOf(lzcScore2));
                examAutoEvaluation.setDetails(lzcDetail3.toString());
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建组织奖励信息_全国级");
                //删除已经存储的
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
        }
        if (bhcIs0) {
            //北海处
            examAutoEvaluation.setUnit("北海处政治处组织干部室");
            examAutoEvaluation.setUnitId("264");
            examAutoEvaluation.setEvaluationId("c90918faf2614baa8fa85230482bd43e");
            if(bhcScore1>0){
                examAutoEvaluation.setIsNewRecord(false);
                examAutoEvaluation.setId("");
                examAutoEvaluation.setOption("单位或部门被评为厅（局）级先进(综合类)");
                examAutoEvaluation.setOptionId("f077d4aa02a849a79ae2a56b528f3ac7");
                examAutoEvaluation.setScore(String.valueOf(bhcScore1));
                examAutoEvaluation.setDetails(bhcDetail1.toString());
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建组织奖励信息_厅局级");
                //删除已经存储的
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if(bhcScore2>0){
                examAutoEvaluation.setIsNewRecord(false);
                examAutoEvaluation.setId("");
                examAutoEvaluation.setOption("单位或部门被评为省部级先进(综合类)");
                examAutoEvaluation.setOptionId("2c9ee22847284c65a6bc48f90dee8bf4");
                examAutoEvaluation.setScore(String.valueOf(bhcScore2));
                examAutoEvaluation.setDetails(bhcDetail2.toString());
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建组织奖励信息_省部级");
                //删除已经存储的
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if(bhcScore3>0){
                examAutoEvaluation.setIsNewRecord(false);
                examAutoEvaluation.setId("");
                examAutoEvaluation.setOption("单位或部门被评为全国先进(综合类)");
                examAutoEvaluation.setOptionId("0a6d926c713547c1a9db59c4d2f03bd0");
                examAutoEvaluation.setScore(String.valueOf(bhcScore3));
                examAutoEvaluation.setDetails(bhcDetail3.toString());
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建组织奖励信息_全国级");
                //删除已经存储的
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
        }
    }

    /*
     * 奖励信息（党建工作，组织）
     *
     * 局考局
     *
     * 月度
     *
     * */
    public void jkjJlxx(String checkTime) {

        String year = checkTime.substring(0, 4);
        String month = checkTime.substring(checkTime.length() - 2);
        Map<String,Object> monthMap = this.getTimeQuantumByMonth(year,month,"政工");
        Date nowMonthDate = (Date) monthMap.get("nowTime");
        Date lastMonthDate = (Date) monthMap.get("lastTime");
        year = (String) monthMap.get("year");
        month = (String) monthMap.get("month");
        List<AffairGeneralSituation> jjgPartyList = affairGeneralSituationService.getJJGPartyBranch();//局机关党支部
        for (AffairGeneralSituation affairGeneralSituation : jjgPartyList) {
            String partyId = affairGeneralSituation.getId();
            String partyName = affairGeneralSituation.getPartyOrganization();
            //List<AffairOrgRewardPunish> orgRewardPunishList = affairOrgRewardPunishService.getJLXXByMonth(partyId,checkTime);
            List<AffairOrgRewardPunish> orgRewardPunishList = affairOrgRewardPunishService.getJLXXByNowLastTime(partyId,nowMonthDate,lastMonthDate);
            StringBuffer detail1 = null;//厅局级
            StringBuffer detail2 = null;//省部级
            StringBuffer detail3 = null;//国家级
            Double score1 = 0.0;
            Double score2 = 0.0;
            Double score3 = 0.0;
            for(AffairOrgRewardPunish affairOrgRewardPunish : orgRewardPunishList){
                String jlType = affairOrgRewardPunish.getType();//奖励类别
                //1 中央级 2省部级  3铁路公安局级 4集团公司级 5公安局级 6 公安处级 7地市级
                String jlTitle = affairOrgRewardPunish.getTitle();//奖励标题
                Date jlDate = affairOrgRewardPunish.getDate();//奖励时间
                if("3".equals(jlType)||"4".equals(jlType)){
                    //厅局级
                    if(detail1 == null){
                        detail1 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"厅局级奖励");
                    }else{
                        detail1.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"厅局级奖励");
                    }
                    score1 += 1;
                }
                if("2".equals(jlType)){
                    //省部级
                    if(detail2 == null){
                        detail2 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"省部级奖励");
                    }else{
                        detail2.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"省部级奖励");
                    }
                    score2 += 3;
                }
                if("1".equals(jlType)){
                    //国家级
                    if(detail3 == null){
                        detail3 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"国家级奖励");
                    }else{
                        detail3.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"国家级奖励");
                    }
                    score3 += 5;
                }
            }
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("2");
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setAssess("南宁局绩效办");
            examAutoEvaluation.setAssessId("cca66e1339f14799b01f6db43ed16e16");
            examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队月度绩效考核公共加分标准");
            examAutoEvaluation.setModelId("d07471fe33c64f85afc6288d039f2248");
            examAutoEvaluation.setFromSys("智慧政工");
            List<User> userList = this.getUserByPartyId(partyId);
           for(User user : userList){
               if(!user.getOffice().getName().contains("大队")){
                   //过滤掉大队
                   examAutoEvaluation.setUnit(user.getOffice().getName());
                   examAutoEvaluation.setUnitId(user.getOffice().getId());
                   examAutoEvaluation.setEvaluationId(user.getId());
                   if(score1>0){
                       examAutoEvaluation.setIsNewRecord(false);
                       examAutoEvaluation.setId("");
                       examAutoEvaluation.setOption("单位或各部门被评为厅（局）级先进（综合类）");
                       examAutoEvaluation.setOptionId("50ad968cab7d40a79aa11b23a4d98316");
                       examAutoEvaluation.setScore(String.valueOf(score1));
                       examAutoEvaluation.setDetails(detail1.toString());
                       examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建组织奖励信息_厅局级");
                       //删除已经存储的
                       this.deleteInfoByMore(examAutoEvaluation);
                       this.save(examAutoEvaluation);
                   }
                   if(score2>0){
                       examAutoEvaluation.setIsNewRecord(false);
                       examAutoEvaluation.setId("");
                       examAutoEvaluation.setOption("单位或部门评为省部级先进(综合类)");
                       examAutoEvaluation.setOptionId("c06c719359b3465494f4a54232da19ab");
                       examAutoEvaluation.setScore(String.valueOf(score2));
                       examAutoEvaluation.setDetails(detail2.toString());
                       examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建组织奖励信息_省部级");
                       //删除已经存储的
                       this.deleteInfoByMore(examAutoEvaluation);
                       this.save(examAutoEvaluation);
                   }
                   if(score3>0){
                       examAutoEvaluation.setIsNewRecord(false);
                       examAutoEvaluation.setId("");
                       examAutoEvaluation.setOption("单位或部门评为全国先进(综合类)");
                       examAutoEvaluation.setOptionId("3f5919e86a764a9d8281bfb6f91414ea");
                       examAutoEvaluation.setScore(String.valueOf(score3));
                       examAutoEvaluation.setDetails(detail3.toString());
                       examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建组织奖励信息_全国级");
                       //删除已经存储的
                       this.deleteInfoByMore(examAutoEvaluation);
                       this.save(examAutoEvaluation);
                   }
               }
           }
        }
    }

    /*
     * 奖励信息（党建工作，组织）
     *
     * 局考局
     *
     * 年度
     *
     * */
    public void jkjJlxxYear(String year) {

        Map<String,Object> yearMap = this.getTimeQuantumByYear(year);
        Date nowYearDate = (Date) yearMap.get("nowYear");
        Date lastYearDate = (Date) yearMap.get("lastYear");
        year = (String) yearMap.get("year");
        List<AffairGeneralSituation> jjgPartyList = affairGeneralSituationService.getJJGPartyBranch();//局机关党支部
        for (AffairGeneralSituation affairGeneralSituation : jjgPartyList) {
            String partyId = affairGeneralSituation.getId();
            String partyName = affairGeneralSituation.getPartyOrganization();
            //List<AffairOrgRewardPunish> orgRewardPunishList = affairOrgRewardPunishService.getJLXXByMonth(partyId,year);
            List<AffairOrgRewardPunish> orgRewardPunishList = affairOrgRewardPunishService.getJLXXByNowLastTime(partyId,nowYearDate,lastYearDate);
            StringBuffer detail1 = null;//厅局级
            StringBuffer detail2 = null;//省部级
            StringBuffer detail3 = null;//国家级
            Double score1 = 0.0;
            Double score2 = 0.0;
            Double score3 = 0.0;
            for(AffairOrgRewardPunish affairOrgRewardPunish : orgRewardPunishList){
                String jlType = affairOrgRewardPunish.getType();//奖励类别
                //1 中央级 2省部级  3铁路公安局级 4集团公司级 5公安局级 6 公安处级 7地市级
                String jlTitle = affairOrgRewardPunish.getTitle();//奖励标题
                Date jlDate = affairOrgRewardPunish.getDate();//奖励时间
                if("3".equals(jlType)||"4".equals(jlType)){
                    //厅局级
                    if(detail1 == null){
                        detail1 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"厅局级奖励");
                    }else{
                        detail1.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"厅局级奖励");
                    }
                    score1 += 0.5;
                }
                if("2".equals(jlType)){
                    //省部级
                    if(detail2 == null){
                        detail2 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"省部级奖励");
                    }else{
                        detail2.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"省部级奖励");
                    }
                    score2 += 1;
                }
                if("1".equals(jlType)){
                    //国家级
                    if(detail3 == null){
                        detail3 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"国家级奖励");
                    }else{
                        detail3.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"国家级奖励");
                    }
                    score3 += 1.5;
                }
            }
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("2");
            examAutoEvaluation.setPeriod("2");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setAssess("南宁局绩效办");
            examAutoEvaluation.setAssessId("cca66e1339f14799b01f6db43ed16e16");
            examAutoEvaluation.setModel("2020年年度公安局对局机关各处室及直属支队年度绩效考核公共加分标准");
            examAutoEvaluation.setModelId("ee53f212fa8740a7a88c8764104d15a3");
            examAutoEvaluation.setFromSys("智慧政工");
            List<User> userList = this.getUserByPartyId(partyId);
            for(User user : userList){
                if(!user.getOffice().getName().contains("大队")){
                    //过滤掉支队下大队
                    examAutoEvaluation.setUnit(user.getOffice().getName());
                    examAutoEvaluation.setUnitId(user.getOffice().getId());
                    examAutoEvaluation.setEvaluationId(user.getId());
                    if(score1>0){
                        examAutoEvaluation.setIsNewRecord(false);
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setOption("单位或各部门被评为厅（局）级先进（综合类）");
                        examAutoEvaluation.setOptionId("50ad968cab7d40a79aa11b23a4d98316");
                        examAutoEvaluation.setScore(String.valueOf(score1));
                        examAutoEvaluation.setDetails(detail1.toString());
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建组织奖励信息_厅局级");
                        //删除已经存储的
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    if(score2>0){
                        examAutoEvaluation.setIsNewRecord(false);
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setOption("单位或部门评为省部级先进(综合类)");
                        examAutoEvaluation.setOptionId("241158492f704c5a9e9f7ea029b27770");
                        examAutoEvaluation.setScore(String.valueOf(score2));
                        examAutoEvaluation.setDetails(detail2.toString());
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建组织奖励信息_省部级");
                        //删除已经存储的
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    if(score3>0){
                        examAutoEvaluation.setIsNewRecord(false);
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setOption("单位或部门评为全国先进(综合类)");
                        examAutoEvaluation.setOptionId("c31e805a160045148406f0781d6b4c7f");
                        examAutoEvaluation.setScore(String.valueOf(score3));
                        examAutoEvaluation.setDetails(detail3.toString());
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建组织奖励信息_全国级");
                        //删除已经存储的
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                }
            }
        }
    }

    /*
     * 奖励信息（党建工作，组织）
     *
     * 处考处
     *
     * 月度
     * */
    public void ckcJlxx(String checkTime) {

        String year = checkTime.substring(0, 4);
        String month = checkTime.substring(checkTime.length() - 2);
        Map<String,Object> monthMap = this.getTimeQuantumByMonth(year,month,"政工");
        Date nowMonthDate = (Date) monthMap.get("nowTime");
        Date lastMonthDate = (Date) monthMap.get("lastTime");
        year = (String) monthMap.get("year");
        month = (String) monthMap.get("month");
        //获取各处处机关党组织
        List<AffairGeneralSituation> nncPartyList = affairGeneralSituationService.getChuPartyBranch("34", "1");
        List<AffairGeneralSituation> lzcPartyList = affairGeneralSituationService.getChuPartyBranch("95", "1");
        List<AffairGeneralSituation> bhcPartyList = affairGeneralSituationService.getChuPartyBranch("156", "1");
        for (AffairGeneralSituation affairGeneralSituation : nncPartyList) {
            String partyId = affairGeneralSituation.getId();
            String partyName = affairGeneralSituation.getPartyOrganization();
//            List<AffairOrgRewardPunish> orgRewardPunishList = affairOrgRewardPunishService.getJLXXByMonth(partyId,checkTime);
            List<AffairOrgRewardPunish> orgRewardPunishList = affairOrgRewardPunishService.getJLXXByNowLastTime(partyId,nowMonthDate,lastMonthDate);
            StringBuffer detail1 = null;//厅局级
            StringBuffer detail2 = null;//省部级
            StringBuffer detail3 = null;//国家级
            Double score1 = 0.0;
            Double score2 = 0.0;
            Double score3 = 0.0;
            for(AffairOrgRewardPunish affairOrgRewardPunish : orgRewardPunishList){
                String jlType = affairOrgRewardPunish.getType();//奖励类别
                //1 中央级 2省部级  3铁路公安局级 4集团公司级 5公安局级 6 公安处级 7地市级
                String jlTitle = affairOrgRewardPunish.getTitle();//奖励标题
                Date jlDate = affairOrgRewardPunish.getDate();//奖励时间
                if("3".equals(jlType)||"4".equals(jlType)){
                    //厅局级
                    if(detail1 == null){
                        detail1 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"厅局级奖励");
                    }else{
                        detail1.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"厅局级奖励");
                    }
                    score1 += 1;
                }
                if("2".equals(jlType)){
                    //省部级
                    if(detail2 == null){
                        detail2 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"省部级奖励");
                    }else{
                        detail2.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"省部级奖励");
                    }
                    score2 += 3;
                }
                if("1".equals(jlType)){
                    //国家级
                    if(detail3 == null){
                        detail3 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"国家级奖励");
                    }else{
                        detail3.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"国家级奖励");
                    }
                    score3 += 5;
                }
            }
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");//1 单位  2 个人
            examAutoEvaluation.setEvalType("4");// 1 局考处  2 局考局机关  3 处考队所 4 处考处机关 5处领导班子 6 中基层领导  7 民警
            examAutoEvaluation.setPeriod("1");//1月 2年
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setAssess("南宁处绩效办");
            examAutoEvaluation.setAssessId("978958003ea44a4bba3eed8ee6ceff3c");
            examAutoEvaluation.setModel("2020年月度南宁公安处对全处各部门公共加分标准");
            examAutoEvaluation.setModelId("1f2bbad95514488db2e93ebd7a4352dd");
            examAutoEvaluation.setFromSys("智慧政工");
            List<User> userList = this.getUserByPartyId(partyId);
            for(User user : userList){
                if (!user.getOffice().getName().contains("派出所")&&!user.getOffice().getName().contains("大队")) {
                    examAutoEvaluation.setUnit(user.getOffice().getName());
                    examAutoEvaluation.setUnitId(user.getOffice().getId());
                    examAutoEvaluation.setEvaluationId(user.getId());
                    if (score1 > 0) {
                        examAutoEvaluation.setIsNewRecord(false);
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setOption("单位或部门被评为厅（局）级先进(综合类)");
                        examAutoEvaluation.setOptionId("85a2b324e18046fa90f31bca61cf3f4a");
                        examAutoEvaluation.setScore(String.valueOf(score1));
                        examAutoEvaluation.setDetails(detail1.toString());
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","党建组织奖励信息_厅局级");
                        //删除之前存储的
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    if (score2 > 0) {
                        examAutoEvaluation.setIsNewRecord(false);
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setOption("单位或部门被评为省部级先进(综合类)");
                        examAutoEvaluation.setOptionId("bf06a0201f9f4290baaef72d6bcb59c7");
                        examAutoEvaluation.setScore(String.valueOf(score2));
                        examAutoEvaluation.setDetails(detail2.toString());
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","党建组织奖励信息_省部级");
                        //删除之前存储的
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    if (score3 > 0) {
                        examAutoEvaluation.setIsNewRecord(false);
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setOption("单位或部门被评为全国先进(综合类)");
                        examAutoEvaluation.setOptionId("75da2f7f429c4ad0a854cccf099139f9");
                        examAutoEvaluation.setScore(String.valueOf(score3));
                        examAutoEvaluation.setDetails(detail3.toString());
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","党建组织奖励信息_全国级");
                        //删除之前存储的
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                }
            }
        }
        for (AffairGeneralSituation affairGeneralSituation : lzcPartyList) {
            String partyId = affairGeneralSituation.getId();
            String partyName = affairGeneralSituation.getPartyOrganization();
//            List<AffairOrgRewardPunish> orgRewardPunishList = affairOrgRewardPunishService.getJLXXByMonth(partyId,checkTime);
            List<AffairOrgRewardPunish> orgRewardPunishList = affairOrgRewardPunishService.getJLXXByNowLastTime(partyId,nowMonthDate,lastMonthDate);
            StringBuffer detail1 = null;//厅局级
            StringBuffer detail2 = null;//省部级
            StringBuffer detail3 = null;//国家级
            Double score1 = 0.0;
            Double score2 = 0.0;
            Double score3 = 0.0;
            for(AffairOrgRewardPunish affairOrgRewardPunish : orgRewardPunishList){
                String jlType = affairOrgRewardPunish.getType();//奖励类别
                //1 中央级 2省部级  3铁路公安局级 4集团公司级 5公安局级 6 公安处级 7地市级
                String jlTitle = affairOrgRewardPunish.getTitle();//奖励标题
                Date jlDate = affairOrgRewardPunish.getDate();//奖励时间
                if("3".equals(jlType)||"4".equals(jlType)){
                    //厅局级
                    if(detail1 == null){
                        detail1 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"厅局级奖励");
                    }else{
                        detail1.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"厅局级奖励");
                    }
                    score1 += 1;
                }
                if("2".equals(jlType)){
                    //省部级
                    if(detail2 == null){
                        detail2 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"省部级奖励");
                    }else{
                        detail2.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"省部级奖励");
                    }
                    score2 += 3;
                }
                if("1".equals(jlType)){
                    //国家级
                    if(detail3 == null){
                        detail3 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"国家级奖励");
                    }else{
                        detail3.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"国家级奖励");
                    }
                    score3 += 5;
                }
            }
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");//1 单位  2 个人
            examAutoEvaluation.setEvalType("4");// 1 局考处  2 局考局机关  3 处考队所 4 处考处机关 5处领导班子 6 中基层领导  7 民警
            examAutoEvaluation.setPeriod("1");//1月 2年
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setAssess("柳州处绩效办");
            examAutoEvaluation.setAssessId("6af0e615e9b0477da82eff06ff532c8b");
            examAutoEvaluation.setModel("2020年月度柳州处对单位（部门）绩效考评公共加分标准");
            examAutoEvaluation.setModelId("4eaa281381b742adbbc9b8540d7bf822");
            examAutoEvaluation.setFromSys("智慧政工");
            List<User> userList = this.getUserByPartyId(partyId);
            for(User user : userList){
                if (!user.getOffice().getName().contains("派出所")) {
                    examAutoEvaluation.setUnit(user.getOffice().getName());
                    examAutoEvaluation.setUnitId(user.getOffice().getId());
                    examAutoEvaluation.setEvaluationId(user.getId());
                    if (score1 > 0) {
                        examAutoEvaluation.setIsNewRecord(false);
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setOption("单位或部门被评为厅（局）级先进(综合类)");
                        examAutoEvaluation.setOptionId("e3ce59efe65242669be815b240e984b2");
                        examAutoEvaluation.setScore(String.valueOf(score1));
                        examAutoEvaluation.setDetails(detail1.toString());
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","党建组织奖励信息_厅局级");
                        //删除之前存储的
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    if (score2 > 0) {
                        examAutoEvaluation.setIsNewRecord(false);
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setOption("单位或部门被评为省部级先进(综合类)");
                        examAutoEvaluation.setOptionId("1f01d5fe3adf435ab64e67579631f5cf");
                        examAutoEvaluation.setScore(String.valueOf(score2));
                        examAutoEvaluation.setDetails(detail2.toString());
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","党建组织奖励信息_省部级");
                        //删除之前存储的
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    if (score3 > 0) {
                        examAutoEvaluation.setIsNewRecord(false);
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setOption("单位或部门被评为全国先进(综合类)");
                        examAutoEvaluation.setOptionId("9ddbb839b8c74280bc778ec6af92e2b4");
                        examAutoEvaluation.setScore(String.valueOf(score3));
                        examAutoEvaluation.setDetails(detail3.toString());
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","党建组织奖励信息_全国级");
                        //删除之前存储的
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                }
            }

        }
        for (AffairGeneralSituation affairGeneralSituation : bhcPartyList) {
            String partyId = affairGeneralSituation.getId();
            String partyName = affairGeneralSituation.getPartyOrganization();
//            List<AffairOrgRewardPunish> orgRewardPunishList = affairOrgRewardPunishService.getJLXXByMonth(partyId,checkTime);
            List<AffairOrgRewardPunish> orgRewardPunishList = affairOrgRewardPunishService.getJLXXByNowLastTime(partyId,nowMonthDate,lastMonthDate);
            StringBuffer detail1 = null;//厅局级
            StringBuffer detail2 = null;//省部级
            StringBuffer detail3 = null;//国家级
            Double score1 = 0.0;
            Double score2 = 0.0;
            Double score3 = 0.0;
            for(AffairOrgRewardPunish affairOrgRewardPunish : orgRewardPunishList){
                String jlType = affairOrgRewardPunish.getType();//奖励类别
                //1 中央级 2省部级  3铁路公安局级 4集团公司级 5公安局级 6 公安处级 7地市级
                String jlTitle = affairOrgRewardPunish.getTitle();//奖励标题
                Date jlDate = affairOrgRewardPunish.getDate();//奖励时间
                if("3".equals(jlType)||"4".equals(jlType)){
                    //厅局级
                    if(detail1 == null){
                        detail1 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"厅局级奖励");
                    }else{
                        detail1.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"厅局级奖励");
                    }
                    score1 += 1;
                }
                if("2".equals(jlType)){
                    //省部级
                    if(detail2 == null){
                        detail2 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"省部级奖励");
                    }else{
                        detail2.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"省部级奖励");
                    }
                    score2 += 3;
                }
                if("1".equals(jlType)){
                    //国家级
                    if(detail3 == null){
                        detail3 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"国家级奖励");
                    }else{
                        detail3.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"国家级奖励");
                    }
                    score3 += 5;
                }
            }
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");//1 单位  2 个人
            examAutoEvaluation.setEvalType("4");// 1 局考处  2 局考局机关  3 处考队所 4 处考处机关 5处领导班子 6 中基层领导  7 民警
            examAutoEvaluation.setPeriod("1");//1月 2年
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setAssess("北海处绩效办");
            examAutoEvaluation.setAssessId("46c521bf67e24db28772b3eac52dc454");
            examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队绩效考评公共加分标准");
            examAutoEvaluation.setModelId("87edef047b9a47d086f5b7e0ebc06e8f");
            examAutoEvaluation.setFromSys("智慧政工");
            List<User> userList = this.getUserByPartyId(partyId);
            for(User user : userList){
                if (!user.getOffice().getName().contains("派出所")&&!user.getOffice().getName().contains("大队")) {
                    examAutoEvaluation.setUnit(user.getOffice().getName());
                    examAutoEvaluation.setUnitId(user.getOffice().getId());
                    examAutoEvaluation.setEvaluationId(user.getId());
                    if (score1 > 0) {
                        examAutoEvaluation.setIsNewRecord(false);
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setOption("单位或部门被评为厅（局）级先进（综合类）");
                        examAutoEvaluation.setOptionId("bcc7f212b274473a89f304017d6994a6");
                        examAutoEvaluation.setScore(String.valueOf(score1));
                        examAutoEvaluation.setDetails(detail1.toString());
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","党建组织奖励信息_厅局级");
                        //删除之前存储的
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    if (score2 > 0) {
                        examAutoEvaluation.setIsNewRecord(false);
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setOption("单位或部门被评为省部级先进(综合类)");
                        examAutoEvaluation.setOptionId("82192ba89b94414b8aecc29fba16c66b");
                        examAutoEvaluation.setScore(String.valueOf(score2));
                        examAutoEvaluation.setDetails(detail2.toString());
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","党建组织奖励信息_省部级");
                        //删除之前存储的
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    if (score3 > 0) {
                        examAutoEvaluation.setIsNewRecord(false);
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setOption("单位或部门被评为全国先进(综合类)");
                        examAutoEvaluation.setOptionId("0bcefbbf3e984875b0689aa0f6b07e49");
                        examAutoEvaluation.setScore(String.valueOf(score3));
                        examAutoEvaluation.setDetails(detail3.toString());
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","党建组织奖励信息_全国级");
                        //删除之前存储的
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                }
            }
        }
    }

    /*
     * 奖励信息（党建工作，组织）
     *
     * 处考处
     *
     * 年度
     * */
    public void ckcJlxxYear(String year) {

        //获取各处处机关党组织
        Map<String,Object> yearMap = this.getTimeQuantumByYear(year);
        Date nowYearDate = (Date) yearMap.get("nowYear");
        Date lastYearDate = (Date) yearMap.get("lastYear");
        year = (String) yearMap.get("year");
        List<AffairGeneralSituation> nncPartyList = affairGeneralSituationService.getChuPartyBranch("34", "1");
        List<AffairGeneralSituation> lzcPartyList = affairGeneralSituationService.getChuPartyBranch("95", "1");
        List<AffairGeneralSituation> bhcPartyList = affairGeneralSituationService.getChuPartyBranch("156", "1");
        for (AffairGeneralSituation affairGeneralSituation : nncPartyList) {
            String partyId = affairGeneralSituation.getId();
            String partyName = affairGeneralSituation.getPartyOrganization();
//            List<AffairOrgRewardPunish> orgRewardPunishList = affairOrgRewardPunishService.getJLXXByMonth(partyId,year);
            List<AffairOrgRewardPunish> orgRewardPunishList = affairOrgRewardPunishService.getJLXXByNowLastTime(partyId,nowYearDate,lastYearDate);
            StringBuffer detail1 = null;//厅局级
            StringBuffer detail2 = null;//省部级
            StringBuffer detail3 = null;//国家级
            Double score1 = 0.0;
            Double score2 = 0.0;
            Double score3 = 0.0;
            for(AffairOrgRewardPunish affairOrgRewardPunish : orgRewardPunishList){
                String jlType = affairOrgRewardPunish.getType();//奖励类别
                //1 中央级 2省部级  3铁路公安局级 4集团公司级 5公安局级 6 公安处级 7地市级
                String jlTitle = affairOrgRewardPunish.getTitle();//奖励标题
                Date jlDate = affairOrgRewardPunish.getDate();//奖励时间
                if("3".equals(jlType)||"4".equals(jlType)){
                    //厅局级
                    if(detail1 == null){
                        detail1 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"厅局级奖励");
                    }else{
                        detail1.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"厅局级奖励");
                    }
                    score1 += 0.5;
                }
                if("2".equals(jlType)){
                    //省部级
                    if(detail2 == null){
                        detail2 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"省部级奖励");
                    }else{
                        detail2.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"省部级奖励");
                    }
                    score2 += 1;
                }
                if("1".equals(jlType)){
                    //国家级
                    if(detail3 == null){
                        detail3 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"国家级奖励");
                    }else{
                        detail3.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"国家级奖励");
                    }
                    score3 += 1.5;
                }
            }
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");//1 单位  2 个人
            examAutoEvaluation.setEvalType("4");// 1 局考处  2 局考局机关  3 处考队所 4 处考处机关 5处领导班子 6 中基层领导  7 民警
            examAutoEvaluation.setPeriod("2");//1月 2年
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setAssess("南宁处绩效办");
            examAutoEvaluation.setAssessId("978958003ea44a4bba3eed8ee6ceff3c");
            examAutoEvaluation.setModel("2020年年度南宁公安处对全处各部门公共加分标准");
            examAutoEvaluation.setModelId("d2e2f45cbd69457f807d23f2e1968c2c");
            examAutoEvaluation.setFromSys("智慧政工");
            List<User> userList = this.getUserByPartyId(partyId);
            for(User user : userList){
                if (!user.getOffice().getName().contains("派出所")) {
                    examAutoEvaluation.setUnit(user.getOffice().getName());
                    examAutoEvaluation.setUnitId(user.getOffice().getId());
                    examAutoEvaluation.setEvaluationId(user.getId());
                    if (score1 > 0) {
                        examAutoEvaluation.setIsNewRecord(false);
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setOption("单位或部门被评为厅（局）级先进（综合类）");
                        examAutoEvaluation.setOptionId("81be2c191173475ba0558b5f6145e613");
                        examAutoEvaluation.setScore(String.valueOf(score1));
                        examAutoEvaluation.setDetails(detail1.toString());
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","党建组织奖励信息_厅局级");
                        //删除之前存储的
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    if (score2 > 0) {
                        examAutoEvaluation.setIsNewRecord(false);
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setOption("单位或部门被评为省部级先进(综合类)");
                        examAutoEvaluation.setOptionId("f99e774f1956400fb5312e0cdcfe4c34");
                        examAutoEvaluation.setScore(String.valueOf(score2));
                        examAutoEvaluation.setDetails(detail2.toString());
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","党建组织奖励信息_省部级");
                        //删除之前存储的
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    if (score3 > 0) {
                        examAutoEvaluation.setIsNewRecord(false);
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setOption("单位或部门被评为全国先进(综合类)");
                        examAutoEvaluation.setOptionId("0c083db978f547b48de6350213bf8ea5");
                        examAutoEvaluation.setScore(String.valueOf(score3));
                        examAutoEvaluation.setDetails(detail3.toString());
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","党建组织奖励信息_全国级");
                        //删除之前存储的
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                }
            }
        }
        for (AffairGeneralSituation affairGeneralSituation : lzcPartyList) {
            String partyId = affairGeneralSituation.getId();
            String partyName = affairGeneralSituation.getPartyOrganization();
//            List<AffairOrgRewardPunish> orgRewardPunishList = affairOrgRewardPunishService.getJLXXByMonth(partyId,year);
            List<AffairOrgRewardPunish> orgRewardPunishList = affairOrgRewardPunishService.getJLXXByNowLastTime(partyId,nowYearDate,lastYearDate);
            StringBuffer detail1 = null;//厅局级
            StringBuffer detail2 = null;//省部级
            StringBuffer detail3 = null;//国家级
            Double score1 = 0.0;
            Double score2 = 0.0;
            Double score3 = 0.0;
            for(AffairOrgRewardPunish affairOrgRewardPunish : orgRewardPunishList){
                String jlType = affairOrgRewardPunish.getType();//奖励类别
                //1 中央级 2省部级  3铁路公安局级 4集团公司级 5公安局级 6 公安处级 7地市级
                String jlTitle = affairOrgRewardPunish.getTitle();//奖励标题
                Date jlDate = affairOrgRewardPunish.getDate();//奖励时间
                if("3".equals(jlType)||"4".equals(jlType)){
                    //厅局级
                    if(detail1 == null){
                        detail1 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"厅局级奖励");
                    }else{
                        detail1.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"厅局级奖励");
                    }
                    score1 += 0.5;
                }
                if("2".equals(jlType)){
                    //省部级
                    if(detail2 == null){
                        detail2 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"省部级奖励");
                    }else{
                        detail2.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"省部级奖励");
                    }
                    score2 += 1;
                }
                if("1".equals(jlType)){
                    //国家级
                    if(detail3 == null){
                        detail3 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"国家级奖励");
                    }else{
                        detail3.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"国家级奖励");
                    }
                    score3 += 1.5;
                }
            }
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");//1 单位  2 个人
            examAutoEvaluation.setEvalType("4");// 1 局考处  2 局考局机关  3 处考队所 4 处考处机关 5处领导班子 6 中基层领导  7 民警
            examAutoEvaluation.setPeriod("2");//1月 2年
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setAssess("柳州处绩效办");
            examAutoEvaluation.setAssessId("6af0e615e9b0477da82eff06ff532c8b");
            examAutoEvaluation.setModel("2020年年度柳州处对单位（部门）绩效考评公共加分标准");
            examAutoEvaluation.setModelId("d784cce1380546a986567debfeb0dcdb");
            examAutoEvaluation.setFromSys("智慧政工");
            List<User> userList = this.getUserByPartyId(partyId);
            for(User user : userList){
                if (!user.getOffice().getName().contains("派出所")) {
                    examAutoEvaluation.setUnit(user.getOffice().getName());
                    examAutoEvaluation.setUnitId(user.getOffice().getId());
                    examAutoEvaluation.setEvaluationId(user.getId());
                    if(score1>0){
                        examAutoEvaluation.setIsNewRecord(false);
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setOption("单位或部门被评为厅（局）级先进(综合类)");
                        examAutoEvaluation.setOptionId("e2d9261ddb4f4040b745dcdfe510ac34");
                        examAutoEvaluation.setScore(String.valueOf(score1));
                        examAutoEvaluation.setDetails(detail1.toString());
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","党建组织奖励信息_厅局级");
                        //删除之前存储的
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    if(score2>0){
                        examAutoEvaluation.setIsNewRecord(false);
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setOption("单位或部门被评为省部级先进(综合类)");
                        examAutoEvaluation.setOptionId("00b74cc71bc54adc8ffef7919f531ed3");
                        examAutoEvaluation.setScore(String.valueOf(score2));
                        examAutoEvaluation.setDetails(detail2.toString());
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","党建组织奖励信息_省部级");
                        //删除之前存储的
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    if(score3>0){
                        examAutoEvaluation.setIsNewRecord(false);
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setOption("单位或部门被评为全国先进(综合类)");
                        examAutoEvaluation.setOptionId("df4b0252a0594487897d799838a7bc0d");
                        examAutoEvaluation.setScore(String.valueOf(score3));
                        examAutoEvaluation.setDetails(detail3.toString());
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","党建组织奖励信息_全国级");
                        //删除之前存储的
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                }
            }

        }
        for (AffairGeneralSituation affairGeneralSituation : bhcPartyList) {
            String partyId = affairGeneralSituation.getId();
            String partyName = affairGeneralSituation.getPartyOrganization();
//            List<AffairOrgRewardPunish> orgRewardPunishList = affairOrgRewardPunishService.getJLXXByMonth(partyId,year);
            List<AffairOrgRewardPunish> orgRewardPunishList = affairOrgRewardPunishService.getJLXXByNowLastTime(partyId,nowYearDate,lastYearDate);
            StringBuffer detail1 = null;//厅局级
            StringBuffer detail2 = null;//省部级
            StringBuffer detail3 = null;//国家级
            Double score1 = 0.0;
            Double score2 = 0.0;
            Double score3 = 0.0;
            for(AffairOrgRewardPunish affairOrgRewardPunish : orgRewardPunishList){
                String jlType = affairOrgRewardPunish.getType();//奖励类别
                //1 中央级 2省部级  3铁路公安局级 4集团公司级 5公安局级 6 公安处级 7地市级
                String jlTitle = affairOrgRewardPunish.getTitle();//奖励标题
                Date jlDate = affairOrgRewardPunish.getDate();//奖励时间
                if("3".equals(jlType)||"4".equals(jlType)){
                    //厅局级
                    if(detail1 == null){
                        detail1 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"厅局级奖励");
                    }else{
                        detail1.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"厅局级奖励");
                    }
                    score1 += 0.5;
                }
                if("2".equals(jlType)){
                    //省部级
                    if(detail2 == null){
                        detail2 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"省部级奖励");
                    }else{
                        detail2.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"省部级奖励");
                    }
                    score2 += 1;
                }
                if("1".equals(jlType)){
                    //国家级
                    if(detail3 == null){
                        detail3 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"国家级奖励");
                    }else{
                        detail3.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"国家级奖励");
                    }
                    score3 += 1.5;
                }
            }
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");//1 单位  2 个人
            examAutoEvaluation.setEvalType("4");// 1 局考处  2 局考局机关  3 处考队所 4 处考处机关 5处领导班子 6 中基层领导  7 民警
            examAutoEvaluation.setPeriod("2");//1月 2年
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setAssess("北海处绩效办");
            examAutoEvaluation.setAssessId("46c521bf67e24db28772b3eac52dc454");
            examAutoEvaluation.setModel("2020年年度北海处对机关科室、支队绩效考评公共加分标准");
            examAutoEvaluation.setModelId("176725d6e1d443f480d67193f836cd8b");
            examAutoEvaluation.setFromSys("智慧政工");
            List<User> userList = this.getUserByPartyId(partyId);
            for(User user : userList){
                if (!user.getOffice().getName().contains("派出所")) {
                    examAutoEvaluation.setUnit(user.getOffice().getName());
                    examAutoEvaluation.setUnitId(user.getOffice().getId());
                    examAutoEvaluation.setEvaluationId(user.getId());
                    if (score1 > 0) {
                        examAutoEvaluation.setIsNewRecord(false);
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setOption("单位或部门被评为厅（局）级先进(综合类)");
                        examAutoEvaluation.setOptionId("c8d4d22ee4594e9b953f6cb294809b23");
                        examAutoEvaluation.setScore(String.valueOf(score1));
                        examAutoEvaluation.setDetails(detail1.toString());
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","党建组织奖励信息_厅局级");
                        //删除之前存储的
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    if (score2 > 0) {
                        examAutoEvaluation.setIsNewRecord(false);
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setOption("单位或部门被评为省部级先进(综合类)");
                        examAutoEvaluation.setOptionId("423f8f6f2d564f0b95ad5f4ba68bd768");
                        examAutoEvaluation.setScore(String.valueOf(score2));
                        examAutoEvaluation.setDetails(detail2.toString());
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","党建组织奖励信息_省部级");
                        //删除之前存储的
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    if (score3 > 0) {
                        examAutoEvaluation.setIsNewRecord(false);
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setOption("单位或部门被评为全国先进(综合类)");
                        examAutoEvaluation.setOptionId("4fd8789399aa4452ab11bd32d279a42b");
                        examAutoEvaluation.setScore(String.valueOf(score3));
                        examAutoEvaluation.setDetails(detail3.toString());
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","党建组织奖励信息_全国级");
                        //删除之前存储的
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                }
            }
        }
    }

    /*
     * 奖励信息（党建工作，组织）
     *
     * 处考派出所
     *
     * 月度
     * */
    public void ckpcsJlxx(String checkTime) {

        String year = checkTime.substring(0, 4);
        String month = checkTime.substring(checkTime.length() - 2);
        Map<String,Object> monthMap = this.getTimeQuantumByMonth(year,month,"政工");
        Date nowMonthDate = (Date) monthMap.get("nowTime");
        Date lastMonthDate = (Date) monthMap.get("lastTime");
        year = (String) monthMap.get("year");
        month = (String) monthMap.get("month");
        //获取各处派出所党组织
        List<AffairGeneralSituation> nncPartyList = affairGeneralSituationService.getChuPartyBranch("34", "2");
        List<AffairGeneralSituation> lzcPartyList = affairGeneralSituationService.getChuPartyBranch("95", "2");
        List<AffairGeneralSituation> bhcPartyList = affairGeneralSituationService.getChuPartyBranch("156", "2");
        for (AffairGeneralSituation affairGeneralSituation : nncPartyList) {
            String partyId = affairGeneralSituation.getId();
            String partyName = affairGeneralSituation.getPartyOrganization();
//            List<AffairOrgRewardPunish> orgRewardPunishList = affairOrgRewardPunishService.getJLXXByMonth(partyId,checkTime);
            List<AffairOrgRewardPunish> orgRewardPunishList = affairOrgRewardPunishService.getJLXXByNowLastTime(partyId,nowMonthDate,lastMonthDate);
            StringBuffer detail1 = null;//厅局级
            StringBuffer detail2 = null;//省部级
            StringBuffer detail3 = null;//国家级
            Double score1 = 0.0;
            Double score2 = 0.0;
            Double score3 = 0.0;
            for(AffairOrgRewardPunish affairOrgRewardPunish : orgRewardPunishList){
                String jlType = affairOrgRewardPunish.getType();//奖励类别
                //1 中央级 2省部级  3铁路公安局级 4集团公司级 5公安局级 6 公安处级 7地市级
                String jlTitle = affairOrgRewardPunish.getTitle();//奖励标题
                Date jlDate = affairOrgRewardPunish.getDate();//奖励时间
                if("3".equals(jlType)||"4".equals(jlType)){
                    //厅局级
                    if(detail1 == null){
                        detail1 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"厅局级奖励");
                    }else{
                        detail1.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"厅局级奖励");
                    }
                    score1 += 1;
                }
                if("2".equals(jlType)){
                    //省部级
                    if(detail2 == null){
                        detail2 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"省部级奖励");
                    }else{
                        detail2.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"省部级奖励");
                    }
                    score2 += 3;
                }
                if("1".equals(jlType)){
                    //国家级
                    if(detail3 == null){
                        detail3 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"国家级奖励");
                    }else{
                        detail3.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"国家级奖励");
                    }
                    score3 += 5;
                }
            }
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");//1 单位  2 个人
            examAutoEvaluation.setEvalType("3");// 1 局考处  2 局考局机关  3 处考队所 4 处考处机关 5处领导班子 6 中基层领导  7 民警
            examAutoEvaluation.setPeriod("1");//1月 2年
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setAssess("南宁处政治处组织干部室");
            examAutoEvaluation.setAssessId("34e8d855cf6b4b1ab5e7e23e7aaba658");
            examAutoEvaluation.setModel("2020年月度南宁公安处对全处各派出所公共加分标准");
            examAutoEvaluation.setModelId("b42a29bece2f40208998cfbfadebb796");
            examAutoEvaluation.setFromSys("智慧政工");
            List<User> userList = this.getUserByPartyId(partyId);
            for(User user : userList){
                if (user.getOffice().getName().contains("派出所")) {
                    examAutoEvaluation.setUnit(user.getOffice().getName());
                    examAutoEvaluation.setUnitId(user.getOffice().getId());
                    examAutoEvaluation.setEvaluationId(user.getId());
                    if (score1 > 0) {
                        examAutoEvaluation.setIsNewRecord(false);
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setOption("单位或部门被评为厅（局）级先进（综合类）");
                        examAutoEvaluation.setOptionId("db7fc3a36af14fbcbb86490eb57b5000");
                        examAutoEvaluation.setScore(String.valueOf(score1));
                        examAutoEvaluation.setDetails(detail1.toString());
                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","党建组织奖励信息_厅局级");
                        //删除之前存储的
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    if (score2 > 0) {
                        examAutoEvaluation.setIsNewRecord(false);
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setOption("单位或部门被评为省部级先进(综合类)");
                        examAutoEvaluation.setOptionId("bf06a0201f9f4290baaef72d6bcb59c7");
                        examAutoEvaluation.setScore(String.valueOf(score2));
                        examAutoEvaluation.setDetails(detail2.toString());
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","党建组织奖励信息_省部级");
                        //删除之前存储的
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    if (score3 > 0) {
                        examAutoEvaluation.setIsNewRecord(false);
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setOption("单位或部门被评为全国先进(综合类)");
                        examAutoEvaluation.setOptionId("75da2f7f429c4ad0a854cccf099139f9");
                        examAutoEvaluation.setScore(String.valueOf(score3));
                        examAutoEvaluation.setDetails(detail3.toString());
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","党建组织奖励信息_全国级");
                        //删除之前存储的
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                }
            }
        }
        for (AffairGeneralSituation affairGeneralSituation : lzcPartyList) {
            String partyId = affairGeneralSituation.getId();
            String partyName = affairGeneralSituation.getPartyOrganization();
//            List<AffairOrgRewardPunish> orgRewardPunishList = affairOrgRewardPunishService.getJLXXByMonth(partyId,checkTime);
            List<AffairOrgRewardPunish> orgRewardPunishList = affairOrgRewardPunishService.getJLXXByNowLastTime(partyId,nowMonthDate,lastMonthDate);
            StringBuffer detail1 = null;//厅局级
            StringBuffer detail2 = null;//省部级
            StringBuffer detail3 = null;//国家级
            Double score1 = 0.0;
            Double score2 = 0.0;
            Double score3 = 0.0;
            for(AffairOrgRewardPunish affairOrgRewardPunish : orgRewardPunishList){
                String jlType = affairOrgRewardPunish.getType();//奖励类别
                //1 中央级 2省部级  3铁路公安局级 4集团公司级 5公安局级 6 公安处级 7地市级
                String jlTitle = affairOrgRewardPunish.getTitle();//奖励标题
                Date jlDate = affairOrgRewardPunish.getDate();//奖励时间
                if("3".equals(jlType)||"4".equals(jlType)){
                    //厅局级
                    if(detail1 == null){
                        detail1 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"厅局级奖励");
                    }else{
                        detail1.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"厅局级奖励");
                    }
                    score1 += 1;
                }
                if("2".equals(jlType)){
                    //省部级
                    if(detail2 == null){
                        detail2 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"省部级奖励");
                    }else{
                        detail2.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"省部级奖励");
                    }
                    score2 += 3;
                }
                if("1".equals(jlType)){
                    //国家级
                    if(detail3 == null){
                        detail3 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"国家级奖励");
                    }else{
                        detail3.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"国家级奖励");
                    }
                    score3 += 5;
                }
            }
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");//1 单位  2 个人
            examAutoEvaluation.setEvalType("3");// 1 局考处  2 局考局机关  3 处考队所 4 处考处机关 5处领导班子 6 中基层领导  7 民警
            examAutoEvaluation.setPeriod("1");//1月 2年
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setAssess("柳州处政治处组织干部室");
            examAutoEvaluation.setAssessId("ec3ba2efdd404f2faa520f6e8a71ec4c");
            examAutoEvaluation.setModel("2020年月度柳州处对派出所绩效考评公共加分标准");
            examAutoEvaluation.setModelId("547546c3d76144afa2a4433dd350afda");
            examAutoEvaluation.setFromSys("智慧政工");
            List<User> userList = this.getUserByPartyId(partyId);
            for(User user : userList){
                if (user.getOffice().getName().contains("派出所")) {
                    examAutoEvaluation.setUnit(user.getOffice().getName());
                    examAutoEvaluation.setUnitId(user.getOffice().getId());
                    examAutoEvaluation.setEvaluationId(user.getId());
                    if (score1 > 0) {
                        examAutoEvaluation.setIsNewRecord(false);
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setOption("单位或部门被评为厅（局）级先进（综合类）");
                        examAutoEvaluation.setOptionId("5112c27969c24a2d932076aabadbf4b5");
                        examAutoEvaluation.setScore(String.valueOf(score1));
                        examAutoEvaluation.setDetails(detail1.toString());
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","党建组织奖励信息_厅局级");
                        //删除之前存储的
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    if (score2 > 0) {
                        examAutoEvaluation.setIsNewRecord(false);
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setOption("单位或部门被评为省部级先进(综合类)");
                        examAutoEvaluation.setOptionId("d581b6c923524326a1e671dbaf0e5879");
                        examAutoEvaluation.setScore(String.valueOf(score2));
                        examAutoEvaluation.setDetails(detail2.toString());
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","党建组织奖励信息_省部级");
                        //删除之前存储的
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    if (score3 > 0) {
                        examAutoEvaluation.setIsNewRecord(false);
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setOption("单位或部门被评为全国先进(综合类)");
                        examAutoEvaluation.setOptionId("0aea35d820ee46569c6078b157313d10");
                        examAutoEvaluation.setScore(String.valueOf(score3));
                        examAutoEvaluation.setDetails(detail3.toString());
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","党建组织奖励信息_全国级");
                        //删除之前存储的
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                }
            }

        }
        for (AffairGeneralSituation affairGeneralSituation : bhcPartyList) {
            String partyId = affairGeneralSituation.getId();
            String partyName = affairGeneralSituation.getPartyOrganization();
//            List<AffairOrgRewardPunish> orgRewardPunishList = affairOrgRewardPunishService.getJLXXByMonth(partyId,checkTime);
            List<AffairOrgRewardPunish> orgRewardPunishList = affairOrgRewardPunishService.getJLXXByNowLastTime(partyId,nowMonthDate,lastMonthDate);
            StringBuffer detail1 = null;//厅局级
            StringBuffer detail2 = null;//省部级
            StringBuffer detail3 = null;//国家级
            Double score1 = 0.0;
            Double score2 = 0.0;
            Double score3 = 0.0;
            for(AffairOrgRewardPunish affairOrgRewardPunish : orgRewardPunishList){
                String jlType = affairOrgRewardPunish.getType();//奖励类别
                //1 中央级 2省部级  3铁路公安局级 4集团公司级 5公安局级 6 公安处级 7地市级
                String jlTitle = affairOrgRewardPunish.getTitle();//奖励标题
                Date jlDate = affairOrgRewardPunish.getDate();//奖励时间
                if("3".equals(jlType)||"4".equals(jlType)){
                    //厅局级
                    if(detail1 == null){
                        detail1 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"厅局级奖励");
                    }else{
                        detail1.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"厅局级奖励");
                    }
                    score1 += 1;
                }
                if("2".equals(jlType)){
                    //省部级
                    if(detail2 == null){
                        detail2 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"省部级奖励");
                    }else{
                        detail2.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"省部级奖励");
                    }
                    score2 += 3;
                }
                if("1".equals(jlType)){
                    //国家级
                    if(detail3 == null){
                        detail3 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"国家级奖励");
                    }else{
                        detail3.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"国家级奖励");
                    }
                    score3 += 5;
                }
            }
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");//1 单位  2 个人
            examAutoEvaluation.setEvalType("3");// 1 局考处  2 局考局机关  3 处考队所 4 处考处机关 5处领导班子 6 中基层领导  7 民警
            examAutoEvaluation.setPeriod("1");//1月 2年
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setAssess("北海处政治处组织干部室");
            examAutoEvaluation.setAssessId("c90918faf2614baa8fa85230482bd43e");
            examAutoEvaluation.setModel("2020年月度北海处对派出所、大队绩效考评公共加分标准");
            examAutoEvaluation.setModelId("3cd29fab3ef043c2908ad83c56b7fc9b");
            examAutoEvaluation.setFromSys("智慧政工");
            List<User> userList = this.getUserByPartyId(partyId);
            for(User user : userList){
                if (user.getOffice().getName().contains("派出所")||user.getOffice().getName().contains("刑警三大队")) {
                    examAutoEvaluation.setUnit(user.getOffice().getName());
                    examAutoEvaluation.setUnitId(user.getOffice().getId());
                    examAutoEvaluation.setEvaluationId(user.getId());
                    if (score1 > 0) {
                        examAutoEvaluation.setIsNewRecord(false);
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setOption("单位或部门被评为厅（局）级先进（综合类）");
                        examAutoEvaluation.setOptionId("9f9a3c5d469e46ed9001bbf7d2410baf");
                        examAutoEvaluation.setScore(String.valueOf(score1));
                        examAutoEvaluation.setDetails(detail1.toString());
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","党建组织奖励信息_厅局级");
                        //删除之前存储的
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    if (score2 > 0) {
                        examAutoEvaluation.setIsNewRecord(false);
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setOption("单位或部门被评为省部级先进(综合类)");
                        examAutoEvaluation.setOptionId("3fda9e0bf1eb449fb44f190e594f579b");
                        examAutoEvaluation.setScore(String.valueOf(score2));
                        examAutoEvaluation.setDetails(detail2.toString());
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","党建组织奖励信息_厅局级");
                        //删除之前存储的
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    if (score3 > 0) {
                        examAutoEvaluation.setIsNewRecord(false);
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setOption("单位或部门被评为全国先进(综合类)");
                        examAutoEvaluation.setOptionId("84bbdd4d275a4241a59a442ca18afefa");
                        examAutoEvaluation.setScore(String.valueOf(score3));
                        examAutoEvaluation.setDetails(detail3.toString());
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","党建组织奖励信息_厅局级");
                        //删除之前存储的
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                }
            }
        }
    }

    /*
     * 奖励信息（党建工作，组织）
     *
     * 处考派出所
     *
     * 年度
     * */
    public void ckpcsJlxxYear(String year) {
        Map<String,Object> yearMap = this.getTimeQuantumByYear(year);
        Date nowYearDate = (Date) yearMap.get("nowYear");
        Date lastYearDate = (Date) yearMap.get("lastYear");
        year = (String) yearMap.get("year");
        //获取各处派出所党组织
        List<AffairGeneralSituation> nncPartyList = affairGeneralSituationService.getChuPartyBranch("34", "2");
        List<AffairGeneralSituation> lzcPartyList = affairGeneralSituationService.getChuPartyBranch("95", "2");
        List<AffairGeneralSituation> bhcPartyList = affairGeneralSituationService.getChuPartyBranch("156", "2");
        for (AffairGeneralSituation affairGeneralSituation : nncPartyList) {
            String partyId = affairGeneralSituation.getId();
            String partyName = affairGeneralSituation.getPartyOrganization();
//            List<AffairOrgRewardPunish> orgRewardPunishList = affairOrgRewardPunishService.getJLXXByMonth(partyId,year);
            List<AffairOrgRewardPunish> orgRewardPunishList = affairOrgRewardPunishService.getJLXXByNowLastTime(partyId,nowYearDate,lastYearDate);
            StringBuffer detail1 = null;//厅局级
            StringBuffer detail2 = null;//省部级
            StringBuffer detail3 = null;//国家级
            Double score1 = 0.0;
            Double score2 = 0.0;
            Double score3 = 0.0;
            for(AffairOrgRewardPunish affairOrgRewardPunish : orgRewardPunishList){
                String jlType = affairOrgRewardPunish.getType();//奖励类别
                //1 中央级 2省部级  3铁路公安局级 4集团公司级 5公安局级 6 公安处级 7地市级
                String jlTitle = affairOrgRewardPunish.getTitle();//奖励标题
                Date jlDate = affairOrgRewardPunish.getDate();//奖励时间
                if("3".equals(jlType)||"4".equals(jlType)){
                    //厅局级
                    if(detail1 == null){
                        detail1 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"厅局级奖励");
                    }else{
                        detail1.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"厅局级奖励");
                    }
                    score1 += 0.5;
                }
                if("2".equals(jlType)){
                    //省部级
                    if(detail2 == null){
                        detail2 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"省部级奖励");
                    }else{
                        detail2.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"省部级奖励");
                    }
                    score2 += 1;
                }
                if("1".equals(jlType)){
                    //国家级
                    if(detail3 == null){
                        detail3 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"国家级奖励");
                    }else{
                        detail3.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"国家级奖励");
                    }
                    score3 += 1.5;
                }
            }
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");//1 单位  2 个人
            examAutoEvaluation.setEvalType("3");// 1 局考处  2 局考局机关  3 处考队所 4 处考处机关 5处领导班子 6 中基层领导  7 民警
            examAutoEvaluation.setPeriod("2");//1月 2年
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setAssess("南宁处政治处组织干部室");
            examAutoEvaluation.setAssessId("34e8d855cf6b4b1ab5e7e23e7aaba658");
            examAutoEvaluation.setModel("2020年度南宁公安处对全处各派出所公共加分标准");
            examAutoEvaluation.setModelId("4d98948d2b5948609a87260f1227aaa5");
            examAutoEvaluation.setFromSys("智慧政工");
            List<User> userList = this.getUserByPartyId(partyId);
            for(User user : userList){
                if (user.getOffice().getName().contains("派出所")) {
                    examAutoEvaluation.setUnit(user.getOffice().getName());
                    examAutoEvaluation.setUnitId(user.getOffice().getId());
                    examAutoEvaluation.setEvaluationId(user.getId());
                    if (score1 > 0) {
                        examAutoEvaluation.setIsNewRecord(false);
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setOption("单位或部门被评为厅（局）级先进（综合类）");
                        examAutoEvaluation.setOptionId("81be2c191173475ba0558b5f6145e613");
                        examAutoEvaluation.setScore(String.valueOf(score1));
                        examAutoEvaluation.setDetails(detail1.toString());
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","党建组织奖励信息_厅局级");
                        //删除之前存储的
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    if (score2 > 0) {
                        examAutoEvaluation.setIsNewRecord(false);
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setOption("单位或部门被评为省部级先进(综合类)");
                        examAutoEvaluation.setOptionId("f99e774f1956400fb5312e0cdcfe4c34");
                        examAutoEvaluation.setScore(String.valueOf(score2));
                        examAutoEvaluation.setDetails(detail2.toString());
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","党建组织奖励信息_省部级");
                        //删除之前存储的
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    if (score3 > 0) {
                        examAutoEvaluation.setIsNewRecord(false);
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setOption("单位或部门被评为全国先进(综合类)");
                        examAutoEvaluation.setOptionId("0c083db978f547b48de6350213bf8ea5");
                        examAutoEvaluation.setScore(String.valueOf(score3));
                        examAutoEvaluation.setDetails(detail3.toString());
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","党建组织奖励信息_全国级");
                        //删除之前存储的
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                }
            }
        }
        for (AffairGeneralSituation affairGeneralSituation : lzcPartyList) {
            String partyId = affairGeneralSituation.getId();
            String partyName = affairGeneralSituation.getPartyOrganization();
//            List<AffairOrgRewardPunish> orgRewardPunishList = affairOrgRewardPunishService.getJLXXByMonth(partyId,year);
            List<AffairOrgRewardPunish> orgRewardPunishList = affairOrgRewardPunishService.getJLXXByNowLastTime(partyId,nowYearDate,lastYearDate);
            StringBuffer detail1 = null;//厅局级
            StringBuffer detail2 = null;//省部级
            StringBuffer detail3 = null;//国家级
            Double score1 = 0.0;
            Double score2 = 0.0;
            Double score3 = 0.0;
            for(AffairOrgRewardPunish affairOrgRewardPunish : orgRewardPunishList){
                String jlType = affairOrgRewardPunish.getType();//奖励类别
                //1 中央级 2省部级  3铁路公安局级 4集团公司级 5公安局级 6 公安处级 7地市级
                String jlTitle = affairOrgRewardPunish.getTitle();//奖励标题
                Date jlDate = affairOrgRewardPunish.getDate();//奖励时间
                if("3".equals(jlType)||"4".equals(jlType)){
                    //厅局级
                    if(detail1 == null){
                        detail1 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"厅局级奖励");
                    }else{
                        detail1.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"厅局级奖励");
                    }
                    score1 += 0.5;
                }
                if("2".equals(jlType)){
                    //省部级
                    if(detail2 == null){
                        detail2 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"省部级奖励");
                    }else{
                        detail2.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"省部级奖励");
                    }
                    score2 += 1;
                }
                if("1".equals(jlType)){
                    //国家级
                    if(detail3 == null){
                        detail3 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"国家级奖励");
                    }else{
                        detail3.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"国家级奖励");
                    }
                    score3 += 1.5;
                }
            }
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");//1 单位  2 个人
            examAutoEvaluation.setEvalType("3");// 1 局考处  2 局考局机关  3 处考队所 4 处考处机关 5处领导班子 6 中基层领导  7 民警
            examAutoEvaluation.setPeriod("2");//1月 2年
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setAssess("柳州处政治处组织干部室");
            examAutoEvaluation.setAssessId("ec3ba2efdd404f2faa520f6e8a71ec4c");
            examAutoEvaluation.setModel("2020年年度柳州处对派出所绩效考评公共加分标准");
            examAutoEvaluation.setModelId("e03a23be452945bcaab5973b7debb1d3");
            examAutoEvaluation.setFromSys("智慧政工");
            List<User> userList = this.getUserByPartyId(partyId);
            for(User user : userList){
                if (user.getOffice().getName().contains("派出所")) {
                    examAutoEvaluation.setUnit(user.getOffice().getName());
                    examAutoEvaluation.setUnitId(user.getOffice().getId());
                    examAutoEvaluation.setEvaluationId(user.getId());
                    if(score1>0){
                        examAutoEvaluation.setIsNewRecord(false);
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setOption("单位或部门被评为厅（局）级先进（综合类）");
                        examAutoEvaluation.setOptionId("3789d0ab9dc54500903a471a4def23ba");
                        examAutoEvaluation.setScore(String.valueOf(score1));
                        examAutoEvaluation.setDetails(detail1.toString());
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","党建组织奖励信息_厅局级");
                        //删除之前存储的
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    if(score2>0){
                        examAutoEvaluation.setIsNewRecord(false);
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setOption("单位或部门被评为省部级先进(综合类)");
                        examAutoEvaluation.setOptionId("eda0a77cffe445be9037b0a4179c4657");
                        examAutoEvaluation.setScore(String.valueOf(score2));
                        examAutoEvaluation.setDetails(detail2.toString());
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","党建组织奖励信息_省部级");
                        //删除之前存储的
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    if(score3>0){
                        examAutoEvaluation.setIsNewRecord(false);
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setOption("单位或部门被评为全国先进(综合类)");
                        examAutoEvaluation.setOptionId("a142623ea63849af8ec1e37a4c4fe1d6");
                        examAutoEvaluation.setScore(String.valueOf(score3));
                        examAutoEvaluation.setDetails(detail3.toString());
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","党建组织奖励信息_全国级");
                        //删除之前存储的
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                }
            }

        }
        for (AffairGeneralSituation affairGeneralSituation : bhcPartyList) {
            String partyId = affairGeneralSituation.getId();
            String partyName = affairGeneralSituation.getPartyOrganization();
//            List<AffairOrgRewardPunish> orgRewardPunishList = affairOrgRewardPunishService.getJLXXByMonth(partyId,year);
            List<AffairOrgRewardPunish> orgRewardPunishList = affairOrgRewardPunishService.getJLXXByNowLastTime(partyId,nowYearDate,lastYearDate);
            StringBuffer detail1 = null;//厅局级
            StringBuffer detail2 = null;//省部级
            StringBuffer detail3 = null;//国家级
            Double score1 = 0.0;
            Double score2 = 0.0;
            Double score3 = 0.0;
            for(AffairOrgRewardPunish affairOrgRewardPunish : orgRewardPunishList){
                String jlType = affairOrgRewardPunish.getType();//奖励类别
                //1 中央级 2省部级  3铁路公安局级 4集团公司级 5公安局级 6 公安处级 7地市级
                String jlTitle = affairOrgRewardPunish.getTitle();//奖励标题
                Date jlDate = affairOrgRewardPunish.getDate();//奖励时间
                if("3".equals(jlType)||"4".equals(jlType)){
                    //厅局级
                    if(detail1 == null){
                        detail1 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"厅局级奖励");
                    }else{
                        detail1.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"厅局级奖励");
                    }
                    score1 += 0.5;
                }
                if("2".equals(jlType)){
                    //省部级
                    if(detail2 == null){
                        detail2 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"省部级奖励");
                    }else{
                        detail2.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"省部级奖励");
                    }
                    score2 += 1;
                }
                if("1".equals(jlType)){
                    //国家级
                    if(detail3 == null){
                        detail3 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"国家级奖励");
                    }else{
                        detail3.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"国家级奖励");
                    }
                    score3 += 1.5;
                }
            }
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");//1 单位  2 个人
            examAutoEvaluation.setEvalType("4");// 1 局考处  2 局考局机关  3 处考队所 4 处考处机关 5处领导班子 6 中基层领导  7 民警
            examAutoEvaluation.setPeriod("2");//1月 2年
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setAssess("北海处政治处组织干部室");
            examAutoEvaluation.setAssessId("c90918faf2614baa8fa85230482bd43e");
            examAutoEvaluation.setModel("2020年年度北海处对派出所、刑警三大队绩效考评公共加分标准");
            examAutoEvaluation.setModelId("99352b5b975740fb8a2521d362897494");
            examAutoEvaluation.setFromSys("智慧政工");
            List<User> userList = this.getUserByPartyId(partyId);
            for(User user : userList){
                if (user.getOffice().getName().contains("派出所")||user.getOffice().getName().contains("刑警三大队")) {
                    examAutoEvaluation.setUnit(user.getOffice().getName());
                    examAutoEvaluation.setUnitId(user.getOffice().getId());
                    examAutoEvaluation.setEvaluationId(user.getId());
                    if (score1 > 0) {
                        examAutoEvaluation.setIsNewRecord(false);
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setOption("单位或部门被评为厅（局）级先进（综合类）");
                        examAutoEvaluation.setOptionId("1012cb4d41a24faa9c61b82bac26ade8");
                        examAutoEvaluation.setScore(String.valueOf(score1));
                        examAutoEvaluation.setDetails(detail1.toString());
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","党建组织奖励信息_厅局级");
                        //删除之前存储的
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    if (score2 > 0) {
                        examAutoEvaluation.setIsNewRecord(false);
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setOption("单位或部门被评为省部级先进(综合类)");
                        examAutoEvaluation.setOptionId("7f790e9a59a046dca641874cab5f37a2");
                        examAutoEvaluation.setScore(String.valueOf(score2));
                        examAutoEvaluation.setDetails(detail2.toString());
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","党建组织奖励信息_省部级");
                        //删除之前存储的
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    if (score3 > 0) {
                        examAutoEvaluation.setIsNewRecord(false);
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setOption("单位或部门被评为全国先进(综合类)");
                        examAutoEvaluation.setOptionId("ac187187e06a4e68bcf47f8d7e863337");
                        examAutoEvaluation.setScore(String.valueOf(score3));
                        examAutoEvaluation.setDetails(detail3.toString());
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","党建组织奖励信息_全国级");
                        //删除之前存储的
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                }
            }
        }
    }


    /**
     * 奖励信息(党建工作，组织)
     * 处领导
     * 月度
     */
    public void cldJlxx(String checkTime){
        //所有的公安处领导角色id
        //String chuRoleId = "230e916609a349e68f7186f784e11419";
        List<String> chuRoleId = new ArrayList<>();
        chuRoleId.add("230e916609a349e68f7186f784e11419");//公安处领导角色id
        List<User> chuList = this.getUserByRoleId(chuRoleId);
        //年份
        String year = checkTime.substring(0, 4);
        //月份
        String month = checkTime.substring(checkTime.length() - 2);
        Map<String,Object> monthMap = this.getTimeQuantumByMonth(year,month,"政工");
        Date nowMonthDate = (Date) monthMap.get("nowTime");
        Date lastMonthDate = (Date) monthMap.get("lastTime");
        year = (String) monthMap.get("year");
        month = (String) monthMap.get("month");
        List<AffairGeneralSituation> chuPartyCommitteeList = affairGeneralSituationService.getChuPartyCommittee();//获取各处党委
        for (AffairGeneralSituation affairGeneralSituation : chuPartyCommitteeList) {
            String partyId = affairGeneralSituation.getId();
            String partyName = affairGeneralSituation.getPartyOrganization();
//            List<AffairOrgRewardPunish> orgRewardPunishList = affairOrgRewardPunishService.getJLXXByMonth(partyId,checkTime);
            List<AffairOrgRewardPunish> orgRewardPunishList = affairOrgRewardPunishService.getJLXXByNowLastTime(partyId,nowMonthDate,lastMonthDate);
            StringBuffer detail0 = null;//公安局级
            StringBuffer detail1 = null;//厅局级
            StringBuffer detail2 = null;//省部级
            StringBuffer detail3 = null;//国家级
            Double score0 = 0.0;
            Double score1 = 0.0;
            Double score2 = 0.0;
            Double score3 = 0.0;
            for(AffairOrgRewardPunish affairOrgRewardPunish : orgRewardPunishList){
                String jlType = affairOrgRewardPunish.getType();//奖励类别
                //1 中央级 2省部级  3铁路公安局级 4集团公司级 5公安局级 6 公安处级 7地市级
                String jlTitle = affairOrgRewardPunish.getTitle();//奖励标题
                Date jlDate = affairOrgRewardPunish.getDate();//奖励时间
                if("5".equals(jlType)){
                    //公安局级
                    if(detail0 == null){
                        detail0 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"公安局级奖励");
                    }else{
                        detail0.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"公安局级奖励");
                    }
                    score0 += 3;
                }
                if("3".equals(jlType)||"4".equals(jlType)){
                    //厅局级
                    if(detail1 == null){
                        detail1 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"厅局级奖励");
                    }else{
                        detail1.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"厅局级奖励");
                    }
                    score1 += 5;
                }
                if("2".equals(jlType)){
                    //省部级
                    if(detail2 == null){
                        detail2 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"省部级奖励");
                    }else{
                        detail2.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"省部级奖励");
                    }
                    score2 += 8;
                }
                if("1".equals(jlType)){
                    //国家级
                    if(detail3 == null){
                        detail3 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"国家级奖励");
                    }else{
                        detail3.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"国家级奖励");
                    }
                    score3 += 13;
                }
            }
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("2");//1 单位  2 个人
            examAutoEvaluation.setEvalType("5");// 1 局考处  2 局考局机关  3 处考队所 4 处考处机关 5处领导班子 6 中基层领导  7 民警
            examAutoEvaluation.setPeriod("1");//1月 2年
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setAssess("南宁局绩效办");
            examAutoEvaluation.setAssessId("cca66e1339f14799b01f6db43ed16e16");
            examAutoEvaluation.setModel("2020年月度对公安处领导班子成员绩效考核加分标准");
            examAutoEvaluation.setModelId("1b2068b9ecd14f4d8e2c5dbb9b25e96a");
            examAutoEvaluation.setFromSys("智慧政工");
            for(User user : chuList){
                if(user.getOffice().getId().equals(partyId) || user.getCompany().getId().equals(partyId)){
                    examAutoEvaluation.setName(user.getName());
                    examAutoEvaluation.setIdNumber(user.getNo());
                    examAutoEvaluation.setEvaluationId(user.getId());
                    if (score0 > 0) {
                        examAutoEvaluation.setIsNewRecord(false);
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setOption("公安处评为公安局级先进");
                        examAutoEvaluation.setOptionId("728c991049254f93801ebbe577d916e5");
                        examAutoEvaluation.setScore(String.valueOf(score0));
                        examAutoEvaluation.setDetails(detail0.toString());
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建组织奖励信息_公安局级");
                        //删除之前存储的
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    if (score1 > 0) {
                        examAutoEvaluation.setIsNewRecord(false);
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setOption("公安处评为厅局级先进");
                        examAutoEvaluation.setOptionId("a78defbcb0b5426d97f779fa15ea8059");
                        examAutoEvaluation.setScore(String.valueOf(score1));
                        examAutoEvaluation.setDetails(detail1.toString());
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建组织奖励信息_厅局级");
                        //删除之前存储的
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    if (score2 > 0) {
                        examAutoEvaluation.setIsNewRecord(false);
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setOption("公安处评为省部级先进");
                        examAutoEvaluation.setOptionId("63faac6bbfa44c8cbe2de2b119f2fbe2");
                        examAutoEvaluation.setScore(String.valueOf(score2));
                        examAutoEvaluation.setDetails(detail2.toString());
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建组织奖励信息_省部级");
                        //删除之前存储的
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    if (score3 > 0) {
                        examAutoEvaluation.setIsNewRecord(false);
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setOption("公安处评为全国先进");
                        examAutoEvaluation.setOptionId("5ea872aac6ff41a9a1c5824c657719d6");
                        examAutoEvaluation.setScore(String.valueOf(score3));
                        examAutoEvaluation.setDetails(detail3.toString());
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建组织奖励信息_全国级");
                        //删除之前存储的
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                }
            }

        }

    }


    /**
     * 奖励信息(党建工作，组织)
     * 处领导
     * 年度
     */
    public void cldJlxxYear(String year){
        //所有的公安处领导角色id
        //String chuRoleId = "230e916609a349e68f7186f784e11419";
        Map<String,Object> yearMap = this.getTimeQuantumByYear(year);
        Date nowYearDate = (Date) yearMap.get("nowYear");
        Date lastYearDate = (Date) yearMap.get("lastYear");
        year = (String) yearMap.get("year");
        List<String> chuRoleId = new ArrayList<>();
        chuRoleId.add("230e916609a349e68f7186f784e11419");//公安处领导角色id
        List<User> chuList = this.getUserByRoleId(chuRoleId);
        List<AffairGeneralSituation> chuPartyCommitteeList = affairGeneralSituationService.getChuPartyCommittee();//获取各处党委
        for (AffairGeneralSituation affairGeneralSituation : chuPartyCommitteeList) {
            String partyId = affairGeneralSituation.getId();
            String partyName = affairGeneralSituation.getPartyOrganization();
//            List<AffairOrgRewardPunish> orgRewardPunishList = affairOrgRewardPunishService.getJLXXByMonth(partyId,year);
            List<AffairOrgRewardPunish> orgRewardPunishList = affairOrgRewardPunishService.getJLXXByNowLastTime(partyId,nowYearDate,lastYearDate);
            StringBuffer detail0 = null;//公安局级
            StringBuffer detail1 = null;//厅局级
            StringBuffer detail2 = null;//省部级
            StringBuffer detail3 = null;//国家级
            Double score0 = 0.0;
            Double score1 = 0.0;
            Double score2 = 0.0;
            Double score3 = 0.0;
            for(AffairOrgRewardPunish affairOrgRewardPunish : orgRewardPunishList){
                String jlType = affairOrgRewardPunish.getType();//奖励类别
                //1 中央级 2省部级  3铁路公安局级 4集团公司级 5公安局级 6 公安处级 7地市级
                String jlTitle = affairOrgRewardPunish.getTitle();//奖励标题
                Date jlDate = affairOrgRewardPunish.getDate();//奖励时间
                if("5".equals(jlType)){
                    //公安局级
                    if(detail0 == null){
                        detail0 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"公安局级奖励");
                    }else{
                        detail0.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"公安局级奖励");
                    }
                    score0 += 0.2;
                }
                if("3".equals(jlType)||"4".equals(jlType)){
                    //厅局级
                    if(detail1 == null){
                        detail1 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"厅局级奖励");
                    }else{
                        detail1.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"厅局级奖励");
                    }
                    score1 += 0.3;
                }
                if("2".equals(jlType)){
                    //省部级
                    if(detail2 == null){
                        detail2 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"省部级奖励");
                    }else{
                        detail2.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"省部级奖励");
                    }
                    score2 += 0.4;
                }
                if("1".equals(jlType)){
                    //国家级
                    if(detail3 == null){
                        detail3 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"国家级奖励");
                    }else{
                        detail3.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"国家级奖励");
                    }
                    score3 += 1;
                }
            }
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("2");//1 单位  2 个人
            examAutoEvaluation.setEvalType("5");// 1 局考处  2 局考局机关  3 处考队所 4 处考处机关 5处领导班子 6 中基层领导  7 民警
            examAutoEvaluation.setPeriod("2");//1月 2年
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setAssess("南宁局绩效办");
            examAutoEvaluation.setAssessId("cca66e1339f14799b01f6db43ed16e16");
            examAutoEvaluation.setModel("2020年年度对公安处领导班子成员绩效考核加分标准");
            examAutoEvaluation.setModelId("0bee7919f52944a0bf29719a573b8a25");
            examAutoEvaluation.setFromSys("智慧政工");
            for(User user : chuList){
                if(user.getOffice().getId().equals(partyId) || user.getCompany().getId().equals(partyId)){
                    examAutoEvaluation.setName(user.getName());
                    examAutoEvaluation.setIdNumber(user.getNo());
                    examAutoEvaluation.setEvaluationId(user.getId());
                    if (score0 > 0) {
                        examAutoEvaluation.setIsNewRecord(false);
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setOption("公安处评为公安局级综合类先进的");
                        examAutoEvaluation.setOptionId("f661b94291ee4582a7c677c3fd838505");
                        examAutoEvaluation.setScore(String.valueOf(score0));
                        examAutoEvaluation.setDetails(detail0.toString());
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建组织奖励信息_公安局级");
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    if (score1 > 0) {
                        examAutoEvaluation.setIsNewRecord(false);
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setOption("公安处评为厅局级综合类先进的");
                        examAutoEvaluation.setOptionId("88f8c633c58441f688fafb2955ada062");
                        examAutoEvaluation.setScore(String.valueOf(score1));
                        examAutoEvaluation.setDetails(detail1.toString());
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建组织奖励信息_厅局级");
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    if (score2 > 0) {
                        examAutoEvaluation.setIsNewRecord(false);
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setOption("公安处评为省部级综合类先进的");
                        examAutoEvaluation.setOptionId("86650bb646044aeeb25695c2b6198cde");
                        examAutoEvaluation.setScore(String.valueOf(score2));
                        examAutoEvaluation.setDetails(detail2.toString());
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建组织奖励信息_省部级");
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    if (score3 > 0) {
                        examAutoEvaluation.setIsNewRecord(false);
                        examAutoEvaluation.setId("");
                        examAutoEvaluation.setOption("公安处评为全国综合类先进的");
                        examAutoEvaluation.setOptionId("74ea6b1015ab4207aaa93d2b188bcfbb");
                        examAutoEvaluation.setScore(String.valueOf(score3));
                        examAutoEvaluation.setDetails(detail3.toString());
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建组织奖励信息_全国级");
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                }
            }

        }

    }


    /**
     * 奖励信息(党建工作，组织)
     * 中基层
     * 月度
     */
    public void zjcJlxx(String checkTime){
        String year = checkTime.substring(0,4);
        String month = checkTime.substring(checkTime.length()-2);
        Map<String,Object> monthMap = this.getTimeQuantumByMonth(year,month,"政工");
        Date nowMonthDate = (Date) monthMap.get("nowTime");
        Date lastMonthDate = (Date) monthMap.get("lastTime");
        year = (String) monthMap.get("year");
        month = (String) monthMap.get("month");
        //所有的中基层领导班子角色id
        List<String> roleIds = new ArrayList<>();
        roleIds.add("13bac520ae4d4160b595384691b443fd");//局机关部门领导-绩效
        roleIds.add("62cf6aaea0184d3b8cfbce1700ad0e38");//处机关部门领导-绩效
        roleIds.add("ff24c3288860447d867d08d462a2a2b9");//派出所（大队）领导-绩效
        List<User> zjcList = this.getUserByRoleId(roleIds);//中基层集合
        Map<String,List<AffairOrgRewardPunish>> selOrgRewardPunishMap = new HashMap<>();
        for(User zjcUser : zjcList){
            String officeId = zjcUser.getOffice().getId();//部门id
            String companyId = zjcUser.getCompany().getId();//公司id
            String name = zjcUser.getName();//姓名
            String idNumber = zjcUser.getNo();//身份证号
            String parentIds = zjcUser.getOffice().getParentIds();
            String parentId = zjcUser.getOffice().getParentId();
            List<AffairOrgRewardPunish> orgRewardPunishList = null;
            if(selOrgRewardPunishMap.get("officeId"+officeId)!=null){
                orgRewardPunishList = selOrgRewardPunishMap.get("officeId"+officeId);
            }else{
                //orgRewardPunishList = affairOrgRewardPunishService.getJLXXByTime(officeId,checkTime);
                orgRewardPunishList = affairOrgRewardPunishService.getJLXXZJCByNowLastTime(officeId,nowMonthDate,lastMonthDate);
                selOrgRewardPunishMap.put("officeId"+officeId,orgRewardPunishList);
            }
            StringBuffer detail = null;//公安处级
            StringBuffer detail0 = null;//公安局级
            StringBuffer detail1 = null;//厅局级
            StringBuffer detail2 = null;//省部级
            StringBuffer detail3 = null;//国家级
            Double score = 0.0;
            Double score0 = 0.0;
            Double score1 = 0.0;
            Double score2 = 0.0;
            Double score3 = 0.0;
            for(AffairOrgRewardPunish affairOrgRewardPunish : orgRewardPunishList){
                String jlType = affairOrgRewardPunish.getType();//奖励类别
                //1 中央级 2省部级  3铁路公安局级 4集团公司级 5公安局级 6 公安处级 7地市级
                String jlTitle = affairOrgRewardPunish.getTitle();//奖励标题
                Date jlDate = affairOrgRewardPunish.getDate();//奖励时间
                String partyName = affairOrgRewardPunish.getPartyOrganization();//党支部名称
                if("6".equals(jlType)){
                    //公安处级
                    if(detail == null){
                        detail = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"公安处级奖励");
                    }else{
                        detail.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"公安处级奖励");
                    }
                    score += 2;
                }
                if("5".equals(jlType)){
                    //公安局级
                    if(detail0 == null){
                        detail0 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"公安局级奖励");
                    }else{
                        detail0.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"公安局级奖励");
                    }
                    score0 += 3;
                }
                if("3".equals(jlType)||"4".equals(jlType)){
                    //厅局级
                    if(detail1 == null){
                        detail1 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"厅局级奖励");
                    }else{
                        detail1.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"厅局级奖励");
                    }
                    score1 += 5;
                }
                if("2".equals(jlType)){
                    //省部级
                    if(detail2 == null){
                        detail2 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"省部级奖励");
                    }else{
                        detail2.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"省部级奖励");
                    }
                    score2 += 8;
                }
                if("1".equals(jlType)){
                    //国家级
                    if(detail3 == null){
                        detail3 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"国家级奖励");
                    }else{
                        detail3.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"国家级奖励");
                    }
                    score3 += 13;
                }
            }
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("2");//1 单位  2 个人
            examAutoEvaluation.setEvalType("6");// 1 局考处  2 局考局机关  3 处考队所 4 处考处机关 5处领导班子 6 中基层领导  7 民警
            examAutoEvaluation.setPeriod("1");//1月 2年
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setMonth(month);
            if(parentIds.contains(",34,")||parentId.equals("34")){
                examAutoEvaluation.setAssess("南宁处绩效办");
                examAutoEvaluation.setAssessId("978958003ea44a4bba3eed8ee6ceff3c");
            }else if(parentIds.contains(",95,") || parentId.equals("95")){
                examAutoEvaluation.setAssess("柳州处绩效办");
                examAutoEvaluation.setAssessId("6af0e615e9b0477da82eff06ff532c8b");
            }else if(parentIds.contains(",156,") || parentId.equals("156")){
                examAutoEvaluation.setAssess("北海处绩效办");
                examAutoEvaluation.setAssessId("46c521bf67e24db28772b3eac52dc454");
            }else{
                examAutoEvaluation.setAssess("南宁局绩效办");
                examAutoEvaluation.setAssessId("cca66e1339f14799b01f6db43ed16e16");
            }
            examAutoEvaluation.setModel("2020年月度对中、基层领导干部(公安处领导除外)绩效考核加分标准");
            examAutoEvaluation.setModelId("8c649c304296427c95c85ec150054694");
            examAutoEvaluation.setFromSys("智慧政工");
            examAutoEvaluation.setName(zjcUser.getName());
            examAutoEvaluation.setIdNumber(zjcUser.getNo());
            examAutoEvaluation.setEvaluationId(zjcUser.getId());
            if (score > 0) {
                examAutoEvaluation.setIsNewRecord(false);
                examAutoEvaluation.setId("");
                examAutoEvaluation.setOption("单位或部门评为公安处级先进（综合类");
                examAutoEvaluation.setOptionId("91a4873e79e94ada90206933c5a8be86");
                examAutoEvaluation.setScore(String.valueOf(score0));
                examAutoEvaluation.setDetails(detail0.toString());
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建组织奖励信息_公安处级");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (score0 > 0) {
                examAutoEvaluation.setIsNewRecord(false);
                examAutoEvaluation.setId("");
                examAutoEvaluation.setOption("单位或部门评为公安局级先进（综合类）");
                examAutoEvaluation.setOptionId("154ba5be4b3b48039abf0ad92ff95d54");
                examAutoEvaluation.setScore(String.valueOf(score0));
                examAutoEvaluation.setDetails(detail0.toString());
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建组织奖励信息_公安局级");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (score1 > 0) {
                examAutoEvaluation.setIsNewRecord(false);
                examAutoEvaluation.setId("");
                examAutoEvaluation.setOption("单位或部门评为厅局级先进（综合类");
                examAutoEvaluation.setOptionId("b51cf39fe5124087baca167cc6e2e718");
                examAutoEvaluation.setScore(String.valueOf(score1));
                examAutoEvaluation.setDetails(detail1.toString());
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建组织奖励信息_厅局级");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (score2 > 0) {
                examAutoEvaluation.setIsNewRecord(false);
                examAutoEvaluation.setId("");
                examAutoEvaluation.setOption("单位或部门评为省部级先进（综合类）");
                examAutoEvaluation.setOptionId("23d13ccbd00141b1a8229b742a0c6e04");
                examAutoEvaluation.setScore(String.valueOf(score2));
                examAutoEvaluation.setDetails(detail2.toString());
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建组织奖励信息_省部级");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (score3 > 0) {
                examAutoEvaluation.setIsNewRecord(false);
                examAutoEvaluation.setId("");
                examAutoEvaluation.setOption("单位或部门评为全国先进（综合类）");
                examAutoEvaluation.setOptionId("cef899667543445ea78a1e8671b97aab");
                examAutoEvaluation.setScore(String.valueOf(score3));
                examAutoEvaluation.setDetails(detail3.toString());
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建组织奖励信息_全国级");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
        }
    }

    /**
     * 奖励信息(党建工作，组织)
     * 中基层
     * 年度
     */
    public void zjcJlxxYear(String year){
        Map<String,Object> yearMap = this.getTimeQuantumByYear(year);
        Date nowYearDate = (Date) yearMap.get("nowYear");
        Date lastYearDate = (Date) yearMap.get("lastYear");
        year = (String) yearMap.get("year");
        //所有的中基层领导班子角色id
        List<String> roleIds = new ArrayList<>();
        roleIds.add("13bac520ae4d4160b595384691b443fd");//局机关部门领导-绩效
        roleIds.add("62cf6aaea0184d3b8cfbce1700ad0e38");//处机关部门领导-绩效
        roleIds.add("ff24c3288860447d867d08d462a2a2b9");//派出所（大队）领导-绩效
        List<User> zjcList = this.getUserByRoleId(roleIds);//中基层集合
        Map<String,List<AffairOrgRewardPunish>> selOrgRewardPunishMap = new HashMap<>();
        for(User zjcUser : zjcList){
            String officeId = zjcUser.getOffice().getId();//部门id
            String companyId = zjcUser.getCompany().getId();//公司id
            String name = zjcUser.getName();//姓名
            String idNumber = zjcUser.getNo();//身份证号
            String parentIds = zjcUser.getOffice().getParentIds();
            String parentId = zjcUser.getOffice().getParentId();
            List<AffairOrgRewardPunish> orgRewardPunishList = null;
            if(selOrgRewardPunishMap.get("officeId"+officeId)!=null){
                orgRewardPunishList = selOrgRewardPunishMap.get("officeId"+officeId);
            }else{
//                orgRewardPunishList = affairOrgRewardPunishService.getJLXXByTime(officeId,year);
                orgRewardPunishList = affairOrgRewardPunishService.getJLXXZJCByNowLastTime(officeId,nowYearDate,lastYearDate);
                selOrgRewardPunishMap.put("officeId"+officeId,orgRewardPunishList);
            }
            StringBuffer detail = null;//公安处级
            StringBuffer detail0 = null;//公安局级
            StringBuffer detail1 = null;//厅局级
            StringBuffer detail2 = null;//省部级
            StringBuffer detail3 = null;//国家级
            Double score = 0.0;
            Double score0 = 0.0;
            Double score1 = 0.0;
            Double score2 = 0.0;
            Double score3 = 0.0;
            for(AffairOrgRewardPunish affairOrgRewardPunish : orgRewardPunishList){
                String jlType = affairOrgRewardPunish.getType();//奖励类别
                //1 中央级 2省部级  3铁路公安局级 4集团公司级 5公安局级 6 公安处级 7地市级
                String jlTitle = affairOrgRewardPunish.getTitle();//奖励标题
                Date jlDate = affairOrgRewardPunish.getDate();//奖励时间
                String partyName = affairOrgRewardPunish.getPartyOrganization();//党支部名称
                if("6".equals(jlType)){
                    //公安处级
                    if(detail == null){
                        detail = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"公安处级奖励");
                    }else{
                        detail.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"公安处级奖励");
                    }
                    score += 0.3;
                }
                if("5".equals(jlType)){
                    //公安局级
                    if(detail0 == null){
                        detail0 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"公安局级奖励");
                    }else{
                        detail0.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"公安局级奖励");
                    }
                    score0 += 0.5;
                }
                if("3".equals(jlType)||"4".equals(jlType)){
                    //厅局级
                    if(detail1 == null){
                        detail1 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"厅局级奖励");
                    }else{
                        detail1.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"厅局级奖励");
                    }
                    score1 += 1;
                }
                if("2".equals(jlType)){
                    //省部级
                    if(detail2 == null){
                        detail2 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"省部级奖励");
                    }else{
                        detail2.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"省部级奖励");
                    }
                    score2 += 2;
                }
                if("1".equals(jlType)){
                    //国家级
                    if(detail3 == null){
                        detail3 = new StringBuffer(partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"国家级奖励");
                    }else{
                        detail3.append(","+partyName+DateUtils.formatDate(jlDate,"yyyy-MM-dd")+"获得"+jlTitle+"国家级奖励");
                    }
                    score3 += 3;
                }
            }
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("2");//1 单位  2 个人
            examAutoEvaluation.setEvalType("6");// 1 局考处  2 局考局机关  3 处考队所 4 处考处机关 5处领导班子 6 中基层领导  7 民警
            examAutoEvaluation.setPeriod("2");//1月 2年
            examAutoEvaluation.setYear(year);
            if(parentIds.contains(",34,")||parentId.equals("34")){
                examAutoEvaluation.setAssess("南宁处绩效办");
                examAutoEvaluation.setAssessId("978958003ea44a4bba3eed8ee6ceff3c");
            }else if(parentIds.contains(",95,") || parentId.equals("95")){
                examAutoEvaluation.setAssess("柳州处绩效办");
                examAutoEvaluation.setAssessId("6af0e615e9b0477da82eff06ff532c8b");
            }else if(parentIds.contains(",156,") || parentId.equals("156")){
                examAutoEvaluation.setAssess("北海处绩效办");
                examAutoEvaluation.setAssessId("46c521bf67e24db28772b3eac52dc454");
            }else{
                examAutoEvaluation.setAssess("南宁局绩效办");
                examAutoEvaluation.setAssessId("cca66e1339f14799b01f6db43ed16e16");
            }
            examAutoEvaluation.setModel("2020年年度对中、基层领导干部(公安处领导除外)绩效考核加分标准");
            examAutoEvaluation.setModelId("6921ad30851d4f0f96bd3db80c8505c0");
            examAutoEvaluation.setFromSys("智慧政工");
            examAutoEvaluation.setName(zjcUser.getName());
            examAutoEvaluation.setIdNumber(zjcUser.getNo());
            examAutoEvaluation.setEvaluationId(zjcUser.getId());
            if (score > 0) {
                examAutoEvaluation.setIsNewRecord(false);
                examAutoEvaluation.setId("");
                examAutoEvaluation.setOption("单位或部门评为公安处级先进（综合类)");
                examAutoEvaluation.setOptionId("8b9b68d012e04c5ba9faeac6d52ed2c6");
                examAutoEvaluation.setScore(String.valueOf(score0));
                examAutoEvaluation.setDetails(detail0.toString());
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建组织奖励信息_公安处级");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (score0 > 0) {
                examAutoEvaluation.setIsNewRecord(false);
                examAutoEvaluation.setId("");
                examAutoEvaluation.setOption("单位或部门评为公安局级先进（综合类）");
                examAutoEvaluation.setOptionId("9dce6ce157b74abd9e73cd4331950bc5");
                examAutoEvaluation.setScore(String.valueOf(score0));
                examAutoEvaluation.setDetails(detail0.toString());
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建组织奖励信息_公安局级");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (score1 > 0) {
                examAutoEvaluation.setIsNewRecord(false);
                examAutoEvaluation.setId("");
                examAutoEvaluation.setOption("单位或部门评为厅局级先进（综合类）");
                examAutoEvaluation.setOptionId("efeb48cc2e3e4059b10cd39e318b45b6");
                examAutoEvaluation.setScore(String.valueOf(score1));
                examAutoEvaluation.setDetails(detail1.toString());
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建组织奖励信息_厅局级");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (score2 > 0) {
                examAutoEvaluation.setIsNewRecord(false);
                examAutoEvaluation.setId("");
                examAutoEvaluation.setOption("单位或部门评为省部级先进（综合类）");
                examAutoEvaluation.setOptionId("8817e14216404367919d631e29af6b75");
                examAutoEvaluation.setScore(String.valueOf(score2));
                examAutoEvaluation.setDetails(detail2.toString());
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建组织奖励信息_省部级");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (score3 > 0) {
                examAutoEvaluation.setIsNewRecord(false);
                examAutoEvaluation.setId("");
                examAutoEvaluation.setOption("单位或部门评为全国先进（综合类）");
                examAutoEvaluation.setOptionId("813ea415b2fb4ed395a89f615d3db647");
                examAutoEvaluation.setScore(String.valueOf(score3));
                examAutoEvaluation.setDetails(detail3.toString());
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"党建组织奖励信息_全国级");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
        }
    }


    /**
     * 智慧政工-奖励信息（党建工作，个人）
     * <p>
     * -年度  局考处
     *
     * @param year
     */
    public void grjkcYear(String year) {

       /* Map<String,Object> yearMap = this.getTimeQuantumByYear(year);
        Date nowYearDate = (Date) yearMap.get("nowYear");
        Date lastYearDate = (Date) yearMap.get("lastYear");
        year = (String) yearMap.get("year");*/

        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        Map<String, String> yearTime = this.yearTime(year);
        Date lastYearDate = null;
        Date nowYearDate = null;
        try {
            lastYearDate = format.parse(yearTime.get("yearL"));
            nowYearDate = format.parse(yearTime.get("yearT"));
        } catch (ParseException e) {
            e.printStackTrace();
        }

        List<AffairGeneralSituation> affairGeneralSituationsList = affairGeneralSituationService.selectChuPartyBranch();//查询处下所有党支部
        StringBuffer nncsbjUnitNam = null;
        StringBuffer nncqgjUnitNam = null;
        StringBuffer nnctjjUnitNam = null;
        Boolean nncIs0 = false;
        StringBuffer lzcsbjUnitNam = null;
        StringBuffer lzcqgjUnitNam = null;
        StringBuffer lzctjjUnitNam = null;
        Boolean lzcIs0 = false;
        StringBuffer bhcsbjUnitNam = null;
        StringBuffer bhcqgjUnitNam = null;
        StringBuffer bhctjjUnitNam = null;
        Boolean bhcIs0 = false;
        double nncsbjScore = 0;
        double nncqgjScore = 0;
        double nnctjjScore = 0;

        double lzcsbjScore = 0;
        double lzcqgjScore = 0;
        double lzctjjScore = 0;

        double bhcsbjScore = 0;
        double bhcqgjScore = 0;
        double bhctjjScore = 0;

        StringBuffer nncsbjDetails = null;
        StringBuffer nncqgjDetails = null;
        StringBuffer nnctjjDetails = null;

        StringBuffer lzcsbjDetails = null;
        StringBuffer lzcqgjDetails = null;
        StringBuffer lzctjjDetails = null;

        StringBuffer bhcsbjDetails = null;
        StringBuffer bhcqgjDetails = null;
        StringBuffer bhctjjDetails = null;

        for (AffairGeneralSituation affairGeneralSituation : affairGeneralSituationsList) {
            //党组织名称
            String partyName = affairGeneralSituation.getPartyOrganization();
            //党组织id
            String partyId = affairGeneralSituation.getId();
            List<AffairPartyRewardPunish> list = affairPartyRewardPunishService.selectPerson(lastYearDate,nowYearDate,partyId);
            if (list != null && list.size() > 0) {
               /*  if (affairGeneralSituation.getParentIds().contains(",34,")) {
                   //南宁处
                    nncIs0 = true;
                    if (nncUnitNam == null) {
                        nncUnitNam = new StringBuffer(partyName);
                    } else {
                        nncUnitNam.append("," + partyName);
                    }

                } else if (affairGeneralSituation.getParentIds().contains(",95,")) {
                    //北海处
                    bhcIs0 = true;
                    if (bhcUnitNam == null) {
                        bhcUnitNam = new StringBuffer(partyName);
                    } else {
                        bhcUnitNam.append("," + partyName);
                    }
                } else if (affairGeneralSituation.getParentIds().contains(",156,")){
                    //北海处
                    bhcIs0 = true;
                    if (bhcUnitNam == null) {
                        bhcUnitNam = new StringBuffer(partyName);
                    } else {
                        bhcUnitNam.append("," + partyName);
                    }
                }
                */

                for (int i = 0; i < list.size(); i++) {
                    if (affairGeneralSituation.getParentIds().contains(",34,")) {
                        AffairPartyRewardPunish affairPartyRewardPunish = list.get(i);
                        Date approvalTime = affairPartyRewardPunish.getApprovalTime();
                        if("2".equals(affairPartyRewardPunish.getType())){
                            nncsbjScore += 0.3;
                            if (nncsbjDetails == null) {
                                nncsbjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                            } else {
                                nncsbjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                            }
                            nncIs0 = true;
                            if (nncsbjUnitNam == null) {
                                nncsbjUnitNam = new StringBuffer(partyName);
                            } else {
                                nncsbjUnitNam.append("," + partyName);
                            }
                        }else if("1".equals(affairPartyRewardPunish.getType())){
                            nncqgjScore += 0.5;
                            if (nncqgjDetails == null) {
                                String dict = DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "");
                                nncqgjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+dict+"先进");
                            } else {
                                nncqgjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                            }
                            nncIs0 = true;
                            if (nncqgjUnitNam == null) {
                                nncqgjUnitNam = new StringBuffer(partyName);
                            } else {
                                nncqgjUnitNam.append("," + partyName);
                            }
                        }else if(("3".equals(affairPartyRewardPunish.getType()) || "4".equals(affairPartyRewardPunish.getType())) && affairPartyRewardPunish.getTitle().contains("优秀共产党员")){
                            nnctjjScore += 0.1;
                            if (nnctjjDetails == null) {
                                nnctjjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"获得"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+affairPartyRewardPunish.getTitle());
                            } else {
                                nnctjjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"获得"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+affairPartyRewardPunish.getTitle());
                            }
                            nncIs0 = true;
                            if (nnctjjUnitNam == null) {
                                nnctjjUnitNam = new StringBuffer(partyName);
                            } else {
                                nnctjjUnitNam.append("," + partyName);
                            }
                        }
                    } else if (affairGeneralSituation.getParentIds().contains(",95,")) {
                        AffairPartyRewardPunish affairPartyRewardPunish = list.get(i);
                        Date approvalTime = affairPartyRewardPunish.getApprovalTime();
                        if("2".equals(affairPartyRewardPunish.getType())){
                            lzcsbjScore += 0.3;
                            if (lzcsbjDetails == null) {
                                lzcsbjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                            } else {
                                lzcsbjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                            }
                            //柳州处
                            lzcIs0 = true;
                            if (lzcsbjUnitNam == null) {
                                lzcsbjUnitNam = new StringBuffer(partyName);
                            } else {
                                lzcsbjUnitNam.append("," + partyName);
                            }
                        }else if("1".equals(affairPartyRewardPunish.getType())){
                            lzcqgjScore += 0.5;
                            if (lzcqgjDetails == null) {
                                lzcqgjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                            } else {
                                lzcqgjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                            }
                            lzcIs0 = true;
                            if (lzcqgjUnitNam == null) {
                                lzcqgjUnitNam = new StringBuffer(partyName);
                            } else {
                                lzcqgjUnitNam.append("," + partyName);
                            }
                        }else if(("3".equals(affairPartyRewardPunish.getType()) || "4".equals(affairPartyRewardPunish.getType())) && affairPartyRewardPunish.getTitle().contains("优秀共产党员")){
                            lzctjjScore += 0.1;
                            if (lzctjjDetails == null) {
                                lzctjjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"获得"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+affairPartyRewardPunish.getTitle());
                            } else {
                                lzctjjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"获得"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+affairPartyRewardPunish.getTitle());
                            }
                            lzcIs0 = true;
                            if (lzctjjUnitNam == null) {
                                lzctjjUnitNam = new StringBuffer(partyName);
                            } else {
                                lzctjjUnitNam.append("," + partyName);
                            }
                        }
                    } else if (affairGeneralSituation.getParentIds().contains(",156,")){
                        AffairPartyRewardPunish affairPartyRewardPunish = list.get(i);
                        Date approvalTime = affairPartyRewardPunish.getApprovalTime();
                        if("2".equals(affairPartyRewardPunish.getType())){
                            bhcsbjScore += 0.3;
                            if (bhcsbjDetails == null) {
                                bhcsbjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                            } else {
                                bhcsbjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                            }
                            //北海处
                            bhcIs0 = true;
                            if (bhcsbjUnitNam == null) {
                                bhcsbjUnitNam = new StringBuffer(partyName);
                            } else {
                                bhcsbjUnitNam.append("," + partyName);
                            }
                        }else if("1".equals(affairPartyRewardPunish.getType())){
                            bhcqgjScore += 0.5;
                            if (bhcqgjDetails == null) {
                                bhcqgjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                            } else {
                                bhcqgjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                            }
                            //北海处
                            bhcIs0 = true;
                            if (bhcqgjUnitNam == null) {
                                bhcqgjUnitNam = new StringBuffer(partyName);
                            } else {
                                bhcqgjUnitNam.append("," + partyName);
                            }
                        }else if(("3".equals(affairPartyRewardPunish.getType()) || "4".equals(affairPartyRewardPunish.getType())) && affairPartyRewardPunish.getTitle().contains("优秀共产党员")){
                            bhctjjScore += 0.1;
                            if (bhctjjDetails == null) {
                                bhctjjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"获得"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+affairPartyRewardPunish.getTitle());
                            } else {
                                bhctjjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"获得"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+affairPartyRewardPunish.getTitle());
                            }
                            //北海处
                            bhcIs0 = true;
                            if (bhctjjUnitNam == null) {
                                bhctjjUnitNam = new StringBuffer(partyName);
                            } else {
                                bhctjjUnitNam.append("," + partyName);
                            }
                        }
                    }
                }
            }
        }

        if (nncIs0) {
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("2");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setFromSys("智慧政工");
            examAutoEvaluation.setAssess("南宁局政治部组织干部处");//初审人员
            examAutoEvaluation.setAssessId("bfdf74f010c9466dba12c1589ecab7f3");//初审人员id
            examAutoEvaluation.setIsNewRecord(true);
            examAutoEvaluation.setUnit("南宁处政治处组织干部室");
            examAutoEvaluation.setUnitId("27");
            examAutoEvaluation.setEvaluationId("34e8d855cf6b4b1ab5e7e23e7aaba658");
            if(nncsbjScore > 0) {
                examAutoEvaluation.setId(IdGen.uuid());
                examAutoEvaluation.setDetails(nncsbjUnitNam+nncsbjDetails.toString());
                examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考评公共加分标准");
                examAutoEvaluation.setModelId("d3cd787886e44edb95e0f7b4dd3de389");
                examAutoEvaluation.setOption("民警被评为省部级先进");
                examAutoEvaluation.setOptionId("ad126a9f2784421298512ee5ca0fb77a");
                examAutoEvaluation.setScore(String.valueOf(nncsbjScore));
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_省部级先进");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if(nncqgjScore > 0){
                examAutoEvaluation.setId(IdGen.uuid());
                examAutoEvaluation.setDetails(nncqgjUnitNam+nncqgjDetails.toString());
                examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考评公共加分标准");
                examAutoEvaluation.setModelId("d3cd787886e44edb95e0f7b4dd3de389");
                examAutoEvaluation.setOption("民警被评为全国级先进");
                examAutoEvaluation.setOptionId("f446cf72c77f4e2a9b6140ad0d8eb0a1");
                examAutoEvaluation.setScore(String.valueOf(nncqgjScore));
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_全国级先进");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if(nnctjjScore > 0){
                examAutoEvaluation.setId(IdGen.uuid());
                examAutoEvaluation.setDetails(nnctjjUnitNam+nnctjjDetails.toString());
                examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考评公共加分标准");
                examAutoEvaluation.setModelId("d3cd787886e44edb95e0f7b4dd3de389");
                examAutoEvaluation.setOption("民警被评为厅（局）级岗位标兵(注：同一民警，同一事项获得多项先进的，不累计加分。公安局岗位标兵不在加分范围)");
                examAutoEvaluation.setOptionId("e5b0f33787c54f72a8bc8d37dcc25b7e");
                examAutoEvaluation.setScore(String.valueOf(nnctjjScore));
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_厅局级");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
        }
        if (lzcIs0) {
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("2");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setFromSys("智慧政工");
            examAutoEvaluation.setAssess("南宁局政治部组织干部处");//初审人员
            examAutoEvaluation.setAssessId("bfdf74f010c9466dba12c1589ecab7f3");//初审人员id
            examAutoEvaluation.setIsNewRecord(true);
            examAutoEvaluation.setUnit("柳州处政治处组织干部室");
            examAutoEvaluation.setUnitId("142");
            examAutoEvaluation.setEvaluationId("ec3ba2efdd404f2faa520f6e8a71ec4c");
            if(lzcsbjScore > 0) {
                examAutoEvaluation.setId(IdGen.uuid());
                examAutoEvaluation.setDetails(lzcsbjUnitNam+lzcsbjDetails.toString());
                examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考评公共加分标准");
                examAutoEvaluation.setModelId("d3cd787886e44edb95e0f7b4dd3de389");
                examAutoEvaluation.setOption("民警被评为省部级先进");
                examAutoEvaluation.setOptionId("ad126a9f2784421298512ee5ca0fb77a");
                examAutoEvaluation.setScore(String.valueOf(lzcsbjScore));
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_省部级先进");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if(lzcqgjScore > 0){
                examAutoEvaluation.setId(IdGen.uuid());
                examAutoEvaluation.setDetails(lzcqgjUnitNam+lzcqgjDetails.toString());
                examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考评公共加分标准");
                examAutoEvaluation.setModelId("d3cd787886e44edb95e0f7b4dd3de389");
                examAutoEvaluation.setOption("民警被评为全国级先进");
                examAutoEvaluation.setOptionId("f446cf72c77f4e2a9b6140ad0d8eb0a1");
                examAutoEvaluation.setScore(String.valueOf(lzcqgjScore));
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_全国级先进");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if(lzctjjScore > 0){
                examAutoEvaluation.setId(IdGen.uuid());
                examAutoEvaluation.setDetails(lzctjjUnitNam+lzctjjDetails.toString());
                examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考评公共加分标准");
                examAutoEvaluation.setModelId("d3cd787886e44edb95e0f7b4dd3de389");
                examAutoEvaluation.setOption("民警被评为厅（局）级岗位标兵(注：同一民警，同一事项获得多项先进的，不累计加分。公安局岗位标兵不在加分范围)");
                examAutoEvaluation.setOptionId("e5b0f33787c54f72a8bc8d37dcc25b7e");
                examAutoEvaluation.setScore(String.valueOf(lzctjjScore));
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_厅局级");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
        }
        if (bhcIs0) {
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("2");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setFromSys("智慧政工");
            examAutoEvaluation.setAssess("南宁局政治部组织干部处");//初审人员
            examAutoEvaluation.setAssessId("bfdf74f010c9466dba12c1589ecab7f3");//初审人员id
            examAutoEvaluation.setIsNewRecord(true);
            examAutoEvaluation.setUnit("北海处政治处组织干部室");
            examAutoEvaluation.setUnitId("264");
            examAutoEvaluation.setEvaluationId("c90918faf2614baa8fa85230482bd43e");
            if(bhcsbjScore > 0) {
                examAutoEvaluation.setId(IdGen.uuid());
                examAutoEvaluation.setDetails(bhcsbjUnitNam+bhcsbjDetails.toString());
                examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考评公共加分标准");
                examAutoEvaluation.setModelId("d3cd787886e44edb95e0f7b4dd3de389");
                examAutoEvaluation.setOption("民警被评为省部级先进");
                examAutoEvaluation.setOptionId("ad126a9f2784421298512ee5ca0fb77a");
                examAutoEvaluation.setScore(String.valueOf(bhcsbjScore));
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_省部级先进");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if(bhcqgjScore > 0){
                examAutoEvaluation.setId(IdGen.uuid());
                examAutoEvaluation.setDetails(bhcqgjUnitNam+bhcqgjDetails.toString());
                examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考评公共加分标准");
                examAutoEvaluation.setModelId("d3cd787886e44edb95e0f7b4dd3de389");
                examAutoEvaluation.setOption("民警被评为全国级先进");
                examAutoEvaluation.setOptionId("f446cf72c77f4e2a9b6140ad0d8eb0a1");
                examAutoEvaluation.setScore(String.valueOf(bhcqgjScore));
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_全国级先进");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if(bhctjjScore > 0){
                examAutoEvaluation.setId(IdGen.uuid());
                examAutoEvaluation.setDetails(bhctjjUnitNam+bhctjjDetails.toString());
                examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考评公共加分标准");
                examAutoEvaluation.setModelId("d3cd787886e44edb95e0f7b4dd3de389");
                examAutoEvaluation.setOption("民警被评为厅（局）级岗位标兵(注：同一民警，同一事项获得多项先进的，不累计加分。公安局岗位标兵不在加分范围)");
                examAutoEvaluation.setOptionId("e5b0f33787c54f72a8bc8d37dcc25b7e");
                examAutoEvaluation.setScore(String.valueOf(bhctjjScore));
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_厅局级");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
        }
    }


    /**
     * 智慧政工-奖励信息（党建工作，个人）
     * <p>
     * -月度  局考处
     *
     * @param checkTime
     */
    public void grjkcMonth(String checkTime) {

        String year = checkTime.substring(0, 4);
        String month = checkTime.substring(checkTime.length() - 2);

        /*Map<String,Object> monthMap = this.getTimeQuantumByMonth(year,month);
        Date nowMonthDate = (Date) monthMap.get("nowTime");
        Date lastMonthDate = (Date) monthMap.get("lastTime");
        year = (String) monthMap.get("year");
        month = (String) monthMap.get("month");*/
        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        Map<String, String> monthTime = this.monthTime(checkTime);
        Date lastMonthDate = null;
        Date nowMonthDate = null;
        try {
            lastMonthDate = format.parse(monthTime.get("yearL"));
            nowMonthDate = format.parse(monthTime.get("yearT"));
        } catch (ParseException e) {
            e.printStackTrace();
        }

        List<AffairGeneralSituation> affairGeneralSituationsList = affairGeneralSituationService.selectChuPartyBranch();//查询处下所有党支部
        StringBuffer nncsbjUnitNam = null;
        StringBuffer nncqgjUnitNam = null;
        StringBuffer nnctjjUnitNam = null;
        Boolean nncIs0 = false;
        StringBuffer lzcsbjUnitNam = null;
        StringBuffer lzcqgjUnitNam = null;
        StringBuffer lzctjjUnitNam = null;
        Boolean lzcIs0 = false;
        StringBuffer bhcsbjUnitNam = null;
        StringBuffer bhcqgjUnitNam = null;
        StringBuffer bhctjjUnitNam = null;
        Boolean bhcIs0 = false;
        double nncsbjScore = 0;
        double nncqgjScore = 0;
        double nnctjjScore = 0;

        double lzcsbjScore = 0;
        double lzcqgjScore = 0;
        double lzctjjScore = 0;

        double bhcsbjScore = 0;
        double bhcqgjScore = 0;
        double bhctjjScore = 0;

        StringBuffer nncsbjDetails = null;
        StringBuffer nncqgjDetails = null;
        StringBuffer nnctjjDetails = null;

        StringBuffer lzcsbjDetails = null;
        StringBuffer lzcqgjDetails = null;
        StringBuffer lzctjjDetails = null;

        StringBuffer bhcsbjDetails = null;
        StringBuffer bhcqgjDetails = null;
        StringBuffer bhctjjDetails = null;

        for (AffairGeneralSituation affairGeneralSituation : affairGeneralSituationsList) {
            //党组织名称
            String partyName = affairGeneralSituation.getPartyOrganization();
            //党组织id
            String partyId = affairGeneralSituation.getId();
            List<AffairPartyRewardPunish> list = affairPartyRewardPunishService.selectPersonMonth(lastMonthDate,nowMonthDate,partyId);
            if (list != null && list.size() > 0) {
                /*if (affairGeneralSituation.getParentIds().contains(",34,")) {
                    //南宁处
                    nncIs0 = true;
                    if (nncUnitNam == null) {
                        nncUnitNam = new StringBuffer(partyName);
                    } else {
                        nncUnitNam.append("," + partyName);
                    }

                } else if (affairGeneralSituation.getParentIds().contains(",95,")) {
                    //柳州处
                    lzcIs0 = true;
                    if (lzcUnitNam == null) {
                        lzcUnitNam = new StringBuffer(partyName);
                    } else {
                        lzcUnitNam.append("," + partyName);
                    }
                } else if (affairGeneralSituation.getParentIds().contains(",156,")){
                    //北海处
                    bhcIs0 = true;
                    if (bhcUnitNam == null) {
                        bhcUnitNam = new StringBuffer(partyName);
                    } else {
                        bhcUnitNam.append("," + partyName);
                    }
                }*/
                for (int i = 0; i < list.size(); i++) {
                    if (affairGeneralSituation.getParentIds().contains(",34,")) {
                        AffairPartyRewardPunish affairPartyRewardPunish = list.get(i);
                        Date approvalTime = affairPartyRewardPunish.getApprovalTime();
                        if ("2".equals(affairPartyRewardPunish.getType())) {
                            nncsbjScore += 1.5;
                            if (nncsbjDetails == null) {
                                nncsbjDetails = new StringBuffer(affairPartyRewardPunish.getName() +DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+ "被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                            } else {
                                nncsbjDetails.append("," + affairPartyRewardPunish.getName() + DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                            }
                            nncIs0 = true;
                            if (nncsbjUnitNam == null) {
                                nncsbjUnitNam = new StringBuffer(partyName);
                            } else {
                                nncsbjUnitNam.append("," + partyName);
                            }
                        } else if ("1".equals(affairPartyRewardPunish.getType())) {
                            nncqgjScore += 2.5;
                            if (nncqgjDetails == null) {
                                String dict = DictUtils.getDictLabel(affairPartyRewardPunish.getType(), "affair_org_reward_punish", "");
                                nncqgjDetails = new StringBuffer(affairPartyRewardPunish.getName() +DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+ "被评为" + dict+"先进");
                            } else {
                                nncqgjDetails.append("," + affairPartyRewardPunish.getName() +DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+ "被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                            }
                            nncIs0 = true;
                            if (nncqgjUnitNam == null) {
                                nncqgjUnitNam = new StringBuffer(partyName);
                            } else {
                                nncqgjUnitNam.append("," + partyName);
                            }
                        } else if (("3".equals(affairPartyRewardPunish.getType()) || "4".equals(affairPartyRewardPunish.getType())) && affairPartyRewardPunish.getTitle().contains("优秀共产党员")) {
                            nnctjjScore += 0.5;
                            if (nnctjjDetails == null) {
                                nnctjjDetails = new StringBuffer(affairPartyRewardPunish.getName() +DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+ "获得"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+affairPartyRewardPunish.getTitle());
                            } else {
                                nnctjjDetails.append("," + affairPartyRewardPunish.getName() + DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"获得"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+affairPartyRewardPunish.getTitle());
                            }
                            nncIs0 = true;
                            if (nnctjjUnitNam == null) {
                                nnctjjUnitNam = new StringBuffer(partyName);
                            } else {
                                nnctjjUnitNam.append("," + partyName);
                            }
                        }
                    }else if (affairGeneralSituation.getParentIds().contains(",95,")) {
                        AffairPartyRewardPunish affairPartyRewardPunish = list.get(i);
                        Date approvalTime = affairPartyRewardPunish.getApprovalTime();
                        if("2".equals(affairPartyRewardPunish.getType())){
                            lzcsbjScore += 1.5;
                            if (lzcsbjDetails == null) {
                                lzcsbjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                            } else {
                                lzcsbjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                            }
                            lzcIs0 = true;
                            if (lzcsbjUnitNam == null) {
                                lzcsbjUnitNam = new StringBuffer(partyName);
                            } else {
                                lzcsbjUnitNam.append("," + partyName);
                            }
                        }else if("1".equals(affairPartyRewardPunish.getType())){
                            lzcqgjScore += 2.5;
                            if (lzcqgjDetails == null) {
                                lzcqgjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                            } else {
                                lzcqgjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                            }
                            lzcIs0 = true;
                            if (lzcqgjUnitNam == null) {
                                lzcqgjUnitNam = new StringBuffer(partyName);
                            } else {
                                lzcqgjUnitNam.append("," + partyName);
                            }
                        }else if(("3".equals(affairPartyRewardPunish.getType()) || "4".equals(affairPartyRewardPunish.getType())) && affairPartyRewardPunish.getTitle().contains("优秀共产党员")){
                            lzctjjScore += 0.5;
                            if (lzctjjDetails == null) {
                                lzctjjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"获得"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+affairPartyRewardPunish.getTitle());
                            } else {
                                lzctjjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"获得"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+affairPartyRewardPunish.getTitle());
                            }
                            lzcIs0 = true;
                            if (lzctjjUnitNam == null) {
                                lzctjjUnitNam = new StringBuffer(partyName);
                            } else {
                                lzctjjUnitNam.append("," + partyName);
                            }
                        }
                    } else if (affairGeneralSituation.getParentIds().contains(",156,")){
                        AffairPartyRewardPunish affairPartyRewardPunish = list.get(i);
                        Date approvalTime = affairPartyRewardPunish.getApprovalTime();
                        if("2".equals(affairPartyRewardPunish.getType())){
                            bhcsbjScore += 1.5;
                            if (bhcsbjDetails == null) {
                                bhcsbjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                            } else {
                                bhcsbjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                            }
                            bhcIs0 = true;
                            if (bhcsbjUnitNam == null) {
                                bhcsbjUnitNam = new StringBuffer(partyName);
                            } else {
                                bhcsbjUnitNam.append("," + partyName);
                            }
                        }else if("1".equals(affairPartyRewardPunish.getType())){
                            bhcqgjScore += 2.5;
                            if (bhcqgjDetails == null) {
                                bhcqgjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                            } else {
                                bhcqgjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                            }
                            bhcIs0 = true;
                            if (bhcqgjUnitNam == null) {
                                bhcqgjUnitNam = new StringBuffer(partyName);
                            } else {
                                bhcqgjUnitNam.append("," + partyName);
                            }
                        }else if(("3".equals(affairPartyRewardPunish.getType()) || "4".equals(affairPartyRewardPunish.getType())) && affairPartyRewardPunish.getTitle().contains("优秀共产党员")){
                            bhctjjScore += 0.5;
                            if (bhctjjDetails == null) {
                                bhctjjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"获得"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+affairPartyRewardPunish.getTitle());
                            } else {
                                bhctjjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"获得"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+affairPartyRewardPunish.getTitle());
                            }

                            //北海处
                            bhcIs0 = true;
                            if (bhctjjUnitNam == null) {
                                bhctjjUnitNam = new StringBuffer(partyName);
                            } else {
                                bhctjjUnitNam.append("," + partyName);
                            }
                        }
                    }
                }
            }
        }
        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
        examAutoEvaluation.setType("1");
        examAutoEvaluation.setEvalType("1");
        examAutoEvaluation.setPeriod("1");
        examAutoEvaluation.setMonth(month);
        examAutoEvaluation.setYear(year);
        examAutoEvaluation.setFromSys("智慧政工");
        examAutoEvaluation.setAssess("南宁局政治部组织干部处");//初审人员
        examAutoEvaluation.setAssessId("bfdf74f010c9466dba12c1589ecab7f3");//初审人员id
        if (nncIs0) {
            examAutoEvaluation.setIsNewRecord(true);
            examAutoEvaluation.setUnit("南宁处政治处组织干部室");
            examAutoEvaluation.setUnitId("27");
            examAutoEvaluation.setEvaluationId("34e8d855cf6b4b1ab5e7e23e7aaba658");
            if(nncsbjScore > 0) {
                examAutoEvaluation.setId(IdGen.uuid());
                examAutoEvaluation.setDetails(nncsbjUnitNam+nncsbjDetails.toString());
                examAutoEvaluation.setModel("2020年月度公安局对公安处绩效考评公共加分标准");
                examAutoEvaluation.setModelId("a20967b72dca4e6e9915fa43c46e153a");
                examAutoEvaluation.setOption("民警被评为省部级先进");
                examAutoEvaluation.setOptionId("f2cda4aa3f48438ea54becfd938d231f");
                examAutoEvaluation.setScore(String.valueOf(nncsbjScore));
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_省部级先进");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if(nncqgjScore > 0){
                examAutoEvaluation.setId(IdGen.uuid());
                examAutoEvaluation.setDetails(nncqgjUnitNam+nncqgjDetails.toString());
                examAutoEvaluation.setModel("2020年月度公安局对公安处绩效考评公共加分标准");
                examAutoEvaluation.setModelId("a20967b72dca4e6e9915fa43c46e153a");
                examAutoEvaluation.setOption("民警被评为全国级先进");
                examAutoEvaluation.setOptionId("baa20ab7bd5c4df7aa2c7de638cfc96f");
                examAutoEvaluation.setScore(String.valueOf(nncqgjScore));
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_全国级先进");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if(nnctjjScore > 0){
                examAutoEvaluation.setId(IdGen.uuid());
                examAutoEvaluation.setDetails(nnctjjUnitNam+nnctjjDetails.toString());
                examAutoEvaluation.setModel("2020年月度公安局对公安处绩效考评公共加分标准");
                examAutoEvaluation.setModelId("a20967b72dca4e6e9915fa43c46e153a");
                examAutoEvaluation.setOption("民警被评为厅（局）级岗位标兵(注：同一民警，同一事项获得多项先进的，不累计加分。公安局岗位标兵不在加分范围)");
                examAutoEvaluation.setOptionId("fcbcf3becb10469c8c3b4aeeb1b31dad");
                examAutoEvaluation.setScore(String.valueOf(nnctjjScore));
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_厅局级");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
        }
        if (lzcIs0) {
            examAutoEvaluation.setIsNewRecord(true);
            examAutoEvaluation.setUnit("柳州处政治处组织干部室");
            examAutoEvaluation.setUnitId("142");
            examAutoEvaluation.setEvaluationId("ec3ba2efdd404f2faa520f6e8a71ec4c");
            if(lzcsbjScore > 0) {
                examAutoEvaluation.setId(IdGen.uuid());
                examAutoEvaluation.setDetails(lzcsbjUnitNam+lzcsbjDetails.toString());
                examAutoEvaluation.setModel("2020年月度公安局对公安处绩效考评公共加分标准");
                examAutoEvaluation.setModelId("a20967b72dca4e6e9915fa43c46e153a");
                examAutoEvaluation.setOption("民警被评为省部级先进");
                examAutoEvaluation.setOptionId("f2cda4aa3f48438ea54becfd938d231f");
                examAutoEvaluation.setScore(String.valueOf(lzcsbjScore));
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_省部级先进");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if(lzcqgjScore > 0){
                examAutoEvaluation.setId(IdGen.uuid());
                examAutoEvaluation.setDetails(lzcqgjUnitNam+lzcqgjDetails.toString());
                examAutoEvaluation.setModel("2020年月度公安局对公安处绩效考评公共加分标准");
                examAutoEvaluation.setModelId("a20967b72dca4e6e9915fa43c46e153a");
                examAutoEvaluation.setOption("民警被评为全国级先进");
                examAutoEvaluation.setOptionId("baa20ab7bd5c4df7aa2c7de638cfc96f");
                examAutoEvaluation.setScore(String.valueOf(lzcqgjScore));
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_全国级先进");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if(lzctjjScore > 0){
                examAutoEvaluation.setId(IdGen.uuid());
                examAutoEvaluation.setDetails(lzctjjUnitNam+lzctjjDetails.toString());
                examAutoEvaluation.setModel("2020年月度公安局对公安处绩效考评公共加分标准");
                examAutoEvaluation.setModelId("a20967b72dca4e6e9915fa43c46e153a");
                examAutoEvaluation.setOption("民警被评为厅（局）级岗位标兵(注：同一民警，同一事项获得多项先进的，不累计加分。公安局岗位标兵不在加分范围)");
                examAutoEvaluation.setOptionId("fcbcf3becb10469c8c3b4aeeb1b31dad");
                examAutoEvaluation.setScore(String.valueOf(lzctjjScore));
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_厅局级");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
        }
        if (bhcIs0) {
            examAutoEvaluation.setIsNewRecord(true);
            examAutoEvaluation.setUnit("北海处政治处组织干部室");
            examAutoEvaluation.setUnitId("264");
            examAutoEvaluation.setEvaluationId("c90918faf2614baa8fa85230482bd43e");
            if(bhcsbjScore > 0) {
                examAutoEvaluation.setId(IdGen.uuid());
                examAutoEvaluation.setDetails(bhcsbjUnitNam+bhcsbjDetails.toString());
                examAutoEvaluation.setModel("2020年月度公安局对公安处绩效考评公共加分标准");
                examAutoEvaluation.setModelId("a20967b72dca4e6e9915fa43c46e153a");
                examAutoEvaluation.setOption("民警被评为省部级先进");
                examAutoEvaluation.setOptionId("f2cda4aa3f48438ea54becfd938d231f");
                examAutoEvaluation.setScore(String.valueOf(bhcsbjScore));
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_省部级先进");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if(bhcqgjScore > 0){
                examAutoEvaluation.setId(IdGen.uuid());
                examAutoEvaluation.setDetails(bhcqgjUnitNam+bhcqgjDetails.toString());
                examAutoEvaluation.setModel("2020年月度公安局对公安处绩效考评公共加分标准");
                examAutoEvaluation.setModelId("a20967b72dca4e6e9915fa43c46e153a");
                examAutoEvaluation.setOption("民警被评为全国级先进");
                examAutoEvaluation.setOptionId("baa20ab7bd5c4df7aa2c7de638cfc96f");
                examAutoEvaluation.setScore(String.valueOf(bhcqgjScore));
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_全国级先进");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if(bhctjjScore > 0){
                examAutoEvaluation.setId(IdGen.uuid());
                examAutoEvaluation.setDetails(bhctjjUnitNam+bhctjjDetails.toString());
                examAutoEvaluation.setModel("2020年月度公安局对公安处绩效考评公共加分标准");
                examAutoEvaluation.setModelId("a20967b72dca4e6e9915fa43c46e153a");
                examAutoEvaluation.setOption("民警被评为厅（局）级岗位标兵(注：同一民警，同一事项获得多项先进的，不累计加分。公安局岗位标兵不在加分范围)");
                examAutoEvaluation.setOptionId("fcbcf3becb10469c8c3b4aeeb1b31dad");
                examAutoEvaluation.setScore(String.valueOf(bhctjjScore));
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_厅局级");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
        }
    }


    /**
     * 智慧政工-奖励信息（党建工作，个人）
     * <p>
     * -年度  局考局机关
     *
     * @param year
     */
    public void grjkjjgYear(String year) {

        /*Map<String,Object> yearMap = this.getTimeQuantumByYear(year);
        Date nowYearDate = (Date) yearMap.get("nowYear");
        Date lastYearDate = (Date) yearMap.get("lastYear");
        year = (String) yearMap.get("year");*/

        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        Map<String, String> yearTime = this.yearTime(year);
        Date lastYearDate = null;
        Date nowYearDate = null;
        try {
            lastYearDate = format.parse(yearTime.get("yearL"));
            nowYearDate = format.parse(yearTime.get("yearT"));
        } catch (ParseException e) {
            e.printStackTrace();
        }

        List<AffairGeneralSituation> jjgPartyList = affairGeneralSituationService.getJJGPartyBranch();

        for (AffairGeneralSituation affairGeneralSituation : jjgPartyList) {
            StringBuffer sbjDetails = null;
            StringBuffer qgjDetails = null;
            StringBuffer tjjDetails = null;
            double sbjScore = 0;
            double qgjScore = 0;
            double tjjScore = 0;
            String partyId = affairGeneralSituation.getId();
            String partyOrganization = affairGeneralSituation.getPartyOrganization();
            List<AffairPartyRewardPunish> list = affairPartyRewardPunishService.selectPerson(lastYearDate,nowYearDate, partyId);
            if (list.size() > 0 && list != null) {
                for (int j = 0; j < list.size(); j++) {
                    AffairPartyRewardPunish affairPartyRewardPunish = list.get(j);
                    Date approvalTime = affairPartyRewardPunish.getApprovalTime();
                    if ("2".equals(affairPartyRewardPunish.getType())) {
                        sbjScore += 1;
                        if (sbjDetails == null) {
                            sbjDetails = new StringBuffer(affairPartyRewardPunish.getName() +DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+ "被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        } else {
                            sbjDetails.append("," + affairPartyRewardPunish.getName() + DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        }
                    } else if ("1".equals(affairPartyRewardPunish.getType())) {
                        qgjScore += 1.5;
                        if (qgjDetails == null) {
                            qgjDetails = new StringBuffer(affairPartyRewardPunish.getName() + DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        } else {
                            qgjDetails.append("," + affairPartyRewardPunish.getName() + DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        }
                    } else if (("3".equals(affairPartyRewardPunish.getType()) || "4".equals(affairPartyRewardPunish.getType())) && affairPartyRewardPunish.getTitle().contains("优秀共产党员")) {
                        tjjScore += 0.3;
                        if (tjjDetails == null) {
                            tjjDetails = new StringBuffer(affairPartyRewardPunish.getName() + DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"获得"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+affairPartyRewardPunish.getTitle());
                        } else {
                            tjjDetails.append("," + affairPartyRewardPunish.getName() + DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"获得"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+affairPartyRewardPunish.getTitle());
                        }
                    }
                }
                if (sbjScore > 0) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("2");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(partyOrganization +sbjDetails.toString());
                    examAutoEvaluation.setAssessId("cca66e1339f14799b01f6db43ed16e16");
                    examAutoEvaluation.setAssess("南宁局绩效办");
                    examAutoEvaluation.setModel("2020年年度公安局对局机关各处室及直属支队年度绩效考核公共加分标准");
                    examAutoEvaluation.setModelId("a20967b72dca4e6e9915fa43c46e153a");
                    examAutoEvaluation.setOption("民警被评为省部级先进");
                    examAutoEvaluation.setOptionId("541d3c0802804a9f988e43b1062e9155");
                    examAutoEvaluation.setScore(String.valueOf(sbjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_省部级先进");
                    examAutoEvaluation.setFromSys("智慧政工");//数据来源
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if(!user.getOffice().getName().contains("大队")) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId("");
                            examAutoEvaluation.setIsNewRecord(false);
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
                if (qgjScore > 0) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("2");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(partyOrganization +qgjDetails.toString());
                    examAutoEvaluation.setAssessId("cca66e1339f14799b01f6db43ed16e16");
                    examAutoEvaluation.setAssess("南宁局绩效办");
                    examAutoEvaluation.setModel("2020年年度公安局对局机关各处室及直属支队年度绩效考核公共加分标准");
                    examAutoEvaluation.setModelId("a20967b72dca4e6e9915fa43c46e153a");
                    examAutoEvaluation.setOption("民警被评为全国级先进");
                    examAutoEvaluation.setOptionId("87f232482ea14d958d53e4e2d31184db");
                    examAutoEvaluation.setScore(String.valueOf(qgjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_全国级先进");
                    examAutoEvaluation.setFromSys("智慧政工");//数据来源
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if(!user.getOffice().getName().contains("大队")) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId("");
                            examAutoEvaluation.setIsNewRecord(false);
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
                if (tjjScore > 0) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("2");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(partyOrganization +tjjDetails.toString());
                    examAutoEvaluation.setAssessId("cca66e1339f14799b01f6db43ed16e16");
                    examAutoEvaluation.setAssess("南宁局绩效办");
                    examAutoEvaluation.setModel("2020年年度公安局对局机关各处室及直属支队年度绩效考核公共加分标准");
                    examAutoEvaluation.setModelId("a20967b72dca4e6e9915fa43c46e153a");
                    examAutoEvaluation.setOption("民警被评为厅（局）级岗位标兵(注：同一民警，同一事项获得多项先进的，不累计加分。公安局岗位标兵不在加分范围)");
                    examAutoEvaluation.setOptionId("28f4fd438bab42f28a10cd28211fe2e3");
                    examAutoEvaluation.setScore(String.valueOf(tjjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_厅局级");
                    examAutoEvaluation.setFromSys("智慧政工");//数据来源
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if(!user.getOffice().getName().contains("大队")) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId("");
                            examAutoEvaluation.setIsNewRecord(false);
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
            }
        }

    }

    /**
     * 智慧政工-奖励信息（党建工作，个人）
     * <p>
     * -月度  局考局机关
     *
     * @param checkTime
     */
    public void grjkjjgMonth(String checkTime) {

        String year = checkTime.substring(0, 4);
        String month = checkTime.substring(checkTime.length() - 2);

        /*Map<String,Object> monthMap = this.getTimeQuantumByMonth(year,month);
        Date nowMonthDate = (Date) monthMap.get("nowTime");
        Date lastMonthDate = (Date) monthMap.get("lastTime");
        year = (String) monthMap.get("year");
        month = (String) monthMap.get("month");*/

        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        Map<String, String> monthTime = this.monthTime(checkTime);
        Date lastMonthDate = null;
        Date nowMonthDate = null;
        try {
            lastMonthDate = format.parse(monthTime.get("yearL"));
            nowMonthDate = format.parse(monthTime.get("yearT"));
        } catch (ParseException e) {
            e.printStackTrace();
        }


        List<AffairGeneralSituation> jjgPartyList = affairGeneralSituationService.getJJGPartyBranch();
        for (AffairGeneralSituation affairGeneralSituation : jjgPartyList) {
            StringBuffer sbjDetails = null;
            StringBuffer qgjDetails = null;
            StringBuffer tjjDetails = null;
            double sbjScore = 0;
            double qgjScore = 0;
            double tjjScore = 0;
            String partyId = affairGeneralSituation.getId();
            String partyOrganization = affairGeneralSituation.getPartyOrganization();
            List<AffairPartyRewardPunish> list = affairPartyRewardPunishService.selectPersonMonth(lastMonthDate,nowMonthDate, partyId);
            if (list.size() > 0 && list != null) {
                for (int j = 0; j < list.size(); j++) {
                    AffairPartyRewardPunish affairPartyRewardPunish = list.get(j);
                    Date approvalTime = affairPartyRewardPunish.getApprovalTime();
                    if ("2".equals(affairPartyRewardPunish.getType())) {
                        sbjScore += 1.5;
                        if (sbjDetails == null) {
                            sbjDetails = new StringBuffer(affairPartyRewardPunish.getName() + DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        } else {
                            sbjDetails.append("," + affairPartyRewardPunish.getName() +DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+ "被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        }
                    } else if ("1".equals(affairPartyRewardPunish.getType())) {
                        qgjScore += 2.5;
                        if (qgjDetails == null) {
                            qgjDetails = new StringBuffer(affairPartyRewardPunish.getName() + DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        } else {
                            qgjDetails.append("," + affairPartyRewardPunish.getName() + DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        }
                    } else if (("3".equals(affairPartyRewardPunish.getType()) || "4".equals(affairPartyRewardPunish.getType())) && affairPartyRewardPunish.getTitle().contains("优秀共产党员")) {
                        tjjScore += 0.5;
                        if (tjjDetails == null) {
                            tjjDetails = new StringBuffer(affairPartyRewardPunish.getName() +DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+ "获得"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+affairPartyRewardPunish.getTitle());
                        } else {
                            tjjDetails.append("," + affairPartyRewardPunish.getName() +DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+ "获得"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+affairPartyRewardPunish.getTitle());
                        }
                    }
                }
                if (sbjScore > 0) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("2");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(partyOrganization +sbjDetails.toString());
                    examAutoEvaluation.setAssessId("cca66e1339f14799b01f6db43ed16e16");
                    examAutoEvaluation.setAssess("南宁局绩效办");
                    examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队月度绩效考核公共加分标准");
                    examAutoEvaluation.setModelId("d07471fe33c64f85afc6288d039f2248");
                    examAutoEvaluation.setOption("民警被评为省部级先进");
                    examAutoEvaluation.setOptionId("920ca34fa0974f13a166ff0a0e5321d3");
                    examAutoEvaluation.setScore(String.valueOf(sbjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_省部级先进");
                    examAutoEvaluation.setFromSys("智慧政工");//数据来源
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if(!user.getOffice().getName().contains("大队")) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId("");
                            examAutoEvaluation.setIsNewRecord(false);
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }else if (qgjScore > 0) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("2");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(partyOrganization + qgjDetails.toString());
                    examAutoEvaluation.setAssessId("cca66e1339f14799b01f6db43ed16e16");
                    examAutoEvaluation.setAssess("南宁局绩效办");
                    examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队月度绩效考核公共加分标准");
                    examAutoEvaluation.setModelId("d07471fe33c64f85afc6288d039f2248");
                    examAutoEvaluation.setOption("民警被评为全国级先进");
                    examAutoEvaluation.setOptionId("f829917407da44e4b22929a6eea7357f");
                    examAutoEvaluation.setScore(String.valueOf(qgjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_全国级先进");
                    examAutoEvaluation.setFromSys("智慧政工");//数据来源
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if(!user.getOffice().getName().contains("大队")){
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId("");
                            examAutoEvaluation.setIsNewRecord(false);
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }else if (tjjScore > 0) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("2");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(partyOrganization + tjjDetails.toString());
                    examAutoEvaluation.setAssessId("cca66e1339f14799b01f6db43ed16e16");
                    examAutoEvaluation.setAssess("南宁局绩效办");
                    examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队月度绩效考核公共加分标准");
                    examAutoEvaluation.setModelId("d07471fe33c64f85afc6288d039f2248");
                    examAutoEvaluation.setOption("民警被评为厅（局）级岗位标兵(注：同一民警，同一事项获得多项先进的，不累计加分。公安局岗位标兵不在加分范围)");
                    examAutoEvaluation.setOptionId("504adc14b7c3412ea2d36082c77f2362");
                    examAutoEvaluation.setScore(String.valueOf(tjjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_厅局级");
                    examAutoEvaluation.setFromSys("智慧政工");//数据来源
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if(!user.getOffice().getName().contains("大队")) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId("");
                            examAutoEvaluation.setIsNewRecord(false);
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
            }
        }
    }

    /**
     * 智慧政工-奖励信息（党建工作，个人）
     * <p>
     * -年度  处考处机关
     *
     * @param year
     */
    public void grckcjgYear(String year) {

       /* Map<String,Object> yearMap = this.getTimeQuantumByYear(year);
        Date nowYearDate = (Date) yearMap.get("nowYear");
        Date lastYearDate = (Date) yearMap.get("lastYear");
        year = (String) yearMap.get("year");*/

        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        Map<String, String> yearTime = this.yearTime(year);
        Date lastYearDate = null;
        Date nowYearDate = null;
        try {
            lastYearDate = format.parse(yearTime.get("yearL"));
            nowYearDate = format.parse(yearTime.get("yearT"));
        } catch (ParseException e) {
            e.printStackTrace();
        }

        //获取各处处机关党组织
        List<AffairGeneralSituation> nncPartyList = affairGeneralSituationService.getChuPartyBranch("34", "1");
        List<AffairGeneralSituation> lzcPartyList = affairGeneralSituationService.getChuPartyBranch("95", "1");
        List<AffairGeneralSituation> bhcPartyList = affairGeneralSituationService.getChuPartyBranch("156", "1");
        for (AffairGeneralSituation affairGeneralSituation : nncPartyList) {
            StringBuffer nncsbjDetails = null;
            StringBuffer nncqgjDetails = null;
            StringBuffer nnctjjDetails = null;

            double nncsbjScore = 0;
            double nncqgjScore = 0;
            double nnctjjScore = 0;
            String partyId = affairGeneralSituation.getId();
            String partyOrganization = affairGeneralSituation.getPartyOrganization();
            List<AffairPartyRewardPunish> list = affairPartyRewardPunishService.selectPerson(lastYearDate,nowYearDate, partyId);
            if(list.size() > 0 && list != null) {
                for (int j = 0; j < list.size(); j++) {
                    AffairPartyRewardPunish affairPartyRewardPunish = list.get(j);
                    Date approvalTime = affairPartyRewardPunish.getApprovalTime();
                    if ("2".equals(affairPartyRewardPunish.getType())) {
                        nncsbjScore += 1.5;
                        if (nncsbjDetails == null) {
                            nncsbjDetails = new StringBuffer(affairPartyRewardPunish.getName() + DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        } else {
                            nncsbjDetails.append("," + affairPartyRewardPunish.getName() +DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        }
                    } else if ("1".equals(affairPartyRewardPunish.getType())) {
                        nncqgjScore += 2.5;
                        if (nncqgjDetails == null) {
                            nncqgjDetails = new StringBuffer(affairPartyRewardPunish.getName() +DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        } else {
                            nncqgjDetails.append("," + affairPartyRewardPunish.getName() + DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        }
                    } else if (("3".equals(affairPartyRewardPunish.getType()) || "4".equals(affairPartyRewardPunish.getType())) && affairPartyRewardPunish.getTitle().contains("优秀共产党员")) {
                        nnctjjScore += 0.3;
                        if (nnctjjDetails == null) {
                            nnctjjDetails = new StringBuffer(affairPartyRewardPunish.getName() +DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"获得"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+affairPartyRewardPunish.getTitle());
                        } else {
                            nnctjjDetails.append("," + affairPartyRewardPunish.getName() + DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"获得"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+affairPartyRewardPunish.getTitle());
                        }
                    }
                }
                if (nncsbjScore > 0) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(partyOrganization +nncsbjDetails.toString());
                    examAutoEvaluation.setAssess("南宁处绩效办");
                    examAutoEvaluation.setAssessId("978958003ea44a4bba3eed8ee6ceff3c");
                    examAutoEvaluation.setModel("2020年年度南宁公安处对全处各部门公共加分标准");
                    examAutoEvaluation.setModelId("d2e2f45cbd69457f807d23f2e1968c2c");
                    examAutoEvaluation.setOption("民警被评为省部级先进");
                    examAutoEvaluation.setOptionId("4cf858ba105c4393bd4ff9b67b1df01a");
                    examAutoEvaluation.setScore(String.valueOf(nncsbjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","奖励信息党建工作及个人_省部级先进");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (!user.getOffice().getName().contains("派出所")) {
                            if(!user.getOffice().getName().contains("大队")) {
                                examAutoEvaluation.setUnit(user.getOffice().getName());
                                examAutoEvaluation.setUnitId(user.getOffice().getId());
                                examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                                //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                                examAutoEvaluation.setId("");
                                examAutoEvaluation.setIsNewRecord(false);
                                this.deleteInfoByMore(examAutoEvaluation);
                                this.save(examAutoEvaluation);
                            }
                        }
                    }
                }
                if(nncqgjScore > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(partyOrganization +nncqgjDetails.toString());
                    examAutoEvaluation.setAssess("南宁处绩效办");
                    examAutoEvaluation.setAssessId("978958003ea44a4bba3eed8ee6ceff3c");
                    examAutoEvaluation.setModel("2020年年度南宁公安处对全处各部门公共加分标准");
                    examAutoEvaluation.setModelId("d2e2f45cbd69457f807d23f2e1968c2c");
                    examAutoEvaluation.setOption("民警被评为全国级先进");
                    examAutoEvaluation.setOptionId("564f4209fa37440a9588717f92b566d1");
                    examAutoEvaluation.setScore(String.valueOf(nncqgjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","奖励信息党建工作及个人_全国级先进");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (!user.getOffice().getName().contains("派出所")) {
                            if(!user.getOffice().getName().contains("大队")) {
                                examAutoEvaluation.setUnit(user.getOffice().getName());
                                examAutoEvaluation.setUnitId(user.getOffice().getId());
                                examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                                //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                                examAutoEvaluation.setId("");
                                examAutoEvaluation.setIsNewRecord(false);
                                this.deleteInfoByMore(examAutoEvaluation);
                                this.save(examAutoEvaluation);
                            }
                        }
                    }
                }
                if(nnctjjScore > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(partyOrganization +nnctjjDetails.toString());
                    examAutoEvaluation.setAssess("南宁处绩效办");
                    examAutoEvaluation.setAssessId("978958003ea44a4bba3eed8ee6ceff3c");
                    examAutoEvaluation.setModel("2020年年度南宁公安处对全处各部门公共加分标准");
                    examAutoEvaluation.setModelId("d2e2f45cbd69457f807d23f2e1968c2c");
                    examAutoEvaluation.setOption("民警被评为厅（局）级岗位标兵(注：同一民警，同一事项获得多项先进的，不累计加分。公安局岗位标兵不在加分范围)");
                    examAutoEvaluation.setOptionId("2eb8504392c54a7ca84260210209b698");
                    examAutoEvaluation.setScore(String.valueOf(nnctjjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","奖励信息党建工作及个人_厅局级");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (!user.getOffice().getName().contains("派出所")) {
                            if(!user.getOffice().getName().contains("大队")) {
                                examAutoEvaluation.setUnit(user.getOffice().getName());
                                examAutoEvaluation.setUnitId(user.getOffice().getId());
                                examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                                //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                                examAutoEvaluation.setId("");
                                examAutoEvaluation.setIsNewRecord(false);
                                this.deleteInfoByMore(examAutoEvaluation);
                                this.save(examAutoEvaluation);
                            }
                        }
                    }
                }
            }
        }
        for (AffairGeneralSituation affairGeneralSituation : lzcPartyList) {
            StringBuffer lzcsbjDetails = null;
            StringBuffer lzcqgjDetails = null;
            StringBuffer lzctjjDetails = null;
            double lzcsbjScore = 0;
            double lzcqgjScore = 0;
            double lzctjjScore = 0;

            String partyId = affairGeneralSituation.getId();
            String partyOrganization = affairGeneralSituation.getPartyOrganization();
            List<AffairPartyRewardPunish> list = affairPartyRewardPunishService.selectPerson(lastYearDate,nowYearDate, partyId);
            if(list.size() > 0 && list != null){
                for (int j = 0; j < list.size(); j++) {
                    AffairPartyRewardPunish affairPartyRewardPunish = list.get(j);
                    Date approvalTime = affairPartyRewardPunish.getApprovalTime();
                    if("2".equals(affairPartyRewardPunish.getType())){
                        lzcsbjScore += 1.5;
                        if (lzcsbjDetails == null) {
                            lzcsbjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        } else {
                            lzcsbjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        }
                    }else if("1".equals(affairPartyRewardPunish.getType())){
                        lzcqgjScore += 2.5;
                        if (lzcqgjDetails == null) {
                            lzcqgjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        } else {
                            lzcqgjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        }
                    }else if(("3".equals(affairPartyRewardPunish.getType()) || "4".equals(affairPartyRewardPunish.getType())) && affairPartyRewardPunish.getTitle().contains("优秀共产党员")){
                        lzctjjScore += 0.3;
                        if (lzctjjDetails == null) {
                            lzctjjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"获得"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+affairPartyRewardPunish.getTitle());
                        } else {
                            lzctjjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"获得"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+affairPartyRewardPunish.getTitle());
                        }
                    }
                }
                if (lzcsbjScore > 0) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(partyOrganization +lzcsbjDetails.toString());
                    examAutoEvaluation.setAssess("柳州处绩效办");
                    examAutoEvaluation.setAssessId("6af0e615e9b0477da82eff06ff532c8b");
                    examAutoEvaluation.setModel("2020年年度柳州处对单位（部门）绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("d784cce1380546a986567debfeb0dcdb");
                    examAutoEvaluation.setOption("民警被评为省部级先进");
                    examAutoEvaluation.setOptionId("e84da627a70e4a13bec643e3a2148e23");
                    examAutoEvaluation.setScore(String.valueOf(lzcsbjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","奖励信息党建工作及个人_省部级先进");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (!user.getOffice().getName().contains("派出所")) {
                            if(!user.getOffice().getName().contains("大队")) {
                                examAutoEvaluation.setUnit(user.getOffice().getName());
                                examAutoEvaluation.setUnitId(user.getOffice().getId());
                                examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                                //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                                examAutoEvaluation.setId("");
                                examAutoEvaluation.setIsNewRecord(false);
                                this.deleteInfoByMore(examAutoEvaluation);
                                this.save(examAutoEvaluation);
                            }
                        }
                    }
                }
                if(lzcqgjScore > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(partyOrganization +lzcqgjDetails.toString());
                    examAutoEvaluation.setAssess("柳州处绩效办");
                    examAutoEvaluation.setAssessId("6af0e615e9b0477da82eff06ff532c8b");
                    examAutoEvaluation.setModel("2020年年度柳州处对单位（部门）绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("d784cce1380546a986567debfeb0dcdb");
                    examAutoEvaluation.setOption("民警被评为全国级先进");
                    examAutoEvaluation.setOptionId("c9577da5fe5a42768d86b053c6b08bcd");
                    examAutoEvaluation.setScore(String.valueOf(lzcqgjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","奖励信息党建工作及个人_全国级先进");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (!user.getOffice().getName().contains("派出所")) {
                            if(!user.getOffice().getName().contains("大队")) {
                                examAutoEvaluation.setUnit(user.getOffice().getName());
                                examAutoEvaluation.setUnitId(user.getOffice().getId());
                                examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                                //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                                examAutoEvaluation.setId("");
                                examAutoEvaluation.setIsNewRecord(false);
                                this.deleteInfoByMore(examAutoEvaluation);
                                this.save(examAutoEvaluation);
                            }
                        }
                    }
                }
                if(lzctjjScore > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(partyOrganization +lzctjjDetails.toString());
                    examAutoEvaluation.setAssess("柳州处绩效办");
                    examAutoEvaluation.setAssessId("6af0e615e9b0477da82eff06ff532c8b");
                    examAutoEvaluation.setModel("2020年年度柳州处对单位（部门）绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("d784cce1380546a986567debfeb0dcdb");
                    examAutoEvaluation.setOption("民警被评为厅（局）级岗位标兵(注：同一民警，同一事项获得多项先进的，不累计加分，公安局岗位标兵不在加分范围。)");
                    examAutoEvaluation.setOptionId("0c653ca3303d4e75a1e4fe398818da63");
                    examAutoEvaluation.setScore(String.valueOf(lzctjjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","奖励信息党建工作及个人_厅局级");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (!user.getOffice().getName().contains("派出所")) {
                            if(!user.getOffice().getName().contains("大队")) {
                                examAutoEvaluation.setUnit(user.getOffice().getName());
                                examAutoEvaluation.setUnitId(user.getOffice().getId());
                                examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                                //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                                examAutoEvaluation.setId("");
                                examAutoEvaluation.setIsNewRecord(false);
                                this.deleteInfoByMore(examAutoEvaluation);
                                this.save(examAutoEvaluation);
                            }
                        }
                    }
                }

            }
        }
        for (AffairGeneralSituation affairGeneralSituation : bhcPartyList) {
            StringBuffer bhcsbjDetails = null;
            StringBuffer bhcqgjDetails = null;
            StringBuffer bhctjjDetails = null;
            double bhcsbjScore = 0;
            double bhcqgjScore = 0;
            double bhctjjScore = 0;
            String partyId = affairGeneralSituation.getId();
            String partyOrganization = affairGeneralSituation.getPartyOrganization();
            List<AffairPartyRewardPunish> list = affairPartyRewardPunishService.selectPerson(lastYearDate,nowYearDate, partyId);
            if(list.size() > 0 && list != null){
                for (int j = 0; j < list.size(); j++) {
                    AffairPartyRewardPunish affairPartyRewardPunish = list.get(j);
                    Date approvalTime = affairPartyRewardPunish.getApprovalTime();
                    if("2".equals(affairPartyRewardPunish.getType())){
                        bhcsbjScore += 1.5;
                        if (bhcsbjDetails == null) {
                            bhcsbjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        } else {
                            bhcsbjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        }
                    }else if("1".equals(affairPartyRewardPunish.getType())){
                        bhcqgjScore += 2.5;
                        if (bhcqgjDetails == null) {
                            bhcqgjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        } else {
                            bhcqgjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        }
                    }else if(("3".equals(affairPartyRewardPunish.getType()) || "4".equals(affairPartyRewardPunish.getType())) && affairPartyRewardPunish.getTitle().contains("优秀共产党员")){
                        bhctjjScore += 0.3;
                        if (bhctjjDetails == null) {
                            bhctjjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"获得"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+affairPartyRewardPunish.getTitle());
                        } else {
                            bhctjjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"获得"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+affairPartyRewardPunish.getTitle());
                        }
                    }
                }
                if (bhcsbjScore > 0) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(partyOrganization +bhcsbjDetails.toString());
                    examAutoEvaluation.setAssess("北海处绩效办");
                    examAutoEvaluation.setAssessId("46c521bf67e24db28772b3eac52dc454");
                    examAutoEvaluation.setModel("2020年年度北海处对机关科室、支队绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("176725d6e1d443f480d67193f836cd8b");
                    examAutoEvaluation.setOption("民警被评为省部级先进");
                    examAutoEvaluation.setOptionId("1dc74a712acf463d95c2dbb1d1cfc765");
                    examAutoEvaluation.setScore(String.valueOf(bhcsbjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","奖励信息党建工作及个人_省部级先进");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (!user.getOffice().getName().contains("派出所")) {
                            if(!user.getOffice().getName().contains("大队")) {
                                examAutoEvaluation.setUnit(user.getOffice().getName());
                                examAutoEvaluation.setUnitId(user.getOffice().getId());
                                examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                                //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                                examAutoEvaluation.setId("");
                                examAutoEvaluation.setIsNewRecord(false);
                                this.deleteInfoByMore(examAutoEvaluation);
                                this.save(examAutoEvaluation);
                            }
                        }
                    }
                }
                if(bhcqgjScore > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(partyOrganization +bhcqgjDetails.toString());
                    examAutoEvaluation.setAssess("北海处绩效办");
                    examAutoEvaluation.setAssessId("46c521bf67e24db28772b3eac52dc454");
                    examAutoEvaluation.setModel("2020年年度北海处对机关科室、支队绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("176725d6e1d443f480d67193f836cd8b");
                    examAutoEvaluation.setOption("民警被评为全国级先进");
                    examAutoEvaluation.setOptionId("831f9590507441458a935706bcaa6b79");
                    examAutoEvaluation.setScore(String.valueOf(bhcqgjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","奖励信息党建工作及个人_全国级先进");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (!user.getOffice().getName().contains("派出所")) {
                            if(!user.getOffice().getName().contains("大队")) {
                                examAutoEvaluation.setUnit(user.getOffice().getName());
                                examAutoEvaluation.setUnitId(user.getOffice().getId());
                                examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                                //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                                examAutoEvaluation.setId("");
                                examAutoEvaluation.setIsNewRecord(false);
                                this.deleteInfoByMore(examAutoEvaluation);
                                this.save(examAutoEvaluation);
                            }
                        }
                    }
                }
                if(bhctjjScore > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(partyOrganization +bhctjjDetails.toString());
                    examAutoEvaluation.setAssess("北海处绩效办");
                    examAutoEvaluation.setAssessId("46c521bf67e24db28772b3eac52dc454");
                    examAutoEvaluation.setModel("2020年年度北海处对机关科室、支队绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("176725d6e1d443f480d67193f836cd8b");
                    examAutoEvaluation.setOption("民警被评为厅（局）级岗位标兵(注：同一民警，同一事项获得多项先进的，不累计加分。公安局岗位标兵不在加分范围)");
                    examAutoEvaluation.setOptionId("fb3c4f0b7990465297987e976595dc0e");
                    examAutoEvaluation.setScore(String.valueOf(bhctjjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","奖励信息党建工作及个人_厅局级");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (!user.getOffice().getName().contains("派出所")) {
                            if(!user.getOffice().getName().contains("大队")) {
                                examAutoEvaluation.setUnit(user.getOffice().getName());
                                examAutoEvaluation.setUnitId(user.getOffice().getId());
                                examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                                //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                                examAutoEvaluation.setId("");
                                examAutoEvaluation.setIsNewRecord(false);
                                this.deleteInfoByMore(examAutoEvaluation);
                                this.save(examAutoEvaluation);
                            }
                        }
                    }
                }
            }
        }
    }


    /**
     * 智慧政工-奖励信息（党建工作，个人）
     * <p>
     * -月度  处考处机关
     *
     * @param checkTime
     */
    public void grckcjgMonth(String checkTime) {
        String year = checkTime.substring(0, 4);
        String month = checkTime.substring(checkTime.length() - 2);

        /*Map<String,Object> monthMap = this.getTimeQuantumByMonth(year,month);
        Date nowMonthDate = (Date) monthMap.get("nowTime");
        Date lastMonthDate = (Date) monthMap.get("lastTime");
        year = (String) monthMap.get("year");
        month = (String) monthMap.get("month");*/

        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        Map<String, String> monthTime = this.monthTime(checkTime);
        Date lastMonthDate = null;
        Date nowMonthDate = null;
        try {
            lastMonthDate = format.parse(monthTime.get("yearL"));
            nowMonthDate = format.parse(monthTime.get("yearT"));
        } catch (ParseException e) {
            e.printStackTrace();
        }


        //获取各处处机关党组织
        List<AffairGeneralSituation> nncPartyList = affairGeneralSituationService.getChuPartyBranch("34", "1");
        List<AffairGeneralSituation> lzcPartyList = affairGeneralSituationService.getChuPartyBranch("95", "1");
        List<AffairGeneralSituation> bhcPartyList = affairGeneralSituationService.getChuPartyBranch("156", "1");
        for (AffairGeneralSituation affairGeneralSituation : nncPartyList) {
            StringBuffer nncsbjDetails = null;
            StringBuffer nncqgjDetails = null;
            StringBuffer nnctjjDetails = null;

            double nncsbjScore = 0;
            double nncqgjScore = 0;
            double nnctjjScore = 0;

            String partyId = affairGeneralSituation.getId();
            String partyOrganization = affairGeneralSituation.getPartyOrganization();
            List<AffairPartyRewardPunish> list = affairPartyRewardPunishService.selectPersonMonth(lastMonthDate,nowMonthDate, partyId);
            if(list.size() > 0 && list != null) {
                for (int j = 0; j < list.size(); j++) {
                    AffairPartyRewardPunish affairPartyRewardPunish = list.get(j);
                    Date approvalTime = affairPartyRewardPunish.getApprovalTime();
                    if ("2".equals(affairPartyRewardPunish.getType())) {
                        nncsbjScore += 1.5;
                        if (nncsbjDetails == null) {
                            nncsbjDetails = new StringBuffer(affairPartyRewardPunish.getName() + DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        } else {
                            nncsbjDetails.append("," + affairPartyRewardPunish.getName() + DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        }
                    } else if ("1".equals(affairPartyRewardPunish.getType())) {
                        nncqgjScore += 2.5;
                        if (nncqgjDetails == null) {
                            nncqgjDetails = new StringBuffer(affairPartyRewardPunish.getName() +DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+ "被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        } else {
                            nncqgjDetails.append("," + affairPartyRewardPunish.getName() +DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+ "被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        }
                    } else if (("3".equals(affairPartyRewardPunish.getType()) || "4".equals(affairPartyRewardPunish.getType())) && affairPartyRewardPunish.getTitle().contains("优秀共产党员")) {
                        nnctjjScore += 0.5;
                        if (nnctjjDetails == null) {
                            nnctjjDetails = new StringBuffer(affairPartyRewardPunish.getName() + DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"获得"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+affairPartyRewardPunish.getTitle());
                        } else {
                            nnctjjDetails.append("," + affairPartyRewardPunish.getName() +DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+ "获得"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+affairPartyRewardPunish.getTitle());
                        }
                    }
                }
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("4");
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                if (nncsbjScore > 0) {
                    examAutoEvaluation.setDetails(partyOrganization +nncsbjDetails.toString());
                    examAutoEvaluation.setAssess("南宁处绩效办");
                    examAutoEvaluation.setAssessId("978958003ea44a4bba3eed8ee6ceff3c");
                    examAutoEvaluation.setModel("2020年月度南宁公安处对全处各部门公共加分标准");
                    examAutoEvaluation.setModelId("1f2bbad95514488db2e93ebd7a4352dd");
                    examAutoEvaluation.setOption("民警被评为省部级先进");
                    examAutoEvaluation.setOptionId("90c08ec2b719472ba879e796fc3eb064");
                    examAutoEvaluation.setScore(String.valueOf(nncsbjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","奖励信息党建工作及个人_省部级先进");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (!user.getOffice().getName().contains("派出所")) {
                            if(!user.getOffice().getName().contains("大队")) {
                                examAutoEvaluation.setUnit(user.getOffice().getName());
                                examAutoEvaluation.setUnitId(user.getOffice().getId());
                                examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                                //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                                examAutoEvaluation.setId("");
                                examAutoEvaluation.setIsNewRecord(false);
                                this.deleteInfoByMore(examAutoEvaluation);
                                this.save(examAutoEvaluation);
                            }
                        }
                    }
                }
                if(nncqgjScore > 0){
                    examAutoEvaluation.setDetails(partyOrganization +nncqgjDetails.toString());
                    examAutoEvaluation.setAssess("南宁处绩效办");
                    examAutoEvaluation.setAssessId("978958003ea44a4bba3eed8ee6ceff3c");
                    examAutoEvaluation.setModel("2020年月度南宁公安处对全处各部门公共加分标准");
                    examAutoEvaluation.setModelId("1f2bbad95514488db2e93ebd7a4352dd");
                    examAutoEvaluation.setOption("民警被评为全国级先进");
                    examAutoEvaluation.setOptionId("04aa6b13b4a64993a7e52823d4173ff3");
                    examAutoEvaluation.setScore(String.valueOf(nncqgjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","奖励信息党建工作及个人_全国级先进");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (!user.getOffice().getName().contains("派出所")) {
                            if(!user.getOffice().getName().contains("大队")) {
                                examAutoEvaluation.setUnit(user.getOffice().getName());
                                examAutoEvaluation.setUnitId(user.getOffice().getId());
                                examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                                //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                                examAutoEvaluation.setId("");
                                examAutoEvaluation.setIsNewRecord(false);
                                this.deleteInfoByMore(examAutoEvaluation);
                                this.save(examAutoEvaluation);
                            }
                        }
                    }
                }
                if(nnctjjScore > 0){
                    examAutoEvaluation.setDetails(partyOrganization +nnctjjDetails.toString());
                    examAutoEvaluation.setAssess("南宁处绩效办");
                    examAutoEvaluation.setAssessId("978958003ea44a4bba3eed8ee6ceff3c");
                    examAutoEvaluation.setModel("2020年月度南宁公安处对全处各部门公共加分标准");
                    examAutoEvaluation.setModelId("1f2bbad95514488db2e93ebd7a4352dd");
                    examAutoEvaluation.setOption("民警被评为厅（局）级岗位标兵(注：同一民警，同一事项获得多项先进的，不累计加分。公安局岗位标兵不在加分范围)");
                    examAutoEvaluation.setOptionId("dfe3e61da1ef42bf8c36f2e4123f0964");
                    examAutoEvaluation.setScore(String.valueOf(nnctjjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","奖励信息党建工作及个人_厅局级");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (!user.getOffice().getName().contains("派出所")) {
                            if(!user.getOffice().getName().contains("大队")) {
                                examAutoEvaluation.setUnit(user.getOffice().getName());
                                examAutoEvaluation.setUnitId(user.getOffice().getId());
                                examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                                //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                                examAutoEvaluation.setId("");
                                examAutoEvaluation.setIsNewRecord(false);
                                this.deleteInfoByMore(examAutoEvaluation);
                                this.save(examAutoEvaluation);
                            }
                        }
                    }
                }
            }
        }

        for (AffairGeneralSituation affairGeneralSituation : lzcPartyList) {
            StringBuffer lzcsbjDetails = null;
            StringBuffer lzcqgjDetails = null;
            StringBuffer lzctjjDetails = null;
            double lzcsbjScore = 0;
            double lzcqgjScore = 0;
            double lzctjjScore = 0;
            String partyId = affairGeneralSituation.getId();
            String partyOrganization = affairGeneralSituation.getPartyOrganization();
            List<AffairPartyRewardPunish> list = affairPartyRewardPunishService.selectPersonMonth(lastMonthDate,nowMonthDate, partyId);
            if(list.size() > 0 && list != null){
                for (int j = 0; j < list.size(); j++) {
                    AffairPartyRewardPunish affairPartyRewardPunish = list.get(j);
                    Date approvalTime = affairPartyRewardPunish.getApprovalTime();
                    if("2".equals(affairPartyRewardPunish.getType())){
                        lzcsbjScore += 1.5;
                        if (lzcsbjDetails == null) {
                            lzcsbjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        } else {
                            lzcsbjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        }
                    }else if("1".equals(affairPartyRewardPunish.getType())){
                        lzcqgjScore += 2.5;
                        if (lzcqgjDetails == null) {
                            lzcqgjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        } else {
                            lzcqgjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        }
                    }else if(("3".equals(affairPartyRewardPunish.getType()) || "4".equals(affairPartyRewardPunish.getType())) && affairPartyRewardPunish.getTitle().contains("优秀共产党员")){
                        lzctjjScore += 0.5;
                        if (lzctjjDetails == null) {
                            lzctjjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"获得"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+affairPartyRewardPunish.getTitle());
                        } else {
                            lzctjjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"获得"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+affairPartyRewardPunish.getTitle());
                        }
                    }
                }
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("4");
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setPeriod("1");
                if (lzcsbjScore > 0) {
                    examAutoEvaluation.setDetails(partyOrganization +lzcsbjDetails.toString());
                    examAutoEvaluation.setAssess("柳州处绩效办");
                    examAutoEvaluation.setAssessId("6af0e615e9b0477da82eff06ff532c8b");
                    examAutoEvaluation.setModel("2020年月度柳州处对单位（部门）绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("4eaa281381b742adbbc9b8540d7bf822");
                    examAutoEvaluation.setOption("民警被评为省部级先进");
                    examAutoEvaluation.setOptionId("8369955e22334ea5bd41ed8688e0cbec");
                    examAutoEvaluation.setScore(String.valueOf(lzcsbjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","奖励信息党建工作及个人_省部级先进");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (!user.getOffice().getName().contains("派出所")) {
                            if(!user.getOffice().getName().contains("大队")) {
                                examAutoEvaluation.setUnit(user.getOffice().getName());
                                examAutoEvaluation.setUnitId(user.getOffice().getId());
                                examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                                //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                                examAutoEvaluation.setId("");
                                examAutoEvaluation.setIsNewRecord(false);
                                this.deleteInfoByMore(examAutoEvaluation);
                                this.save(examAutoEvaluation);
                            }
                        }
                    }
                }
                if(lzcqgjScore > 0){
                    examAutoEvaluation.setDetails(partyOrganization +lzcqgjDetails.toString());
                    examAutoEvaluation.setAssess("柳州处绩效办");
                    examAutoEvaluation.setAssessId("6af0e615e9b0477da82eff06ff532c8b");
                    examAutoEvaluation.setModel("2020年月度柳州处对单位（部门）绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("4eaa281381b742adbbc9b8540d7bf822");
                    examAutoEvaluation.setOption("民警被评为全国级先进");
                    examAutoEvaluation.setOptionId("c78a45687d00470cb25fa49bbd2230f0");
                    examAutoEvaluation.setScore(String.valueOf(lzcqgjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","奖励信息党建工作及个人_全国级先进");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (!user.getOffice().getName().contains("派出所")) {
                            if(!user.getOffice().getName().contains("大队")) {
                                examAutoEvaluation.setUnit(user.getOffice().getName());
                                examAutoEvaluation.setUnitId(user.getOffice().getId());
                                examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                                //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                                examAutoEvaluation.setId("");
                                examAutoEvaluation.setIsNewRecord(false);
                                this.deleteInfoByMore(examAutoEvaluation);
                                this.save(examAutoEvaluation);
                            }
                        }
                    }
                }
                if(lzctjjScore > 0){
                    examAutoEvaluation.setDetails( partyOrganization +lzctjjDetails.toString());
                    examAutoEvaluation.setAssess("柳州处绩效办");
                    examAutoEvaluation.setAssessId("6af0e615e9b0477da82eff06ff532c8b");
                    examAutoEvaluation.setModel("2020年月度柳州处对单位（部门）绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("4eaa281381b742adbbc9b8540d7bf822");
                    examAutoEvaluation.setOption("民警被评为厅（局）级岗位标兵(注：同一民警，同一事项获得多项先进的，不累计加分，公安局岗位标兵不在加分范围。)");
                    examAutoEvaluation.setOptionId("eb5603af51704915ad650d3556e75f8a");
                    examAutoEvaluation.setScore(String.valueOf(lzctjjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","奖励信息党建工作及个人_厅局级");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (!user.getOffice().getName().contains("派出所")) {
                            if(!user.getOffice().getName().contains("大队")) {
                                examAutoEvaluation.setUnit(user.getOffice().getName());
                                examAutoEvaluation.setUnitId(user.getOffice().getId());
                                examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                                //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                                examAutoEvaluation.setId("");
                                examAutoEvaluation.setIsNewRecord(false);
                                this.deleteInfoByMore(examAutoEvaluation);
                                this.save(examAutoEvaluation);
                            }
                        }
                    }
                }

            }
        }

        for (AffairGeneralSituation affairGeneralSituation : bhcPartyList) {
            StringBuffer bhcsbjDetails = null;
            StringBuffer bhcqgjDetails = null;
            StringBuffer bhctjjDetails = null;

            double bhcsbjScore = 0;
            double bhcqgjScore = 0;
            double bhctjjScore = 0;
            String partyId = affairGeneralSituation.getId();
            String partyOrganization = affairGeneralSituation.getPartyOrganization();
            List<AffairPartyRewardPunish> list = affairPartyRewardPunishService.selectPersonMonth(lastMonthDate,nowMonthDate, partyId);
            if(list.size() > 0 && list != null){
                for (int j = 0; j < list.size(); j++) {
                    AffairPartyRewardPunish affairPartyRewardPunish = list.get(j);
                    Date approvalTime = affairPartyRewardPunish.getApprovalTime();
                    if("2".equals(affairPartyRewardPunish.getType())){
                        bhcsbjScore += 1.5;
                        if (bhcsbjDetails == null) {
                            bhcsbjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        } else {
                            bhcsbjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        }
                    }else if("1".equals(affairPartyRewardPunish.getType())){
                        bhcqgjScore += 2.5;
                        if (bhcqgjDetails == null) {
                            bhcqgjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        } else {
                            bhcqgjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        }
                    }else if(("3".equals(affairPartyRewardPunish.getType()) || "4".equals(affairPartyRewardPunish.getType())) && affairPartyRewardPunish.getTitle().contains("优秀共产党员")){
                        bhctjjScore += 0.5;
                        if (bhctjjDetails == null) {
                            bhctjjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"获得"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+affairPartyRewardPunish.getTitle());
                        } else {
                            bhctjjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"获得"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+affairPartyRewardPunish.getTitle());
                        }
                    }
                }
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("4");
                examAutoEvaluation.setPeriod("1");
                if (bhcsbjScore > 0) {
                    examAutoEvaluation.setDetails(partyOrganization +bhcsbjDetails.toString());
                    examAutoEvaluation.setAssess("北海处绩效办");
                    examAutoEvaluation.setAssessId("46c521bf67e24db28772b3eac52dc454");
                    examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("87edef047b9a47d086f5b7e0ebc06e8f");
                    examAutoEvaluation.setOption("民警被评为省部级先进");
                    examAutoEvaluation.setOptionId("0da311b51bb54d03afa42da63ddafc84");
                    examAutoEvaluation.setScore(String.valueOf(bhcsbjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","奖励信息党建工作及个人_省部级先进");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (!user.getOffice().getName().contains("派出所")) {
                            if(!user.getOffice().getName().contains("大队")) {
                                examAutoEvaluation.setUnit(user.getOffice().getName());
                                examAutoEvaluation.setUnitId(user.getOffice().getId());
                                examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                                //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                                examAutoEvaluation.setId("");
                                examAutoEvaluation.setIsNewRecord(false);
                                this.deleteInfoByMore(examAutoEvaluation);
                                this.save(examAutoEvaluation);
                            }
                        }
                    }
                }
                if(bhcqgjScore > 0){
                    examAutoEvaluation.setDetails(partyOrganization +bhcqgjDetails.toString());
                    examAutoEvaluation.setAssess("北海处绩效办");
                    examAutoEvaluation.setAssessId("46c521bf67e24db28772b3eac52dc454");
                    examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("87edef047b9a47d086f5b7e0ebc06e8f");
                    examAutoEvaluation.setOption("民警被评为全国级先进");
                    examAutoEvaluation.setOptionId("83415ad2325444418a69868aba56aef9");
                    examAutoEvaluation.setScore(String.valueOf(bhcqgjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","奖励信息党建工作及个人_全国级先进");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (!user.getOffice().getName().contains("派出所")) {
                            if(!user.getOffice().getName().contains("大队")) {
                                examAutoEvaluation.setUnit(user.getOffice().getName());
                                examAutoEvaluation.setUnitId(user.getOffice().getId());
                                examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                                //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                                examAutoEvaluation.setId("");
                                examAutoEvaluation.setIsNewRecord(false);
                                this.deleteInfoByMore(examAutoEvaluation);
                                this.save(examAutoEvaluation);
                            }
                        }
                    }
                }
                if(bhctjjScore > 0){
                    examAutoEvaluation.setDetails(partyOrganization +bhctjjDetails.toString());
                    examAutoEvaluation.setAssess("北海处绩效办");
                    examAutoEvaluation.setAssessId("46c521bf67e24db28772b3eac52dc454");
                    examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("87edef047b9a47d086f5b7e0ebc06e8f");
                    examAutoEvaluation.setOption("民警被评为厅（局）级岗位标兵(注：同一民警，同一事项获得多项先进的，不累计加分。公安局岗位标兵不在加分范围)");
                    examAutoEvaluation.setOptionId("c55df521a50c4df0be0ba7916355776a");
                    examAutoEvaluation.setScore(String.valueOf(bhctjjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","奖励信息党建工作及个人_厅局级");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (!user.getOffice().getName().contains("派出所")) {
                            if(!user.getOffice().getName().contains("大队")) {
                                examAutoEvaluation.setUnit(user.getOffice().getName());
                                examAutoEvaluation.setUnitId(user.getOffice().getId());
                                examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                                //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                                examAutoEvaluation.setId("");
                                examAutoEvaluation.setIsNewRecord(false);
                                this.deleteInfoByMore(examAutoEvaluation);
                                this.save(examAutoEvaluation);
                            }
                        }
                    }
                }
            }
        }
    }


    /**
     * 智慧政工-奖励信息（党建工作,个人）
     * <p>
     * -年度  处考派出所
     *
     * @param year
     */
    public void grckpcsYear(String year) {
        /*Map<String,Object> yearMap = this.getTimeQuantumByYear(year);
        Date nowYearDate = (Date) yearMap.get("nowYear");
        Date lastYearDate = (Date) yearMap.get("lastYear");
        year = (String) yearMap.get("year");*/

        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        Map<String, String> yearTime = this.yearTime(year);
        Date lastYearDate = null;
        Date nowYearDate = null;
        try {
            lastYearDate = format.parse(yearTime.get("yearL"));
            nowYearDate = format.parse(yearTime.get("yearT"));
        } catch (ParseException e) {
            e.printStackTrace();
        }

        //获取各处处机关党组织
        List<AffairGeneralSituation> nncPartyList = affairGeneralSituationService.getChuPartyBranch("34", "2");
        List<AffairGeneralSituation> lzcPartyList = affairGeneralSituationService.getChuPartyBranch("95", "2");
        List<AffairGeneralSituation> bhcPartyList = affairGeneralSituationService.getChuPartyBranch("156", "2");
        for (AffairGeneralSituation affairGeneralSituation : nncPartyList) {
            StringBuffer nncsbjDetails = null;
            StringBuffer nncqgjDetails = null;
            StringBuffer nnctjjDetails = null;

            double nncsbjScore = 0;
            double nncqgjScore = 0;
            double nnctjjScore = 0;
            String partyId = affairGeneralSituation.getId();
            String partyOrganization = affairGeneralSituation.getPartyOrganization();
            List<AffairPartyRewardPunish> list = affairPartyRewardPunishService.selectPerson(lastYearDate,nowYearDate, partyId);
            if(list.size() > 0 && list != null) {
                for (int j = 0; j < list.size(); j++) {
                    AffairPartyRewardPunish affairPartyRewardPunish = list.get(j);
                    Date approvalTime = affairPartyRewardPunish.getApprovalTime();
                    if ("2".equals(affairPartyRewardPunish.getType())) {
                        nncsbjScore += 1.5;
                        if (nncsbjDetails == null) {
                            nncsbjDetails = new StringBuffer(affairPartyRewardPunish.getName() +DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+ "被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        } else {
                            nncsbjDetails.append("," + affairPartyRewardPunish.getName() +DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+ "被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        }
                    } else if ("1".equals(affairPartyRewardPunish.getType())) {
                        nncqgjScore += 2.5;
                        if (nncqgjDetails == null) {
                            nncqgjDetails = new StringBuffer(affairPartyRewardPunish.getName() +DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+ "被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        } else {
                            nncqgjDetails.append("," + affairPartyRewardPunish.getName() +DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+ "被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        }
                    } else if (("3".equals(affairPartyRewardPunish.getType()) || "4".equals(affairPartyRewardPunish.getType())) && affairPartyRewardPunish.getTitle().contains("优秀共产党员")) {
                        nnctjjScore += 0.3;
                        if (nnctjjDetails == null) {
                            nnctjjDetails = new StringBuffer(affairPartyRewardPunish.getName() +DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+ "获得"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+affairPartyRewardPunish.getTitle());
                        } else {
                            nnctjjDetails.append("," + affairPartyRewardPunish.getName() + DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+ "获得"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+affairPartyRewardPunish.getTitle());
                        }
                    }
                }
                if (nncsbjScore > 0) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(partyOrganization +nncsbjDetails.toString());
                    examAutoEvaluation.setAssess("南宁处政治处组织干部室");
                    examAutoEvaluation.setAssessId("34e8d855cf6b4b1ab5e7e23e7aaba658");
                    examAutoEvaluation.setModel("2020年度南宁公安处对全处各派出所公共加分标准");
                    examAutoEvaluation.setModelId("4d98948d2b5948609a87260f1227aaa5");
                    examAutoEvaluation.setOption("单位或部门被评为省部级先进(综合类)");
                    examAutoEvaluation.setOptionId("b52cde7c8536477290b4d889ef353314");
                    examAutoEvaluation.setScore(String.valueOf(nncsbjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","奖励信息党建工作及个人_省部级先进");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (user.getOffice().getName().contains("派出所")) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId("");
                            examAutoEvaluation.setIsNewRecord(false);
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
                if(nncqgjScore > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(partyOrganization +nncqgjDetails.toString());
                    examAutoEvaluation.setAssess("南宁处政治处组织干部室");
                    examAutoEvaluation.setAssessId("34e8d855cf6b4b1ab5e7e23e7aaba658");
                    examAutoEvaluation.setModel("2020年度南宁公安处对全处各派出所公共加分标准");
                    examAutoEvaluation.setModelId("4d98948d2b5948609a87260f1227aaa5");
                    examAutoEvaluation.setOption("单位或部门被评为全国先进(综合类)");
                    examAutoEvaluation.setOptionId("1341ee698a9c43be80764e4f754e3d69");
                    examAutoEvaluation.setScore(String.valueOf(nncqgjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","奖励信息党建工作及个人_全国级先进");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (user.getOffice().getName().contains("派出所")) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId("");
                            examAutoEvaluation.setIsNewRecord(false);
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
                if(nnctjjScore > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(partyOrganization +nnctjjDetails.toString());
                    examAutoEvaluation.setAssess("南宁处政治处组织干部室");
                    examAutoEvaluation.setAssessId("34e8d855cf6b4b1ab5e7e23e7aaba658");
                    examAutoEvaluation.setModel("2020年度南宁公安处对全处各派出所公共加分标准");
                    examAutoEvaluation.setModelId("4d98948d2b5948609a87260f1227aaa5");
                    examAutoEvaluation.setOption("单位或部门被评为厅（局）级先进(综合类)");
                    examAutoEvaluation.setOptionId("fb8c099010db4da193f0131c639e8e6d");
                    examAutoEvaluation.setScore(String.valueOf(nnctjjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","奖励信息党建工作及个人_厅局级");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (user.getOffice().getName().contains("派出所")) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId("");
                            examAutoEvaluation.setIsNewRecord(false);
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
            }
        }
        for (AffairGeneralSituation affairGeneralSituation : lzcPartyList) {
            StringBuffer lzcsbjDetails = null;
            StringBuffer lzcqgjDetails = null;
            StringBuffer lzctjjDetails = null;
            double lzcsbjScore = 0;
            double lzcqgjScore = 0;
            double lzctjjScore = 0;
            String partyId = affairGeneralSituation.getId();
            String partyOrganization = affairGeneralSituation.getPartyOrganization();
            List<AffairPartyRewardPunish> list = affairPartyRewardPunishService.selectPerson(lastYearDate,nowYearDate, partyId);
            if(list.size() > 0 && list != null){
                for (int j = 0; j < list.size(); j++) {
                    AffairPartyRewardPunish affairPartyRewardPunish = list.get(j);
                    Date approvalTime = affairPartyRewardPunish.getApprovalTime();
                    if("2".equals(affairPartyRewardPunish.getType())){
                        lzcsbjScore += 1.5;
                        if (lzcsbjDetails == null) {
                            lzcsbjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        } else {
                            lzcsbjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        }
                    }else if("1".equals(affairPartyRewardPunish.getType())){
                        lzcqgjScore += 2.5;
                        if (lzcqgjDetails == null) {
                            lzcqgjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        } else {
                            lzcqgjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        }
                    }else if(("3".equals(affairPartyRewardPunish.getType()) || "4".equals(affairPartyRewardPunish.getType())) && affairPartyRewardPunish.getTitle().contains("优秀共产党员")){
                        lzctjjScore += 0.3;
                        if (lzctjjDetails == null) {
                            lzctjjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"获得"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+affairPartyRewardPunish.getTitle());
                        } else {
                            lzctjjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"获得"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+affairPartyRewardPunish.getTitle());
                        }
                    }
                }
                if (lzcsbjScore > 0) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(partyOrganization +lzcsbjDetails.toString());
                    examAutoEvaluation.setAssess("柳州处政治处组织干部室");
                    examAutoEvaluation.setAssessId("ec3ba2efdd404f2faa520f6e8a71ec4c");
                    examAutoEvaluation.setModel("2020年年度柳州处对派出所绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("e03a23be452945bcaab5973b7debb1d3");
                    examAutoEvaluation.setOption("民警被评为省部级先进");
                    examAutoEvaluation.setOptionId("3f854254b9cd4bc7aa740d2d50d5d79a");
                    examAutoEvaluation.setScore(String.valueOf(lzcsbjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","奖励信息党建工作及个人_省部级先进");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (user.getOffice().getName().contains("派出所")) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId("");
                            examAutoEvaluation.setIsNewRecord(false);
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
                if(lzcqgjScore > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(partyOrganization +lzcqgjDetails.toString());
                    examAutoEvaluation.setAssess("柳州处政治处组织干部室");
                    examAutoEvaluation.setAssessId("ec3ba2efdd404f2faa520f6e8a71ec4c");
                    examAutoEvaluation.setModel("2020年年度柳州处对派出所绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("e03a23be452945bcaab5973b7debb1d3");
                    examAutoEvaluation.setOption("民警被评为全国级先进");
                    examAutoEvaluation.setOptionId("33f03cf52b5449c590f13f8cf2a50f35");
                    examAutoEvaluation.setScore(String.valueOf(lzcqgjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","奖励信息党建工作及个人_全国级先进");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (user.getOffice().getName().contains("派出所")) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId("");
                            examAutoEvaluation.setIsNewRecord(false);
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
                if(lzctjjScore > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(partyOrganization +lzctjjDetails.toString());
                    examAutoEvaluation.setAssess("柳州处政治处组织干部室");
                    examAutoEvaluation.setAssessId("ec3ba2efdd404f2faa520f6e8a71ec4c");
                    examAutoEvaluation.setModel("2020年年度柳州处对派出所绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("e03a23be452945bcaab5973b7debb1d3");
                    examAutoEvaluation.setOption("民警被评为厅（局）级岗位标兵(注：同一民警，同一事项获得多项先进的，不累计加分，公安局岗位标兵不在加分范围。)");
                    examAutoEvaluation.setOptionId("a35387f34d2647eab8cbccd7144ae5f6");
                    examAutoEvaluation.setScore(String.valueOf(lzctjjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","奖励信息党建工作及个人_厅局级");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (user.getOffice().getName().contains("派出所")) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId("");
                            examAutoEvaluation.setIsNewRecord(false);
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }

            }
        }
        for (AffairGeneralSituation affairGeneralSituation : bhcPartyList) {
            StringBuffer bhcsbjDetails = null;
            StringBuffer bhcqgjDetails = null;
            StringBuffer bhctjjDetails = null;

            double bhcsbjScore = 0;
            double bhcqgjScore = 0;
            double bhctjjScore = 0;
            String partyId = affairGeneralSituation.getId();
            String partyOrganization = affairGeneralSituation.getPartyOrganization();
            List<AffairPartyRewardPunish> list = affairPartyRewardPunishService.selectPerson(lastYearDate,nowYearDate, partyId);
            if(list.size() > 0 && list != null){
                for (int j = 0; j < list.size(); j++) {
                    AffairPartyRewardPunish affairPartyRewardPunish = list.get(j);
                    Date approvalTime = affairPartyRewardPunish.getApprovalTime();
                    if("2".equals(affairPartyRewardPunish.getType())){
                        bhcsbjScore += 1.5;
                        if (bhcsbjDetails == null) {
                            bhcsbjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        } else {
                            bhcsbjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        }
                    }else if("1".equals(affairPartyRewardPunish.getType())){
                        bhcqgjScore += 2.5;
                        if (bhcqgjDetails == null) {
                            bhcqgjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        } else {
                            bhcqgjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        }
                    }else if(("3".equals(affairPartyRewardPunish.getType()) || "4".equals(affairPartyRewardPunish.getType())) && affairPartyRewardPunish.getTitle().contains("优秀共产党员")){
                        bhctjjScore += 0.3;
                        if (bhctjjDetails == null) {
                            bhctjjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"获得"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+affairPartyRewardPunish.getTitle());
                        } else {
                            bhctjjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"获得"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+affairPartyRewardPunish.getTitle());
                        }
                    }
                }
                if (bhcsbjScore > 0) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(partyOrganization +bhcsbjDetails.toString());
                    examAutoEvaluation.setAssess("北海处政治处组织干部室");
                    examAutoEvaluation.setAssessId("c90918faf2614baa8fa85230482bd43e");
                    examAutoEvaluation.setModel("2020年年度北海处对派出所、刑警三大队绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("99352b5b975740fb8a2521d362897494");
                    examAutoEvaluation.setOption("民警被评为省部级先进");
                    examAutoEvaluation.setOptionId("6f393c1cad88462f89d259268d39c72b");
                    examAutoEvaluation.setScore(String.valueOf(bhcsbjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","奖励信息党建工作及个人_省部级先进");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (user.getOffice().getName().contains("派出所") || user.getOffice().getName().contains("刑警三大队")) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId("");
                            examAutoEvaluation.setIsNewRecord(false);
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
                if(bhcqgjScore > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(partyOrganization +bhcqgjDetails.toString());
                    examAutoEvaluation.setAssess("北海处政治处组织干部室");
                    examAutoEvaluation.setAssessId("c90918faf2614baa8fa85230482bd43e");
                    examAutoEvaluation.setModel("2020年年度北海处对派出所、刑警三大队绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("99352b5b975740fb8a2521d362897494");
                    examAutoEvaluation.setOption("民警被评为全国级先进");
                    examAutoEvaluation.setOptionId("ba19a9d37e484147b00bbe0f3bb8384d");
                    examAutoEvaluation.setScore(String.valueOf(bhcqgjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","奖励信息党建工作及个人_全国级先进");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (user.getOffice().getName().contains("派出所") || user.getOffice().getName().contains("刑警三大队")) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId("");
                            examAutoEvaluation.setIsNewRecord(false);
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
                if(bhctjjScore > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(partyOrganization +bhctjjDetails.toString());
                    examAutoEvaluation.setAssess("北海处政治处组织干部室");
                    examAutoEvaluation.setAssessId("c90918faf2614baa8fa85230482bd43e");
                    examAutoEvaluation.setModel("2020年年度北海处对派出所、刑警三大队绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("99352b5b975740fb8a2521d362897494");
                    examAutoEvaluation.setOption("民警被评为厅（局）级岗位标兵(注：同一民警，同一事项获得多项先进的，不累计加分。公安局岗位标兵不在加分范围)");
                    examAutoEvaluation.setOptionId("e94aa5ccff2e4d678903e6a7d0925a6d");
                    examAutoEvaluation.setScore(String.valueOf(bhctjjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","奖励信息党建工作及个人_厅局级");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (user.getOffice().getName().contains("派出所") || user.getOffice().getName().contains("刑警三大队")) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId("");
                            examAutoEvaluation.setIsNewRecord(false);
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
            }
        }
    }

    /**
     * 智慧政工-奖励信息（党建工作,个人）
     * <p>
     * -月度  处考派出所
     *
     * @param checkTime
     */
    public void grckpcsMonth(String checkTime) {

        String year = checkTime.substring(0, 4);
        String month = checkTime.substring(checkTime.length() - 2);

       /* Map<String,Object> monthMap = this.getTimeQuantumByMonth(year,month);
        Date nowMonthDate = (Date) monthMap.get("nowTime");
        Date lastMonthDate = (Date) monthMap.get("lastTime");
        year = (String) monthMap.get("year");
        month = (String) monthMap.get("month");*/

        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        Map<String, String> monthTime = this.monthTime(checkTime);
        Date lastMonthDate = null;
        Date nowMonthDate = null;
        try {
            lastMonthDate = format.parse(monthTime.get("yearL"));
            nowMonthDate = format.parse(monthTime.get("yearT"));
        } catch (ParseException e) {
            e.printStackTrace();
        }


        //获取各处处机关党组织
        List<AffairGeneralSituation> nncPartyList = affairGeneralSituationService.getChuPartyBranch("34", "2");
        List<AffairGeneralSituation> lzcPartyList = affairGeneralSituationService.getChuPartyBranch("95", "2");
        List<AffairGeneralSituation> bhcPartyList = affairGeneralSituationService.getChuPartyBranch("156", "2");
        for (AffairGeneralSituation affairGeneralSituation : nncPartyList) {
            StringBuffer nncsbjDetails = null;
            StringBuffer nncqgjDetails = null;
            StringBuffer nnctjjDetails = null;
            double nncsbjScore = 0;
            double nncqgjScore = 0;
            double nnctjjScore = 0;
            String partyId = affairGeneralSituation.getId();
            String partyOrganization = affairGeneralSituation.getPartyOrganization();
            List<AffairPartyRewardPunish> list = affairPartyRewardPunishService.selectPersonMonth(lastMonthDate,nowMonthDate, partyId);
            if(list.size() > 0 && list != null) {
                for (int j = 0; j < list.size(); j++) {
                    AffairPartyRewardPunish affairPartyRewardPunish = list.get(j);
                    Date approvalTime = affairPartyRewardPunish.getApprovalTime();
                    if ("2".equals(affairPartyRewardPunish.getType())) {
                        nncsbjScore += 1.5;
                        if (nncsbjDetails == null) {
                            nncsbjDetails = new StringBuffer(affairPartyRewardPunish.getName() +DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        } else {
                            nncsbjDetails.append("," + affairPartyRewardPunish.getName() + DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        }
                    } else if ("1".equals(affairPartyRewardPunish.getType())) {
                        nncqgjScore += 2.5;
                        if (nncqgjDetails == null) {
                            nncqgjDetails = new StringBuffer(affairPartyRewardPunish.getName() +DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+ "被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        } else {
                            nncqgjDetails.append("," + affairPartyRewardPunish.getName() +DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+ "被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        }
                    } else if (("3".equals(affairPartyRewardPunish.getType()) || "4".equals(affairPartyRewardPunish.getType())) && affairPartyRewardPunish.getTitle().contains("优秀共产党员")) {
                        nnctjjScore += 0.5;
                        if (nnctjjDetails == null) {
                            nnctjjDetails = new StringBuffer(affairPartyRewardPunish.getName() +DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"获得"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+affairPartyRewardPunish.getTitle());
                        } else {
                            nnctjjDetails.append("," + affairPartyRewardPunish.getName() +DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+ "获得"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+affairPartyRewardPunish.getTitle());
                        }
                    }
                }
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("3");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setYear(year);
                if (nncsbjScore > 0) {
                    examAutoEvaluation.setDetails(partyOrganization +nncsbjDetails.toString());
                    examAutoEvaluation.setAssess("南宁处政治处组织干部室");
                    examAutoEvaluation.setAssessId("34e8d855cf6b4b1ab5e7e23e7aaba658");
                    examAutoEvaluation.setModel("2020年月度南宁公安处对全处各派出所公共加分标准");
                    examAutoEvaluation.setModelId("b42a29bece2f40208998cfbfadebb796");
                    examAutoEvaluation.setOption("单位或部门被评为省部级先进(综合类)");
                    examAutoEvaluation.setOptionId("da0401e4ad23495ab031e681c206592e");
                    examAutoEvaluation.setScore(String.valueOf(nncsbjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","奖励信息党建工作及个人_省部级先进");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (user.getOffice().getName().contains("派出所")) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId("");
                            examAutoEvaluation.setIsNewRecord(false);
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
                if(nncqgjScore > 0){
                    examAutoEvaluation.setDetails(partyOrganization +nncqgjDetails.toString());
                    examAutoEvaluation.setAssess("南宁处政治处组织干部室");
                    examAutoEvaluation.setAssessId("34e8d855cf6b4b1ab5e7e23e7aaba658");
                    examAutoEvaluation.setModel("2020年月度南宁公安处对全处各派出所公共加分标准");
                    examAutoEvaluation.setModelId("b42a29bece2f40208998cfbfadebb796");
                    examAutoEvaluation.setOption("单位或部门被评为全国先进(综合类)");
                    examAutoEvaluation.setOptionId("507a054a8bf24c979dadc95eaac0e390");
                    examAutoEvaluation.setScore(String.valueOf(nncqgjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","奖励信息党建工作及个人_全国级先进");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (user.getOffice().getName().contains("派出所")) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId("");
                            examAutoEvaluation.setIsNewRecord(false);
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
                if(nnctjjScore > 0){
                    examAutoEvaluation.setDetails(partyOrganization +nnctjjDetails.toString());
                    examAutoEvaluation.setAssess("南宁处政治处组织干部室");
                    examAutoEvaluation.setAssessId("34e8d855cf6b4b1ab5e7e23e7aaba658");
                    examAutoEvaluation.setModel("2020年月度南宁公安处对全处各派出所公共加分标准");
                    examAutoEvaluation.setModelId("b42a29bece2f40208998cfbfadebb796");
                    examAutoEvaluation.setOption("单位或部门被评为厅（局）级先进(综合类)");
                    examAutoEvaluation.setOptionId("db7fc3a36af14fbcbb86490eb57b5000");
                    examAutoEvaluation.setScore(String.valueOf(nnctjjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","奖励信息党建工作及个人_厅局级");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (user.getOffice().getName().contains("派出所")) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId("");
                            examAutoEvaluation.setIsNewRecord(false);
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
            }
        }
        for (AffairGeneralSituation affairGeneralSituation : lzcPartyList) {
            StringBuffer lzcsbjDetails = null;
            StringBuffer lzcqgjDetails = null;
            StringBuffer lzctjjDetails = null;
            double lzcsbjScore = 0;
            double lzcqgjScore = 0;
            double lzctjjScore = 0;
            String partyId = affairGeneralSituation.getId();
            String partyOrganization = affairGeneralSituation.getPartyOrganization();
            List<AffairPartyRewardPunish> list = affairPartyRewardPunishService.selectPersonMonth(lastMonthDate,nowMonthDate, partyId);
            if(list.size() > 0 && list != null){
                for (int j = 0; j < list.size(); j++) {
                    AffairPartyRewardPunish affairPartyRewardPunish = list.get(j);
                    Date approvalTime = affairPartyRewardPunish.getApprovalTime();
                    if("2".equals(affairPartyRewardPunish.getType())){
                        lzcsbjScore += 1.5;
                        if (lzcsbjDetails == null) {
                            lzcsbjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        } else {
                            lzcsbjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        }
                    }else if("1".equals(affairPartyRewardPunish.getType())){
                        lzcqgjScore += 2.5;
                        if (lzcqgjDetails == null) {
                            lzcqgjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        } else {
                            lzcqgjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        }
                    }else if(("3".equals(affairPartyRewardPunish.getType()) || "4".equals(affairPartyRewardPunish.getType())) && affairPartyRewardPunish.getTitle().contains("优秀共产党员")){
                        lzctjjScore += 0.5;
                        if (lzctjjDetails == null) {
                            lzctjjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"获得"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+affairPartyRewardPunish.getTitle());
                        } else {
                            lzctjjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"获得"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+affairPartyRewardPunish.getTitle());
                        }
                    }
                }
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("3");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setYear(year);
                if (lzcsbjScore > 0) {
                    examAutoEvaluation.setDetails(partyOrganization +lzcsbjDetails.toString());
                    examAutoEvaluation.setAssess("柳州处政治处组织干部室");
                    examAutoEvaluation.setAssessId("ec3ba2efdd404f2faa520f6e8a71ec4c");
                    examAutoEvaluation.setModel("2020年月度柳州处对派出所绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("547546c3d76144afa2a4433dd350afda");
                    examAutoEvaluation.setOption("民警被评为省部级先进");
                    examAutoEvaluation.setOptionId("baa9d9f09e5c40c9832a38c293e3a6f8");
                    examAutoEvaluation.setScore(String.valueOf(lzcsbjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","奖励信息党建工作及个人_省部级先进");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (user.getOffice().getName().contains("派出所")) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId("");
                            examAutoEvaluation.setIsNewRecord(false);
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
                if(lzcqgjScore > 0){
                    examAutoEvaluation.setDetails(partyOrganization +lzcqgjDetails.toString());
                    examAutoEvaluation.setAssess("柳州处政治处组织干部室");
                    examAutoEvaluation.setAssessId("ec3ba2efdd404f2faa520f6e8a71ec4c");
                    examAutoEvaluation.setModel("2020年月度柳州处对派出所绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("547546c3d76144afa2a4433dd350afda");
                    examAutoEvaluation.setOption("民警被评为全国级先进");
                    examAutoEvaluation.setOptionId("40d66790c48c425b963cc13e3122a809");
                    examAutoEvaluation.setScore(String.valueOf(lzcqgjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","奖励信息党建工作及个人_全国级先进");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (user.getOffice().getName().contains("派出所")) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId("");
                            examAutoEvaluation.setIsNewRecord(false);
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
                if(lzctjjScore > 0){
                    examAutoEvaluation.setDetails(partyOrganization +lzctjjDetails.toString());
                    examAutoEvaluation.setAssess("柳州处政治处组织干部室");
                    examAutoEvaluation.setAssessId("ec3ba2efdd404f2faa520f6e8a71ec4c");
                    examAutoEvaluation.setModel("2020年月度柳州处对派出所绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("547546c3d76144afa2a4433dd350afda");
                    examAutoEvaluation.setOption("民警被评为厅（局）级岗位标兵(注：同一民警，同一事项获得多项先进的，不累计加分。公安局岗位标兵不在加分范围)");
                    examAutoEvaluation.setOptionId("b6f83b05491a49278ad32a85a4a75645");
                    examAutoEvaluation.setScore(String.valueOf(lzctjjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","奖励信息党建工作及个人_厅局级");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (user.getOffice().getName().contains("派出所")) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId("");
                            examAutoEvaluation.setIsNewRecord(false);
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }

            }
        }
        for (AffairGeneralSituation affairGeneralSituation : bhcPartyList) {
            StringBuffer bhcsbjDetails = null;
            StringBuffer bhcqgjDetails = null;
            StringBuffer bhctjjDetails = null;

            double bhcsbjScore = 0;
            double bhcqgjScore = 0;
            double bhctjjScore = 0;
            String partyId = affairGeneralSituation.getId();
            String partyOrganization = affairGeneralSituation.getPartyOrganization();
            List<AffairPartyRewardPunish> list = affairPartyRewardPunishService.selectPersonMonth(lastMonthDate,nowMonthDate, partyId);
            if(list.size() > 0 && list != null){
                for (int j = 0; j < list.size(); j++) {
                    AffairPartyRewardPunish affairPartyRewardPunish = list.get(j);
                    Date approvalTime = affairPartyRewardPunish.getApprovalTime();
                    if("2".equals(affairPartyRewardPunish.getType())){
                        bhcsbjScore += 1.5;
                        if (bhcsbjDetails == null) {
                            bhcsbjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        } else {
                            bhcsbjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        }
                    }else if("1".equals(affairPartyRewardPunish.getType())){
                        bhcqgjScore += 2.5;
                        if (bhcqgjDetails == null) {
                            bhcqgjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        } else {
                            bhcqgjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"被评为"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+"先进");
                        }
                    }else if(("3".equals(affairPartyRewardPunish.getType()) || "4".equals(affairPartyRewardPunish.getType())) && affairPartyRewardPunish.getTitle().contains("优秀共产党员")){
                        bhctjjScore += 0.3;
                        if (bhctjjDetails == null) {
                            bhctjjDetails = new StringBuffer(affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"获得"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+affairPartyRewardPunish.getTitle());
                        } else {
                            bhctjjDetails.append("," + affairPartyRewardPunish.getName()+DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+"获得"+DictUtils.getDictLabel(affairPartyRewardPunish.getType(),"affair_org_reward_punish", "")+affairPartyRewardPunish.getTitle());
                        }
                    }
                }
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("3");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
                examAutoEvaluation.setPeriod("1");
                if (bhcsbjScore > 0) {
                    examAutoEvaluation.setDetails(partyOrganization +bhcsbjDetails.toString());
                    examAutoEvaluation.setAssess("北海处政治处组织干部室");
                    examAutoEvaluation.setAssessId("c90918faf2614baa8fa85230482bd43e");
                    examAutoEvaluation.setModel("2020年月度北海处对派出所、大队绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("3cd29fab3ef043c2908ad83c56b7fc9b");
                    examAutoEvaluation.setOption("民警被评为省部级先进");
                    examAutoEvaluation.setOptionId("68a03eb970844e78a26f342739923b6e");
                    examAutoEvaluation.setScore(String.valueOf(bhcsbjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","奖励信息党建工作及个人_省部级先进");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (user.getOffice().getName().contains("派出所") || user.getOffice().getName().contains("刑警三大队")) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId("");
                            examAutoEvaluation.setIsNewRecord(false);
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
                if(bhcqgjScore > 0){
                    examAutoEvaluation.setDetails(partyOrganization +bhcqgjDetails.toString());
                    examAutoEvaluation.setAssess("北海处政治处组织干部室");
                    examAutoEvaluation.setAssessId("c90918faf2614baa8fa85230482bd43e");
                    examAutoEvaluation.setModel("2020年月度北海处对派出所、大队绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("3cd29fab3ef043c2908ad83c56b7fc9b");
                    examAutoEvaluation.setOption("民警被评为全国级先进");
                    examAutoEvaluation.setOptionId("6000684b92d447178beac8cd9705dda5");
                    examAutoEvaluation.setScore(String.valueOf(bhcqgjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","奖励信息党建工作及个人_全国级先进");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (user.getOffice().getName().contains("派出所") || user.getOffice().getName().contains("刑警三大队")) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId("");
                            examAutoEvaluation.setIsNewRecord(false);
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
                if(bhctjjScore > 0){
                    examAutoEvaluation.setDetails(partyOrganization +bhctjjDetails.toString());
                    examAutoEvaluation.setAssess("北海处政治处组织干部室");
                    examAutoEvaluation.setAssessId("c90918faf2614baa8fa85230482bd43e");
                    examAutoEvaluation.setModel("2020年月度北海处对派出所、大队绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("3cd29fab3ef043c2908ad83c56b7fc9b");
                    examAutoEvaluation.setOption("民警被评为厅（局）级岗位标兵(注：同一民警，同一事项获得多项先进的，不累计加分。公安局岗位标兵不在加分范围)");
                    examAutoEvaluation.setOptionId("8656046d4c2f46d3a5f7ad10fe26219b");
                    examAutoEvaluation.setScore(String.valueOf(bhctjjScore));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","奖励信息党建工作及个人_厅局级");
                    examAutoEvaluation.setFromSys("智慧政工");
                    List<User> userList = this.getUserByPartyId(partyId);
                    for (User user : userList) {
                        if (user.getOffice().getName().contains("派出所") || user.getOffice().getName().contains("刑警三大队")) {
                            examAutoEvaluation.setUnit(user.getOffice().getName());
                            examAutoEvaluation.setUnitId(user.getOffice().getId());
                            examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                            //通过下面操作将examAutoEvaluation对象变为新插入对象，以便实现保存操作
                            examAutoEvaluation.setId("");
                            examAutoEvaluation.setIsNewRecord(false);
                            this.deleteInfoByMore(examAutoEvaluation);
                            this.save(examAutoEvaluation);
                        }
                    }
                }
            }
        }
    }


    @Transactional(readOnly = false)
    public void jkcGtws(String checkTime) throws Exception {

        List<Office> nncPartyList = officeDao.selectChuUnitList("34");
        List<Office> lzcPartyList = officeDao.selectChuUnitList("95");
        List<Office> bhcPartyList = officeDao.selectChuUnitList("156");

       StringBuilder nncDetails = new StringBuilder();
       StringBuilder lzcDetails = new StringBuilder();
       StringBuilder bhcDetails = new StringBuilder();

       int nncSum = 0;
       int lzcSum = 0;
       int bhcSum = 0;

        String year = checkTime.substring(0, 4);
        Integer y = Integer.valueOf(year);
        String month = checkTime.substring(checkTime.length() - 2);
        Integer m = Integer.valueOf(month);
        Integer lastMonth = m - 1;
        Integer lastYear = y - 1;
        String yearL = null;
        if (m == 1){
            yearL = lastYear + "-12-26";
        }else {
            String Lmonth = "";
            if(String.valueOf(lastMonth).length() ==1){
                Lmonth = "0" + lastMonth;
            }
            yearL = year + "-" + Lmonth + "-26";
        }
        String yearT = year + "-" + month +  "-25";

        for (int o = 0; o < nncPartyList.size(); o++) {
            Office office = nncPartyList.get(o);
            //公安处名称
            String name = office.getName();
            //公安处id
            String unitId = office.getId();
            String code = office.getCode();
            List<Patrolrecord> patrolrecordList = new ArrayList<>();
            patrolrecordList = patrolrecordService.selectAllExcption(code, yearL,yearT);

            for (int p = 0; p < patrolrecordList.size(); p++) {
                Patrolrecord patrolrecord = patrolrecordList.get(p);


                DateFormat format = new SimpleDateFormat("yyyyMMddHHmmssSSS");
                Date sdate = format.parse(patrolrecord.getDate());
                Date edate = format.parse(patrolrecord.getReviewtime());
                Calendar c1 = Calendar.getInstance();
                Calendar c2 = Calendar.getInstance();

                c1.setTime(sdate);
                c2.setTime(edate);


                int i1 = c2.get(Calendar.HOUR);

                int i2 = c1.get(Calendar.HOUR);

                int timeL = i2 - i1;
               /* Date d = new Date(date);
                Date r = new Date(reviewtime);

                long firstDateMilliSeconds = d.getTime();
                long secondDateMilliSeconds = r.getTime();

                long firstMinusSecond = secondDateMilliSeconds - firstDateMilliSeconds;

                //毫秒转为秒
                long milliSeconds = firstMinusSecond;
                int totalSeconds = (int) (milliSeconds / 1000);

                int daysRemains = totalSeconds % (3600 * 24);

                int hours = daysRemains / 3600;
*/
                if (timeL > 2) {
                    nncSum++;
                    nncDetails.append(name).append(",");
                }
            }
        }
        if (nncSum > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("3");
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setDetails(nncDetails + "存在异常打卡");
            examAutoEvaluation.setUnit("南宁处治安支队");
            examAutoEvaluation.setUnitId("45");
            examAutoEvaluation.setAssess("");
            examAutoEvaluation.setAssessId("");
            examAutoEvaluation.setFromSys("高铁安保卫士");
            examAutoEvaluation.setModel("2020年月度公安局对公安处扣分标准(业务部分26项)");
            examAutoEvaluation.setModelId("aef99f1b42054342ba71c25634d0f9fc");
            examAutoEvaluation.setOption("检查发现“高铁安保卫士”管理使用存在问题的（以通报为准）");
            examAutoEvaluation.setOptionId("641ec6c9bf29493e8e0cca7facc0210a");
            examAutoEvaluation.setScore("2");
            examAutoEvaluation.setEvaluationId("aab30465f28547a4bdc69fd652ff8a4c");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"高铁卫士");
            //汇总一样标准的数据
            this.summaryStandard(examAutoEvaluation,2.0,nncDetails+"异常打卡点、隐患、警情未及时审核，扣分（收到信息2小时内审核）");
            this.save(examAutoEvaluation);
        }
        for (int o = 0; o < lzcPartyList.size(); o++) {
            Office office = lzcPartyList.get(o);
            //公安处名称
            String name = office.getName();
            //公安处id
            String unitId = office.getId();
            String code = office.getCode();
            List<Patrolrecord> patrolrecordList = new ArrayList<>();
            patrolrecordList = patrolrecordService.selectAllExcption(code, yearL,yearT);

            for (int p = 0; p < patrolrecordList.size(); p++) {
                Patrolrecord patrolrecord = patrolrecordList.get(p);


                DateFormat format = new SimpleDateFormat("yyyyMMddHHmmssSSS");
                Date sdate = format.parse(patrolrecord.getDate());
                Date edate = format.parse(patrolrecord.getReviewtime());
                Calendar c1 = Calendar.getInstance();
                Calendar c2 = Calendar.getInstance();

                c1.setTime(sdate);
                c2.setTime(edate);


                int i1 = c2.get(Calendar.HOUR);

                int i2 = c1.get(Calendar.HOUR);

                int timeL = i2 - i1;
               /* Date d = new Date(date);
                Date r = new Date(reviewtime);

                long firstDateMilliSeconds = d.getTime();
                long secondDateMilliSeconds = r.getTime();

                long firstMinusSecond = secondDateMilliSeconds - firstDateMilliSeconds;

                //毫秒转为秒
                long milliSeconds = firstMinusSecond;
                int totalSeconds = (int) (milliSeconds / 1000);

                int daysRemains = totalSeconds % (3600 * 24);

                int hours = daysRemains / 3600;
*/
                if (timeL > 2) {
                    lzcSum++;
                    lzcDetails.append(name).append(",");
                }
            }
        }
        if (lzcSum > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("3");
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setDetails(lzcDetails + "存在异常打卡");
            examAutoEvaluation.setUnit("柳州处治安支队");
            examAutoEvaluation.setUnitId("160");
            examAutoEvaluation.setAssess("");
            examAutoEvaluation.setAssessId("");
            examAutoEvaluation.setFromSys("高铁安保卫士");
            examAutoEvaluation.setModel("2020年月度公安局对公安处扣分标准(业务部分26项)");
            examAutoEvaluation.setModelId("aef99f1b42054342ba71c25634d0f9fc");
            examAutoEvaluation.setOption("检查发现“高铁安保卫士”管理使用存在问题的（以通报为准）");
            examAutoEvaluation.setOptionId("641ec6c9bf29493e8e0cca7facc0210a");
            examAutoEvaluation.setScore("2");
            examAutoEvaluation.setEvaluationId("f6461092f65243f9837b4a7fd3e46210");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"高铁卫士");
            //汇总一样标准的数据
            this.summaryStandard(examAutoEvaluation,2.0,lzcDetails+"异常打卡点、隐患、警情未及时审核，扣分（收到信息2小时内审核）");
            this.save(examAutoEvaluation);

        }
        for (int o = 0; o < bhcPartyList.size(); o++) {
            Office office = bhcPartyList.get(o);
            //公安处名称
            String name = office.getName();
            //公安处id
            String unitId = office.getId();
            String code = office.getCode();
            List<Patrolrecord> patrolrecordList = new ArrayList<>();
            patrolrecordList = patrolrecordService.selectAllExcption(code, yearL,yearT);

            for (int p = 0; p < patrolrecordList.size(); p++) {
                Patrolrecord patrolrecord = patrolrecordList.get(p);


                DateFormat format = new SimpleDateFormat("yyyyMMddHHmmssSSS");
                Date sdate = format.parse(patrolrecord.getDate());
                Date edate = format.parse(patrolrecord.getReviewtime());
                Calendar c1 = Calendar.getInstance();
                Calendar c2 = Calendar.getInstance();

                c1.setTime(sdate);
                c2.setTime(edate);


                int i1 = c2.get(Calendar.HOUR);

                int i2 = c1.get(Calendar.HOUR);

                int timeL = i2 - i1;
               /* Date d = new Date(date);
                Date r = new Date(reviewtime);

                long firstDateMilliSeconds = d.getTime();
                long secondDateMilliSeconds = r.getTime();

                long firstMinusSecond = secondDateMilliSeconds - firstDateMilliSeconds;

                //毫秒转为秒
                long milliSeconds = firstMinusSecond;
                int totalSeconds = (int) (milliSeconds / 1000);

                int daysRemains = totalSeconds % (3600 * 24);

                int hours = daysRemains / 3600;
*/
                if (timeL > 2) {
                    bhcSum++;
                    bhcDetails.append(name).append(",");
                }
            }
        }
        if (bhcSum > 0){

            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("3");
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setDetails(bhcDetails + "存在异常打卡");
            examAutoEvaluation.setUnit("北海处治安支队");
            examAutoEvaluation.setUnitId("272");
            examAutoEvaluation.setAssess("");
            examAutoEvaluation.setAssessId("");
            examAutoEvaluation.setFromSys("高铁安保卫士");
            examAutoEvaluation.setModel("2020年月度公安局对公安处扣分标准(业务部分26项)");
            examAutoEvaluation.setModelId("aef99f1b42054342ba71c25634d0f9fc");
            examAutoEvaluation.setOption("检查发现“高铁安保卫士”管理使用存在问题的（以通报为准）");
            examAutoEvaluation.setOptionId("641ec6c9bf29493e8e0cca7facc0210a");
            examAutoEvaluation.setScore("2");
            examAutoEvaluation.setEvaluationId("b309552b4eb64c78b2540c52daa91b7f");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"高铁卫士");
            this.summaryStandard(examAutoEvaluation,2.0,bhcDetails+"存在异常打卡");
            this.save(examAutoEvaluation);

        }
    }

    public static int subDateTime(String beginTime, String endTime) throws Exception {

        /*
         * 时间转化样式
         */
        DateFormat format = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");

        /*
         * 把字符类型的时间转化为标准时间样式
         */
        Date firstDateTimeDate = format.parse(beginTime);
        Date secondDateTimeDate = format.parse(endTime);

        /*
         * 得到时间的总毫秒数
         */
        long firstDateMilliSeconds = firstDateTimeDate.getTime();
        long secondDateMilliSeconds = secondDateTimeDate.getTime();

        /*
         * 两个日期相减
         */
        long subDateMilliSeconds = secondDateMilliSeconds - firstDateMilliSeconds;

        //毫秒转化为秒
        int totalSeconds = (int) (subDateMilliSeconds / 1000);

        /*
         * 毫秒数转化为总天数
         */
        int days = totalSeconds / (3600 * 24);
        int days_remains = totalSeconds % (3600 * 24);

        /*
         * 天数转化为时
         */
        int hours = days_remains / 3600;
        int hours_remains = days_remains % 3600;

        /*
         * 得到分钟数
         */
        int minutes = hours_remains / 60;

        /*
         * 得到秒数
         */
        int seconds = hours_remains % 60;

        String outTime = ((hours < 10) ? "0" : "") + hours + ":" +
                ((minutes < 10) ? "0" : "") + minutes + ":" +
                ((seconds < 10) ? "0" : "") + seconds;
        System.out.println(outTime);
        return hours;
    }


    @Transactional(readOnly = false)
    public void jkcGtwsYear(String year) throws Exception {

        List<Office> nncPartyList = officeDao.selectChuUnitList("34");
        List<Office> lzcPartyList = officeDao.selectChuUnitList("95");
        List<Office> bhcPartyList = officeDao.selectChuUnitList("156");

        Integer m = Integer.valueOf(year);
        Integer lastYear = m - 1;
        String yearL = lastYear + "-" + "12-02";
        String yearT = year + "-" +"12-01";

        StringBuilder nncDetails = new StringBuilder();
        StringBuilder lzcDetails = new StringBuilder();
        StringBuilder bhcDetails = new StringBuilder();

        int nncSum = 0;
        int lzcSum = 0;
        int bhcSum = 0;

        for (int o = 0; o < nncPartyList.size(); o++) {
            Office office = nncPartyList.get(o);
            //公安处名称
            String name = office.getName();
            //公安处id
            String unitId = office.getId();
            String code = office.getCode();
            List<Patrolrecord> patrolrecordList = new ArrayList<>();
            patrolrecordList = patrolrecordService.selectAllExcption(code, yearL,yearT);

            for (int p = 0; p < patrolrecordList.size(); p++) {
                Patrolrecord patrolrecord = patrolrecordList.get(p);
                DateFormat format = new SimpleDateFormat("yyyyMMddHHmmssSSS");
                Date sdate = format.parse(patrolrecord.getDate());
                Date edate = format.parse(patrolrecord.getReviewtime());
                Calendar c1 = Calendar.getInstance();
                Calendar c2 = Calendar.getInstance();

                c1.setTime(sdate);
                c2.setTime(edate);


                int i1 = c2.get(Calendar.HOUR);

                int i2 = c1.get(Calendar.HOUR);

                int timeL = i2 - i1;

                if (timeL > 2) {
                   nncSum++;
                   nncDetails.append(name).append(",");
                }
            }
        }
        if (nncSum > 0){

                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("3");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setDetails(nncDetails + year + "异常打卡点、隐患、警情未及时审核，扣分（收到信息2小时内审核）");
                examAutoEvaluation.setUnit("南宁处治安支队");
                examAutoEvaluation.setUnitId("45");
                examAutoEvaluation.setFromSys("高铁安保卫士");
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考核扣分标准(业务部分26项)");
                examAutoEvaluation.setModelId("a959d8865ea74bf68cf818adc710c75c");
                examAutoEvaluation.setOption("检查发现“高铁安保卫士”管理使用存在问题的（以通报为准）");
                examAutoEvaluation.setOptionId("bf2adf56c4764d2f849dd646406a6db3");
                examAutoEvaluation.setScore("1");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"高铁卫士");
                examAutoEvaluation.setEvaluationId("aab30465f28547a4bdc69fd652ff8a4c");
                //汇总一样标准的数据
                this.summaryStandard(examAutoEvaluation,1.0,nncDetails + year + "异常打卡点、隐患、警情未及时审核，扣分（收到信息2小时内审核）");
                this.save(examAutoEvaluation);
        }
        for (int o = 0; o < lzcPartyList.size(); o++) {
            Office office = lzcPartyList.get(o);
            //公安处名称
            String name = office.getName();
            //公安处id
            String unitId = office.getId();
            String code = office.getCode();
            List<Patrolrecord> patrolrecordList = new ArrayList<>();
            patrolrecordList = patrolrecordService.selectAllExcption(code, yearL,yearT);

            for (int p = 0; p < patrolrecordList.size(); p++) {
                Patrolrecord patrolrecord = patrolrecordList.get(p);
                DateFormat format = new SimpleDateFormat("yyyyMMddHHmmssSSS");
                Date sdate = format.parse(patrolrecord.getDate());
                Date edate = format.parse(patrolrecord.getReviewtime());
                Calendar c1 = Calendar.getInstance();
                Calendar c2 = Calendar.getInstance();

                c1.setTime(sdate);
                c2.setTime(edate);


                int i1 = c2.get(Calendar.HOUR);

                int i2 = c1.get(Calendar.HOUR);

                int timeL = i2 - i1;

                if (timeL > 2) {
                    lzcSum++;
                    lzcDetails.append(name).append(",");
                }
            }
        }
        if (lzcSum > 0){
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("3");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setDetails(lzcDetails + year + "存在异常打卡点、隐患、警情未及时审核");
                examAutoEvaluation.setUnit("柳州处治安支队");
                examAutoEvaluation.setUnitId("160");
                examAutoEvaluation.setFromSys("高铁安保卫士");
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考核扣分标准(业务部分26项)");
                examAutoEvaluation.setModelId("a959d8865ea74bf68cf818adc710c75c");
                examAutoEvaluation.setOption("检查发现“高铁安保卫士”管理使用存在问题的（以通报为准）");
                examAutoEvaluation.setOptionId("bf2adf56c4764d2f849dd646406a6db3");
                examAutoEvaluation.setScore("1");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"高铁卫士");
                examAutoEvaluation.setEvaluationId("f6461092f65243f9837b4a7fd3e46210");
            //汇总一样标准的数据
            this.summaryStandard(examAutoEvaluation,1.0,lzcDetails + year + "异常打卡点、隐患、警情未及时审核，扣分（收到信息2小时内审核）");

            this.save(examAutoEvaluation);
        }
        for (int o = 0; o < bhcPartyList.size(); o++) {
            Office office = bhcPartyList.get(o);
            //公安处名称
            String name = office.getName();
            //公安处id
            String unitId = office.getId();
            String code = office.getCode();
            List<Patrolrecord> patrolrecordList = new ArrayList<>();
            patrolrecordList = patrolrecordService.selectAllExcption(code, yearL,yearT);

            for (int p = 0; p < patrolrecordList.size(); p++) {
                Patrolrecord patrolrecord = patrolrecordList.get(p);
                DateFormat format = new SimpleDateFormat("yyyyMMddHHmmssSSS");
                Date sdate = format.parse(patrolrecord.getDate());
                Date edate = format.parse(patrolrecord.getReviewtime());
                Calendar c1 = Calendar.getInstance();
                Calendar c2 = Calendar.getInstance();

                c1.setTime(sdate);
                c2.setTime(edate);


                int i1 = c2.get(Calendar.HOUR);

                int i2 = c1.get(Calendar.HOUR);

                int timeL = i2 - i1;

                if (timeL > 2) {
                    bhcSum++;
                    bhcDetails.append(name).append(",");
                }
            }
        }
        if (bhcSum > 0){
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();

                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("3");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setDetails(bhcDetails + year + "异常打卡点、隐患、警情未及时审核，扣分（收到信息2小时内审核）");
                examAutoEvaluation.setUnit("北海处治安支队");
                examAutoEvaluation.setUnitId("272");
                examAutoEvaluation.setFromSys("高铁安保卫士");
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考核扣分标准(业务部分26项)");
                examAutoEvaluation.setModelId("a959d8865ea74bf68cf818adc710c75c");
                examAutoEvaluation.setOption("检查发现“高铁安保卫士”管理使用存在问题的（以通报为准）");
                examAutoEvaluation.setOptionId("bf2adf56c4764d2f849dd646406a6db3");
                examAutoEvaluation.setScore("1");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"高铁卫士");
                examAutoEvaluation.setEvaluationId("b309552b4eb64c78b2540c52daa91b7f");
                //汇总一样标准的数据
                this.summaryStandard(examAutoEvaluation,1.0,lzcDetails + year + "异常打卡点、隐患、警情未及时审核，扣分（收到信息2小时内审核）");

                this.save(examAutoEvaluation);

        }
    }

    /**
     * 奖励信息（党建工作，个人）
     *
     * 公安处领导班子考核
     *
     * 月度
     * */
    public void gacJlxxGr(String checkTime) {
        String year = checkTime.substring(0, 4);
        String month = checkTime.substring(checkTime.length() - 2);
        /*Map<String,Object> monthMap = this.getTimeQuantumByMonth(year,month);
        Date nowMonthDate = (Date) monthMap.get("nowTime");
        Date lastMonthDate = (Date) monthMap.get("lastTime");
        year = (String) monthMap.get("year");
        month = (String) monthMap.get("month");*/

        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        Map<String, String> monthTime = this.monthTime(checkTime);
        Date lastMonthDate = null;
        Date nowMonthDate = null;
        try {
            lastMonthDate = format.parse(monthTime.get("yearL"));
            nowMonthDate = format.parse(monthTime.get("yearT"));
        } catch (ParseException e) {
            e.printStackTrace();
        }

        //所有的公安处领导身份证
        String chuRoleId = "230e916609a349e68f7186f784e11419";
        ExamWorkflowDefine define = new ExamWorkflowDefine();
        define.setName(chuRoleId);
        List<User> chuList = examWorkflowSegmentsDefineService.queryPoliceDatas(define);

        //公安局级先进
        String jlevel = "5";
        //厅局级先进
        String tjlevel = "3";
        String tjlevelTwo = "4";
        //省部级先进
        String sblevel = "2";
        //全国级先进
        String qglevel = "1";

        for (int c = 0; c < chuList.size(); c++) {

            User user = chuList.get(c);
            String name = user.getName();
            String idNumber = user.getNo();
            Integer jl = affairPartyRewardPunishDao.selectNumberMonth(lastMonthDate,nowMonthDate, idNumber, jlevel);
            String userId = examAutoEvaluationDao.selectNoUserid(idNumber);
            Integer score = jl * 5;
            if (jl > 0) {

                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("2");
                examAutoEvaluation.setEvalType("5");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setDetails(year + "年" + name + "被评为公安局级先进");
                examAutoEvaluation.setName(name);
                examAutoEvaluation.setIdNumber(idNumber);
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("2020年月度对公安处领导班子成员绩效考核加分标准");
                examAutoEvaluation.setModelId("1b2068b9ecd14f4d8e2c5dbb9b25e96a");
                examAutoEvaluation.setOption("本人被评为公安局级先进");
                examAutoEvaluation.setOptionId("debbc6478bfc4532a87bbb01f742098b");
                examAutoEvaluation.setScore(score.toString());
                examAutoEvaluation.setEvaluationId(userId);
                examAutoEvaluation.setFromSys("智慧政工");//数据来源
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_公安局级先进");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            Integer tj = affairPartyRewardPunishDao.selectNumberMonthTwo(lastMonthDate,nowMonthDate, idNumber, tjlevel,tjlevelTwo);
            Integer score1 = tj * 10;
            if (tj > 0) {

                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("2");
                examAutoEvaluation.setEvalType("5");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setDetails(year + "年" + name + "被评为厅局级先进");
                examAutoEvaluation.setName(name);
                examAutoEvaluation.setIdNumber(idNumber);
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("2020年月度对公安处领导班子成员绩效考核加分标准");
                examAutoEvaluation.setModelId("1b2068b9ecd14f4d8e2c5dbb9b25e96a");
                examAutoEvaluation.setOption("本人被评为厅局级先进");
                examAutoEvaluation.setOptionId("55982ccf2d66487e9329f7f86a9af443");
                examAutoEvaluation.setScore(score1.toString());
                examAutoEvaluation.setEvaluationId(userId);
                examAutoEvaluation.setFromSys("智慧政工");//数据来源
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_厅局级");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            Integer sb = affairPartyRewardPunishDao.selectNumberMonth(lastMonthDate,nowMonthDate, idNumber, sblevel);
            if (sb > 0) {

                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("2");
                examAutoEvaluation.setEvalType("5");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setDetails(year + "年" + name + "被评为省部级先进");
                examAutoEvaluation.setName(name);
                examAutoEvaluation.setIdNumber(idNumber);
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("2020年月度对公安处领导班子成员绩效考核加分标准");
                examAutoEvaluation.setModelId("1b2068b9ecd14f4d8e2c5dbb9b25e96a");
                examAutoEvaluation.setOption("本人被评为省部级先进");
                examAutoEvaluation.setOptionId("e5ae517aa14f474b92527b943223b191");
                examAutoEvaluation.setScore(String.valueOf(sb * 15));
                examAutoEvaluation.setEvaluationId(userId);
                examAutoEvaluation.setFromSys("智慧政工");//数据来源
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_省部级先进");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            Integer qg = affairPartyRewardPunishDao.selectNumberMonth(lastMonthDate,nowMonthDate, idNumber, qglevel);
            if (qg > 0) {

                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("2");
                examAutoEvaluation.setEvalType("5");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setDetails(year + "年" + name + "被评为全国先进");
                examAutoEvaluation.setName(name);
                examAutoEvaluation.setIdNumber(idNumber);
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("2020年月度对公安处领导班子成员绩效考核加分标准");
                examAutoEvaluation.setModelId("1b2068b9ecd14f4d8e2c5dbb9b25e96a");
                examAutoEvaluation.setOption("本人被评为全国先进");
                examAutoEvaluation.setOptionId("16e343840c484fae9b4bafce0b3286d9");
                examAutoEvaluation.setScore(String.valueOf(qg * 25));
                examAutoEvaluation.setEvaluationId(userId);
                examAutoEvaluation.setFromSys("智慧政工");//数据来源
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_全国级先进");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
        }
    }


    /**
     * 奖励信息（党建工作，个人）
     *
     * 公安处领导班子考核
     *
     * 年度
     * */
    public void gacJlxxGrYear(String year) {

        /*Map<String,Object> yearMap = this.getTimeQuantumByYear(year);
        Date nowYearDate = (Date) yearMap.get("nowYear");
        Date lastYearDate = (Date) yearMap.get("lastYear");
        year = (String) yearMap.get("year");
        */

        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        Map<String, String> yearTime = this.yearTime(year);
        Date lastYearDate = null;
        Date nowYearDate = null;
        try {
            lastYearDate = format.parse(yearTime.get("yearL"));
            nowYearDate = format.parse(yearTime.get("yearT"));
        } catch (ParseException e) {
            e.printStackTrace();
        }


        //所有的公安处领导身份证

        String chuRoleId = "230e916609a349e68f7186f784e11419";

        ExamWorkflowDefine define = new ExamWorkflowDefine();
        define.setName(chuRoleId);
        List<User> chuList = examWorkflowSegmentsDefineService.queryPoliceDatas(define);

        //公安局级先进
        String jlevel = "5";
        //厅局级先进
        String tjlevel = "3";
        String tjlevelTwo = "4";
        //省部级先进
        String sblevel = "2";
        //全国级先进
        String qglevel = "1";

        for (int c = 0; c < chuList.size(); c++) {

            User user = chuList.get(c);
            String name = user.getName();
            String idNumber = user.getNo();
            Integer jl = affairPartyRewardPunishDao.selectNumber(lastYearDate,nowYearDate, idNumber, jlevel);
            String userId = examAutoEvaluationDao.selectNoUserid(idNumber);
            Double score = jl * 0.3;

            if (jl > 0) {

                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("2");
                examAutoEvaluation.setEvalType("5");
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setDetails(year + "年" + name + "被评为公安局级先进");
                examAutoEvaluation.setName(name);
                examAutoEvaluation.setIdNumber(idNumber);
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("2020年年度对公安处领导班子成员绩效考核加分标准");
                examAutoEvaluation.setModelId("0bee7919f52944a0bf29719a573b8a25");
                examAutoEvaluation.setOption("本人被评为公安局级先进");
                examAutoEvaluation.setOptionId("652a932efa8b4afb9f0237094380df2c");
                examAutoEvaluation.setScore(score.toString());
                examAutoEvaluation.setEvaluationId(userId);
                examAutoEvaluation.setFromSys("智慧政工");//数据来源
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_公安局级先进");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            Integer tj = affairPartyRewardPunishDao.selectNumberTwo(lastYearDate,nowYearDate, idNumber, tjlevel,tjlevelTwo);
            Double score1 = tj * 0.5;

            if (tj > 0) {

                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("2");
                examAutoEvaluation.setEvalType("5");
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setDetails(year + "年" + name + "被评为厅局级先进");
                examAutoEvaluation.setName(name);
                examAutoEvaluation.setIdNumber(idNumber);
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("2020年年度对公安处领导班子成员绩效考核加分标准");
                examAutoEvaluation.setModelId("0bee7919f52944a0bf29719a573b8a25");
                examAutoEvaluation.setOption("本人被评为厅局级先进");
                examAutoEvaluation.setOptionId("f8a77cd3c0e34b90904cda4054354482");
                examAutoEvaluation.setScore(score1.toString());
                examAutoEvaluation.setEvaluationId(userId);
                examAutoEvaluation.setFromSys("智慧政工");//数据来源
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_厅局级");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            Integer sb = affairPartyRewardPunishDao.selectNumber(lastYearDate,nowYearDate, idNumber, sblevel);
            Integer score2 = sb * 1;
            if (sb > 0) {

                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("2");
                examAutoEvaluation.setEvalType("5");
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setDetails(year + "年" + name + "被评为省部级先进");
                examAutoEvaluation.setName(name);
                examAutoEvaluation.setIdNumber(idNumber);
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("2020年年度对公安处领导班子成员绩效考核加分标准");
                examAutoEvaluation.setModelId("0bee7919f52944a0bf29719a573b8a25");
                examAutoEvaluation.setOption("本人被评为省部级先进");
                examAutoEvaluation.setOptionId("ed3ff02ebcfc456eb513619a8338ec32");
                examAutoEvaluation.setScore(score2.toString());
                examAutoEvaluation.setEvaluationId(userId);
                examAutoEvaluation.setFromSys("智慧政工");//数据来源
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_省部级先进");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            Integer qg = affairPartyRewardPunishDao.selectNumber(lastYearDate,nowYearDate, idNumber, qglevel);
            Integer score3 = qg * 2;

            if (qg > 0) {

                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("2");
                examAutoEvaluation.setEvalType("5");
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setDetails(year + "年" + name + "被评为全国先进");
                examAutoEvaluation.setName(name);
                examAutoEvaluation.setIdNumber(idNumber);
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("2020年年度对公安处领导班子成员绩效考核加分标准");
                examAutoEvaluation.setModelId("0bee7919f52944a0bf29719a573b8a25");
                examAutoEvaluation.setOption("本人被评为全国先进");
                examAutoEvaluation.setOptionId("51a6e00d40a946a7b8b94d4cae4ef393");
                examAutoEvaluation.setScore(score3.toString());
                examAutoEvaluation.setEvaluationId(userId);
                examAutoEvaluation.setFromSys("智慧政工");//数据来源
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_全国级先进");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
        }
    }

    /*
     * 奖励信息（党建工作，个人）
     *
     * 中基层领导班子
     *
     * 月度
     * */
    public void zjcJlxxGr(String checkTime) {

        String year = checkTime.substring(0, 4);
        String month = checkTime.substring(checkTime.length() - 2);
        /*Map<String,Object> monthMap = this.getTimeQuantumByMonth(year,month);
        Date nowMonthDate = (Date) monthMap.get("nowTime");
        Date lastMonthDate = (Date) monthMap.get("lastTime");
        year = (String) monthMap.get("year");
        month = (String) monthMap.get("month");*/


        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        Map<String, String> monthTime = this.monthTime(checkTime);
        Date lastMonthDate = null;
        Date nowMonthDate = null;
        try {
            lastMonthDate = format.parse(monthTime.get("yearL"));
            nowMonthDate = format.parse(monthTime.get("yearT"));
        } catch (ParseException e) {
            e.printStackTrace();
        }

        /*中基层*/
        String juJiGuanRoleId = "13bac520ae4d4160b595384691b443fd";
        String chuJiGuanRoleId = "62cf6aaea0184d3b8cfbce1700ad0e38";
        String suoduiJiGuanRoleId = "ff24c3288860447d867d08d462a2a2b9";

        String[] zhongJiCeng = new String[3];
        zhongJiCeng[0] = chuJiGuanRoleId;
        zhongJiCeng[1] = juJiGuanRoleId;
        zhongJiCeng[2] = suoduiJiGuanRoleId;
        String companyId = "156";
        List<User> temzhongJiCengList = new ArrayList<>();
       /* Arrays.stream(zhongJiCeng).forEach(s -> {
            ExamWorkflowDefine zhongDefine = new ExamWorkflowDefine();
            zhongDefine.setName(s);
            if (companyId.equals("1")) {
                zhongDefine.getSqlMap().put("dsf", "and u.company_id = '" + companyId + "' and u.office_id not in ('34','95','156')");
            } else {
                zhongDefine.getSqlMap().put("dsf", "and u.company_id = '" + companyId + "'");
            }
            temzhongJiCengList.addAll(examWorkflowSegmentsDefineService.queryPoliceDatas(zhongDefine));
        });*/
        Arrays.stream(zhongJiCeng).forEach(s -> {
            ExamWorkflowDefine zhongDefine = new ExamWorkflowDefine();
            zhongDefine.setName(s);
            temzhongJiCengList.addAll(examWorkflowSegmentsDefineService.queryPoliceDatas(zhongDefine));
        });
        //公安处先进加3分
        String gaclevel = "6";
        //公安局级先进
        String jlevel = "5";
        //厅局级先进
        String tjlevel = "3";
        String tjlevelTwo = "4";
        //省部级先进
        String sblevel = "2";
        //全国级先进
        String qglevel = "1";

        for (int z = 0; z < temzhongJiCengList.size(); z++) {
            User user = temzhongJiCengList.get(z);
            //身份证号
            String idNumber = user.getNo();
            //姓名
            String name = userDao.selectName(idNumber);
            Integer jl = affairPartyRewardPunishDao.selectNumberMonth(lastMonthDate,nowMonthDate, idNumber, jlevel);
            String userId = examAutoEvaluationDao.selectNoUserid(idNumber);
            Double score = jl * 5.0;
            if (jl > 0) {

                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("2");
                examAutoEvaluation.setEvalType("6");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setDetails(year + "年" + month + "月" + name + "被评为公安局级先进");
                examAutoEvaluation.setName(name);
                examAutoEvaluation.setIdNumber(idNumber);
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("2020年月度对中、基层领导干部(公安处领导除外)绩效考核加分标准");
                examAutoEvaluation.setModelId("8c649c304296427c95c85ec150054694");
                examAutoEvaluation.setOption("个人获得公安局级先进（综合类）");
                examAutoEvaluation.setOptionId("c342be9d64d94e7eaca75238ce89da0b");
                examAutoEvaluation.setScore(score.toString());
                examAutoEvaluation.setEvaluationId(userId);
                examAutoEvaluation.setFromSys("智慧政工");//数据来源
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_公安局级先进");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            Integer tj = affairPartyRewardPunishDao.selectNumberMonthTwo(lastMonthDate,nowMonthDate, idNumber, tjlevel,tjlevelTwo);
            Double score1 = tj * 10.0;

            if (tj > 0) {

                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("2");
                examAutoEvaluation.setEvalType("6");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setDetails(year + "年" + month + "月" + name + "被评为厅局级先进");
                examAutoEvaluation.setName(name);
                examAutoEvaluation.setIdNumber(idNumber);
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("2020年月度对中、基层领导干部(公安处领导除外)绩效考核加分标准");
                examAutoEvaluation.setModelId("8c649c304296427c95c85ec150054694");
                examAutoEvaluation.setOption("个人获得厅局级先进（综合类）");
                examAutoEvaluation.setOptionId("6d0602c616794764a34b0b0f510c97e9");
                examAutoEvaluation.setScore(score1.toString());
                examAutoEvaluation.setEvaluationId(userId);
                examAutoEvaluation.setFromSys("智慧政工");//数据来源
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_厅局级");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            Integer sb = affairPartyRewardPunishDao.selectNumberMonth(lastMonthDate,nowMonthDate, idNumber, sblevel);
            Double score2 = sb * 15.0;
            if (sb > 0) {

                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("2");
                examAutoEvaluation.setEvalType("6");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setDetails(year + "年" + month + "月" + name + "被评为省部级先进");
                examAutoEvaluation.setName(name);
                examAutoEvaluation.setIdNumber(idNumber);
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("2020年月度对中、基层领导干部(公安处领导除外)绩效考核加分标准");
                examAutoEvaluation.setModelId("8c649c304296427c95c85ec150054694");
                examAutoEvaluation.setOption("个人获得省部级先进（综合类）");
                examAutoEvaluation.setOptionId("792305d5e8b74275aae9692667b2779d");
                examAutoEvaluation.setScore(score2.toString());
                examAutoEvaluation.setEvaluationId(userId);
                examAutoEvaluation.setFromSys("智慧政工");//数据来源
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_省部级先进");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            Integer qg = affairPartyRewardPunishDao.selectNumberMonth(lastMonthDate,nowMonthDate, idNumber, qglevel);
            Double score3 = qg * 25.0;

            if (qg > 0) {

                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("2");
                examAutoEvaluation.setEvalType("6");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setDetails(year + "年" + month + "月" + name + "被评为全国先进，加25分");
                examAutoEvaluation.setName(name);
                examAutoEvaluation.setIdNumber(idNumber);
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("2020年月度对中、基层领导干部(公安处领导除外)绩效考核加分标准");
                examAutoEvaluation.setModelId("8c649c304296427c95c85ec150054694");
                examAutoEvaluation.setOption("个人获得全国先进（综合类）");
                examAutoEvaluation.setOptionId("87a75ede7bf546c59c3dfada24c390a3");
                examAutoEvaluation.setScore(score3.toString());
                examAutoEvaluation.setEvaluationId(userId);
                examAutoEvaluation.setFromSys("智慧政工");//数据来源
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_全国级先进");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }

            Integer gac = affairPartyRewardPunishDao.selectNumberMonth(lastMonthDate,nowMonthDate, idNumber, gaclevel);
            Double cscore = tj * 3.0;

            if (tj > 0) {

                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("2");
                examAutoEvaluation.setEvalType("6");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setDetails(year + "年" + month + "月" + name + "被评为公安处级先进，加3分");
                examAutoEvaluation.setName(name);
                examAutoEvaluation.setIdNumber(idNumber);
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setModel("2020年月度对中、基层领导干部(公安处领导除外)绩效考核加分标准");
                examAutoEvaluation.setModelId("8c649c304296427c95c85ec150054694");
                examAutoEvaluation.setOption("个人获得公安处级先进（综合类）");
                examAutoEvaluation.setOptionId("0ff9a132e6e24c4c936bc57668d9fafb");
                examAutoEvaluation.setScore(cscore.toString());
                examAutoEvaluation.setEvaluationId(userId);
                examAutoEvaluation.setFromSys("智慧政工");//数据来源
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_公安处级先进");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }


        }

    }


    /**
     * 智慧政工-奖励信息（党建工作，个人）
     * <p>
     * -年度  中基层领导班子考核（局）
     *
     * @param year
     */
    public void zjcJlxxGrYear(String year) {

        /*Map<String,Object> yearMap = this.getTimeQuantumByYear(year);
        Date nowYearDate = (Date) yearMap.get("nowYear");
        Date lastYearDate = (Date) yearMap.get("lastYear");
        year = (String) yearMap.get("year");*/

        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        Map<String, String> yearTime = this.yearTime(year);
        Date lastYearDate = null;
        Date nowYearDate = null;
        try {
            lastYearDate = format.parse(yearTime.get("yearL"));
            nowYearDate = format.parse(yearTime.get("yearT"));
        } catch (ParseException e) {
            e.printStackTrace();
        }

        //所有的中基层领导班子身份证
        String juJiGuanRoleId = "13bac520ae4d4160b595384691b443fd";
        String chuJiGuanRoleId = "62cf6aaea0184d3b8cfbce1700ad0e38";
        String suoduiJiGuanRoleId = "ff24c3288860447d867d08d462a2a2b9";

        String[] zhongJiCeng = new String[3];
        zhongJiCeng[0] = chuJiGuanRoleId;
        zhongJiCeng[1] = juJiGuanRoleId;
        zhongJiCeng[2] = suoduiJiGuanRoleId;
        String companyId = "156";
        List<User> zjcList = new ArrayList<>();
       /* Arrays.stream(zhongJiCeng).forEach(s -> {
            ExamWorkflowDefine zhongDefine = new ExamWorkflowDefine();
            zhongDefine.setName(s);
            if (companyId.equals("1")) {
                zhongDefine.getSqlMap().put("dsf", "and u.company_id = '" + companyId + "' and u.office_id not in ('34','95','156')");
            } else {
                zhongDefine.getSqlMap().put("dsf", "and u.company_id = '" + companyId + "'");
            }
            zjcList.addAll(examWorkflowSegmentsDefineService.queryPoliceDatas(zhongDefine));
        });*/

        Arrays.stream(zhongJiCeng).forEach(s -> {
            ExamWorkflowDefine zhongDefine = new ExamWorkflowDefine();
            zhongDefine.setName(s);
            zjcList.addAll(examWorkflowSegmentsDefineService.queryPoliceDatas(zhongDefine));
        });


        for (int i = 0; i < zjcList.size(); i++) {
            User user = zjcList.get(i);
            String name = user.getName();
            String idNumber = user.getNo();//Illustration
            List<AffairPartyRewardPunish> list = affairPartyRewardPunishDao.selectAssessPersonAward(lastYearDate,nowYearDate, idNumber);
            String userId = examAutoEvaluationDao.selectNoUserid(idNumber);
            for (int j = 0; j < list.size(); j++) {
                AffairPartyRewardPunish affairPartyRewardPunish = list.get(j);
                Date approvalTime = affairPartyRewardPunish.getApprovalTime();
                if (affairPartyRewardPunish.getType() != null && "6".equals(affairPartyRewardPunish.getType())) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("6");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name +DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+ "被评为公安处先进");
                    examAutoEvaluation.setName(name);
                    examAutoEvaluation.setIdNumber(idNumber);
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setModel("2020年年度对中、基层领导干部(公安处领导除外)绩效考核加分标准");
                    examAutoEvaluation.setModelId("6921ad30851d4f0f96bd3db80c8505c0");
                    examAutoEvaluation.setOption("个人获得公安处级先进（综合类）");
                    examAutoEvaluation.setOptionId("8237e3a98e734b4e9594babda221b593");
                    examAutoEvaluation.setScore("0.3");
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setFromSys("智慧政工");//数据来源
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_公安处级先进");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if (affairPartyRewardPunish.getType() != null && "5".equals(affairPartyRewardPunish.getType())) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("6");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+ "被评为公安局级先进");
                    examAutoEvaluation.setName(name);
                    examAutoEvaluation.setIdNumber(idNumber);
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setModel("2020年年度对中、基层领导干部(公安处领导除外)绩效考核加分标准");
                    examAutoEvaluation.setModelId("6921ad30851d4f0f96bd3db80c8505c0");
                    examAutoEvaluation.setOption("个人获得公安局级先进（综合类）");
                    examAutoEvaluation.setOptionId("abd110d9a59943a787b069bc84091617");
                    examAutoEvaluation.setScore("0.5");
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setFromSys("智慧政工");//数据来源
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_公安局级先进");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }

                if (affairPartyRewardPunish.getType() != null && "3".equals(affairPartyRewardPunish.getType()) || "4".equals(affairPartyRewardPunish.getType())) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("6");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails( name + DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+ "被评为厅局级先进");
                    examAutoEvaluation.setName(name);
                    examAutoEvaluation.setIdNumber(idNumber);
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setModel("2020年年度对中、基层领导干部(公安处领导除外)绩效考核加分标准");
                    examAutoEvaluation.setModelId("6921ad30851d4f0f96bd3db80c8505c0");
                    examAutoEvaluation.setOption("个人获得厅局级先进（综合类）");
                    examAutoEvaluation.setOptionId("5a61da6c294f449fad6caa07bd2cc3a2");
                    examAutoEvaluation.setScore("1");
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setFromSys("智慧政工");//数据来源
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_厅局级");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }

                if (affairPartyRewardPunish.getType() != null && "2".equals(affairPartyRewardPunish.getType())) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("6");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails( name + DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+ "被评为省部级先进");
                    examAutoEvaluation.setName(name);
                    examAutoEvaluation.setIdNumber(idNumber);
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setModel("2020年年度对中、基层领导干部(公安处领导除外)绩效考核加分标准");
                    examAutoEvaluation.setModelId("6921ad30851d4f0f96bd3db80c8505c0");
                    examAutoEvaluation.setOption("个人获得省部级先进（综合类）");
                    examAutoEvaluation.setOptionId("b8415858d8f644d0abeb07070281b21f");
                    examAutoEvaluation.setScore("2");
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setFromSys("智慧政工");//数据来源
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_省部级先进");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }

                if (affairPartyRewardPunish.getType() != null && "1".equals(affairPartyRewardPunish.getType())) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("6");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+ "被评为全国级先进");
                    examAutoEvaluation.setName(name);
                    examAutoEvaluation.setIdNumber(idNumber);
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setModel("2020年年度对中、基层领导干部(公安处领导除外)绩效考核加分标准");
                    examAutoEvaluation.setModelId("6921ad30851d4f0f96bd3db80c8505c0");
                    examAutoEvaluation.setOption("个人获得全国先进（综合类）");
                    examAutoEvaluation.setOptionId("e8ace1b1a173480c9607dd93dd20bf5a");
                    examAutoEvaluation.setScore("3");
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setFromSys("智慧政工");//数据来源
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_全国级先进");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }

            }
        }
    }


    /**
     * 智慧政工-奖励信息（党建工作,个人）
     * <p>
     * -年度  民警考核（局处）
     *
     * @param year
     */
    public void mjgrYear(String year) {
        /*Map<String,Object> yearMap = this.getTimeQuantumByYear(year);
        Date nowYearDate = (Date) yearMap.get("nowYear");
        Date lastYearDate = (Date) yearMap.get("lastYear");
        year = (String) yearMap.get("year");
        */
        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        Map<String, String> yearTime = this.yearTime(year);
        Date lastYearDate = null;
        Date nowYearDate = null;
        try {
            lastYearDate = format.parse(yearTime.get("yearL"));
            nowYearDate = format.parse(yearTime.get("yearT"));
        } catch (ParseException e) {
            e.printStackTrace();
        }

        //所有的民警身份证
        String policeRoleId = "2a7ea380b14f4870b6c44be21d2443c3";

        StringBuffer policeIds = new StringBuffer();
        StringBuffer policePersonNames = new StringBuffer();
        ExamWorkflowDefine policeDefine = new ExamWorkflowDefine();
        policeDefine.setName(policeRoleId);
        /*String companyId = "156";
        if (companyId.equals("1")) {
            policeDefine.getSqlMap().put("dsf", "and u.company_id = '" + companyId + "' and u.office_id not in ('34','95','156')");
        } else {
            policeDefine.getSqlMap().put("dsf", "and u.company_id = '" + companyId + "'");
        }*/
        List<User> idNumberList = examWorkflowSegmentsDefineService.queryPoliceDatas(policeDefine);

        for (int i = 0; i < idNumberList.size(); i++) {
            User user = idNumberList.get(i);
            String name = user.getName();
            String idNumber = user.getNo();//Illustration
            List<AffairPartyRewardPunish> list = affairPartyRewardPunishDao.selectAssessPersonAward(lastYearDate,nowYearDate, idNumber);
            String userId = examAutoEvaluationDao.selectNoUserid(idNumber);
            for (int j = 0; j < list.size(); j++) {
                AffairPartyRewardPunish affairPartyRewardPunish = list.get(j);
                Date approvalTime = affairPartyRewardPunish.getApprovalTime();
                if (affairPartyRewardPunish.getType() != null && "6".equals(affairPartyRewardPunish.getType())) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("7");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+ "被评为公安处先进");
                    examAutoEvaluation.setName(name);
                    examAutoEvaluation.setIdNumber(idNumber);
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setModel("2020年年度南宁铁路公安局民警绩效考核公共加分标准");
                    examAutoEvaluation.setModelId("59c90866a1484aec97cbf82578b457a2");
                    examAutoEvaluation.setOption("个人获得公安处级先进（综合类）");
                    examAutoEvaluation.setOptionId("b4335e864eb44180a540483b366e8834");
                    examAutoEvaluation.setScore("3");
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setFromSys("智慧政工");//数据来源
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_公安处级先进");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if (affairPartyRewardPunish.getType() != null && "5".equals(affairPartyRewardPunish.getType())) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("7");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+ "被评为公安局级先进");
                    examAutoEvaluation.setName(name);
                    examAutoEvaluation.setIdNumber(idNumber);
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setModel("2020年年度南宁铁路公安局民警绩效考核公共加分标准");
                    examAutoEvaluation.setModelId("59c90866a1484aec97cbf82578b457a2");
                    examAutoEvaluation.setOption("个人获得公安局级先进（综合类）");
                    examAutoEvaluation.setOptionId("96efd9cb18864b6f9d4361dca444b951");
                    examAutoEvaluation.setScore("5");
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setFromSys("智慧政工");//数据来源
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_公安局级先进");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }

                if (affairPartyRewardPunish.getType() != null && "3".equals(affairPartyRewardPunish.getType()) || "4".equals(affairPartyRewardPunish.getType())) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("7");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+ "被评为厅局级先进");
                    examAutoEvaluation.setName(name);
                    examAutoEvaluation.setIdNumber(idNumber);
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setModel("2020年年度南宁铁路公安局民警绩效考核公共加分标准");
                    examAutoEvaluation.setModelId("59c90866a1484aec97cbf82578b457a2");
                    examAutoEvaluation.setOption("个人获得厅局级先进（综合类）");
                    examAutoEvaluation.setOptionId("400d91877e814eafae2d45bea7c20986");
                    examAutoEvaluation.setScore("10");
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setFromSys("智慧政工");//数据来源
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_厅局级");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }

                if (affairPartyRewardPunish.getType() != null && "2".equals(affairPartyRewardPunish.getType())) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("7");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+ "被评为省部级先进");
                    examAutoEvaluation.setName(name);
                    examAutoEvaluation.setIdNumber(idNumber);
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setModel("2020年年度南宁铁路公安局民警绩效考核公共加分标准");
                    examAutoEvaluation.setModelId("59c90866a1484aec97cbf82578b457a2");
                    examAutoEvaluation.setOption("个人获得省部级先进（综合类）");
                    examAutoEvaluation.setOptionId("6237f3f52fba40819d5b167ad2f3bdd0");
                    examAutoEvaluation.setScore("15");
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setFromSys("智慧政工");//数据来源
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_省部级先进");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }

                if (affairPartyRewardPunish.getType() != null && "1".equals(affairPartyRewardPunish.getType())) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("7");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+ "被评为全国级先进");
                    examAutoEvaluation.setName(name);
                    examAutoEvaluation.setIdNumber(idNumber);
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setModel("2020年年度南宁铁路公安局民警绩效考核公共加分标准");
                    examAutoEvaluation.setModelId("59c90866a1484aec97cbf82578b457a2");
                    examAutoEvaluation.setOption("个人获得全国先进（综合类）");
                    examAutoEvaluation.setOptionId("6ea436b7a88e455da3a5f6b3b255d5df");
                    examAutoEvaluation.setScore("25");
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setFromSys("智慧政工");//数据来源
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_全国级先进");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }

            }
        }
    }

    /**
     * 智慧政工-奖励信息（党建工作,个人）
     * <p>
     * -月度  民警考核（局处）
     *
     * @param checkTime
     */
    public void mjgrMonrh(String checkTime) {
        String year = checkTime.substring(0, 4);
        String month = checkTime.substring(checkTime.length() - 2);
        /*Map<String,Object> monthMap = this.getTimeQuantumByMonth(year,month);
        Date nowMonthDate = (Date) monthMap.get("nowTime");
        Date lastMonthDate = (Date) monthMap.get("lastTime");
        year = (String) monthMap.get("year");
        month = (String) monthMap.get("month");*/

        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        Map<String, String> monthTime = this.monthTime(checkTime);
        Date lastMonthDate = null;
        Date nowMonthDate = null;
        try {
            lastMonthDate = format.parse(monthTime.get("yearL"));
            nowMonthDate = format.parse(monthTime.get("yearT"));
        } catch (ParseException e) {
            e.printStackTrace();
        }

        //所有的民警身份证
        String policeRoleId = "2a7ea380b14f4870b6c44be21d2443c3";

        StringBuffer policeIds = new StringBuffer();
        StringBuffer policePersonNames = new StringBuffer();
        ExamWorkflowDefine policeDefine = new ExamWorkflowDefine();
        policeDefine.setName(policeRoleId);
        /*String companyId = "156";
        if (companyId.equals("1")) {
            policeDefine.getSqlMap().put("dsf", "and u.company_id = '" + companyId + "' and u.office_id not in ('34','95','156')");
        } else {
            policeDefine.getSqlMap().put("dsf", "and u.company_id = '" + companyId + "'");
        }*/
        List<User> idNumberList = examWorkflowSegmentsDefineService.queryPoliceDatas(policeDefine);


        for (int i = 0; i < idNumberList.size(); i++) {
            User user = idNumberList.get(i);
            String name = user.getName();
            String idNumber = user.getNo();//Illustration
            List<AffairPartyRewardPunish> list = affairPartyRewardPunishDao.selectAssessPersonAwardMonth(lastMonthDate,nowMonthDate, idNumber);
            String userId = examAutoEvaluationDao.selectNoUserid(idNumber);
            for (int j = 0; j < list.size(); j++) {
                AffairPartyRewardPunish affairPartyRewardPunish = list.get(j);
                Date approvalTime = affairPartyRewardPunish.getApprovalTime();
                if (affairPartyRewardPunish.getType() != null && "6".equals(affairPartyRewardPunish.getType())) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("7");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+ "被评为公安处先进");
                    examAutoEvaluation.setName(name);
                    examAutoEvaluation.setIdNumber(idNumber);
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setModel("2020年月度南宁铁路公安局民警绩效考核公共加分标准");
                    examAutoEvaluation.setModelId("f1bd374dc4de469dbf9dc924c19ae413");
                    examAutoEvaluation.setOption("个人获得公安处级先进（综合类）");
                    examAutoEvaluation.setOptionId("db1e309d4eac425c9395ed69b6d3bb9d");
                    examAutoEvaluation.setScore("1");
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setFromSys("智慧政工");//数据来源
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_公安处级先进");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if (affairPartyRewardPunish.getType() != null && "5".equals(affairPartyRewardPunish.getType())) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("7");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+ "被评为公安局级先进");
                    examAutoEvaluation.setName(name);
                    examAutoEvaluation.setIdNumber(idNumber);
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setModel("2020年月度南宁铁路公安局民警绩效考核公共加分标准");
                    examAutoEvaluation.setModelId("f1bd374dc4de469dbf9dc924c19ae413");
                    examAutoEvaluation.setOption("个人获得公安局级先进（综合类）");
                    examAutoEvaluation.setOptionId("d3830af886e84f96ba87357378cf63e2");
                    examAutoEvaluation.setScore("2");
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setFromSys("智慧政工");//数据来源
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_公安局级先进");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }

                if (affairPartyRewardPunish.getType() != null && "3".equals(affairPartyRewardPunish.getType()) || "4".equals(affairPartyRewardPunish.getType())) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("7");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+ "被评为厅局级先进");
                    examAutoEvaluation.setName(name);
                    examAutoEvaluation.setIdNumber(idNumber);
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setModel("2020年月度南宁铁路公安局民警绩效考核公共加分标准");
                    examAutoEvaluation.setModelId("f1bd374dc4de469dbf9dc924c19ae413");
                    examAutoEvaluation.setOption("个人获得厅局级先进（综合类）");
                    examAutoEvaluation.setOptionId("b61688ea4b36437b99cc831900376177");
                    examAutoEvaluation.setScore("3");
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setFromSys("智慧政工");//数据来源
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_厅局级");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }

                if (affairPartyRewardPunish.getType() != null && "2".equals(affairPartyRewardPunish.getType())) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("7");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+ "被评为省部级先进");
                    examAutoEvaluation.setName(name);
                    examAutoEvaluation.setIdNumber(idNumber);
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setModel("2020年月度南宁铁路公安局民警绩效考核公共加分标准");
                    examAutoEvaluation.setModelId("f1bd374dc4de469dbf9dc924c19ae413");
                    examAutoEvaluation.setOption("个人获得省部级先进（综合类）");
                    examAutoEvaluation.setOptionId("f0fbb8314b464b9e96d112aa3b25a33a");
                    examAutoEvaluation.setScore("4");
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setFromSys("智慧政工");//数据来源
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_省部级先进");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }

                if (affairPartyRewardPunish.getType() != null && "1".equals(affairPartyRewardPunish.getType())) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("2");
                    examAutoEvaluation.setEvalType("7");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(name + DateUtils.formatDate(approvalTime,"yyyy-MM-dd")+ "被评为全国级先进");
                    examAutoEvaluation.setName(name);
                    examAutoEvaluation.setIdNumber(idNumber);
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setModel("2020年月度南宁铁路公安局民警绩效考核公共加分标准");
                    examAutoEvaluation.setModelId("f1bd374dc4de469dbf9dc924c19ae413");
                    examAutoEvaluation.setOption("个人获得全国先进（综合类）");
                    examAutoEvaluation.setOptionId("354ec11c99ad47c097db8eaedc13c89c");
                    examAutoEvaluation.setScore("8");
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setFromSys("智慧政工");//数据来源
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"奖励信息党建工作及个人_全国级先进");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }

            }
        }
    }

    /*
     * 推优入党，信息倒挂的扣分
     *
     * 处考派出所
     *
     * 月度
     *
     * */
    public void ckpcsTyrd(String checkTime) {

        String year = checkTime.substring(0, 4);
        Integer y = Integer.valueOf(year);
        String month = checkTime.substring(checkTime.length() - 2);
        Integer m = Integer.valueOf(month);
        Integer lastMonth = m - 1;
        Integer lastYear = y - 1;

        Map<String, String> timeMap = this.monthTime(checkTime);
        String yearL = timeMap.get("yearL");
        String yearT = timeMap.get("yearT");

        List<AffairGeneralSituation> nncPartyList = affairGeneralSituationService.getChuPartyBranch("34", "2");
        List<AffairGeneralSituation> lzcPartyList = affairGeneralSituationService.getChuPartyBranch("95", "2");
        List<AffairGeneralSituation> bhcPartyList = affairGeneralSituationService.getChuPartyBranch("156", "2");

        for (int n = 0; n < nncPartyList.size(); n++) {
            AffairGeneralSituation affairGeneralSituation = nncPartyList.get(n);
            String idN = affairGeneralSituation.getId();
            String name = affairGeneralSituation.getPartyOrganization();

                List<AffairPartyMember> affairPartyMemberList = new ArrayList<>();
                affairPartyMemberList = affairPartyMemberService.selectAllPeople(yearL,yearT, idN);
                List<String> evId = examAutoEvaluationDao.selectEvId(idN);
                for (int e = 0; e < evId.size(); e++) {
                    String evI = evId.get(e);
                    for (int a = 0; a < affairPartyMemberList.size(); a++) {
                        AffairPartyMember affairPartyMember = affairPartyMemberList.get(a);
                        String idNumber = affairPartyMember.getCardNum();
                        Integer number = affairPushPartyService.selectNumber(idNumber);
                        if (number < 1) {
                            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                            examAutoEvaluation.setType("1");
                            examAutoEvaluation.setEvalType("3");
                            examAutoEvaluation.setPeriod("1");
                            examAutoEvaluation.setMonth(month);
                            examAutoEvaluation.setYear(year);
                            examAutoEvaluation.setDetails(name + "团员已入党，仍未录推优信息");
                            examAutoEvaluation.setUnit(name);
                            examAutoEvaluation.setUnitId(idNumber);
                            examAutoEvaluation.setFromSys("智慧政工");
                            examAutoEvaluation.setUnitId(idN);
                            examAutoEvaluation.setAssessId("");
                            examAutoEvaluation.setAssess("");
                            examAutoEvaluation.setModel("");
                            examAutoEvaluation.setModelId("");
                            examAutoEvaluation.setOption("");
                            examAutoEvaluation.setOptionId("");
                            examAutoEvaluation.setScore("3");
                            examAutoEvaluation.setEvaluationId(evI);

                            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","推优入党");
                            this.summaryStandard(examAutoEvaluation,3.0,name + "团员已入党，仍未录推优信息");
                            this.save(examAutoEvaluation);

                    }
                }
            }
        }
        for (int n = 0; n < lzcPartyList.size(); n++) {
            AffairGeneralSituation affairGeneralSituation = lzcPartyList.get(n);
            String idN = affairGeneralSituation.getId();
            String name = affairGeneralSituation.getPartyOrganization();

            List<AffairPartyMember> affairPartyMemberList = new ArrayList<>();
            affairPartyMemberList = affairPartyMemberService.selectAllPeople(yearL,yearT, idN);
            List<String> evId = examAutoEvaluationDao.selectEvId(idN);
            for (int e = 0; e < evId.size(); e++) {
                String evI = evId.get(e);
                for (int a = 0; a < affairPartyMemberList.size(); a++) {
                    AffairPartyMember affairPartyMember = affairPartyMemberList.get(a);
                    String idNumber = affairPartyMember.getCardNum();
                    Integer number = affairPushPartyService.selectNumber(idNumber);
                    if (number < 1) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setDetails(name + "团员已入党，仍未录推优信息");
                        examAutoEvaluation.setUnit(name);
                        examAutoEvaluation.setUnitId(idNumber);
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setUnitId(idN);
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setModelId("");
                        examAutoEvaluation.setOption("");
                        examAutoEvaluation.setOptionId("");
                        examAutoEvaluation.setScore("3");
                        examAutoEvaluation.setEvaluationId(evI);

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","推优入党");
                        this.summaryStandard(examAutoEvaluation,3.0,name + "团员已入党，仍未录推优信息");
                        this.save(examAutoEvaluation);

                    }
                }
            }
        }
        for (int n = 0; n < bhcPartyList.size(); n++) {
            AffairGeneralSituation affairGeneralSituation = bhcPartyList.get(n);
            String idN = affairGeneralSituation.getId();
            String name = affairGeneralSituation.getPartyOrganization();

            List<AffairPartyMember> affairPartyMemberList = new ArrayList<>();
            affairPartyMemberList = affairPartyMemberService.selectAllPeople(yearL,yearT, idN);
            List<String> evId = examAutoEvaluationDao.selectEvId(idN);
            for (int e = 0; e < evId.size(); e++) {
                String evI = evId.get(e);
                for (int a = 0; a < affairPartyMemberList.size(); a++) {
                    AffairPartyMember affairPartyMember = affairPartyMemberList.get(a);
                    String idNumber = affairPartyMember.getCardNum();
                    Integer number = affairPushPartyService.selectNumber(idNumber);
                    if (number < 1) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setDetails(name + "团员已入党，仍未录推优信息");
                        examAutoEvaluation.setUnit(name);
                        examAutoEvaluation.setUnitId(idNumber);
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setUnitId(idN);
                        examAutoEvaluation.setAssessId("");
                        examAutoEvaluation.setAssess("");
                        examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队扣分标准（队伍建设部分）");
                        examAutoEvaluation.setModelId("82aa3bc55a7d42c79f8e2d50ad8b0927");
                        examAutoEvaluation.setOption("未按要求做好团内评先推优工作的");
                        examAutoEvaluation.setOptionId("3f84940237b746fe9b6e5536c42dace7");
                        examAutoEvaluation.setScore("3");
                        examAutoEvaluation.setEvaluationId(evI);

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","推优入党");
                        this.summaryStandard(examAutoEvaluation,3.0,name + "团员已入党，仍未录推优信息");
                        this.save(examAutoEvaluation);

                    }
                }
            }
        }
    }

    /*
     * 警综平台-毒品查缉
     *
     * 局考处
     *
     * 月度
     *
     *
     * */
    public void jkcJzDpcj(String checkTime) {


        String year = checkTime.substring(0, 4);
        String month = checkTime.substring(checkTime.length() - 2);

        //公安处
        List<Office> officeList = new ArrayList<>();
        officeList = officeDao.selectChuUnit();

        //北海
        Integer bhNum = 0;
        //南宁
        Integer nnNum = 0;
        //柳州
        Integer lzNum = 0;

        for (int o = 0; o < officeList.size(); o++) {
            Office office = officeList.get(o);
            //公安处名称
            String name = office.getName();
            //公安处id
            String unitId = office.getId();
            //公安处code
            String code = office.getCode();

            if ("北海处".equals(name)) {
                Integer number = examAutoEvaluationDao.seletDpcj(code, checkTime);
                if (number != 0) {
                    bhNum = bhNum + number;
                }
            }
            if ("柳州处".equals(name)) {
                Integer number = examAutoEvaluationDao.seletDpcj(code, checkTime);
                if (number != 0) {
                    lzNum = bhNum + number;
                }
            }
            if ("南宁处".equals(name)) {
                Integer number = examAutoEvaluationDao.seletDpcj(code, checkTime);
                if (number != 0) {
                    nnNum = bhNum + number;
                }
            }
        }
        if (bhNum < 1) {
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setDetails("北海处毒品查缉数未完成");
            examAutoEvaluation.setUnit("北海处刑警支队");
            examAutoEvaluation.setUnitId("277");
            examAutoEvaluation.setFromSys("警综平台");
            examAutoEvaluation.setModel("2020年月度公安局对公安处扣分标准(业务部分26项)");
            examAutoEvaluation.setModelId("aef99f1b42054342ba71c25634d0f9fc");
            examAutoEvaluation.setOption("每月未指导所队完成毒品查缉数的（南宁、柳州处每月5起，北海处每月1起）");
            examAutoEvaluation.setOptionId("7942145c574c4756b6b3212215d4bed3");
            examAutoEvaluation.setScore("2");
            examAutoEvaluation.setEvaluationId("5caeea9690fc42ac846d785cf3418309");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"毒品缉查");
            this.save(examAutoEvaluation);
        }
        if (lzNum < 5) {
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setDetails("柳州处毒品查缉数未完成");
            examAutoEvaluation.setUnit("柳州处禁毒支队");
            examAutoEvaluation.setUnitId("186");
            examAutoEvaluation.setFromSys("警综平台");
            examAutoEvaluation.setModel("2020年月度公安局对公安处扣分标准(业务部分26项)");
            examAutoEvaluation.setModelId("aef99f1b42054342ba71c25634d0f9fc");
            examAutoEvaluation.setOption("每月未指导所队完成毒品查缉数的（南宁、柳州处每月5起，北海处每月1起）");
            examAutoEvaluation.setOptionId("7942145c574c4756b6b3212215d4bed3");
            examAutoEvaluation.setScore("2");
            examAutoEvaluation.setEvaluationId("5afa1a3b36db4cd594dadc73725bf698");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"毒品缉查");
            this.save(examAutoEvaluation);
        }
        if (nnNum < 5) {
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setDetails("南宁处毒品查缉数未完成");
            examAutoEvaluation.setUnit("南宁处禁毒支队");
            examAutoEvaluation.setUnitId("71");
            examAutoEvaluation.setFromSys("警综平台");
            examAutoEvaluation.setModel("2020年月度公安局对公安处扣分标准(业务部分26项)");
            examAutoEvaluation.setModelId("aef99f1b42054342ba71c25634d0f9fc");
            examAutoEvaluation.setOption("每月未指导所队完成毒品查缉数的（南宁、柳州处每月5起，北海处每月1起）");
            examAutoEvaluation.setOptionId("7942145c574c4756b6b3212215d4bed3");
            examAutoEvaluation.setScore("2");
            examAutoEvaluation.setEvaluationId("d04ad22120dc423391acd641fa959249");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"毒品缉查");
            this.save(examAutoEvaluation);
        }
    }


    /*
     * 警综平台-毒品查缉
     *
     * 局考处
     *
     * 年度
     *
     *
     * */
    public void jkcJzDpcjYear(String year) {

        //公安处
        List<Office> officeList = new ArrayList<>();
        officeList = officeDao.selectChuUnit();

        //北海
        Integer bhNum = 0;
        //南宁
        Integer nnNum = 0;
        //柳州
        Integer lzNum = 0;

        for (int o = 0; o < officeList.size(); o++) {
            Office office = officeList.get(o);
            //公安处名称
            String name = office.getName();
            //公安处id
            String unitId = office.getId();
            //公安处code
            String code = office.getCode();

            if ("北海处".equals(name)) {
                Integer number = examAutoEvaluationDao.seletDpcj(code, year);
                if (number != 0) {
                    bhNum = bhNum + number;
                }
            }
            if ("柳州处".equals(name)) {
                Integer number = examAutoEvaluationDao.seletDpcj(code, year);
                if (number != 0) {
                    lzNum = bhNum + number;
                }
            }
            if ("南宁处".equals(name)) {
                Integer number = examAutoEvaluationDao.seletDpcj(code, year);
                if (number != 0) {
                    nnNum = bhNum + number;
                }
            }
        }
        if (bhNum < 10) {
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("2");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setDetails("毒品查缉数未完成");
            examAutoEvaluation.setUnit("北海处刑警支队");
            examAutoEvaluation.setUnitId("800903000000");
            examAutoEvaluation.setFromSys("警综平台");
            examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考核扣分标准(业务部分26项)");
            examAutoEvaluation.setModelId("a959d8865ea74bf68cf818adc710c75c");
            examAutoEvaluation.setOption("年内未指导所队完成毒品查缉案件数的（南宁处60起、柳州处各50起，北海处10起）");
            examAutoEvaluation.setOptionId("eb4f9ea72a524068a4735fca1830540c");
            examAutoEvaluation.setScore("5");
            examAutoEvaluation.setEvaluationId("13be1cd2f87046909e9a835ae52ec3d4");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"毒品缉查");
            this.save(examAutoEvaluation);
        }
        if (lzNum < 50) {
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("2");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setDetails("毒品查缉数未完成");
            examAutoEvaluation.setUnit("柳州处禁毒支队");
            examAutoEvaluation.setUnitId("186");
            examAutoEvaluation.setFromSys("警综平台");
            examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考核扣分标准(业务部分26项)");
            examAutoEvaluation.setModelId("a959d8865ea74bf68cf818adc710c75c");
            examAutoEvaluation.setOption("年内未指导所队完成毒品查缉案件数的（南宁处60起、柳州处各50起，北海处10起）");
            examAutoEvaluation.setOptionId("eb4f9ea72a524068a4735fca1830540c");
            examAutoEvaluation.setScore("5");
            examAutoEvaluation.setEvaluationId("3e0a7e6b415a40fc976735050c253362");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"毒品缉查");
            this.save(examAutoEvaluation);
        }
        if (nnNum < 60) {
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("2");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setDetails("毒品查缉数未完成");
            examAutoEvaluation.setUnit("南宁处禁毒支队");
            examAutoEvaluation.setUnitId("71");
            examAutoEvaluation.setFromSys("警综平台");
            examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考核扣分标准(业务部分26项)");
            examAutoEvaluation.setModelId("a959d8865ea74bf68cf818adc710c75c");
            examAutoEvaluation.setOption("年内未指导所队完成毒品查缉案件数的（南宁处60起、柳州处各50起，北海处10起）");
            examAutoEvaluation.setOptionId("eb4f9ea72a524068a4735fca1830540c");
            examAutoEvaluation.setScore("5");
            examAutoEvaluation.setEvaluationId("73d8a1dc64874b9a8dca494db37488af");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"毒品缉查");
            this.save(examAutoEvaluation);
        }
    }


    /*
     * 警综平台 - 撞轧牲畜
     *
     * 局考处
     *
     * 月度
     * */
    public void jkcJzZysc(String checkTime) {

        String year = checkTime.substring(0, 4);
        String month = checkTime.substring(checkTime.length() - 2);

        Map<String, String> time = monthTime(checkTime);
        String yearL = time.get("yearL");
        String yearT = time.get("yearT");

        //公安处
        List<Office> nncPartyList = officeDao.selectChuUnitList("34");
        List<Office> lzcPartyList = officeDao.selectChuUnitList("95");
        List<Office> bhcPartyList = officeDao.selectChuUnitList("156");

        int nncSum = 0;
        int lzcSum = 0;
        int bhcSum = 0;

        StringBuilder nncDetails = new StringBuilder();
        StringBuilder lzcDetails = new StringBuilder();
        StringBuilder bhcDetails = new StringBuilder();

        for (int o = 0; o < nncPartyList.size(); o++) {
            Office office = nncPartyList.get(o);
            //公安处名称
            String name = office.getName();
            //公安处id
            String unitId = office.getId();
            //公安处code
            String code = office.getCode();

            Integer number = examAutoEvaluationDao.selectZysc(yearL,yearT, code);
            if (number > 0){
                nncSum++;
                nncDetails.append(name).append(",");
            }
        }
        if (nncSum > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setDetails("撞轧牲畜事故");
            examAutoEvaluation.setUnit("南宁处治安支队");
            examAutoEvaluation.setUnitId("45");
            examAutoEvaluation.setFromSys("警综平台");
            examAutoEvaluation.setModel("2020年月度公安局对公安处扣分标准(业务部分26项)");
            examAutoEvaluation.setModelId("aef99f1b42054342ba71c25634d0f9fc");
            examAutoEvaluation.setOption("既有线发生列车撞大牲畜事故的");
            examAutoEvaluation.setOptionId("6c2ccafb76154760aea2510cbb7bc41e");
            examAutoEvaluation.setScore("5");
            examAutoEvaluation.setEvaluationId("aab30465f28547a4bdc69fd652ff8a4c");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"撞轧牲畜");
            this.summaryStandard(examAutoEvaluation,5.0,nncDetails + "发生撞轧牲畜事故");
            this.save(examAutoEvaluation);
        }
        for (int o = 0; o < lzcPartyList.size(); o++) {
            Office office = lzcPartyList.get(o);
            //公安处名称
            String name = office.getName();
            //公安处id
            String unitId = office.getId();
            //公安处code
            String code = office.getCode();

            Integer number = examAutoEvaluationDao.selectZysc(yearL,yearT, code);
            if (number > 0){
                lzcSum++;
                lzcDetails.append(name).append(",");
            }
        }
        if (lzcSum > 0) {
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setDetails("撞轧牲畜事故");
            examAutoEvaluation.setUnit("柳州处治安支队");
            examAutoEvaluation.setUnitId("160");
            examAutoEvaluation.setFromSys("警综平台");
            examAutoEvaluation.setModel("2020年月度公安局对公安处扣分标准(业务部分26项)");
            examAutoEvaluation.setModelId("aef99f1b42054342ba71c25634d0f9fc");
            examAutoEvaluation.setOption("既有线发生列车撞大牲畜事故的");
            examAutoEvaluation.setOptionId("6c2ccafb76154760aea2510cbb7bc41e");
            examAutoEvaluation.setScore("5");
            examAutoEvaluation.setEvaluationId("f6461092f65243f9837b4a7fd3e46210");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"撞轧牲畜");
            this.summaryStandard(examAutoEvaluation,5.0,lzcDetails + "发生撞轧牲畜事故");
            this.save(examAutoEvaluation);

        }
        for (int o = 0; o < bhcPartyList.size(); o++) {
            Office office = bhcPartyList.get(o);
            //公安处名称
            String name = office.getName();
            //公安处id
            String unitId = office.getId();
            //公安处code
            String code = office.getCode();

            Integer number = examAutoEvaluationDao.selectZysc(yearL,yearT, code);
            if (number > 0){
                bhcSum++;
                bhcDetails.append(name).append(",");
            }
        }
        if(bhcSum > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setDetails(bhcDetails + "发生撞轧牲畜事故");
            examAutoEvaluation.setUnit("北海处治安支队");
            examAutoEvaluation.setUnitId("272");
            examAutoEvaluation.setFromSys("警综平台");
            examAutoEvaluation.setModel("2020年月度公安局对公安处扣分标准(业务部分26项)");
            examAutoEvaluation.setModelId("aef99f1b42054342ba71c25634d0f9fc");
            examAutoEvaluation.setOption("既有线发生列车撞大牲畜事故的");
            examAutoEvaluation.setOptionId("6c2ccafb76154760aea2510cbb7bc41e");
            examAutoEvaluation.setScore("5");
            examAutoEvaluation.setEvaluationId("b309552b4eb64c78b2540c52daa91b7f");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"撞轧牲畜");
            this.summaryStandard(examAutoEvaluation,5.0,bhcDetails + "发生撞轧牲畜事故");
            this.save(examAutoEvaluation);

        }
    }

    /*
     * 警综平台 - 撞轧牲畜
     *
     * 局考处
     *
     * 年度
     * */
    public void jkcJzZyscYear(String year) {

        Map<String,String> map = yearTime(year);
        String yearL = map.get("yearL");
        String yearT = map.get("yearT");

        //公安处
        List<Office> nncPartyList = officeDao.selectChuUnitList("34");
        List<Office> lzcPartyList = officeDao.selectChuUnitList("95");
        List<Office> bhcPartyList = officeDao.selectChuUnitList("156");

        int nncSum = 0;
        int lzcSum = 0;
        int bhcSum = 0;

        StringBuilder nncDetails = new StringBuilder();
        StringBuilder lzcDetails = new StringBuilder();
        StringBuilder bhcDetails = new StringBuilder();

        for (int o = 0; o < nncPartyList.size(); o++) {
            Office office = nncPartyList.get(o);
            //公安处名称
            String name = office.getName();
            //公安处id
            String unitId = office.getId();
            //公安处code
            String code = office.getCode();

            Integer number = examAutoEvaluationDao.selectZysc(yearL,yearT, code);

            if (number > 0) {
                nncSum++;
                nncDetails.append(name).append(",");
            }
        }
        if (nncSum > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("2");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setDetails(nncDetails + "发生撞轧牲畜事故");
            examAutoEvaluation.setUnit("南宁处治安支队");
            examAutoEvaluation.setUnitId("45");
            examAutoEvaluation.setEvaluationId("aab30465f28547a4bdc69fd652ff8a4c");
            examAutoEvaluation.setFromSys("警综平台");
            examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考核扣分标准(业务部分26项)");
            examAutoEvaluation.setModelId("a959d8865ea74bf68cf818adc710c75c");
            examAutoEvaluation.setOption("既有线发生危及行车治安案事件、铁路交通事故、撞大牲畜，经倒查存在法制宣传工作不到位的");
            examAutoEvaluation.setOptionId("2b4919fdcae74ef18a7777dd7e87f8e6");
            examAutoEvaluation.setScore("1");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"撞轧牲畜");
            this.summaryStandard(examAutoEvaluation,1.0,nncDetails + "发生撞轧牲畜事故");
            this.save(examAutoEvaluation);

        }
        for (int o = 0; o < lzcPartyList.size(); o++) {
            Office office = lzcPartyList.get(o);
            //公安处名称
            String name = office.getName();
            //公安处id
            String unitId = office.getId();
            //公安处code
            String code = office.getCode();

            Integer number = examAutoEvaluationDao.selectZysc(yearL,yearT, code);

            if (number > 0) {
                lzcSum++;
                lzcDetails.append(name).append(",");
            }
        }
        if (lzcSum > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("2");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setDetails(lzcDetails + "发生撞轧牲畜事故");
            examAutoEvaluation.setUnit("柳州处治安支队");
            examAutoEvaluation.setUnitId("160");
            examAutoEvaluation.setEvaluationId("f6461092f65243f9837b4a7fd3e46210");
            examAutoEvaluation.setFromSys("警综平台");
            examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考核扣分标准(业务部分26项)");
            examAutoEvaluation.setModelId("a959d8865ea74bf68cf818adc710c75c");
            examAutoEvaluation.setOption("既有线发生危及行车治安案事件、铁路交通事故、撞大牲畜，经倒查存在法制宣传工作不到位的");
            examAutoEvaluation.setOptionId("2b4919fdcae74ef18a7777dd7e87f8e6");
            examAutoEvaluation.setScore("1");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"撞轧牲畜");
            this.summaryStandard(examAutoEvaluation,1.0,lzcDetails + "发生撞轧牲畜事故");
            this.save(examAutoEvaluation);
        }
        for (int o = 0; o < bhcPartyList.size(); o++) {
            Office office = bhcPartyList.get(o);
            //公安处名称
            String name = office.getName();
            //公安处id
            String unitId = office.getId();
            //公安处code
            String code = office.getCode();

            Integer number = examAutoEvaluationDao.selectZysc(yearL,yearT, code);

            if (number > 0) {
               bhcSum++;
               bhcDetails.append(name).append(",");
            }
        }
        if (bhcSum > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("2");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setDetails(bhcDetails + "发生撞轧牲畜事故");
            examAutoEvaluation.setUnit("北海处治安支队");
            examAutoEvaluation.setUnitId("272");
            examAutoEvaluation.setEvaluationId("b309552b4eb64c78b2540c52daa91b7f");
            examAutoEvaluation.setFromSys("警综平台");
            examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考核扣分标准(业务部分26项)");
            examAutoEvaluation.setModelId("a959d8865ea74bf68cf818adc710c75c");
            examAutoEvaluation.setOption("既有线发生危及行车治安案事件、铁路交通事故、撞大牲畜，经倒查存在法制宣传工作不到位的");
            examAutoEvaluation.setOptionId("2b4919fdcae74ef18a7777dd7e87f8e6");
            examAutoEvaluation.setScore("1");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"撞轧牲畜");
            this.summaryStandard(examAutoEvaluation,1.0,bhcDetails + "发生撞轧牲畜事故");
            this.save(examAutoEvaluation);
        }
    }

    /*
     * 警综平台 - 撞轧牲畜
     *
     * 局考局
     *
     * 月度
     * */
    public void jkjJzZysc(String checkTime) {

        String year = checkTime.substring(0, 4);

        String month = checkTime.substring(checkTime.length() - 2);

        Map<String, String> time = monthTime(checkTime);
        String yearL = time.get("yearL");
        String yearT = time.get("yearT");

        List<Office> jjgPartyList = examAutoEvaluationDao.selectJjgUnit();

        for (int i = 0; i < jjgPartyList.size(); i++) {
            Office office = jjgPartyList.get(i);
            String name = office.getName();
            String code = office.getCode();
            String idNumber = office.getId();

            Integer number = examAutoEvaluationDao.selectZyscGt(yearL,yearT,code);

                if (number > 0) {
                    for (int n = 0; n < number; n++) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("2");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setDetails("撞轧牲畜事故");
                        examAutoEvaluation.setUnit(name);
                        examAutoEvaluation.setUnitId(idNumber);
                        examAutoEvaluation.setFromSys("警综平台");
                        examAutoEvaluation.setModel("2020年公安局对局机关各处室直属支队月度绩效考核扣分标准");
                        examAutoEvaluation.setModelId("abc515db7d16435f8a90705cabcc75bb");
                        examAutoEvaluation.setOption("高铁线路发生铁路交通事故、撞大牲畜的");
                        examAutoEvaluation.setOptionId("6e655f70a08f4aa992fee43107e96e84");
                        examAutoEvaluation.setScore("5");
                        examAutoEvaluation.setEvaluationId(userDao.selectUserId(office.getCode()));
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"撞轧牲畜");
                        this.summaryStandard(examAutoEvaluation,5.0,"撞轧牲畜事故");
                        this.save(examAutoEvaluation);

                }
            }
        }
    }

    /*
     * 警综平台 - 撞轧牲畜
     *
     * 局考局
     *
     * 年度
     * */
    public void jkjJzZyscYear(String year) {

        List<Office> jjgPartyList = examAutoEvaluationDao.selectJjgUnit();

        Map<String,String> map = yearTime(year);
        String yearL = map.get("yearL");
        String yearT = map.get("yearT");
        for (int i = 0; i < jjgPartyList.size(); i++) {
            Office office = jjgPartyList.get(i);
            String name = office.getName();
            String code = office.getCode();
            String idNumber = office.getId();
            Integer number = examAutoEvaluationDao.selectZyscGt(yearL,yearT, code);

                if (number > 0) {
                    for (int n = 0; n < number; n++) {
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("2");
                        examAutoEvaluation.setPeriod("2");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setDetails("撞轧牲畜事故");
                        examAutoEvaluation.setUnit(name);
                        examAutoEvaluation.setUnitId(idNumber);
                        examAutoEvaluation.setFromSys("警综平台");
                        examAutoEvaluation.setModel("2020年公安局对局机关各处室直属支队年度绩效考核扣分标准");
                        examAutoEvaluation.setModelId("db6adcddf3ec4015bd11e542fe6ce985");
                        examAutoEvaluation.setOption("高铁线路发生铁路交通事故、撞大牲畜的");
                        examAutoEvaluation.setOptionId("8419ed63348f461098f067cc93cd82a7");
                        examAutoEvaluation.setScore("2");
                        examAutoEvaluation.setEvaluationId(userDao.selectUserId(office.getCode()));
                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"撞轧牲畜");
                        this.summaryStandard(examAutoEvaluation,2.0,"撞轧牲畜事故");
                        this.save(examAutoEvaluation);

                }
            }
        }
    }

    /**
     * 警综平台--既有线发生危及行车安全刑事案件3日内未侦破的，扣5分。
     * <p>
     * -年度  局考处
     *
     * @param year
     */
    public void jzptjkcYear(String year) {
        //公安处
        //List<Office> officeList = new ArrayList<>();
        //officeList = officeDao.selectChuUnit();
        Map<String,String> map = yearTime(year);
        String yearL = map.get("yearL");
        String yearT = map.get("yearT");
        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
        examAutoEvaluation.setType("1");
        examAutoEvaluation.setEvalType("1");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
        examAutoEvaluation.setPeriod("2");
        examAutoEvaluation.setYear(year);
        examAutoEvaluation.setAssess("南宁局刑事犯罪侦查处");
        examAutoEvaluation.setAssessId("b90bd1a9cc5d4f3496947708697aad43");
        examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考核扣分标准(业务部分26项)");
        examAutoEvaluation.setModelId("a959d8865ea74bf68cf818adc710c75c");
        examAutoEvaluation.setOption("既有线发生危及行车安全刑事案件3日内未侦破的");
        examAutoEvaluation.setOptionId("a0f39ea70d634ae9832d25a5a3e6b5f1");
        examAutoEvaluation.setScore("5");
        examAutoEvaluation.setFromSys("警综平台");//数据来源
        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"既有线危及行车安全");
        // details  unit unitId 被考评对象id
         //获取处下所有单位
        //获取处下所有单位
        List<Office> nncUnitList = officeDao.selectChuUnitList("34");
        int nncNum = 0;
        StringBuffer nncDetail = null;
        for (int o = 0; o < nncUnitList.size(); o++) {
            Office office = nncUnitList.get(o);
            String code = office.getCode();
            String unit = office.getName();
            String unitId = office.getId();
            List<Map<String, String>> selectPoAnIncident = examAutoEvaluationDao.selectPoAnIncident2(code, yearL,yearT);
            String userId = examAutoEvaluationDao.findUserId(code);
            for (int i = 0; i < selectPoAnIncident.size(); i++) {
                String cjDate = selectPoAnIncident.get(i).get("cjsj");//获取的格式 2020-09-23 17:36:22.000
                String paDate = selectPoAnIncident.get(i).get("parq");//破案日期
                String sfja = selectPoAnIncident.get(i).get("sfja");//是否结案
                String pajk = selectPoAnIncident.get(i).get("pajk");//破案简括
                SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
                Date parseCjDate = null;
                Date parsePaDate = null;
                if(StringUtils.isNotBlank(cjDate)){
                    try {
                        parseCjDate = format.parse(cjDate);
                    } catch (ParseException e) {
                        parseCjDate = new Date();
                        System.out.println("辖区内既有线发生危及行车安全刑事案件3日内未侦破-创建时间转换错误");
                    }
                    try {
                        parsePaDate = format.parse(paDate);
                    } catch (ParseException e) {
                        parsePaDate = new Date();
                        System.out.println("辖区内既有线发生危及行车安全刑事案件3日内未侦破-破案时间转换错误");
                    }
                    long cjTime = parseCjDate.getTime();
                    long paTime = parsePaDate.getTime();
                    Long MSNum = paTime - cjTime;
                    Long minute = (MSNum / 1000) / 60;
                    Long dayNum = (minute / 60) / 24;
                    if (dayNum > 3) {
                        nncNum++;
                        if(nncDetail==null){
                            if(StringUtils.isNotBlank(paDate)){
                                nncDetail = new StringBuffer(nncNum+"."+office.getName()+"于"+cjDate+"，"+pajk+"，破案时间:"+paDate);
                            }else{
                                nncDetail = new StringBuffer(nncNum+"."+office.getName()+"于"+cjDate+"，"+pajk+"，破案时间:系统未记录");
                            }
                        }else{
                            if(StringUtils.isNotBlank(paDate)){
                                nncDetail.append(nncNum+"."+office.getName()+"于"+cjDate+"，"+pajk+"，破案时间:"+paDate);
                            }else{
                                nncDetail.append(nncNum+"."+office.getName()+"于"+cjDate+"，"+pajk+"，破案时间:系统未记录");
                            }
                        }
                    }
                }

            }
        }
        if(nncNum>0){
            examAutoEvaluation.setUnit("南宁处刑警支队");
            examAutoEvaluation.setUnitId("52");
            examAutoEvaluation.setEvaluationId("e4902c84680a4870bb4d27010ab9bd1d");
            examAutoEvaluation.setDetails(nncDetail.toString());
            examAutoEvaluation.setId("");
            examAutoEvaluation.setIsNewRecord(false);
            this.save(examAutoEvaluation);
        }
        List<Office> lzcUnitList = officeDao.selectChuUnitList("95");
        int lzcNum = 0;
        StringBuffer lzcDetail = null;
        for (int o = 0; o < lzcUnitList.size(); o++) {
            Office office = lzcUnitList.get(o);
            String code = office.getCode();
            String unit = office.getName();
            String unitId = office.getId();
//            List<Map<String, String>> selectPoAnIncident = examAutoEvaluationDao.selectPoAnIncidentMonth(code, checkTime);
            List<Map<String, String>> selectPoAnIncident = examAutoEvaluationDao.selectPoAnIncident2(code, yearL,yearT);
            String userId = examAutoEvaluationDao.findUserId(code);
            for (int i = 0; i < selectPoAnIncident.size(); i++) {
                String cjDate = selectPoAnIncident.get(i).get("cjsj");//获取的格式 2020-09-23 17:36:22.000
                String paDate = selectPoAnIncident.get(i).get("parq");//破案日期
                String sfja = selectPoAnIncident.get(i).get("sfja");//是否结案
                String pajk = selectPoAnIncident.get(i).get("pajk");//破案简括
                SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
                Date parseCjDate = null;
                Date parsePaDate = null;
                if(StringUtils.isNotBlank(cjDate)){
                    try {
                        parseCjDate = format.parse(cjDate);
                    } catch (ParseException e) {
                        parseCjDate = new Date();
                        System.out.println("辖区内既有线发生危及行车安全刑事案件3日内未侦破-创建时间转换错误");
                    }
                    try {
                        parsePaDate = format.parse(paDate);
                    } catch (ParseException e) {
                        parsePaDate = new Date();
                        System.out.println("辖区内既有线发生危及行车安全刑事案件3日内未侦破-破案时间转换错误");
                    }
                    long cjTime = parseCjDate.getTime();
                    long paTime = parsePaDate.getTime();
                    Long MSNum = paTime - cjTime;
                    Long minute = (MSNum / 1000) / 60;
                    Long dayNum = (minute / 60) / 24;
                    if (dayNum > 3) {
                        lzcNum++;
                        if(lzcDetail==null){
                            if(StringUtils.isNotBlank(paDate)){
                                lzcDetail = new StringBuffer(lzcNum+"."+office.getName()+"于"+cjDate+"，"+pajk+"，破案时间:"+paDate);
                            }else{
                                lzcDetail = new StringBuffer(lzcNum+"."+office.getName()+"于"+cjDate+"，"+pajk+"，破案时间:系统未记录");
                            }
                        }else{
                            if(StringUtils.isNotBlank(paDate)){
                                lzcDetail.append(lzcNum+"."+office.getName()+"于"+cjDate+"，"+pajk+"，破案时间:"+paDate);
                            }else{
                                lzcDetail.append(lzcNum+"."+office.getName()+"于"+cjDate+"，"+pajk+"，破案时间:系统未记录");
                            }
                        }
                    }
                }

            }
        }
        if(lzcNum>0){
            examAutoEvaluation.setUnit("柳州处刑警支队");
            examAutoEvaluation.setUnitId("167");
            examAutoEvaluation.setEvaluationId("940f25fb26da4d5cad150bc875c0f1db");
            examAutoEvaluation.setDetails(lzcDetail.toString());
            examAutoEvaluation.setId("");
            examAutoEvaluation.setIsNewRecord(false);
            this.save(examAutoEvaluation);
        }
        List<Office> bhcUnitList = officeDao.selectChuUnitList("156");
        int bhcNum = 0;
        StringBuffer bhcDetail = null;
        for (int o = 0; o < bhcUnitList.size(); o++) {
            Office office = bhcUnitList.get(o);
            String code = office.getCode();
            String unit = office.getName();
            String unitId = office.getId();
//            List<Map<String, String>> selectPoAnIncident = examAutoEvaluationDao.selectPoAnIncidentMonth(code, checkTime);
            List<Map<String, String>> selectPoAnIncident = examAutoEvaluationDao.selectPoAnIncident2(code, yearL,yearT);
            String userId = examAutoEvaluationDao.findUserId(code);
            for (int i = 0; i < selectPoAnIncident.size(); i++) {
                String cjDate = selectPoAnIncident.get(i).get("cjsj");//获取的格式 2020-09-23 17:36:22.000
                String paDate = selectPoAnIncident.get(i).get("parq");//破案日期
                String sfja = selectPoAnIncident.get(i).get("sfja");//是否结案
                String pajk = selectPoAnIncident.get(i).get("pajk");//破案简括
                SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
                Date parseCjDate = null;
                Date parsePaDate = null;
                if(StringUtils.isNotBlank(cjDate)){
                    try {
                        parseCjDate = format.parse(cjDate);
                    } catch (ParseException e) {
                        parseCjDate = new Date();
                        System.out.println("辖区内既有线发生危及行车安全刑事案件3日内未侦破-创建时间转换错误");
                    }
                    try {
                        parsePaDate = format.parse(paDate);
                    } catch (ParseException e) {
                        parsePaDate = new Date();
                        System.out.println("辖区内既有线发生危及行车安全刑事案件3日内未侦破-破案时间转换错误");
                    }
                    long cjTime = parseCjDate.getTime();
                    long paTime = parsePaDate.getTime();
                    Long MSNum = paTime - cjTime;
                    Long minute = (MSNum / 1000) / 60;
                    Long dayNum = (minute / 60) / 24;
                    if (dayNum > 3) {
                        bhcNum++;
                        if(bhcDetail==null){
                            if(StringUtils.isNotBlank(paDate)){
                                bhcDetail = new StringBuffer(bhcNum+"."+office.getName()+"于"+cjDate+"，"+pajk+"，破案时间:"+paDate);
                            }else{
                                bhcDetail = new StringBuffer(bhcNum+"."+office.getName()+"于"+cjDate+"，"+pajk+"，破案时间:系统未记录");
                            }
                        }else{
                            if(StringUtils.isNotBlank(paDate)){
                                bhcDetail.append(bhcNum+"."+office.getName()+"于"+cjDate+"，"+pajk+"，破案时间:"+paDate);
                            }else{
                                bhcDetail.append(bhcNum+"."+office.getName()+"于"+cjDate+"，"+pajk+"，破案时间:系统未记录");
                            }
                        }
                    }
                }

            }
        }
        if(bhcNum>0){
            examAutoEvaluation.setUnit("北海处刑警支队");
            examAutoEvaluation.setUnitId("277");
            examAutoEvaluation.setEvaluationId("5caeea9690fc42ac846d785cf3418309");
            examAutoEvaluation.setDetails(bhcDetail.toString());
            examAutoEvaluation.setId("");
            examAutoEvaluation.setIsNewRecord(false);
            this.save(examAutoEvaluation);
        }
    }


    /**
     * 警综平台--既有线发生危及行车安全刑事案件3日内未侦破的,扣10分。
     * <p>
     * -月度  局考处
     *
     * @param checkTime
     */
    public void jzptjkcMonth(String checkTime) {
        String year = checkTime.substring(0, 4);
        String month = checkTime.substring(checkTime.length() - 2);
        //公安处
       /* List<Office> officeList = new ArrayList<>();
        officeList = officeDao.selectChuUnit();

        for (int o = 0; o < officeList.size(); o++) {
            Office office = officeList.get(o);
            String code = office.getCode();
            String unit = office.getName();
            String unitId = office.getId();
            List<Map<String, String>> selectPoAnIncident = examAutoEvaluationDao.selectPoAnIncidentMonth(code, checkTime);
            String userId = examAutoEvaluationDao.findUserId(code);
            for (int i = 0; i < selectPoAnIncident.size(); i++) {
                String cjDate = selectPoAnIncident.get(i).get("cjsj");//获取的格式 2020-09-23 17:36:22.000
                String paDate = selectPoAnIncident.get(i).get("parq");
                SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
                Date parseCjDate = null;
                Date parsePaDate = null;
                try {
                    parseCjDate = format.parse(cjDate);
                } catch (ParseException e) {
                    parseCjDate = new Date();
                    System.out.println("辖区内既有线发生危及行车安全刑事案件3日内未侦破-创建时间转换错误");
                }
                try {
                    parsePaDate = format.parse(paDate);
                } catch (ParseException e) {
                    parsePaDate = new Date();
                    System.out.println("辖区内既有线发生危及行车安全刑事案件3日内未侦破-破案时间转换错误");
                }
                long cjTime = parseCjDate.getTime();
                long paTime = parsePaDate.getTime();
                Long MSNum = paTime - cjTime;
                Long minute = (MSNum / 1000) / 60;
                Long dayNum = (minute / 60) / 60;
                if (dayNum > 3) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("1");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails("既有线发生危及行车安全刑事案件3日内未侦破的,扣10分。");
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(unitId);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("2020年月度公安局对公安处扣分标准(业务部分26项)");
                    examAutoEvaluation.setModelId("aef99f1b42054342ba71c25634d0f9fc");
                    examAutoEvaluation.setOption("既有线发生危及行车安全刑事案件3日内未侦破的");
                    examAutoEvaluation.setOptionId("f7075170580541a6bddf739cbeda7a04");
                    examAutoEvaluation.setScore("10");
                    examAutoEvaluation.setEvaluationId(userId);
                    examAutoEvaluation.setFromSys("警综平台");//数据来源
                    this.save(examAutoEvaluation);
                }

            }

        }*/
        Map<String, String> map = this.monthTime(checkTime);
        Map<String, String> time = monthTime(checkTime);
        String yearL = time.get("yearL");
        String yearT = time.get("yearT");
        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
        examAutoEvaluation.setType("1");
        examAutoEvaluation.setEvalType("1");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
        examAutoEvaluation.setPeriod("1");
        examAutoEvaluation.setMonth(month);
        examAutoEvaluation.setYear(year);
        examAutoEvaluation.setAssess("");
        examAutoEvaluation.setAssessId("");
        examAutoEvaluation.setModel("2020年月度公安局对公安处扣分标准(业务部分26项)");
        examAutoEvaluation.setModelId("aef99f1b42054342ba71c25634d0f9fc");
        examAutoEvaluation.setOption("既有线发生危及行车安全刑事案件3日内未侦破的");
        examAutoEvaluation.setOptionId("f7075170580541a6bddf739cbeda7a04");
        examAutoEvaluation.setScore("10");
        examAutoEvaluation.setFromSys("警综平台");//数据来源

        //获取处下所有单位
        List<Office> nncUnitList = officeDao.selectChuUnitList("34");
        int nncNum = 0;
        StringBuffer nncDetail = null;
        for (int o = 0; o < nncUnitList.size(); o++) {
            Office office = nncUnitList.get(o);
            String code = office.getCode();
            String unit = office.getName();
            String unitId = office.getId();
            List<Map<String, String>> selectPoAnIncident = examAutoEvaluationDao.selectPoAnIncident2(code, yearL,yearT);
            String userId = examAutoEvaluationDao.findUserId(code);
            for (int i = 0; i < selectPoAnIncident.size(); i++) {
                String cjDate = selectPoAnIncident.get(i).get("cjsj");//获取的格式 2020-09-23 17:36:22.000
                String paDate = selectPoAnIncident.get(i).get("parq");//破案日期
                String sfja = selectPoAnIncident.get(i).get("sfja");//是否结案
                String pajk = selectPoAnIncident.get(i).get("pajk");//破案简括
                SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
                Date parseCjDate = null;
                Date parsePaDate = null;
                if(StringUtils.isNotBlank(cjDate)){
                    try {
                        parseCjDate = format.parse(cjDate);
                    } catch (ParseException e) {
                        parseCjDate = new Date();
                        System.out.println("辖区内既有线发生危及行车安全刑事案件3日内未侦破-创建时间转换错误");
                    }
                    try {
                        parsePaDate = format.parse(paDate);
                    } catch (ParseException e) {
                        parsePaDate = new Date();
                        System.out.println("辖区内既有线发生危及行车安全刑事案件3日内未侦破-破案时间转换错误");
                    }
                    long cjTime = parseCjDate.getTime();
                    long paTime = parsePaDate.getTime();
                    Long MSNum = paTime - cjTime;
                    Long minute = (MSNum / 1000) / 60;
                    Long dayNum = (minute / 60) / 24;
                    if (dayNum > 3) {
                        nncNum++;
                        if(nncDetail==null){
                            if(StringUtils.isNotBlank(paDate)){
                                nncDetail = new StringBuffer(nncNum+"."+office.getName()+"于"+cjDate+"，"+pajk+"，破案时间:"+paDate);
                            }else{
                                nncDetail = new StringBuffer(nncNum+"."+office.getName()+"于"+cjDate+"，"+pajk+"，破案时间:系统未记录");
                            }
                        }else{
                            if(StringUtils.isNotBlank(paDate)){
                                nncDetail.append(nncNum+"."+office.getName()+"于"+cjDate+"，"+pajk+"，破案时间:"+paDate);
                            }else{
                                nncDetail.append(nncNum+"."+office.getName()+"于"+cjDate+"，"+pajk+"，破案时间:系统未记录");
                            }
                        }
                    }
                }

            }
        }
        if(nncNum>0){
            examAutoEvaluation.setUnit("南宁处刑警支队");
            examAutoEvaluation.setUnitId("52");
            examAutoEvaluation.setEvaluationId("e4902c84680a4870bb4d27010ab9bd1d");
            examAutoEvaluation.setDetails(nncDetail.toString());
            examAutoEvaluation.setId("");
            examAutoEvaluation.setIsNewRecord(false);
            this.save(examAutoEvaluation);
        }
        List<Office> lzcUnitList = officeDao.selectChuUnitList("95");
        int lzcNum = 0;
        StringBuffer lzcDetail = null;
        for (int o = 0; o < lzcUnitList.size(); o++) {
            Office office = lzcUnitList.get(o);
            String code = office.getCode();
            String unit = office.getName();
            String unitId = office.getId();
//            List<Map<String, String>> selectPoAnIncident = examAutoEvaluationDao.selectPoAnIncidentMonth(code, checkTime);
            List<Map<String, String>> selectPoAnIncident = examAutoEvaluationDao.selectPoAnIncident2(code, yearL,yearT);
            String userId = examAutoEvaluationDao.findUserId(code);
            for (int i = 0; i < selectPoAnIncident.size(); i++) {
                String cjDate = selectPoAnIncident.get(i).get("cjsj");//获取的格式 2020-09-23 17:36:22.000
                String paDate = selectPoAnIncident.get(i).get("parq");//破案日期
                String sfja = selectPoAnIncident.get(i).get("sfja");//是否结案
                String pajk = selectPoAnIncident.get(i).get("pajk");//破案简括
                SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
                Date parseCjDate = null;
                Date parsePaDate = null;
                if(StringUtils.isNotBlank(cjDate)){
                    try {
                        parseCjDate = format.parse(cjDate);
                    } catch (ParseException e) {
                        parseCjDate = new Date();
                        System.out.println("辖区内既有线发生危及行车安全刑事案件3日内未侦破-创建时间转换错误");
                    }
                    try {
                        parsePaDate = format.parse(paDate);
                    } catch (ParseException e) {
                        parsePaDate = new Date();
                        System.out.println("辖区内既有线发生危及行车安全刑事案件3日内未侦破-破案时间转换错误");
                    }
                    long cjTime = parseCjDate.getTime();
                    long paTime = parsePaDate.getTime();
                    Long MSNum = paTime - cjTime;
                    Long minute = (MSNum / 1000) / 60;
                    Long dayNum = (minute / 60) / 24;
                    if (dayNum > 3) {
                        lzcNum++;
                        if(lzcDetail==null){
                            if(StringUtils.isNotBlank(paDate)){
                                lzcDetail = new StringBuffer(lzcNum+"."+office.getName()+"于"+cjDate+"，"+pajk+"，破案时间:"+paDate);
                            }else{
                                lzcDetail = new StringBuffer(lzcNum+"."+office.getName()+"于"+cjDate+"，"+pajk+"，破案时间:系统未记录");
                            }
                        }else{
                            if(StringUtils.isNotBlank(paDate)){
                                lzcDetail.append(lzcNum+"."+office.getName()+"于"+cjDate+"，"+pajk+"，破案时间:"+paDate);
                            }else{
                                lzcDetail.append(lzcNum+"."+office.getName()+"于"+cjDate+"，"+pajk+"，破案时间:系统未记录");
                            }
                        }
                    }
                }

            }
        }
        if(lzcNum>0){
            examAutoEvaluation.setUnit("柳州处刑警支队");
            examAutoEvaluation.setUnitId("167");
            examAutoEvaluation.setEvaluationId("940f25fb26da4d5cad150bc875c0f1db");
            examAutoEvaluation.setDetails(lzcDetail.toString());
            examAutoEvaluation.setId("");
            examAutoEvaluation.setIsNewRecord(false);
            this.save(examAutoEvaluation);
        }
        List<Office> bhcUnitList = officeDao.selectChuUnitList("156");
        int bhcNum = 0;
        StringBuffer bhcDetail = null;
        for (int o = 0; o < bhcUnitList.size(); o++) {
            Office office = bhcUnitList.get(o);
            String code = office.getCode();
            String unit = office.getName();
            String unitId = office.getId();
//            List<Map<String, String>> selectPoAnIncident = examAutoEvaluationDao.selectPoAnIncidentMonth(code, checkTime);
            List<Map<String, String>> selectPoAnIncident = examAutoEvaluationDao.selectPoAnIncident2(code, yearL,yearT);
            String userId = examAutoEvaluationDao.findUserId(code);
            for (int i = 0; i < selectPoAnIncident.size(); i++) {
                String cjDate = selectPoAnIncident.get(i).get("cjsj");//获取的格式 2020-09-23 17:36:22.000
                String paDate = selectPoAnIncident.get(i).get("parq");//破案日期
                String sfja = selectPoAnIncident.get(i).get("sfja");//是否结案
                String pajk = selectPoAnIncident.get(i).get("pajk");//破案简括
                SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
                Date parseCjDate = null;
                Date parsePaDate = null;
                if(StringUtils.isNotBlank(cjDate)){
                    try {
                        parseCjDate = format.parse(cjDate);
                    } catch (ParseException e) {
                        parseCjDate = new Date();
                        System.out.println("辖区内既有线发生危及行车安全刑事案件3日内未侦破-创建时间转换错误");
                    }
                    try {
                        parsePaDate = format.parse(paDate);
                    } catch (ParseException e) {
                        parsePaDate = new Date();
                        System.out.println("辖区内既有线发生危及行车安全刑事案件3日内未侦破-破案时间转换错误");
                    }
                    long cjTime = parseCjDate.getTime();
                    long paTime = parsePaDate.getTime();
                    Long MSNum = paTime - cjTime;
                    Long minute = (MSNum / 1000) / 60;
                    Long dayNum = (minute / 60) / 24;
                    if (dayNum > 3) {
                        bhcNum++;
                        if(bhcDetail==null){
                            if(StringUtils.isNotBlank(paDate)){
                                bhcDetail = new StringBuffer(bhcNum+"."+office.getName()+"于"+cjDate+"，"+pajk+"，破案时间:"+paDate);
                            }else{
                                bhcDetail = new StringBuffer(bhcNum+"."+office.getName()+"于"+cjDate+"，"+pajk+"，破案时间:系统未记录");
                            }
                        }else{
                            if(StringUtils.isNotBlank(paDate)){
                                bhcDetail.append(bhcNum+"."+office.getName()+"于"+cjDate+"，"+pajk+"，破案时间:"+paDate);
                            }else{
                                bhcDetail.append(bhcNum+"."+office.getName()+"于"+cjDate+"，"+pajk+"，破案时间:系统未记录");
                            }
                        }
                    }
                }

            }
        }
        if(bhcNum>0){
            examAutoEvaluation.setUnit("北海处刑警支队");
            examAutoEvaluation.setUnitId("277");
            examAutoEvaluation.setEvaluationId("5caeea9690fc42ac846d785cf3418309");
            examAutoEvaluation.setDetails(bhcDetail.toString());
            examAutoEvaluation.setId("");
            examAutoEvaluation.setIsNewRecord(false);
            this.save(examAutoEvaluation);
        }
    }

    /**
         * 警综平台--辖区内既有线发生危及行车安全刑事案件3日内未侦破的,扣3分。
     * <p>
     * -月度  出考派出所
     *
     * @param checkTime
     */
    public void jzptckpcsMonth(String checkTime) {
        String year = checkTime.substring(0, 4);
        String month = checkTime.substring(checkTime.length() - 2);

        Map<String, String> time = monthTime(checkTime);
        String yearL = time.get("yearL");
        String yearT = time.get("yearT");

        //查所有的派出所
        List<Map<String, Object>> allpcs = examAutoEvaluationDao.findAllpcs();
        int nncNum = 0;
        StringBuffer nncDetail = null;
        int lzcNum = 0;
        StringBuffer lzcDetail = null;
        int bhcNum = 0;
        StringBuffer bhcDetail = null;
        for (int i = 0; i < allpcs.size(); i++) {
            String parentId = (String) allpcs.get(i).get("parent_id");
            if (!parentId.equals("") && parentId.equals("95")) {//柳州处
                String code = (String) allpcs.get(i).get("code");
                String unit = (String) allpcs.get(i).get("name");
                List<Map<String, String>> selectPoAnIncident = examAutoEvaluationDao.selectPoAnIncidentMonth(code, yearL,yearT);
                String userId = examAutoEvaluationDao.findUserId(code);
                if(selectPoAnIncident.size() > 0 && selectPoAnIncident != null) {
                    for (int j = 0; j < selectPoAnIncident.size(); j++) {
                        String cjDate = selectPoAnIncident.get(j).get("cjsj");//获取的格式 2020-09-23 17:36:22.000
                        String paDate = selectPoAnIncident.get(j).get("parq");
                        String pajk = selectPoAnIncident.get(j).get("pajk");//破案简括
                        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
                        Date parseCjDate = null;
                        Date parsePaDate = null;
                        try {
                            parseCjDate = format.parse(cjDate);
                        } catch (ParseException e) {
                            parseCjDate = new Date();
                            System.out.println("辖区内既有线发生危及行车安全刑事案件3日内未侦破-创建时间转换错误");
                        }
                        try {
                            parsePaDate = format.parse(paDate);
                        } catch (ParseException e) {
                            parsePaDate = new Date();
                            System.out.println("辖区内既有线发生危及行车安全刑事案件3日内未侦破-破案时间转换错误");
                        }
                        long cjTime = parseCjDate.getTime();
                        long paTime = parsePaDate.getTime();
                        Long MSNum = paTime - cjTime;
                        Long minute = (MSNum / 1000) / 60;
                        Long dayNum = (minute / 60) / 24;

                        if (dayNum > 3) {
                            lzcNum++;
                            if (lzcDetail == null) {
                                if (StringUtils.isNotBlank(paDate)) {
                                    lzcDetail = new StringBuffer(lzcNum+"."+unit + "于" + cjDate + "，" + pajk + "破案时间:" + paDate);
                                } else {
                                    lzcDetail = new StringBuffer(lzcNum+"."+unit + "于" + cjDate + "，" + pajk + "破案时间:系统未记录");
                                }
                            } else {
                                if (StringUtils.isNotBlank(paDate)) {
                                    lzcDetail.append(lzcNum+"." + unit + "于" + cjDate + "，" + pajk + "破案时间:" + paDate);
                                } else {
                                    lzcDetail.append(lzcNum+"." + unit + "于" + cjDate + "，" + pajk + "破案时间:系统未记录");
                                }
                            }
                        }
                    }
                }
            }
            if (!parentId.equals("") && parentId.equals("34")) {//南宁处
                String code = (String) allpcs.get(i).get("code");
                String unit = (String) allpcs.get(i).get("name");
                List<Map<String, String>> selectPoAnIncident = examAutoEvaluationDao.selectPoAnIncidentMonth(code, yearL,yearT);
                String userId = examAutoEvaluationDao.findUserId(code);
                if (selectPoAnIncident.size() > 0 && selectPoAnIncident != null) {
                    for (int j = 0; j < selectPoAnIncident.size(); j++) {

                        /*Map<String, String> map = selectPoAnIncident.get(j);
                        String cjDate = map.get("cjsj");//获取的格式 2020-09-23 17:36:22.000*/
                        String cjDate = selectPoAnIncident.get(j).get("cjsj");//获取的格式 2020-09-23 17:36:22.000
                        String pajk = selectPoAnIncident.get(j).get("pajk");//破案简括
                        String paDate = selectPoAnIncident.get(j).get("parq");
                        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
                        Date parseCjDate = null;
                        Date parsePaDate = null;
                        try {
                            parseCjDate = format.parse(cjDate);
                        } catch (ParseException e) {
                            parseCjDate = new Date();
                            System.out.println("辖区内既有线发生危及行车安全刑事案件3日内未侦破-创建时间转换错误");
                        }
                        try {
                            parsePaDate = format.parse(paDate);
                        } catch (ParseException e) {
                            parsePaDate = new Date();
                            System.out.println("辖区内既有线发生危及行车安全刑事案件3日内未侦破-破案时间转换错误");
                        }
                        long cjTime = parseCjDate.getTime();
                        long paTime = parsePaDate.getTime();
                        long MSNum = paTime - cjTime;
                        Long minute = (MSNum / 1000) / 60;
                        Long dayNum = (minute / 60) / 24;

                        if (dayNum > 3) {
                            nncNum++;
                            if(nncDetail==null){
                                if(StringUtils.isNotBlank(paDate)){
                                    nncDetail = new StringBuffer(nncNum+"."+unit+"于"+cjDate+"，"+pajk+"破案时间:"+paDate);
                                }else{
                                    nncDetail = new StringBuffer(nncNum+"."+unit+"于"+cjDate+"，"+pajk+"破案时间:系统未记录");
                                }
                            }else{
                                if(StringUtils.isNotBlank(paDate)){
                                    nncDetail.append(nncNum+"."+unit+"于"+cjDate+"，"+pajk+"破案时间:"+paDate);
                                }else{
                                    nncDetail.append(nncNum+"."+unit+"于"+cjDate+"，"+pajk+"破案时间:系统未记录");
                                }
                            }
                        }
                    }
                }
            }
            if (!parentId.equals("") && parentId.equals("156")) {//北海处
                String code = (String) allpcs.get(i).get("code");
                String unit = (String) allpcs.get(i).get("name");
                List<Map<String, String>> selectPoAnIncident = examAutoEvaluationDao.selectPoAnIncidentMonth(code, yearL,yearT);
                String userId = examAutoEvaluationDao.findUserId(code);
                if(selectPoAnIncident.size() > 0 && selectPoAnIncident != null) {
                    for (int j = 0; j < selectPoAnIncident.size(); j++) {
                        String cjDate = selectPoAnIncident.get(j).get("cjsj");//获取的格式 2020-09-23 17:36:22.000
                        String paDate = selectPoAnIncident.get(j).get("parq");
                        String pajk = selectPoAnIncident.get(j).get("pajk");//破案简括
                        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
                        Date parseCjDate = null;
                        Date parsePaDate = null;
                        try {
                            parseCjDate = format.parse(cjDate);
                        } catch (ParseException e) {
                            parseCjDate = new Date();
                            System.out.println("辖区内既有线发生危及行车安全刑事案件3日内未侦破-创建时间转换错误");
                        }
                        try {
                            parsePaDate = format.parse(paDate);
                        } catch (ParseException e) {
                            parsePaDate = new Date();
                            System.out.println("辖区内既有线发生危及行车安全刑事案件3日内未侦破-破案时间转换错误");
                        }
                        long cjTime = parseCjDate.getTime();
                        long paTime = parsePaDate.getTime();
                        Long MSNum = paTime - cjTime;
                        Long minute = (MSNum / 1000) / 60;
                        Long dayNum = (minute / 60) / 24;
                        if (dayNum > 3) {
                            bhcNum++;
                            if (bhcDetail == null) {
                                if (StringUtils.isNotBlank(paDate)) {
                                    bhcDetail = new StringBuffer(bhcNum+"."+unit + "于" + cjDate + "，" + pajk + "破案时间:" + paDate);
                                } else {
                                    bhcDetail = new StringBuffer(bhcNum+"."+unit+"于"+cjDate+"，"+ pajk + "破案时间:系统未记录");
                                }
                            } else {
                                if (StringUtils.isNotBlank(paDate)) {
                                    bhcDetail.append(bhcNum+"."+unit + "于" + cjDate + "，" + pajk + "破案时间:" + paDate);
                                } else {
                                    bhcDetail.append(bhcNum+"."+unit + "于" + cjDate + "，" + pajk + "破案时间:系统未记录");
                                }
                            }
                        }
                    }
                }
            }
        }
        if(lzcNum>0) {
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("3");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setAssess("");
            examAutoEvaluation.setAssessId("");
            examAutoEvaluation.setModel("柳州处对派出所2020年月度绩效考核扣分标准（业务扣分项目）");
            examAutoEvaluation.setModelId("5ce30118b21549d2a7d4628f72f7f3c6");
            examAutoEvaluation.setOption("既有线发生危及行车安全刑事案件经工作未侦破的，或高铁线发生危及行车安全刑事案件经工作未侦破的");
            examAutoEvaluation.setOptionId("f93f330f5f6b4907aa6fa53bb680cbf8");
            examAutoEvaluation.setScore("3");
            examAutoEvaluation.setDetails(lzcDetail.toString());
            examAutoEvaluation.setUnit("柳州处刑警支队");
            examAutoEvaluation.setUnitId("167");
            examAutoEvaluation.setEvaluationId("940f25fb26da4d5cad150bc875c0f1db");
            examAutoEvaluation.setId("");
            examAutoEvaluation.setIsNewRecord(false);
            examAutoEvaluation.setFromSys("警综平台");//数据来源
            this.save(examAutoEvaluation);
        }
        if(nncNum>0) {
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("3");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setAssess("");
            examAutoEvaluation.setAssessId("");
            examAutoEvaluation.setModel("2020年月度南宁公安处对派出所绩效考核扣分标准(业务部分)");
            examAutoEvaluation.setModelId("aa392539a5bd4404b3fda4425c404c26");
            examAutoEvaluation.setOption("既有线发生危及行车安全刑事案件3日内未侦破的");
            examAutoEvaluation.setOptionId("3e24f6cb88b64a09994347cb660050ad");
            examAutoEvaluation.setScore("3");
            examAutoEvaluation.setUnit("南宁处刑警支队");
            examAutoEvaluation.setUnitId("52");
            examAutoEvaluation.setEvaluationId("e4902c84680a4870bb4d27010ab9bd1d");
            examAutoEvaluation.setDetails(nncDetail.toString());
            examAutoEvaluation.setId("");
            examAutoEvaluation.setIsNewRecord(false);
            examAutoEvaluation.setFromSys("警综平台");//数据来源
            this.save(examAutoEvaluation);
        }
        if(bhcNum>0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("3");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setAssess("");
            examAutoEvaluation.setAssessId("");
            examAutoEvaluation.setModel("2020年月度北海处对派出所、刑警三大队扣分标准(业务部分)");
            examAutoEvaluation.setModelId("a9e6fbb8773d470d897319cd6f17fa2b");
            examAutoEvaluation.setOption("既有线发生危及行车安全刑事案件3日内未侦破的");
            examAutoEvaluation.setOptionId("dca145dd4b8d44f9a84bbd9ec0df8149");
            examAutoEvaluation.setScore("3");
            examAutoEvaluation.setUnit("北海处刑警支队");
            examAutoEvaluation.setUnitId("277");
            examAutoEvaluation.setEvaluationId("5caeea9690fc42ac846d785cf3418309");
            examAutoEvaluation.setDetails(bhcDetail.toString());
            examAutoEvaluation.setId("");
            examAutoEvaluation.setIsNewRecord(false);
            examAutoEvaluation.setFromSys("警综平台");//数据来源
            this.save(examAutoEvaluation);
        }
    }


    /**
     * 警综平台--辖区内既有线发生危及行车安全刑事案件3日内未侦破的,扣2分。
     * <p>
     * -年度  出考派出所
     *
     * @param year
     */
    public void jzptckpcsYear(String year) {

        Map<String,String> map = yearTime(year);
        String yearL = map.get("yearL");
        String yearT = map.get("yearT");

        //查所有的派出所
        List<Map<String, Object>> allpcs = examAutoEvaluationDao.findAllpcs();
        int nncNum = 0;
        StringBuffer nncDetail = null;
        int lzcNum = 0;
        StringBuffer lzcDetail = null;
        int bhcNum = 0;
        StringBuffer bhcDetail = null;
        for (int i = 0; i < allpcs.size(); i++) {
            String parentId = (String) allpcs.get(i).get("parent_id");
            if (!parentId.equals("") && parentId.equals("95")) {//柳州处

                String code = (String) allpcs.get(i).get("code");
                String unit = (String) allpcs.get(i).get("name");
                List<Map<String, String>> selectPoAnIncident = examAutoEvaluationDao.selectPoAnIncident(code, yearL,yearT);
                String userId = examAutoEvaluationDao.findUserId(code);
                if(selectPoAnIncident.size() > 0 && selectPoAnIncident != null) {
                    for (int j = 0; j < selectPoAnIncident.size(); j++) {
                        String cjDate = selectPoAnIncident.get(j).get("cjsj");//获取的格式 2020-09-23 17:36:22.000
                        String paDate = selectPoAnIncident.get(j).get("parq");
                        String pajk = selectPoAnIncident.get(j).get("pajk");//破案简括
                        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
                        Date parseCjDate = null;
                        Date parsePaDate = null;
                        try {
                            parseCjDate = format.parse(cjDate);
                        } catch (ParseException e) {
                            parseCjDate = new Date();
                            System.out.println("辖区内既有线发生危及行车安全刑事案件3日内未侦破-创建时间转换错误");
                        }
                        try {
                            parsePaDate = format.parse(paDate);
                        } catch (ParseException e) {
                            parsePaDate = new Date();
                            System.out.println("辖区内既有线发生危及行车安全刑事案件3日内未侦破-破案时间转换错误");
                        }
                        long cjTime = parseCjDate.getTime();
                        long paTime = parsePaDate.getTime();
                        Long MSNum = paTime - cjTime;
                        Long minute = (MSNum / 1000) / 60;
                        Long dayNum = (minute / 60) / 24;
                        if (dayNum > 3) {
                            lzcNum++;
                            if (lzcDetail == null) {
                                if (StringUtils.isNotBlank(paDate)) {
                                    lzcDetail = new StringBuffer(lzcNum+"."+unit + "于" + cjDate + "，" + pajk + "破案时间:" + paDate);
                                } else {
                                    lzcDetail = new StringBuffer(lzcNum+"."+unit + "于" + cjDate + "，" + pajk + "破案时间:系统未记录");
                                }
                            } else {
                                if (StringUtils.isNotBlank(paDate)) {
                                    lzcDetail.append(lzcNum+"." + unit + "于" + cjDate + "，" + pajk + "破案时间:" + paDate);
                                } else {
                                    lzcDetail.append(lzcNum+"." + unit + "于" + cjDate + "，" + pajk + "破案时间:系统未记录");
                                }
                            }
                        }
                    }
                }
            }
            if (!parentId.equals("") && parentId.equals("34")) {//南宁处
                String code = (String) allpcs.get(i).get("code");
                String unit = (String) allpcs.get(i).get("name");
                List<Map<String, String>> selectPoAnIncident = examAutoEvaluationDao.selectPoAnIncident(code, yearL,yearT);
                String userId = examAutoEvaluationDao.findUserId(code);
                if (selectPoAnIncident.size() > 0 && selectPoAnIncident != null) {
                    for (int j = 0; j < selectPoAnIncident.size(); j++) {

                        /*Map<String, String> map = selectPoAnIncident.get(j);
                        String cjDate = map.get("cjsj");//获取的格式 2020-09-23 17:36:22.000
*/
                        String cjDate = selectPoAnIncident.get(j).get("cjsj");//获取的格式 2020-09-23 17:36:22.000
                        String paDate = selectPoAnIncident.get(j).get("parq");
                        String pajk = selectPoAnIncident.get(j).get("pajk");//破案简括
                        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
                        Date parseCjDate = null;
                        Date parsePaDate = null;
                        try {
                            parseCjDate = format.parse(cjDate);
                        } catch (ParseException e) {
                            parseCjDate = new Date();
                            System.out.println("辖区内既有线发生危及行车安全刑事案件3日内未侦破-创建时间转换错误");
                        }
                        try {
                            parsePaDate = format.parse(paDate);
                        } catch (ParseException e) {
                            parsePaDate = new Date();
                            System.out.println("辖区内既有线发生危及行车安全刑事案件3日内未侦破-破案时间转换错误");
                        }
                        long cjTime = parseCjDate.getTime();
                        long paTime = parsePaDate.getTime();
                        Long MSNum = paTime - cjTime;
                        Long minute = (MSNum / 1000) / 60;
                        Long dayNum = (minute / 60) / 24;
                        if (dayNum > 3) {
                            nncNum++;
                            if(nncDetail==null){
                                if(StringUtils.isNotBlank(paDate)){
                                    nncDetail = new StringBuffer(nncNum+"."+unit+"于"+cjDate+"，"+pajk+"破案时间:"+paDate);
                                }else{
                                    nncDetail = new StringBuffer(nncNum+"."+unit+"于"+cjDate+"，"+pajk+"破案时间:系统未记录");
                                }
                            }else{
                                if(StringUtils.isNotBlank(paDate)){
                                    nncDetail.append(nncNum+"."+unit+"于"+cjDate+"，"+pajk+"破案时间:"+paDate);
                                }else{
                                    nncDetail.append(nncNum+"."+unit+"于"+cjDate+"，"+pajk+"破案时间:系统未记录");
                                }
                            }
                        }
                    }
                }
            }
            if (!parentId.equals("") && parentId.equals("156")) {//北海处
                String code = (String) allpcs.get(i).get("code");
                String unit = (String) allpcs.get(i).get("name");
                List<Map<String, String>> selectPoAnIncident = examAutoEvaluationDao.selectPoAnIncident(code, yearL,yearT);
                String userId = examAutoEvaluationDao.findUserId(code);
                if(selectPoAnIncident.size() > 0 && selectPoAnIncident != null) {
                    for (int j = 0; j < selectPoAnIncident.size(); j++) {
                        String cjDate = selectPoAnIncident.get(j).get("cjsj");//获取的格式 2020-09-23 17:36:22.000
                        String paDate = selectPoAnIncident.get(j).get("parq");
                        String pajk = selectPoAnIncident.get(j).get("pajk");//破案简括
                        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
                        Date parseCjDate = null;
                        Date parsePaDate = null;
                        try {
                            parseCjDate = format.parse(cjDate);
                        } catch (ParseException e) {
                            parseCjDate = new Date();
                            System.out.println("辖区内既有线发生危及行车安全刑事案件3日内未侦破-创建时间转换错误");
                        }
                        try {
                            parsePaDate = format.parse(paDate);
                        } catch (ParseException e) {
                            parsePaDate = new Date();
                            System.out.println("辖区内既有线发生危及行车安全刑事案件3日内未侦破-破案时间转换错误");
                        }
                        long cjTime = parseCjDate.getTime();
                        long paTime = parsePaDate.getTime();
                        Long MSNum = paTime - cjTime;
                        Long minute = (MSNum / 1000) / 60;
                        Long dayNum = (minute / 60) / 24;
                        if (dayNum > 3) {
                            bhcNum++;
                            if (bhcDetail == null) {
                                if (StringUtils.isNotBlank(paDate)) {
                                    bhcDetail = new StringBuffer(bhcNum+"."+unit + "于" + cjDate + "，" + pajk + "破案时间:" + paDate);
                                } else {
                                    bhcDetail = new StringBuffer(bhcNum+"."+unit+"于"+cjDate+"，"+ pajk + "破案时间:系统未记录");
                                }
                            } else {
                                if (StringUtils.isNotBlank(paDate)) {
                                    bhcDetail.append(bhcNum+"."+unit + "于" + cjDate + "，" + pajk + "破案时间:" + paDate);
                                } else {
                                    bhcDetail.append(bhcNum+"."+unit + "于" + cjDate + "，" + pajk + "破案时间:系统未记录");
                                }
                            }
                        }
                    }
                }
            }
        }

        if (lzcNum > 0) {
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("3");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
            examAutoEvaluation.setPeriod("2");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setAssess("");
            examAutoEvaluation.setAssessId("");
            examAutoEvaluation.setModel("柳州处对派出所2020年年度绩效考核扣分标准（业务扣分项目）");
            examAutoEvaluation.setModelId("879292d1da7d4b3e9d33c8079aec8721");
            examAutoEvaluation.setOption("既有线发生危及行车安全刑事案件经工作未侦破的，或高铁线发生危及行车安全刑事案件经工作未侦破的");
            examAutoEvaluation.setOptionId("25172e46af62470993665d861d57e734");
            examAutoEvaluation.setScore("2");
            examAutoEvaluation.setUnit("柳州处刑警支队");
            examAutoEvaluation.setUnitId("167");
            examAutoEvaluation.setEvaluationId("940f25fb26da4d5cad150bc875c0f1db");
            examAutoEvaluation.setDetails(lzcDetail.toString());
            examAutoEvaluation.setId("");
            examAutoEvaluation.setIsNewRecord(false);
            examAutoEvaluation.setFromSys("警综平台");//数据来源
            this.save(examAutoEvaluation);
        }
        if(nncNum>0) {
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("3");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
            examAutoEvaluation.setPeriod("2");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setAssess("");
            examAutoEvaluation.setAssessId("");
            examAutoEvaluation.setModel("2020年年度南宁处对派出所绩效考核扣分标准(业务部分)");
            examAutoEvaluation.setModelId("42882051f7214a7486258dfcb92a8d4d");
            examAutoEvaluation.setOption("既有线发生危及行车安全刑事案件3日内未侦破的");
            examAutoEvaluation.setOptionId("c02d96782f5c4e9b8dbbef3c43e6335e");
            examAutoEvaluation.setScore("2");
            examAutoEvaluation.setUnit("南宁处刑警支队");
            examAutoEvaluation.setUnitId("52");
            examAutoEvaluation.setEvaluationId("e4902c84680a4870bb4d27010ab9bd1d");
            examAutoEvaluation.setDetails(nncDetail.toString());
            examAutoEvaluation.setId("");
            examAutoEvaluation.setIsNewRecord(false);
            examAutoEvaluation.setFromSys("警综平台");//数据来源
            this.save(examAutoEvaluation);
        }
        if (bhcNum > 0) {
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("3");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
            examAutoEvaluation.setPeriod("2");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setAssess("");
            examAutoEvaluation.setAssessId("");
            examAutoEvaluation.setModel("2020年年度北海处对派出所、刑警三大队绩效考核扣分标准(业务部分)");
            examAutoEvaluation.setModelId("ebbe5612a316481586636fef3fb8840d");
            examAutoEvaluation.setOption("既有线发生危及行车安全刑事案件3日内未侦破的");
            examAutoEvaluation.setOptionId("678649417a6a42518a7688f4c54864c8");
            examAutoEvaluation.setScore("2");
            examAutoEvaluation.setUnit("北海处刑警支队");
            examAutoEvaluation.setUnitId("277");
            examAutoEvaluation.setEvaluationId("5caeea9690fc42ac846d785cf3418309");
            examAutoEvaluation.setDetails(bhcDetail.toString());
            examAutoEvaluation.setId("");
            examAutoEvaluation.setIsNewRecord(false);
            examAutoEvaluation.setFromSys("警综平台");//数据来源
            this.save(examAutoEvaluation);
        }
    }


////////////////////////////////////////////////发展党员///////////////////////////////////////////////////////////////////

    /**
     * 1、成为入党申请人后，每季度1篇思想汇报
     * 2、预备党员1年后，未按期转正（特殊情况手动删除）
     * 3、录入入党申请人，党组织书记未在1个月内录入谈心记录
     *
     * @param
     */
    public void recruitingPartyMembers(String year, String month) {
//        1、成为入党申请人后，每季度1篇思想汇报 一季度扣分一次
        List<AffairApplicant> list = affairApplicantService.findList(new AffairApplicant());
        list.stream().forEach(item -> {
//           AffairPoliceThoughtAnalysisService affairPoliceThoughtAnalysisService;
            AffairPoliceThoughtAnalysis affairPoliceThoughtAnalysis = new AffairPoliceThoughtAnalysis();
            affairPoliceThoughtAnalysis.getCreateBy().setId(item.getId());
            if (month.equals("04")) {
                affairPoliceThoughtAnalysis.setReportType("1");
            }
            if (month.equals("07")) {
                affairPoliceThoughtAnalysis.setReportType("2");
            }
            if (month.equals("10")) {
                affairPoliceThoughtAnalysis.setReportType("3");
            }
            if (month.equals("01")) {
                affairPoliceThoughtAnalysis.setReportType("4");
            }
            List<AffairPoliceThoughtAnalysis> thoughtList = affairPoliceThoughtAnalysisService.findList(affairPoliceThoughtAnalysis);
            if (thoughtList == null || thoughtList.size() < 1) {
                //扣分
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                String evaluationId = findEvaluationId(item.getName(), item.getIdNumber());
                examAutoEvaluation.setEvaluationId(evaluationId);
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setScore("0.1");
                /*需要的类型都保存一份，局考处时 不会查询其他类型的,所以都保存了不会有什么问题*/
                /*保存前应该先查询是否有扣分记录 有则更新扣分，无则插入扣分*/
                User user = UserUtils.get(evaluationId);
                String companyId = user.getCompany().getId();
                if (companyId.equals("34")) {
                    examAutoEvaluation.setOptionId("366cb878c3704bce8cad641938470163");
                    examAutoEvaluation.setModelId("4039253675e7495a8583ac9173345a96");
                } else if (companyId.equals("95")) {
                    examAutoEvaluation.setOptionId("1adea30e513d4c0dbcd42e4372fa0423");
                    examAutoEvaluation.setModelId("24e18007a8b942b7947f581b7cb9370e");
                } else if (companyId.equals("156")) {
                    examAutoEvaluation.setOptionId("bedec863a07b4a84b190df3bee6973f4");
                    examAutoEvaluation.setModelId("6f09b86236ed4745a89e97db3f2869aa");
                }
                examAutoEvaluation.setEvalType("4");
                List<ExamAutoEvaluation> resultList = this.findList(examAutoEvaluation);
                /*扣分累加*/
                if (resultList != null && resultList.size() > 0) {
                    float score = Float.valueOf(resultList.get(0).getScore());
                    examAutoEvaluation.setScore(String.valueOf(score + 2));
                } else {/*直接扣分*/
                    examAutoEvaluation.setScore("2");
                }
                saveChuKaoChuJiGuan(examAutoEvaluation);

                examAutoEvaluation.setEvalType("1");
                examAutoEvaluation.setModelId("aef99f1b42054342ba71c25634d0f9fc");
                examAutoEvaluation.setOptionId("7a2b44a40ccc4ca18c4b2d1277bcb36d");
                resultList = this.findList(examAutoEvaluation);
                /*扣分累加*/
                if (resultList != null && resultList.size() > 0) {
                    float score = Float.valueOf(resultList.get(0).getScore());
                    examAutoEvaluation.setScore(String.valueOf(score + 0.1));
                } else {/*直接扣分*/
                    examAutoEvaluation.setScore("0.1");
                }
                saveJuKaoChu(examAutoEvaluation);
                examAutoEvaluation.setEvalType("2");
                examAutoEvaluation.setModelId("abc515db7d16435f8a90705cabcc75bb");
                examAutoEvaluation.setOptionId("7a2b44a40ccc4ca18c4b2d1277bcb36d");
                if (resultList != null && resultList.size() > 0) {
                    float score = Float.valueOf(resultList.get(0).getScore());
                    examAutoEvaluation.setScore(String.valueOf(score + 0.1));
                } else {/*直接扣分*/
                    examAutoEvaluation.setScore("0.1");
                }
                saveChuKaoChuJiGuan(examAutoEvaluation);
            }
        });


    }

    /**
     * 预备党员1年后，未按期转正（特殊情况手动删除）
     *
     * @param year
     * @param month
     */
    public void formalParty(String year, String month) {

        //2、预备党员1年后，未按期转正（特殊情况手动删除） 需要每天执行
        //查询预备党员一年后未转正的预备党员名册，通过名册的党支部查询党组织书记
        List<AffairPartyMember> partyList = affairPartyMemberService.findList(new AffairPartyMember());
        /*预备党员未转正的书记（多个未转正的扣分多次）*/
        List<String> secretaryList = new ArrayList<>();
        partyList.stream().forEach(item -> {
            int timeDay = TimeUtils.getCurrentTime(item.getJoinDate(), item.getTurnDate());
            if (timeDay >= 365) {
                //预备党员一年未转正，扣党支部书记的分
                AffairGeneralSituation affairGeneralSituation = new AffairGeneralSituation();
                affairGeneralSituation.setId(item.getPartyBranchId());
                List<AffairGeneralSituation> affairGeneralSituationList = affairGeneralSituationService.findList(affairGeneralSituation);
                secretaryList.add(affairGeneralSituationList.stream().findFirst().get().getShuji());
            }
        });
        secretaryList.stream().forEach(item -> {
            User user = userDao.getByUserName(item);
            String officeName = user.getOffice().getName();
            User officeUser = userDao.getByUserName(officeName.replaceAll("公安局", "南宁局"));
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setEvaluationId(officeUser.getId());
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setPeriod("2");

            String companyId = officeUser.getCompany().getId();
            if (companyId.equals("34")) {
                examAutoEvaluation.setOptionId("366cb878c3704bce8cad641938470163");
                examAutoEvaluation.setModelId("4039253675e7495a8583ac9173345a96");
            } else if (companyId.equals("95")) {
                examAutoEvaluation.setOptionId("1adea30e513d4c0dbcd42e4372fa0423");
                examAutoEvaluation.setModelId("24e18007a8b942b7947f581b7cb9370e");
            } else if (companyId.equals("156")) {
                examAutoEvaluation.setOptionId("bedec863a07b4a84b190df3bee6973f4");
                examAutoEvaluation.setModelId("6f09b86236ed4745a89e97db3f2869aa");
            }
            examAutoEvaluation.setEvalType("4");
            List<ExamAutoEvaluation> resultList = this.findList(examAutoEvaluation);
            /*扣分累加*/
            if (resultList != null && resultList.size() > 0) {
                float score = Float.valueOf(resultList.get(0).getScore());
                examAutoEvaluation.setScore(String.valueOf(score + 2));
            } else {/*直接扣分*/
                examAutoEvaluation.setScore("2");
            }
            saveChuKaoChuJiGuan(examAutoEvaluation);

            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setModelId("aef99f1b42054342ba71c25634d0f9fc");
            examAutoEvaluation.setOptionId("7a2b44a40ccc4ca18c4b2d1277bcb36d");
            resultList = this.findList(examAutoEvaluation);
            /*扣分累加*/
            if (resultList != null && resultList.size() > 0) {
                float score = Float.valueOf(resultList.get(0).getScore());
                examAutoEvaluation.setScore(String.valueOf(score + 0.1));
            } else {/*直接扣分*/
                examAutoEvaluation.setScore("0.1");
            }
            saveJuKaoChu(examAutoEvaluation);
            examAutoEvaluation.setEvalType("2");
            examAutoEvaluation.setModelId("abc515db7d16435f8a90705cabcc75bb");
            examAutoEvaluation.setOptionId("7a2b44a40ccc4ca18c4b2d1277bcb36d");
            if (resultList != null && resultList.size() > 0) {
                float score = Float.valueOf(resultList.get(0).getScore());
                examAutoEvaluation.setScore(String.valueOf(score + 0.1));
            } else {/*直接扣分*/
                examAutoEvaluation.setScore("0.1");
            }
            saveChuKaoChuJiGuan(examAutoEvaluation);
        });
    }

    public void talkRecord(String year, String month) {
        //3、录入入党申请人，党组织书记未在1个月内录入谈心记录，多个入党申请人时扣多次分
        //查询查询一个月内的入党申请人添加情况
        List<AffairApplicant> applicantList = affairApplicantService.findList(new AffairApplicant());
        List<String> applicantShuJiList = new ArrayList<>();
        applicantList.stream().forEach(item -> {
            item.getEnterDate();
            int time = TimeUtils.getCurrentTime(item.getEnterDate(), new Date());
            /*一个月内未录入只扣一次分，等于30，大于30的为扣过的*/
            if (time == 30) {
                //一个月内未录入谈心记录，查询党组织书记 进行扣分
                AffairGeneralSituation affairGeneralSituation = new AffairGeneralSituation();
                affairGeneralSituation.setId(item.getPartyBranchId());
                List<AffairGeneralSituation> affairGeneralSituationList = affairGeneralSituationService.findList(affairGeneralSituation);
                applicantShuJiList.add(affairGeneralSituationList.stream().findFirst().get().getShuji());
            }
        });

        applicantShuJiList.stream().forEach(item -> {
            User user = userDao.getByUserName(item);
            String officeName = user.getOffice().getName();
            User officeUser = userDao.getByUserName(officeName.replaceAll("公安局", "南宁局"));
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setEvaluationId(officeUser.getId());
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setPeriod("2");
            examAutoEvaluation.setModelId("aef99f1b42054342ba71c25634d0f9fc");
            examAutoEvaluation.setMonth(month);
            String companyId = officeUser.getCompany().getId();
            if (companyId.equals("34")) {
                examAutoEvaluation.setOptionId("366cb878c3704bce8cad641938470163");
                examAutoEvaluation.setModelId("4039253675e7495a8583ac9173345a96");
            } else if (companyId.equals("95")) {
                examAutoEvaluation.setOptionId("1adea30e513d4c0dbcd42e4372fa0423");
                examAutoEvaluation.setModelId("24e18007a8b942b7947f581b7cb9370e");
            } else if (companyId.equals("156")) {
                examAutoEvaluation.setOptionId("bedec863a07b4a84b190df3bee6973f4");
                examAutoEvaluation.setModelId("6f09b86236ed4745a89e97db3f2869aa");
            }
            examAutoEvaluation.setEvalType("4");
            List<ExamAutoEvaluation> resultList = this.findList(examAutoEvaluation);
            /*扣分累加*/
            if (resultList != null && resultList.size() > 0) {
                float score = Float.valueOf(resultList.get(0).getScore());
                examAutoEvaluation.setScore(String.valueOf(score + 2));
            } else {/*直接扣分*/
                examAutoEvaluation.setScore("2");
            }
            saveChuKaoChuJiGuan(examAutoEvaluation);

            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setModelId("aef99f1b42054342ba71c25634d0f9fc");
            examAutoEvaluation.setOptionId("7a2b44a40ccc4ca18c4b2d1277bcb36d");
            resultList = this.findList(examAutoEvaluation);
            /*扣分累加*/
            if (resultList != null && resultList.size() > 0) {
                float score = Float.valueOf(resultList.get(0).getScore());
                examAutoEvaluation.setScore(String.valueOf(score + 0.1));
            } else {/*直接扣分*/
                examAutoEvaluation.setScore("0.1");
            }
            saveJuKaoChu(examAutoEvaluation);
            examAutoEvaluation.setEvalType("2");
            examAutoEvaluation.setModelId("abc515db7d16435f8a90705cabcc75bb");
            examAutoEvaluation.setOptionId("7a2b44a40ccc4ca18c4b2d1277bcb36d");
            if (resultList != null && resultList.size() > 0) {
                float score = Float.valueOf(resultList.get(0).getScore());
                examAutoEvaluation.setScore(String.valueOf(score + 0.1));
            } else {/*直接扣分*/
                examAutoEvaluation.setScore("0.1");
            }
            saveChuKaoChuJiGuan(examAutoEvaluation);

        });
    }

    public void rewardInformation(String... strings) {

    }

/**
 * 每天查询当月的数据，
 * 如果当天为25号以后 则用saveBeatMonth保存到下个月
 */
    /**
     * @param month mm
     * @param year  yyyy
     */
    public void juKaoChuFireMonth(String month, String year,String day) {
        try {
            Map<String, Object> param = new HashMap<>();
//            param.put("year", year);
//            param.put("month", month);
            param.put("day", day);
            List<Map<String, Object>> list = examAutoEvaluationDao.findFireList(param);
            list.stream().forEach(map -> {
                /*死亡人数*/
//            int deadNum = map.get("swrs") == null ? 0 : Integer.valueOf(map.get("swrs").toString());
//            辖区发生较大以上责任火灾事故或造成旅客死亡火灾事故的。处长扣10分，政委扣5分。分管副处长由绩效办推送。
                String userId = (String) map.get("userId");
                User user = UserUtils.get(userId);
                String companyId = user.getCompany().getId();
                ExamAutoEvaluation auto = new ExamAutoEvaluation();
                /*
                20e92fa220c8485694619ef506357d01    南宁处消防监督支队
                eda551d0b2b9420dbe9388abdcf409d3    北海处消防监督支队
                f732cdbe6593468480cac2448734af58    柳州处消防监督支队
                * */
                if (companyId.equals("34")){
                    auto.setEvaluationId("20e92fa220c8485694619ef506357d01");
                }else if (companyId.equals("156")){
                    auto.setEvaluationId("eda551d0b2b9420dbe9388abdcf409d3");
                }else if (companyId.equals("95")){
                    auto.setEvaluationId("f732cdbe6593468480cac2448734af58");
                }
                auto.setScore("6");
                auto.setModelId("aef99f1b42054342ba71c25634d0f9fc");
                auto.setModel("2020年月度公安局对公安处扣分标准(业务部分26项)");
                String detail = user.getName()+"："+map.get("sgjyqk");
                auto.setDetails(detail);
                auto.setOptionId("9a2bdf38a0e84360a99a0f3ef7e0329d");
                auto.setFromSys("警综平台");
                auto.setMonth(month);
                auto.setYear(year);
                auto.setEvalType("1");
                auto.setPeriod("1");
                auto.setUnit(user.getName());
                examAutoStandardRelevanceService.setExamAutoModelOption(auto,null,"火灾事故");//从自动考评标准维护表中获取设置模板选择项
                List<ExamAutoEvaluation> scoreList = dao.findScoreHistoryList(auto);
                if (scoreList != null && scoreList.size() >0){
                    String id = scoreList.get(0).getId();
                    auto.setId(id);
                    String score = scoreList.get(0).getScore();
                    int everyScore = Integer.valueOf(auto.getScore());
                    auto.setScore(String.valueOf(Integer.valueOf(score)+everyScore));
                    auto.setDetails(scoreList.get(0).getDetails()+"\n"+detail);
                }
                this.saveBetaMonth(auto);
            });
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void juKaoChuFireYear(String month, String year,String day) {
        try {
            Map<String, Object> param = new HashMap<>();
            //            param.put("year", year);
//            param.put("month", month);
            param.put("day", day);
            List<Map<String, Object>> list = examAutoEvaluationDao.findFireList(param);
            list.stream().forEach(map -> {
                /*死亡人数*/
//            int deadNum = map.get("swrs") == null ? 0 : Integer.valueOf(map.get("swrs").toString());
//            辖区发生较大以上责任火灾事故或造成旅客死亡火灾事故的。处长扣10分，政委扣5分。分管副处长由绩效办推送。
                String userId = (String) map.get("userId");
                User user = UserUtils.get(userId);
                String companyId = user.getCompany().getId();
                ExamAutoEvaluation auto = new ExamAutoEvaluation();
                if (companyId.equals("34")){
                    auto.setEvaluationId("20e92fa220c8485694619ef506357d01");
                }else if (companyId.equals("156")){
                    auto.setEvaluationId("eda551d0b2b9420dbe9388abdcf409d3");
                }else if (companyId.equals("95")){
                    auto.setEvaluationId("f732cdbe6593468480cac2448734af58");
                }
                auto.setScore("3");
                auto.setModelId("a959d8865ea74bf68cf818adc710c75c");
                auto.setModel("2020年年度公安局对公安处考评公共扣分标准");
                auto.setDetails(user.getName()+"："+map.get("sgjyqk"));
                auto.setOptionId("e8e57f589b054c96a40753088d24ed7b");
                auto.setFromSys("警综平台");
                auto.setMonth(month);
                auto.setYear(year);
                auto.setEvalType("1");
                auto.setPeriod("2");
                examAutoStandardRelevanceService.setExamAutoModelOption(auto,null,"火灾事故");//从自动考评标准维护表中获取设置模板选择项
                List<ExamAutoEvaluation> scoreList = dao.findScoreHistoryList(auto);
                if (scoreList != null && scoreList.size() >0){
                    String id = scoreList.get(0).getId();
                    auto.setId(id);
                    String score = scoreList.get(0).getScore();
                    int everyScore = Integer.valueOf(auto.getScore());
                    auto.setScore(String.valueOf(Integer.valueOf(score)+everyScore));
                    auto.setDetails(scoreList.get(0).getDetails()+"\n"+user.getName()+"："+map.get("sgjyqk"));
                }
                auto.setUnit(user.getName());
                this.saveBetaYear(auto);
            });
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * @param month mm
     * @param year  yyyy
     */
    public void juKaoJuJiGuanFireMonth(String month, String year,String day) {
        try {
            Map<String, Object> param = new HashMap<>();
//            param.put("year", year);
//            param.put("month", month);
            param.put("day", day);
            List<Map<String, Object>> list = examAutoEvaluationDao.findFireList(param);
            list.stream().forEach(map -> {
                /*死亡人数*/
//            int deadNum = map.get("swrs") == null ? 0 : Integer.valueOf(map.get("swrs").toString());
//            辖区发生较大以上责任火灾事故或造成旅客死亡火灾事故的。处长扣10分，政委扣5分。分管副处长由绩效办推送。
                String userId = (String) map.get("userId");
                User user = UserUtils.get(userId);

                ExamAutoEvaluation auto = new ExamAutoEvaluation();
                auto.setEvaluationId(userId);
                auto.setScore("10");
                auto.setModelId("abc515db7d16435f8a90705cabcc75bb");
                auto.setModel("2020年公安局对局机关各处室直属支队月度绩效考核扣分标准");
                String detail = user.getName()+"："+map.get("sgjyqk");
                auto.setDetails(user.getName()+"："+map.get("sgjyqk"));
                auto.setOptionId("9e602305bd254023a656c597dd831ba5");
                auto.setFromSys("警综平台");
                auto.setMonth(month);
                auto.setYear(year);
                auto.setEvalType("2");
                auto.setPeriod("1");
                examAutoStandardRelevanceService.setExamAutoModelOption(auto,null,"火灾事故");//从自动考评标准维护表中获取设置模板选择项
                List<ExamAutoEvaluation> scoreList = dao.findScoreHistoryList(auto);
                if (scoreList != null && scoreList.size() >0){
                    String id = scoreList.get(0).getId();
                    auto.setId(id);
                    String score = scoreList.get(0).getScore();
                    int everyScore = Integer.valueOf(auto.getScore());
                    auto.setScore(String.valueOf(Integer.valueOf(score)+everyScore));
                    auto.setDetails(scoreList.get(0).getDetails()+"\n"+detail);
                }
                auto.setUnit(user.getName());
                this.saveBetaMonth(auto);
            });
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * @param month mm
     * @param year  yyyy
     */
    public void chuKaoChuJiGuanFireMonth(String month, String year,String day) {
        try {
            Map<String, Object> param = new HashMap<>();
            //            param.put("year", year);
//            param.put("month", month);
            param.put("day", day);
            List<Map<String, Object>> list = examAutoEvaluationDao.findFireList(param);
            list.stream().forEach(map -> {
                /*死亡人数*/
//            int deadNum = map.get("swrs") == null ? 0 : Integer.valueOf(map.get("swrs").toString());
//            辖区发生较大以上责任火灾事故或造成旅客死亡火灾事故的。处长扣10分，政委扣5分。分管副处长由绩效办推送。
                String userId = (String) map.get("userId");
                User user = UserUtils.get(userId);
                String companyId = user.getCompany().getId();
                ExamAutoEvaluation auto = new ExamAutoEvaluation();
                auto.setEvaluationId(userId);
                auto.setScore("6");
                /*南宁*/
                if (companyId.equals("34")) {
                    auto.setModelId("19138db4ce0d490595f3d599007bc15a");
                    auto.setModel("2020年月度南宁处对消防支队扣分标准");
                    auto.setDetails("辖区发生较大责任火灾事故的，每起扣6分");
                    auto.setOptionId("2322a5a17ba745b98982b5c7378c3758");
                    auto.setFromSys("警综平台");
                    examAutoStandardRelevanceService.setExamAutoModelOption(auto,"34","火灾事故");//从自动考评标准维护表中获取设置模板选择项
                }
                /*柳州*/
                if (companyId.equals("95")) {
                    auto.setModelId("84c9af44fbbb45c798362711b4128768");
                    auto.setModel("柳州处对消防支队月度绩效考核评分标准（业务部分）");
                    auto.setDetails("辖区发生较大责任火灾事故的，每起扣6分");
                    auto.setOptionId("a0eff79ce4054e2da2d7972c66260f9a");
                    auto.setFromSys("警综平台");
                    examAutoStandardRelevanceService.setExamAutoModelOption(auto,"95","火灾事故");//从自动考评标准维护表中获取设置模板选择项
                }
                /*北海*/
                if (companyId.equals("156")) {
                    auto.setModelId("e1cb1b5a0c9044d697f75035cd365cf3");
                    auto.setModel("2020年月度北海处对治安支队扣分标准");
                    auto.setDetails("辖区发生较大责任火灾事故的，每起扣6分");
                    auto.setOptionId("bf51aef7d6674fc8942b8bfd0f3d27ff");
                    auto.setFromSys("警综平台");
                    examAutoStandardRelevanceService.setExamAutoModelOption(auto,"156","火灾事故");//从自动考评标准维护表中获取设置模板选择项
                }
                String detail = user.getName()+"："+map.get("sgjyqk");
                auto.setDetails(detail);
                auto.setFromSys("警综平台");
                auto.setMonth(month);
                auto.setYear(year);
                auto.setEvalType("4");
                auto.setPeriod("1");
                List<ExamAutoEvaluation> scoreList = dao.findScoreHistoryList(auto);
                if (scoreList != null && scoreList.size() >0){
                    String id = scoreList.get(0).getId();
                    auto.setId(id);
                    String score = scoreList.get(0).getScore();
                    int everyScore = Integer.valueOf(auto.getScore());
                    auto.setScore(String.valueOf(Integer.valueOf(score)+everyScore));
                    auto.setDetails(scoreList.get(0).getDetails()+"\n"+detail);
                }
                auto.setUnit(user.getName());
                this.saveBetaMonth(auto);
            });
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void chuKaoChuJiGuanFireYear(String month, String year,String day) {
        try {
            Map<String, Object> param = new HashMap<>();
            //            param.put("year", year);
//            param.put("month", month);
            param.put("day", day);
            List<Map<String, Object>> list = examAutoEvaluationDao.findFireList(param);
            list.stream().forEach(map -> {
                /*死亡人数*/
//            int deadNum = map.get("swrs") == null ? 0 : Integer.valueOf(map.get("swrs").toString());
//            辖区发生较大以上责任火灾事故或造成旅客死亡火灾事故的。处长扣10分，政委扣5分。分管副处长由绩效办推送。
                String userId = (String) map.get("userId");
                User user = UserUtils.get(userId);
                String companyId = user.getCompany().getId();
                ExamAutoEvaluation auto = new ExamAutoEvaluation();
                auto.setEvaluationId(userId);
                auto.setScore("3");
                /*南宁*/
                if (companyId.equals("34")) {
                    auto.setModelId("ddb21372762e4884b2aaf671570c6fa8");
                    auto.setModel("2020年南宁处对机关派出所年度绩效考核评分标准");
                    auto.setDetails("辖区发生较大责任火灾事故的，扣3分");
                    auto.setOptionId("88f29af86c114f7784fb23570c7d612a");
                    auto.setFromSys("警综平台");
                    examAutoStandardRelevanceService.setExamAutoModelOption(auto,"34","火灾事故");//从自动考评标准维护表中获取设置模板选择项
                }
                /*柳州*/
                if (companyId.equals("95")) {
                    auto.setModelId("70427aef89ad41c687241fb800eb606f");
                    auto.setModel("柳州处对消防支队月度绩效考核评分标准（业务部分）");
                    auto.setDetails("辖区发生较大责任火灾事故的，扣3分");
                    auto.setOptionId("612a4f8e0e2e4866bcfaf489c2b27c04");
                    auto.setFromSys("警综平台");
                    examAutoStandardRelevanceService.setExamAutoModelOption(auto,"95","火灾事故");//从自动考评标准维护表中获取设置模板选择项
                }
                /*北海*/
                if (companyId.equals("156")) {
                    auto.setModelId("7ea6730b5a5a425e8cc2e230f8ef4052");
                    auto.setModel("2020年年度北海处对治安支队扣分标准");
                    auto.setDetails("辖区发生较大责任火灾事故的，扣3分");
                    auto.setOptionId("f47698126d23449a8b90014db0236c34");
                    auto.setFromSys("警综平台");
                    examAutoStandardRelevanceService.setExamAutoModelOption(auto,"156","火灾事故");//从自动考评标准维护表中获取设置模板选择项
                }
                String detail = user.getName()+"："+map.get("sgjyqk");
                auto.setDetails(detail);
                auto.setMonth(month);
                auto.setYear(year);
                auto.setEvalType("4");
                auto.setPeriod("2");
                List<ExamAutoEvaluation> scoreList = dao.findScoreHistoryList(auto);
                if (scoreList != null && scoreList.size() >0){
                    String id = scoreList.get(0).getId();
                    auto.setId(id);
                    String score = scoreList.get(0).getScore();
                    int everyScore = Integer.valueOf(auto.getScore());
                    auto.setScore(String.valueOf(Integer.valueOf(score)+everyScore));
                    auto.setDetails(scoreList.get(0).getDetails()+"\n"+detail);
                }
                auto.setUnit(user.getName());
                this.saveBetaYear(auto);
            });
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void chuKaoSuoFireMonth(String month, String year,String day) {
        try {
            Map<String, Object> param = new HashMap<>();
//            param.put("year", year);
//            param.put("month", month);
            param.put("day", day);
            List<Map<String, Object>> list = examAutoEvaluationDao.findFireList(param);
            list.stream().forEach(map -> {
                /*死亡人数*/
//            int deadNum = map.get("swrs") == null ? 0 : Integer.valueOf(map.get("swrs").toString());
//            辖区发生较大以上责任火灾事故或造成旅客死亡火灾事故的。处长扣10分，政委扣5分。分管副处长由绩效办推送。
                String userId = (String) map.get("userId");
                User user = UserUtils.get(userId);

                ExamAutoEvaluation auto = new ExamAutoEvaluation();
                auto.setEvaluationId(userId);
                auto.setScore("6");
                String companyId = user.getCompany().getId();
                /*南宁*/
                if (companyId.equals("34")) {
                    auto.setModelId("aa392539a5bd4404b3fda4425c404c26");
                    auto.setModel("2020年月度南宁处对派出所绩效考核扣分标准(业务部分)");
                    auto.setDetails("辖区发生较大责任火灾事故的，每起扣6分。");
                    auto.setOptionId("70b167c4792e45b786be5ae60364ee67");
                    examAutoStandardRelevanceService.setExamAutoModelOption(auto,"34","火灾事故");//从自动考评标准维护表中获取设置模板选择项
                }
                /*柳州*/
                if (companyId.equals("95")) {
                    auto.setModelId("aa392539a5bd4404b3fda4425c404c26");
                    auto.setModel("2020年月度柳州处对派出所绩效考评公共扣分标准");
                    auto.setDetails("辖区发生较大责任火灾事故的，每起扣6分。");
                    auto.setOptionId("998ccd3c2a0a46399d8ca0dc0b786737");
                    examAutoStandardRelevanceService.setExamAutoModelOption(auto,"95","火灾事故");//从自动考评标准维护表中获取设置模板选择项
                }
                /*北海*/
                if (companyId.equals("156")) {
                    auto.setModelId("09fbdd772cad4fadabab7c92e3e760b1");
                    auto.setModel("2020年月度北海处对派出所、大队公共扣分标准");
                    auto.setDetails("辖区发生较大责任火灾事故的，每起扣6分。");
                    auto.setOptionId("f042ee859e36440a9a21d6bdced77361");
                    examAutoStandardRelevanceService.setExamAutoModelOption(auto,"156","火灾事故");//从自动考评标准维护表中获取设置模板选择项
                }
                String detail = user.getName()+"："+map.get("sgjyqk");
                auto.setDetails(detail);
                auto.setFromSys("警综平台");
                auto.setMonth(month);
                auto.setYear(year);
                auto.setEvalType("3");
                auto.setPeriod("1");
                List<ExamAutoEvaluation> scoreList = dao.findScoreHistoryList(auto);
                if (scoreList != null && scoreList.size() >0){
                    String id = scoreList.get(0).getId();
                    auto.setId(id);
                    String score = scoreList.get(0).getScore();
                    int everyScore = Integer.valueOf(auto.getScore());
                    auto.setScore(String.valueOf(Integer.valueOf(score)+everyScore));
                    auto.setDetails(scoreList.get(0).getDetails()+"\n"+detail);
                }
                auto.setUnit(user.getName());
                this.saveBetaMonth(auto);
            });
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void chuKaoSuoFireYear(String month, String year,String day) {
        try {
            Map<String, Object> param = new HashMap<>();
            //            param.put("year", year);
//            param.put("month", month);
            param.put("day", day);
            List<Map<String, Object>> list = examAutoEvaluationDao.findFireList(param);
            list.stream().forEach(map -> {
                /*死亡人数*/
//            int deadNum = map.get("swrs") == null ? 0 : Integer.valueOf(map.get("swrs").toString());
//            辖区发生较大以上责任火灾事故或造成旅客死亡火灾事故的。处长扣10分，政委扣5分。分管副处长由绩效办推送。
                String userId = (String) map.get("userId");
                User user = UserUtils.get(userId);
                String companyId = user.getCompany().getId();
                ExamAutoEvaluation auto = new ExamAutoEvaluation();
                auto.setEvaluationId(userId);
                auto.setScore("3");
                /*南宁*/
                if (companyId.equals("34")) {
                    auto.setModelId("42882051f7214a7486258dfcb92a8d4d");
                    auto.setModel("2020年年度南宁处对派出所绩效考核扣分标准(业务部分)");
                    auto.setDetails("辖区发生较大责任火灾事故的，扣3分。");
                    auto.setOptionId("0b990f34b82947188b3a0bbe5362b1bb");
                    examAutoStandardRelevanceService.setExamAutoModelOption(auto,"34","火灾事故");//从自动考评标准维护表中获取设置模板选择项
                }
                /*柳州*/
                if (companyId.equals("95")) {

                    auto.setModelId("8506c629ac9d4ecead9143bf40bd1cc7");
                    auto.setModel("2020年年度柳州处对派出所绩效考评公共扣分标准");
                    auto.setDetails("辖区发生较大责任火灾事故的，扣3分。");
                    auto.setOptionId("196b865bc0eb40baa7ceb589dcdcfe5e");
                    examAutoStandardRelevanceService.setExamAutoModelOption(auto,"156","火灾事故");//从自动考评标准维护表中获取设置模板选择项
                }
                /*北海*/
                if (companyId.equals("156")) {
                    auto.setModelId("c25e5dbae97f46c683ad276ed33580c0");
                    auto.setModel("2020年年度北海处对派出所、刑警三大队绩效考评公共扣分标准");
                    auto.setDetails("辖区发生较大责任火灾事故的，扣3分。");
                    auto.setOptionId("81a71ba428e5433e8b6f6d4719f29e0b");
                    examAutoStandardRelevanceService.setExamAutoModelOption(auto,"34","火灾事故");//从自动考评标准维护表中获取设置模板选择项
                }
                String detail = user.getName()+"："+map.get("sgjyqk");
                auto.setDetails(detail);
                auto.setFromSys("警综平台");
                auto.setMonth(month);
                auto.setYear(year);
                auto.setEvalType("3");
                auto.setPeriod("2");
                List<ExamAutoEvaluation> scoreList = dao.findScoreHistoryList(auto);
                if (scoreList != null && scoreList.size() >0){
                    String id = scoreList.get(0).getId();
                    auto.setId(id);
                    String score = scoreList.get(0).getScore();
                    int everyScore = Integer.valueOf(auto.getScore());
                    auto.setScore(String.valueOf(Integer.valueOf(score)+everyScore));
                    auto.setDetails(scoreList.get(0).getDetails()+"\n"+detail);
                }
                auto.setUnit(user.getName());
                this.saveBetaYear(auto);
            });
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void chuLingDaoFireMonth(String month, String year,String day) {
        try {
            Map<String, Object> param = new HashMap<>();
//            param.put("year", year);
//            param.put("month", month);
            param.put("day", day);
            List<Map<String, Object>> list = examAutoEvaluationDao.findFireList(param);
            list.stream().forEach(map -> {
                /*死亡人数*/
//            int deadNum = map.get("swrs") == null ? 0 : Integer.valueOf(map.get("swrs").toString());
//            辖区发生较大以上责任火灾事故或造成旅客死亡火灾事故的。处长扣10分，政委扣5分。分管副处长由绩效办推送。
                String userId = (String) map.get("userId");
                User user = UserUtils.get(userId);
                PersonnelBase personnelBase = personnelBaseDao.findInfoByIdNumber(user.getNo());

                user.getNo();
                String companyId = user.getCompany().getId();
                ExamAutoEvaluation auto = new ExamAutoEvaluation();
                auto.setEvaluationId(userId);
                /*处长扣10分，政委扣5分*/
                if (personnelBase != null) {
                    String job = personnelBase.getJobAbbreviation();
                    if (StringUtils.isNotBlank(job)) {
                        if (job.contains("处长")) {
                            auto.setScore("10");
                        } else if (job.contains("政委")) {
                            auto.setScore("5");
                        } else {
                            return;
                        }
                    }
                }
                auto.setModelId("78e05a12fd034ca8831504cbcd6b4a80");
                auto.setModel("2020年月度对公安处处长、政委岗位绩效扣分标准");
                String detail = user.getName()+"："+map.get("sgjyqk");
                auto.setDetails(detail);
                auto.setOptionId("d6ec01231f784efc9b390968dca155b8");

                    /*
                    //由绩效办推送
                    auto.setModelId("12d8d2d08e9648e481050622aa364a90");
                    auto.setModel("2020年月度对公安处副处长岗位绩效考核扣分标准");
                    auto.setDetails("辖区发生较大以上责任火灾事故或造成旅客死亡火灾事故的。处长扣10分，政委扣5分。分管副处长由绩效办推送。");
                    auto.setOptionId("1157346d0f1740d892a39c4d49cb14ba");
                    */
                auto.setFromSys("警综平台");
                auto.setMonth(month);
                auto.setYear(year);
                auto.setEvalType("5");
                auto.setPeriod("1");
                List<ExamAutoEvaluation> scoreList = dao.findScoreHistoryList(auto);
                if (scoreList != null && scoreList.size() >0){
                    String id = scoreList.get(0).getId();
                    auto.setId(id);
                    String score = scoreList.get(0).getScore();
                    int everyScore = Integer.valueOf(auto.getScore());
                    auto.setScore(String.valueOf(Integer.valueOf(score)+everyScore));
                    auto.setDetails(scoreList.get(0).getDetails()+"\n"+detail);
                }
                auto.setUnit(user.getName());
                this.saveBetaMonth(auto);
            });
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void chuLingDaoFireYear(String month, String year,String day) {
        try{

            ExamAutoConfig autoConfig = new ExamAutoConfig();
            autoConfig.setCycle("2");
            autoConfig.setKpType("5");
            autoConfig.setItems("辖区发生火灾事故");
            /*使用字典后 无法使用单元测试*/
            autoConfig.setSys(DictUtils.getDictValue("警综平台","from_sys",""));
            List<ExamAutoConfig> configList = examAutoConfigService.findList(autoConfig);
            if (configList != null &&configList.size()>0){
                autoConfig = configList.get(0);
            }

            Map<String, Object> param = new HashMap<>();
            //            param.put("year", year);
//            param.put("month", month);
            param.put("day", day);
            List<Map<String, Object>> list = examAutoEvaluationDao.findFireList(param);
            ExamAutoConfig finalAutoConfig = autoConfig;
            list.stream().forEach(map -> {
                /*死亡人数*/
//            int deadNum = map.get("swrs") == null ? 0 : Integer.valueOf(map.get("swrs").toString());
                if (StringUtils.isNotBlank((String)map.get("swrs"))){
                    int deadNum = map.get("swrs") == null ? 0 : Integer.valueOf(map.get("swrs").toString());
                }
//            辖区发生较大以上责任火灾事故或造成旅客死亡火灾事故的。处长扣10分，政委扣5分。分管副处长由绩效办推送。
                String userId = (String) map.get("userId");
                User user =  UserUtils.get(userId);
                PersonnelBase personnelBase = personnelBaseDao.findInfoByIdNumber(user.getNo());
                String companyId = user.getCompany().getId();
                ExamAutoEvaluation auto = new ExamAutoEvaluation();
                auto.setEvaluationId(userId);
                /*处长扣10分，政委扣5分*/
                if (personnelBase != null){
                    String job = personnelBase.getJobAbbreviation();
                    if (StringUtils.isNotBlank(job) ){
                        if (job.contains("处长")){
                            auto.setScore("10");
                        }else if (job.contains("政委")){
                            auto.setScore("5");
                        }else {
                            return;
                        }
                    }
                }
                auto.setModelId(finalAutoConfig.getStandardId());
                auto.setModel(finalAutoConfig.getStandard());
                String detail = user.getName()+"："+map.get("sgjyqk");
                auto.setDetails(detail);
                auto.setOptionId("79c505d640184d31811153a42e66ec68");
                auto.setRowNum(finalAutoConfig.getRowNum());

                    /*
                    //由绩效办推送
                    auto.setModelId("12d8d2d08e9648e481050622aa364a90");
                    auto.setModel("2020年月度对公安处副处长岗位绩效考核扣分标准");
                    auto.setDetails("辖区发生较大以上责任火灾事故或造成旅客死亡火灾事故的。处长扣10分，政委扣5分。分管副处长由绩效办推送。");
                    auto.setOptionId("1157346d0f1740d892a39c4d49cb14ba");
                    */
                auto.setFromSys("警综平台");
                auto.setMonth(month);
                auto.setYear(year);
                auto.setEvalType("5");
                auto.setPeriod("2");
                List<ExamAutoEvaluation> scoreList = dao.findScoreHistoryList(auto);
                if (scoreList != null && scoreList.size() >0){
                    String id = scoreList.get(0).getId();
                    auto.setId(id);
                    String score = scoreList.get(0).getScore();
                    int everyScore = Integer.valueOf(auto.getScore());
                    auto.setScore(String.valueOf(Integer.valueOf(score)+everyScore));
                    auto.setDetails(scoreList.get(0).getDetails()+"\n"+detail);
                }
                auto.setUnit(user.getName());
                this.saveBetaYear(auto);
            });
        }catch (Exception e){
            e.printStackTrace();
        }
    }

    /**
     * 中基层、民警考核
     * 其他火灾类型
     * 由绩效办、消防或部门账号推送。
     * *
     */


    /*绩效考评自动考评*/
    public void exam() {
        try {
            // 查询所有的业务流程定义exam_workflow_define
            ExamWorkflowDefine examWorkflowDefine = new ExamWorkflowDefine();
            List<ExamWorkflowDefine> allInfo = examWorkflowDefineService.findAllInfo(examWorkflowDefine);
            allInfo.forEach(item -> {
                // 局考局机关月度
                if ("1".equals(item.getIsUse()) && "2".equals(item.getExamType()) && "1".equals(item.getExamCycle()) && "1".equals(item.getExamObjectType())) {
                    // 查询对应的工作流程exam_workflow
                    List<Map<String, String>> list = examWorkflowService.findAllInfo(item.getId());
                    // 查询对应的工作流环节信息
                    list.forEach(info -> {
                        List<Map<String, String>> infoList = examWorkflowSegmentsService.findInfoList(info.get("id"));
                        infoList.forEach(iList -> {
                            // 查询工作流环节表的环节的计划结束时间
                            //自评环节的计划结束时间
                            DateFormat fmt = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                            String date1 = examWorkflowSegmentsService.findDate("9");
                            Date d1 = null;
                            try {
                                d1 = fmt.parse(date1);
                            } catch (ParseException e) {
                                e.printStackTrace();
                            }
                            Date apDate = d1;
                            //审核环节的计划结束时间
                            String date2 = examWorkflowSegmentsService.findDate("10");
                            Date d2 = null;
                            try {
                                d2 = fmt.parse(date2);
                            } catch (ParseException e) {
                                e.printStackTrace();
                            }
                            Date shDate = d2;
                            // 从业务数据表筛选数据 exam_workflow_datas
                            List<Map<String, String>> dataInfo = examWorkflowDatasService.findAllInfoById(info.get("id"));
                            dataInfo.forEach(datas -> {
                                // 自评环节
                                if ("1".equals(datas.get("status"))) {
                                    Date update_date = null;
                                    try {
                                        update_date = fmt.parse(datas.get("update_date"));
                                    } catch (ParseException e) {
                                        e.printStackTrace();
                                    }
                                    if (apDate.getTime() <= update_date.getTime()) {
                                        Calendar calendar = Calendar.getInstance();
                                        calendar.setTime(apDate);
                                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                        examAutoEvaluation.setEvaluationId(datas.get("obj_id"));
                                        examAutoEvaluation.setType("1");
                                        examAutoEvaluation.setEvalType("2");
                                        examAutoEvaluation.setPeriod("1");
                                        examAutoEvaluation.setYear(String.valueOf(calendar.get(Calendar.YEAR)));
                                        examAutoEvaluation.setDetails("开启考评后，未及时进行填报扣分");
                                        /*不确定，待完善↓*/
                                        examAutoEvaluation.setUnit("");
                                        examAutoEvaluation.setUnitId("");
                                        /*不确定，待完善↑*/
                                        examAutoEvaluation.setAssess("机关考评小组");
                                        examAutoEvaluation.setRemark("每次");
                                        examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队月度绩效考核公共扣分标准");
                                        examAutoEvaluation.setModelId("7112140f6a7945a9ba1e32e7f06e7480");
                                        /*需要重新整理数据*/
                                        examAutoEvaluation.setOption("");
                                        examAutoEvaluation.setOptionId("");
                                        examAutoEvaluation.setScore("1");
									/*examAutoEvaluation.setTime(date);
									examAutoEvaluation.setHappenTime(date);
									examAutoEvaluation.setCheckTime(date);*/
									examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"绩效考评未及时填报");
									this.summaryStandard(examAutoEvaluation,1.0,"开启考评后，未及时进行填报扣分");
                                        this.save(examAutoEvaluation);
                                    }
                                }
                                //审核环节
                                if ("2".equals(datas.get("status"))) {
                                    Date update_date = null;
                                    try {
                                        update_date = fmt.parse(datas.get("update_date"));
                                    } catch (ParseException e) {
                                        e.printStackTrace();
                                    }
                                    if (shDate.getTime() <= update_date.getTime()) {
                                        Calendar calendar = Calendar.getInstance();
                                        calendar.setTime(shDate);
                                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                        examAutoEvaluation.setEvaluationId(datas.get("obj_id"));
                                        examAutoEvaluation.setType("1");
                                        examAutoEvaluation.setEvalType("2");
                                        examAutoEvaluation.setPeriod("1");
                                        examAutoEvaluation.setYear(String.valueOf(calendar.get(Calendar.YEAR)));
                                        examAutoEvaluation.setDetails("开启考评后，未及时进行填报扣分");
                                        /*不确定，待完善↓*/
                                        examAutoEvaluation.setUnit("");
                                        examAutoEvaluation.setUnitId("");
                                        /*不确定，待完善↑*/
                                        examAutoEvaluation.setAssess("机关考评小组");
                                        examAutoEvaluation.setRemark("每次");
                                        examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队月度绩效考核公共扣分标准");
                                        examAutoEvaluation.setModelId("7112140f6a7945a9ba1e32e7f06e7480");
                                        /*需要重新整理数据*/
                                        examAutoEvaluation.setOption("");
                                        examAutoEvaluation.setOptionId("");
                                        examAutoEvaluation.setScore("1");
									/*examAutoEvaluation.setTime(date);
									examAutoEvaluation.setHappenTime(date);
									examAutoEvaluation.setCheckTime(date);*/

                                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"绩效考评未及时填报");
                                        this.summaryStandard(examAutoEvaluation,1.0,"开启考评后，未及时进行填报扣分");
                                        this.save(examAutoEvaluation);
                                    }
                                }
                            });
                        });
                    });
                }
                //局考局机关年度
                if ("1".equals(item.getIsUse()) && "2".equals(item.getExamType()) && "2".equals(item.getExamCycle()) && "1".equals(item.getExamObjectType())) {
                    // 查询对应的工作流程exam_workflow
                    List<Map<String, String>> list = examWorkflowService.findAllInfo(item.getId());
                    // 查询对应的工作流环节信息
                    list.forEach(info -> {
                        List<Map<String, String>> infoList = examWorkflowSegmentsService.findInfoList(info.get("id"));
                        infoList.forEach(iList -> {
                            // 查询工作流环节表的环节的计划结束时间
                            //自评环节的计划结束时间
                            DateFormat fmt = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                            String date1 = examWorkflowSegmentsService.findDate("9");
                            Date d1 = null;
                            try {
                                d1 = fmt.parse(date1);
                            } catch (ParseException e) {
                                e.printStackTrace();
                            }
                            Date apDate = d1;
                            //审核环节的计划结束时间
                            String date2 = examWorkflowSegmentsService.findDate("10");
                            Date d2 = null;
                            try {
                                d2 = fmt.parse(date2);
                            } catch (ParseException e) {
                                e.printStackTrace();
                            }
                            Date shDate = d2;
                            // 从业务数据表筛选数据 exam_workflow_datas
                            List<Map<String, String>> dataInfo = examWorkflowDatasService.findAllInfoById(info.get("id"));
                            dataInfo.forEach(datas -> {
                                // 自评环节
                                if ("1".equals(datas.get("status"))) {
                                    Date update_date = null;
                                    try {
                                        update_date = fmt.parse(datas.get("update_date"));
                                    } catch (ParseException e) {
                                        e.printStackTrace();
                                    }
                                    if (apDate.getTime() <= update_date.getTime()) {
                                        Calendar calendar = Calendar.getInstance();
                                        calendar.setTime(apDate);
                                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                        examAutoEvaluation.setEvaluationId(datas.get("obj_id"));
                                        examAutoEvaluation.setType("1");
                                        examAutoEvaluation.setEvalType("2");
                                        examAutoEvaluation.setPeriod("2");
                                        examAutoEvaluation.setYear(String.valueOf(calendar.get(Calendar.YEAR)));
                                        examAutoEvaluation.setDetails("开启考评后，未及时进行填报扣分");
                                        /*不确定，待完善↓*/
                                        examAutoEvaluation.setUnit("");
                                        examAutoEvaluation.setUnitId("");
                                        /*不确定，待完善↑*/
                                        examAutoEvaluation.setAssess("机关考评小组");
                                        examAutoEvaluation.setRemark("每次");
                                        examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队年度绩效考核公共扣分标准");
                                        examAutoEvaluation.setModelId("4b60b0f70959409483db918fdfe2b101");
                                        /*需要重新整理数据*/
                                        examAutoEvaluation.setOption("");
                                        examAutoEvaluation.setOptionId("");
                                        examAutoEvaluation.setScore("0.5");

                                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"绩效考评未及时填报");
									/*examAutoEvaluation.setTime(date);
									examAutoEvaluation.setHappenTime(date);
									examAutoEvaluation.setCheckTime(date);*/
                                        this.summaryStandard(examAutoEvaluation,0.5,"开启考评后，未及时进行填报扣分");
                                        this.save(examAutoEvaluation);
                                    }
                                }
                                //审核环节
                                if ("2".equals(datas.get("status"))) {
                                    Date update_date = null;
                                    try {
                                        update_date = fmt.parse(datas.get("update_date"));
                                    } catch (ParseException e) {
                                        e.printStackTrace();
                                    }
                                    if (shDate.getTime() <= update_date.getTime()) {
                                        Calendar calendar = Calendar.getInstance();
                                        calendar.setTime(shDate);
                                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                        examAutoEvaluation.setEvaluationId(datas.get("obj_id"));
                                        examAutoEvaluation.setType("1");
                                        examAutoEvaluation.setEvalType("2");
                                        examAutoEvaluation.setPeriod("2");
                                        examAutoEvaluation.setYear(String.valueOf(calendar.get(Calendar.YEAR)));
                                        examAutoEvaluation.setDetails("开启考评后，未及时进行填报扣分");
                                        /*不确定，待完善↓*/
                                        examAutoEvaluation.setUnit("");
                                        examAutoEvaluation.setUnitId("");
                                        /*不确定，待完善↑*/
                                        examAutoEvaluation.setAssess("机关考评小组");
                                        examAutoEvaluation.setRemark("每次");
                                        examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队年度绩效考核公共扣分标准");
                                        examAutoEvaluation.setModelId("4b60b0f70959409483db918fdfe2b101");
                                        /*需要重新整理数据*/
                                        examAutoEvaluation.setOption("");
                                        examAutoEvaluation.setOptionId("");
                                        examAutoEvaluation.setScore("0.5");
									/*examAutoEvaluation.setTime(date);
									examAutoEvaluation.setHappenTime(date);
									examAutoEvaluation.setCheckTime(date);*/

                                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"绩效考评未及时填报");
                                        this.summaryStandard(examAutoEvaluation,0.5,"开启考评后，未及时进行填报扣分");
                                        this.save(examAutoEvaluation);
                                    }
                                }
                            });
                        });
                    });
                }
                // 处考处机关月度
                if ("1".equals(item.getIsUse()) && "4".equals(item.getExamType()) && "1".equals(item.getExamCycle()) && "1".equals(item.getExamObjectType())) {
                    // 查询对应的工作流程exam_workflow
                    List<Map<String, String>> list = examWorkflowService.findAllInfo(item.getId());
                    // 查询对应的工作流环节信息
                    list.forEach(info -> {
                        List<Map<String, String>> infoList = examWorkflowSegmentsService.findInfoList(info.get("id"));
                        infoList.forEach(iList -> {
                            // 查询工作流环节表的环节的计划结束时间
                            //自评环节的计划结束时间
                            DateFormat fmt = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                            String date1 = examWorkflowSegmentsService.findDate("23");
                            Date d1 = null;
                            try {
                                d1 = fmt.parse(date1);
                            } catch (ParseException e) {
                                e.printStackTrace();
                            }
                            Date apDate = d1;
                            //审核环节的计划结束时间
                            String date2 = examWorkflowSegmentsService.findDate("24");
                            Date d2 = null;
                            try {
                                d2 = fmt.parse(date2);
                            } catch (ParseException e) {
                                e.printStackTrace();
                            }
                            Date shDate = d2;
                            // 从业务数据表筛选数据 exam_workflow_datas
                            List<Map<String, String>> dataInfo = examWorkflowDatasService.findAllInfoById(info.get("id"));
                            dataInfo.forEach(datas -> {
                                // 自评环节
                                if ("1".equals(datas.get("status"))) {
                                    Date update_date = null;
                                    try {
                                        update_date = fmt.parse(datas.get("update_date"));
                                    } catch (ParseException e) {
                                        e.printStackTrace();
                                    }
                                    if (apDate.getTime() <= update_date.getTime()) {
                                        Calendar calendar = Calendar.getInstance();
                                        calendar.setTime(apDate);
                                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                        examAutoEvaluation.setEvaluationId(datas.get("obj_id"));
                                        examAutoEvaluation.setType("1");
                                        examAutoEvaluation.setEvalType("4");
                                        examAutoEvaluation.setPeriod("1");
                                        examAutoEvaluation.setYear(String.valueOf(calendar.get(Calendar.YEAR)));
                                        examAutoEvaluation.setDetails("开启考评后，未及时进行填报扣分");
                                        /*不确定，待完善↓*/
                                        examAutoEvaluation.setUnit("");
                                        examAutoEvaluation.setUnitId("");
                                        /*不确定，待完善↑*/
                                        examAutoEvaluation.setAssess("");
                                        examAutoEvaluation.setRemark("");
                                        examAutoEvaluation.setModel("");
                                        examAutoEvaluation.setModelId("");
                                        /*需要重新整理数据*/
                                        examAutoEvaluation.setOption("");
                                        examAutoEvaluation.setOptionId("");
                                        examAutoEvaluation.setScore("1");

									/*examAutoEvaluation.setTime(date);
									examAutoEvaluation.setHappenTime(date);
									examAutoEvaluation.setCheckTime(date);*/
                                        this.summaryStandard(examAutoEvaluation,1.0,"开启考评后，未及时进行填报扣分");
                                        this.save(examAutoEvaluation);
                                    }
                                }
                                //审核环节
                                if ("2".equals(datas.get("status"))) {
                                    Date update_date = null;
                                    try {
                                        update_date = fmt.parse(datas.get("update_date"));
                                    } catch (ParseException e) {
                                        e.printStackTrace();
                                    }
                                    if (shDate.getTime() <= update_date.getTime()) {
                                        Calendar calendar = Calendar.getInstance();
                                        calendar.setTime(shDate);
                                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                        examAutoEvaluation.setEvaluationId(datas.get("obj_id"));
                                        examAutoEvaluation.setType("1");
                                        examAutoEvaluation.setEvalType("4");
                                        examAutoEvaluation.setPeriod("1");
                                        examAutoEvaluation.setYear(String.valueOf(calendar.get(Calendar.YEAR)));
                                        examAutoEvaluation.setDetails("开启考评后，未及时进行填报扣分");
                                        /*不确定，待完善↓*/
                                        examAutoEvaluation.setUnit("");
                                        examAutoEvaluation.setUnitId("");
                                        /*不确定，待完善↑*/
                                        examAutoEvaluation.setAssess("");
                                        examAutoEvaluation.setRemark("");
                                        examAutoEvaluation.setModel("");
                                        examAutoEvaluation.setModelId("");
                                        /*需要重新整理数据*/
                                        examAutoEvaluation.setOption("");
                                        examAutoEvaluation.setOptionId("");
                                        examAutoEvaluation.setScore("1");
									/*examAutoEvaluation.setTime(date);
									examAutoEvaluation.setHappenTime(date);
									examAutoEvaluation.setCheckTime(date);*/
                                        this.summaryStandard(examAutoEvaluation,1.0,"开启考评后，未及时进行填报扣分");
                                        this.save(examAutoEvaluation);
                                    }
                                }
                            });
                        });
                    });
                }
                //初考派出所
                if ("1".equals(item.getIsUse()) && "3".equals(item.getExamType()) && "1".equals(item.getExamCycle()) && "1".equals(item.getExamObjectType())) {
                    // 查询对应的工作流程exam_workflow
                    List<Map<String, String>> list = examWorkflowService.findAllInfo(item.getId());
                    // 查询对应的工作流环节信息
                    list.forEach(info -> {
                        List<Map<String, String>> infoList = examWorkflowSegmentsService.findInfoList(info.get("id"));
                        infoList.forEach(iList -> {
                            // 查询工作流环节表的环节的计划结束时间
                            //自评环节的计划结束时间
                            DateFormat fmt = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                            String date1 = examWorkflowSegmentsService.findDate("15");
                            Date d1 = null;
                            try {
                                d1 = fmt.parse(date1);
                            } catch (ParseException e) {
                                e.printStackTrace();
                            }
                            Date apDate = d1;
                            //审核环节的计划结束时间
                            String date2 = examWorkflowSegmentsService.findDate("16");
                            Date d2 = null;
                            try {
                                d2 = fmt.parse(date2);
                            } catch (ParseException e) {
                                e.printStackTrace();
                            }
                            Date shDate = d2;
                            // 从业务数据表筛选数据 exam_workflow_datas
                            List<Map<String, String>> dataInfo = examWorkflowDatasService.findAllInfoById(info.get("id"));
                            dataInfo.forEach(datas -> {
                                // 自评环节
                                if ("1".equals(datas.get("status"))) {
                                    Date update_date = null;
                                    try {
                                        update_date = fmt.parse(datas.get("update_date"));
                                    } catch (ParseException e) {
                                        e.printStackTrace();
                                    }
                                    if (apDate.getTime() <= update_date.getTime()) {
                                        Calendar calendar = Calendar.getInstance();
                                        calendar.setTime(apDate);
                                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                        examAutoEvaluation.setEvaluationId(datas.get("obj_id"));
                                        examAutoEvaluation.setType("1");
                                        examAutoEvaluation.setEvalType("3");
                                        examAutoEvaluation.setPeriod("1");
                                        examAutoEvaluation.setYear(String.valueOf(calendar.get(Calendar.YEAR)));
                                        examAutoEvaluation.setDetails("开启考评后，未及时进行填报扣分");
                                        /*不确定，待完善↓*/
                                        examAutoEvaluation.setUnit("");
                                        examAutoEvaluation.setUnitId("");
                                        /*不确定，待完善↑*/
                                        examAutoEvaluation.setAssess("");
                                        examAutoEvaluation.setRemark("");
                                        examAutoEvaluation.setModel("");
                                        examAutoEvaluation.setModelId("");
                                        /*需要重新整理数据*/
                                        examAutoEvaluation.setOption("");
                                        examAutoEvaluation.setOptionId("");
                                        examAutoEvaluation.setScore("1");
									/*examAutoEvaluation.setTime(date);
									examAutoEvaluation.setHappenTime(date);
									examAutoEvaluation.setCheckTime(date);*/
                                        this.summaryStandard(examAutoEvaluation,1.0,"开启考评后，未及时进行填报扣分");
                                        this.save(examAutoEvaluation);
                                    }
                                }
                                //审核环节
                                if ("2".equals(datas.get("status"))) {
                                    Date update_date = null;
                                    try {
                                        update_date = fmt.parse(datas.get("update_date"));
                                    } catch (ParseException e) {
                                        e.printStackTrace();
                                    }
                                    if (shDate.getTime() <= update_date.getTime()) {
                                        Calendar calendar = Calendar.getInstance();
                                        calendar.setTime(shDate);
                                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                        examAutoEvaluation.setEvaluationId(datas.get("obj_id"));
                                        examAutoEvaluation.setType("1");
                                        examAutoEvaluation.setEvalType("3");
                                        examAutoEvaluation.setPeriod("1");
                                        examAutoEvaluation.setYear(String.valueOf(calendar.get(Calendar.YEAR)));
                                        examAutoEvaluation.setDetails("开启考评后，未及时进行填报扣分");
                                        /*不确定，待完善↓*/
                                        examAutoEvaluation.setUnit("");
                                        examAutoEvaluation.setUnitId("");
                                        /*不确定，待完善↑*/
                                        examAutoEvaluation.setAssess("");
                                        examAutoEvaluation.setRemark("");
                                        examAutoEvaluation.setModel("");
                                        examAutoEvaluation.setModelId("");
                                        /*需要重新整理数据*/
                                        examAutoEvaluation.setOption("");
                                        examAutoEvaluation.setOptionId("");
                                        examAutoEvaluation.setScore("1");
									/*examAutoEvaluation.setTime(date);
									examAutoEvaluation.setHappenTime(date);
									examAutoEvaluation.setCheckTime(date);*/
                                        this.summaryStandard(examAutoEvaluation,1.0,"开启考评后，未及时进行填报扣分");
                                        this.save(examAutoEvaluation);
                                    }
                                }
                            });
                        });
                    });
                }
                // 处领导考评
                if ("1".equals(item.getIsUse()) && "5".equals(item.getExamType()) && "1".equals(item.getExamCycle()) && "1".equals(item.getExamObjectType())) {
                    // 查询对应的工作流程exam_workflow
                    List<Map<String, String>> list = examWorkflowService.findAllInfo(item.getId());
                    // 查询对应的工作流环节信息
                    list.forEach(info -> {
                        List<Map<String, String>> infoList = examWorkflowSegmentsService.findInfoList(info.get("id"));
                        infoList.forEach(iList -> {
                            // 查询工作流环节表的环节的计划结束时间
                            //自评环节的计划结束时间
                            DateFormat fmt = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                            String date1 = examWorkflowSegmentsService.findDate("29");
                            Date d1 = null;
                            try {
                                d1 = fmt.parse(date1);
                            } catch (ParseException e) {
                                e.printStackTrace();
                            }
                            Date apDate = d1;
                            //审核环节的计划结束时间
                            String date2 = examWorkflowSegmentsService.findDate("30");
                            Date d2 = null;
                            try {
                                d2 = fmt.parse(date2);
                            } catch (ParseException e) {
                                e.printStackTrace();
                            }
                            Date shDate = d2;
                            // 从业务数据表筛选数据 exam_workflow_datas
                            List<Map<String, String>> dataInfo = examWorkflowDatasService.findAllInfoById(info.get("id"));
                            dataInfo.forEach(datas -> {
                                // 自评环节
                                if ("1".equals(datas.get("status"))) {
                                    Date update_date = null;
                                    try {
                                        update_date = fmt.parse(datas.get("update_date"));
                                    } catch (ParseException e) {
                                        e.printStackTrace();
                                    }
                                    if (apDate.getTime() <= update_date.getTime()) {
                                        Calendar calendar = Calendar.getInstance();
                                        calendar.setTime(apDate);
                                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                        examAutoEvaluation.setEvaluationId(datas.get("obj_id"));
                                        examAutoEvaluation.setType("1");
                                        examAutoEvaluation.setEvalType("5");
                                        examAutoEvaluation.setPeriod("1");
                                        examAutoEvaluation.setYear(String.valueOf(calendar.get(Calendar.YEAR)));
                                        examAutoEvaluation.setDetails("开启考评后，未及时进行填报扣分");
                                        /*不确定，待完善↓*/
                                        examAutoEvaluation.setUnit("");
                                        examAutoEvaluation.setUnitId("");
                                        /*不确定，待完善↑*/
                                        examAutoEvaluation.setAssess("");
                                        examAutoEvaluation.setRemark("");
                                        examAutoEvaluation.setModel("");
                                        examAutoEvaluation.setModelId("");
                                        /*需要重新整理数据*/
                                        examAutoEvaluation.setOption("");
                                        examAutoEvaluation.setOptionId("");
                                        examAutoEvaluation.setScore("2");
									/*examAutoEvaluation.setTime(date);
									examAutoEvaluation.setHappenTime(date);
									examAutoEvaluation.setCheckTime(date);*/
                                        this.summaryStandard(examAutoEvaluation,2.0,"开启考评后，未及时进行填报扣分");
                                        this.save(examAutoEvaluation);
                                    }
                                }
                                //审核环节
                                if ("2".equals(datas.get("status"))) {
                                    Date update_date = null;
                                    try {
                                        update_date = fmt.parse(datas.get("update_date"));
                                    } catch (ParseException e) {
                                        e.printStackTrace();
                                    }
                                    if (shDate.getTime() <= update_date.getTime()) {
                                        Calendar calendar = Calendar.getInstance();
                                        calendar.setTime(shDate);
                                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                        examAutoEvaluation.setEvaluationId(datas.get("obj_id"));
                                        examAutoEvaluation.setType("1");
                                        examAutoEvaluation.setEvalType("5");
                                        examAutoEvaluation.setPeriod("1");
                                        examAutoEvaluation.setYear(String.valueOf(calendar.get(Calendar.YEAR)));
                                        examAutoEvaluation.setDetails("开启考评后，未及时进行填报扣分");
                                        /*不确定，待完善↓*/
                                        examAutoEvaluation.setUnit("");
                                        examAutoEvaluation.setUnitId("");
                                        /*不确定，待完善↑*/
                                        examAutoEvaluation.setAssess("");
                                        examAutoEvaluation.setRemark("");
                                        examAutoEvaluation.setModel("");
                                        examAutoEvaluation.setModelId("");
                                        /*需要重新整理数据*/
                                        examAutoEvaluation.setOption("");
                                        examAutoEvaluation.setOptionId("");
                                        examAutoEvaluation.setScore("2");
									/*examAutoEvaluation.setTime(date);
									examAutoEvaluation.setHappenTime(date);
									examAutoEvaluation.setCheckTime(date);*/
                                        this.summaryStandard(examAutoEvaluation,2.0,"开启考评后，未及时进行填报扣分");
                                        this.save(examAutoEvaluation);
                                    }
                                }
                            });
                        });
                    });
                }
                // 中基层领导
                if ("1".equals(item.getIsUse()) && "6".equals(item.getExamType()) && "1".equals(item.getExamCycle()) && "1".equals(item.getExamObjectType())) {
                    // 查询对应的工作流程exam_workflow
                    List<Map<String, String>> list = examWorkflowService.findAllInfo(item.getId());
                    // 查询对应的工作流环节信息
                    list.forEach(info -> {
                        List<Map<String, String>> infoList = examWorkflowSegmentsService.findInfoList(info.get("id"));
                        infoList.forEach(iList -> {
                            // 查询工作流环节表的环节的计划结束时间
                            //自评环节的计划结束时间
                            DateFormat fmt = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                            String date1 = examWorkflowSegmentsService.findDate("35");
                            Date d1 = null;
                            try {
                                d1 = fmt.parse(date1);
                            } catch (ParseException e) {
                                e.printStackTrace();
                            }
                            Date apDate = d1;
                            //审核环节的计划结束时间
                            String date2 = examWorkflowSegmentsService.findDate("36");
                            Date d2 = null;
                            try {
                                d2 = fmt.parse(date2);
                            } catch (ParseException e) {
                                e.printStackTrace();
                            }
                            Date shDate = d2;
                            // 从业务数据表筛选数据 exam_workflow_datas
                            List<Map<String, String>> dataInfo = examWorkflowDatasService.findAllInfoById(info.get("id"));
                            dataInfo.forEach(datas -> {
                                // 自评环节
                                if ("1".equals(datas.get("status"))) {
                                    Date update_date = null;
                                    try {
                                        update_date = fmt.parse(datas.get("update_date"));
                                    } catch (ParseException e) {
                                        e.printStackTrace();
                                    }
                                    if (apDate.getTime() <= update_date.getTime()) {
                                        Calendar calendar = Calendar.getInstance();
                                        calendar.setTime(apDate);
                                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                        examAutoEvaluation.setEvaluationId(datas.get("obj_id"));
                                        examAutoEvaluation.setType("1");
                                        examAutoEvaluation.setEvalType("6");
                                        examAutoEvaluation.setPeriod("1");
                                        examAutoEvaluation.setYear(String.valueOf(calendar.get(Calendar.YEAR)));
                                        examAutoEvaluation.setDetails("开启考评后，未及时进行填报扣分");
                                        /*不确定，待完善↓*/
                                        examAutoEvaluation.setUnit("");
                                        examAutoEvaluation.setUnitId("");
                                        /*不确定，待完善↑*/
                                        examAutoEvaluation.setAssess("");
                                        examAutoEvaluation.setRemark("");
                                        examAutoEvaluation.setModel("");
                                        examAutoEvaluation.setModelId("");
                                        /*需要重新整理数据*/
                                        examAutoEvaluation.setOption("");
                                        examAutoEvaluation.setOptionId("");
                                        examAutoEvaluation.setScore("2");
									/*examAutoEvaluation.setTime(date);
									examAutoEvaluation.setHappenTime(date);
									examAutoEvaluation.setCheckTime(date);*/
                                        this.summaryStandard(examAutoEvaluation,2.0,"开启考评后，未及时进行填报扣分");
                                        this.save(examAutoEvaluation);
                                    }
                                }
                                //审核环节
                                if ("2".equals(datas.get("status"))) {
                                    Date update_date = null;
                                    try {
                                        update_date = fmt.parse(datas.get("update_date"));
                                    } catch (ParseException e) {
                                        e.printStackTrace();
                                    }
                                    if (shDate.getTime() <= update_date.getTime()) {
                                        Calendar calendar = Calendar.getInstance();
                                        calendar.setTime(shDate);
                                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                        examAutoEvaluation.setEvaluationId(datas.get("obj_id"));
                                        examAutoEvaluation.setType("1");
                                        examAutoEvaluation.setEvalType("6");
                                        examAutoEvaluation.setPeriod("1");
                                        examAutoEvaluation.setYear(String.valueOf(calendar.get(Calendar.YEAR)));
                                        examAutoEvaluation.setDetails("开启考评后，未及时进行填报扣分");
                                        /*不确定，待完善↓*/
                                        examAutoEvaluation.setUnit("");
                                        examAutoEvaluation.setUnitId("");
                                        /*不确定，待完善↑*/
                                        examAutoEvaluation.setAssess("");
                                        examAutoEvaluation.setRemark("");
                                        examAutoEvaluation.setModel("");
                                        examAutoEvaluation.setModelId("");
                                        /*需要重新整理数据*/
                                        examAutoEvaluation.setOption("");
                                        examAutoEvaluation.setOptionId("");
                                        examAutoEvaluation.setScore("2");
									/*examAutoEvaluation.setTime(date);
									examAutoEvaluation.setHappenTime(date);
									examAutoEvaluation.setCheckTime(date);*/
                                        this.summaryStandard(examAutoEvaluation,2.0,"开启考评后，未及时进行填报扣分");
                                        this.save(examAutoEvaluation);
                                    }
                                }
                            });
                        });
                    });
                }
                // 民警
                if ("1".equals(item.getIsUse()) && "7".equals(item.getExamType()) && "1".equals(item.getExamCycle()) && "1".equals(item.getExamObjectType())) {
                    // 查询对应的工作流程exam_workflow
                    List<Map<String, String>> list = examWorkflowService.findAllInfo(item.getId());
                    // 查询对应的工作流环节信息
                    list.forEach(info -> {
                        List<Map<String, String>> infoList = examWorkflowSegmentsService.findInfoList(info.get("id"));
                        infoList.forEach(iList -> {
                            // 查询工作流环节表的环节的计划结束时间
                            //自评环节的计划结束时间
                            DateFormat fmt = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                            String date1 = examWorkflowSegmentsService.findDate("41");
                            Date d1 = null;
                            try {
                                d1 = fmt.parse(date1);
                            } catch (ParseException e) {
                                e.printStackTrace();
                            }
                            Date apDate = d1;
                            //审核环节的计划结束时间
                            String date2 = examWorkflowSegmentsService.findDate("42");
                            Date d2 = null;
                            try {
                                d2 = fmt.parse(date2);
                            } catch (ParseException e) {
                                e.printStackTrace();
                            }
                            Date shDate = d2;
                            // 从业务数据表筛选数据 exam_workflow_datas
                            List<Map<String, String>> dataInfo = examWorkflowDatasService.findAllInfoById(info.get("id"));
                            dataInfo.forEach(datas -> {
                                // 自评环节
                                if ("1".equals(datas.get("status"))) {
                                    Date update_date = null;
                                    try {
                                        update_date = fmt.parse(datas.get("update_date"));
                                    } catch (ParseException e) {
                                        e.printStackTrace();
                                    }
                                    if (apDate.getTime() <= update_date.getTime()) {
                                        Calendar calendar = Calendar.getInstance();
                                        calendar.setTime(apDate);
                                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                        examAutoEvaluation.setEvaluationId(datas.get("obj_id"));
                                        examAutoEvaluation.setType("1");
                                        examAutoEvaluation.setEvalType("7");
                                        examAutoEvaluation.setPeriod("1");
                                        examAutoEvaluation.setYear(String.valueOf(calendar.get(Calendar.YEAR)));
                                        examAutoEvaluation.setDetails("开启考评后，未及时进行填报扣分");
                                        /*不确定，待完善↓*/
                                        examAutoEvaluation.setUnit("");
                                        examAutoEvaluation.setUnitId("");
                                        /*不确定，待完善↑*/
                                        examAutoEvaluation.setAssess("");
                                        examAutoEvaluation.setRemark("");
                                        examAutoEvaluation.setModel("");
                                        examAutoEvaluation.setModelId("");
                                        /*需要重新整理数据*/
                                        examAutoEvaluation.setOption("");
                                        examAutoEvaluation.setOptionId("");
                                        examAutoEvaluation.setScore("2");
									/*examAutoEvaluation.setTime(date);
									examAutoEvaluation.setHappenTime(date);
									examAutoEvaluation.setCheckTime(date);*/
                                        this.summaryStandard(examAutoEvaluation,2.0,"开启考评后，未及时进行填报扣分");
                                        this.save(examAutoEvaluation);
                                    }
                                }
                                //审核环节
                                if ("2".equals(datas.get("status"))) {
                                    Date update_date = null;
                                    try {
                                        update_date = fmt.parse(datas.get("update_date"));
                                    } catch (ParseException e) {
                                        e.printStackTrace();
                                    }
                                    if (shDate.getTime() <= update_date.getTime()) {
                                        Calendar calendar = Calendar.getInstance();
                                        calendar.setTime(shDate);
                                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                                        examAutoEvaluation.setEvaluationId(datas.get("obj_id"));
                                        examAutoEvaluation.setType("1");
                                        examAutoEvaluation.setEvalType("7");
                                        examAutoEvaluation.setPeriod("1");
                                        examAutoEvaluation.setYear(String.valueOf(calendar.get(Calendar.YEAR)));
                                        examAutoEvaluation.setDetails("开启考评后，未及时进行填报扣分");
                                        /*不确定，待完善↓*/
                                        examAutoEvaluation.setUnit("");
                                        examAutoEvaluation.setUnitId("");
                                        /*不确定，待完善↑*/
                                        examAutoEvaluation.setAssess("");
                                        examAutoEvaluation.setRemark("");
                                        examAutoEvaluation.setModel("");
                                        examAutoEvaluation.setModelId("");
                                        /*需要重新整理数据*/
                                        examAutoEvaluation.setOption("");
                                        examAutoEvaluation.setOptionId("");
                                        examAutoEvaluation.setScore("2");
									/*examAutoEvaluation.setTime(date);
									examAutoEvaluation.setHappenTime(date);
									examAutoEvaluation.setCheckTime(date);*/
                                        this.summaryStandard(examAutoEvaluation,2.0,"开启考评后，未及时进行填报扣分");
                                        this.save(examAutoEvaluation);
                                    }
                                }
                            });
                        });
                    });
                }
            });
        } catch (Exception e) {
            logger.error("自动考评-->绩效考评自动考评");
            e.printStackTrace();
        }
    }

    /**
     * 保存局考处
     *
     * @param examAutoEvaluation
     */
    public void saveJuKaoChu(ExamAutoEvaluation examAutoEvaluation) {
        examAutoEvaluation.setId(null);
        examAutoEvaluation.setEvalType("1");
        this.save(examAutoEvaluation);
    }

    /**
     * 保存局考局机关
     *
     * @param examAutoEvaluation
     */
    public void saveJuKaJuJiGuan(ExamAutoEvaluation examAutoEvaluation) {
        examAutoEvaluation.setId(null);
        examAutoEvaluation.setEvalType("2");
        this.save(examAutoEvaluation);
    }

    /**
     * 保存处考处机关
     *
     * @param examAutoEvaluation
     */
    public void saveChuKaoChuJiGuan(ExamAutoEvaluation examAutoEvaluation) {
        examAutoEvaluation.setId(null);
        examAutoEvaluation.setEvalType("4");
        this.save(examAutoEvaluation);
    }

    /**
     * 根据 党组织id，查询用户id
     *
     * @param partyId
     * @return
     */
    public List<User> getUserByPartyId(String partyId) {
        List<User> userList = userDao.getUserByPartyId(partyId);
        return userList;
    }
    /**
     * 根据 团组织id，查询用户id
     *
     * @param unitId
     * @return
     */
    public List<User> getUserByTwId(String unitId) {
        List<User> userList = userDao.getUserByTwId(unitId);
        return userList;
    }

    public List<ExamStandardBaseInfo> findModelByOptionList(ExamAutoEvaluation examAutoEvaluation) {

        return dao.findModelByOptionList(examAutoEvaluation);
    }

    public List<ExamStandardTemplateData> findOptionListByModel(String option, String standardBaseInfoId) {
        ExamStandardBaseInfo standardBaseInfo = examStandardBaseInfoService.get(standardBaseInfoId);
        ExamStandardTemplateDefine define = new ExamStandardTemplateDefine();
        define.setExamStardardId(standardBaseInfoId);
        List<ExamStandardTemplateDefine> defineList = examStandardTemplateDefineService.findList(define);
        List<ExamStandardTemplateItemDefine> itemList = new ArrayList<>();
        defineList.stream().forEach(item -> {

            ExamStandardTemplateItemDefine itemDefine = new ExamStandardTemplateItemDefine();
            itemDefine.setTemplateId(item.getId());
            itemDefine.setColumnType("1");
            List<ExamStandardTemplateItemDefine> tempList = examStandardTemplateItemDefineService.findList(itemDefine);
            itemList.addAll(tempList);
        });
        List<ExamStandardTemplateData> templateDataList = new ArrayList<>();
        itemList.stream().forEach(item -> {
            ExamStandardTemplateData standardTemplateData = new ExamStandardTemplateData();
            standardTemplateData.setItemId(item.getId());
            standardTemplateData.setItemValue(option);
            List<ExamStandardTemplateData> tempList = examStandardTemplateDataService.findList(standardTemplateData);
            templateDataList.addAll(tempList);
        });
        return templateDataList;
    }


    public ExamAutoEvaluation unitChack(String parentIds,ExamAutoEvaluation examAutoEvaluation,String unitName){
        if (parentIds.contains(",34,") || unitName.contains("南宁")){
            examAutoEvaluation.setUnit("南宁处政治处组织干部室");
            examAutoEvaluation.setUnitId("27");
        }
        if (parentIds.contains(",95,") || unitName.contains("柳州")){
            examAutoEvaluation.setUnit("柳州处政治处组织干部室");
            examAutoEvaluation.setUnitId("142");
        }
        if (parentIds.contains(",156,") || unitName.contains("北海")){
            examAutoEvaluation.setUnit("北海处政治处组织干部室");
            examAutoEvaluation.setUnitId("264");
        }
        return examAutoEvaluation;
    }
    /**
     * 根据角色id，查询相应角色用户
     * @param roleIds
     * @return
     */
    public List<User> getUserByRoleId(List<String> roleIds){
        List<User> userList = userDao.getUserByRoleId(roleIds);
        return userList;
    }
    //根据年、月、被考评人id、标准id、选择项id 删除，主要用于每日定时任务，删除之前数据
    public void deleteInfoByMore(ExamAutoEvaluation examAutoEvaluation){
        examAutoEvaluationDao.deleteInfoByMore(examAutoEvaluation);
    }
    //根据年、月、被考评人id、标准id、选择项id 查询
    public ExamAutoEvaluation getInfoByMore(ExamAutoEvaluation examAutoEvaluation){
        return examAutoEvaluationDao.getInfoByMore(examAutoEvaluation);
    }
    /**
     * 每日定时任务，年度查询，获取查询的时间段，year
     * @param year
     */
    public Map<String,Object> getTimeQuantumByYear(String year){
        Map<String,Object> map = new HashMap<>();
        Integer yearInt;
        try {
            yearInt = Integer.parseInt(year);
        }catch (Exception e){
            e.printStackTrace();
            yearInt = Integer.parseInt(DateUtils.getYear());
        }
        String nowYear = "";
        String lastYear = "";
        Integer dayInt = Integer.parseInt(DateUtils.getDay());
        Integer monthInt = Integer.parseInt(DateUtils.getMonth());
        String checkTime2 = "";
        //上年12月2号 至  本年 12月1号
        //3号运行数据属于本年，3号及以后运行数据属于下一年
        if(monthInt==12){
            if(dayInt>=11){
                //当前日期大于等于2号，应采用本年12月2号到下年12月1号时间段时间
                nowYear = (yearInt + 1) + "-12-10";
                lastYear = year + "-12-11";
                year = String.valueOf(yearInt+1);
            }else{
                nowYear = year + "-12-10";
                lastYear = (yearInt - 1) + "-12-11";
            }
        }else{
            nowYear = year + "-12-10";
            lastYear = (yearInt - 1) + "-12-11";
        }
        Date nowYearDate = DateUtils.parseDate(nowYear);
        Date lastYearDate = DateUtils.parseDate(lastYear);
        map.put("nowYear",nowYearDate);
        map.put("lastYear",lastYearDate);
        map.put("year",year);
        return map;
    }
    /**
     * 每日定时任务，月度查询，获取查询的时间段，year,month
     * @param year
     * @param month
     * @param fromSys  政工/外部
     */
    public Map<String,Object> getTimeQuantumByMonth(String year,String month,String fromSys){
        Map<String,Object> map = new HashMap<>();
        Integer monthInt = Integer.parseInt(month);
        Integer yearInt = Integer.parseInt(year);
        Integer dayInt = Integer.parseInt(DateUtils.getDay());
        String lastTime = "";
        String nowTime = "";
        if("政工".equals(fromSys)){
            Calendar calendar = Calendar.getInstance();
            calendar.set(Calendar.YEAR,yearInt);
            calendar.set(Calendar.MONTH,monthInt);
            calendar.set(Calendar.DAY_OF_MONTH,1);
            calendar.add(Calendar.DAY_OF_MONTH,-1);
            int endDay = calendar.get(Calendar.DAY_OF_MONTH);
            lastTime = year+"-"+month+"-01";
            nowTime = year+"-"+month+"-"+endDay;
        }else{
            //上月26号 至  本月 25号
            //26号运行数据属于本月，27号及以后属于下个月
            if(dayInt>=27){
                //当前日期大于等于26号，应采用本月26号到下月25号时间段时间
                lastTime = year+"-"+month+"-26";
                if(monthInt==12){
                    nowTime = (yearInt+1)+"-01-25";
                    year = String.valueOf((yearInt+1));
                    month = "01";
                }else{
                    nowTime = year+"-"+(monthInt+1)+"-25";
                    String tempMonth = String.valueOf(monthInt+1);
                    //month = String.valueOf(monthInt+1);
                    if(tempMonth.length()<2){
                        StringBuffer sb = new StringBuffer();
                        sb.append("0").append(tempMonth);
                        month = sb.toString();
                    }else{
                        month = tempMonth;
                    }
                }
            }
            else{
                //上月26号  到  本月25号事件段
                if(monthInt==1){
                    lastTime = yearInt-1+"-12-26";
                }else{
                    lastTime = year+"-"+(monthInt-1)+"-26";
                }
                nowTime = year+"-"+month+"-25";
            }
        }

        Date nowMonthDate = DateUtils.parseDate(nowTime);//当前月25号
        Date lastMonthDate = DateUtils.parseDate(lastTime);//上月26号
        map.put("nowTime",nowMonthDate);
        map.put("lastTime",lastMonthDate);
        map.put("year",year);
        map.put("month",month);
        return map;
    }

    public static int IdNOToAge(String IdNO) {
        if (StringUtils.isNotBlank(IdNO)) {
            int leh = IdNO.length();
            String dates = "";
            if (leh == 18) {

                dates = IdNO.substring(6, 10);
                SimpleDateFormat df = new SimpleDateFormat("yyyy");
                String year = df.format(new Date());
                int u = Integer.parseInt(year) - Integer.parseInt(dates);
                return u;
            }else if (leh == 0) {
                return 0;
            }
        }
        return 0;
    }

    /*
     * 局考处
     *
     * 宣传思想-新闻宣传-稿件汇总-刊稿排名
     *
     * 月度
     * */
    @Transactional(readOnly = false)
    public void jkcKgpm(String checkTime){

        String year = checkTime.substring(0, 4);
        Integer y = Integer.valueOf(year);
        String month = checkTime.substring(checkTime.length() - 2);
        Integer m = Integer.valueOf(month);

        Map<String, String> map = this.monthTime(checkTime);
        String yearL = map.get("yearL");
        String yearT = map.get("yearT");

        List<Office> nncPartyList = officeDao.selectChuUnitList("34");
        List<Office> lzcPartyList = officeDao.selectChuUnitList("95");
        List<Office> bhcPartyList = officeDao.selectChuUnitList("156");

        StringBuilder nncdetails1 = new StringBuilder();
        StringBuilder nncdetails2 = new StringBuilder();
        StringBuilder nncdetails3 = new StringBuilder();
        StringBuilder nncdetails4 = new StringBuilder();
        StringBuilder nncdetails5 = new StringBuilder();
        StringBuilder nncdetails6 = new StringBuilder();
        StringBuilder nncdetails7 = new StringBuilder();

        StringBuilder lzcdetails1 = new StringBuilder();
        StringBuilder lzcdetails2 = new StringBuilder();
        StringBuilder lzcdetails3 = new StringBuilder();
        StringBuilder lzcdetails4 = new StringBuilder();
        StringBuilder lzcdetails5 = new StringBuilder();
        StringBuilder lzcdetails6 = new StringBuilder();
        StringBuilder lzcdetails7 = new StringBuilder();

        StringBuilder bhcdetails1 = new StringBuilder();
        StringBuilder bhcdetails2 = new StringBuilder();
        StringBuilder bhcdetails3 = new StringBuilder();
        StringBuilder bhcdetails4 = new StringBuilder();
        StringBuilder bhcdetails5 = new StringBuilder();
        StringBuilder bhcdetails6 = new StringBuilder();
        StringBuilder bhcdetails7 = new StringBuilder();

        int nncNum1 = 0;
        int nncNum2 = 0;
        int nncNum3 = 0;
        int nncNum4 = 0;
        int nncNum5 = 0;
        int nncNum6 = 0;
        int nncNum7 = 0;

        int lzcNum1 = 0;
        int lzcNum2 = 0;
        int lzcNum3 = 0;
        int lzcNum4 = 0;
        int lzcNum5 = 0;
        int lzcNum6 = 0;
        int lzcNum7 = 0;

        int bhcNum1 = 0;
        int bhcNum2 = 0;
        int bhcNum3 = 0;
        int bhcNum4 = 0;
        int bhcNum5 = 0;
        int bhcNum6 = 0;
        int bhcNum7 = 0;

        String adopt1 = "1";
        String adopt2 = "2";
        String adopt3 = "3";
        String adopt4 = "4";
        String adopt5 = "5";
        String adopt6 = "6";
        String adopt7 = "7";

        for (int o = 0; o < nncPartyList.size(); o++) {
            Office office = nncPartyList.get(o);
            //公安处名称
            String unit = office.getName();
            //公安处id
            String unitId = office.getId();

            //根据时间，单位id，稿件采用情况查询
            int adopt1Num = affairNewsDao.selectNumber(yearL,yearT,unitId,adopt1);
            if (adopt1Num > 0){
                nncNum1++;
                nncdetails1.append(unit).append(year).append("年").append(month).append("月").append("电视专题片被中央电视台采用");
            }
            int adopt2Num = affairNewsDao.selectNumber(yearL,yearT,unitId,adopt2);
            if (adopt2Num > 0){
                nncNum2++;
                nncdetails2.append(unit).append(year).append("年").append(month).append("月").append("中央级报纸头条采纳");
            }
            int adopt3Num = affairNewsDao.selectNumber(yearL,yearT,unitId,adopt3);
            if (adopt3Num > 0){
                nncNum3++;
                nncdetails3.append(unit).append(year).append("年").append(month).append("月").append("中央级报纸采纳");
            }
            int adopt4Num = affairNewsDao.selectNumber(yearL,yearT,unitId,adopt4);
            if (adopt4Num > 0){
                nncNum4++;
                nncdetails4.append(unit).append(year).append("年").append(month).append("月").append("央视新闻联播采用");
            }
            int adopt5Num = affairNewsDao.selectNumber(yearL,yearT,unitId,adopt5);
            if (adopt5Num > 0){
                nncNum5++;
                nncdetails5.append(unit).append(year).append("年").append(month).append("月").append("中央人民广播电台采用");
            }
            int adopt6Num = affairNewsDao.selectNumber(yearL,yearT,unitId,adopt6);
            if (adopt6Num > 0){
                nncNum6++;
                nncdetails6.append(unit).append(year).append("年").append(month).append("月").append("中央级报纸头版头条采用");
            }
            int adopt7Num = affairNewsDao.selectNumber(yearL,yearT,unitId,adopt7);
            if (adopt7Num > 0){
                nncNum7++;
                nncdetails7.append(unit).append(year).append("年").append(month).append("月").append("中央级报纸头版非头条采用");
            }
        }
        if (nncNum1 > 0){
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("1");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setUnit("南宁处政治处宣传教育室（民警训练基地）");
                examAutoEvaluation.setUnitId("29");
                examAutoEvaluation.setEvaluationId("a4e40825e3b34c37895ee2ed168f24a0");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setDetails(nncdetails1 + ",");
                examAutoEvaluation.setModel("2020年月度公安局对公安处绩效考评公共加分标准");
                examAutoEvaluation.setModelId("a20967b72dca4e6e9915fa43c46e153a");
                examAutoEvaluation.setOption("电视专题片被中央电视台采用，每部");
                examAutoEvaluation.setOptionId("606a20697c774000a716925873606bd3");
                examAutoEvaluation.setScore("1");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_电视专题片被中央电视台采用，每部");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
        if (nncNum2 > 0){

                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("1");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setUnit("南宁处政治处宣传教育室（民警训练基地）");
                examAutoEvaluation.setUnitId("29");
                examAutoEvaluation.setEvaluationId("a4e40825e3b34c37895ee2ed168f24a0");
                examAutoEvaluation.setFromSys("智慧政工");

                examAutoEvaluation.setDetails(nncdetails2 + ",");
                examAutoEvaluation.setModel("2020年月度公安局对公安处绩效考评公共加分标准");
                examAutoEvaluation.setModelId("a20967b72dca4e6e9915fa43c46e153a");
                examAutoEvaluation.setOption("长篇通讯，中央级报纸头条每篇");
                examAutoEvaluation.setOptionId("a2139d2f014f438fa671e1b5f5aa1701");
                examAutoEvaluation.setScore("1.5");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_长篇通讯，中央级报纸头条每篇");
            this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
        if (nncNum3 > 0){
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("1");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setUnit("南宁处政治处宣传教育室（民警训练基地）");
                examAutoEvaluation.setUnitId("29");
                examAutoEvaluation.setEvaluationId("a4e40825e3b34c37895ee2ed168f24a0");
                examAutoEvaluation.setFromSys("智慧政工");

                examAutoEvaluation.setDetails(nncdetails3 + ",");
                examAutoEvaluation.setModel("2020年月度公安局对公安处绩效考评公共加分标准");
                examAutoEvaluation.setModelId("a20967b72dca4e6e9915fa43c46e153a");
                examAutoEvaluation.setOption("长篇通讯，中央级报纸每篇");
                examAutoEvaluation.setOptionId("9b60d024badc42c08d700f2ab5e80c9d");
                examAutoEvaluation.setScore("0.5");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_长篇通讯，中央级报纸每篇");
            this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
        if (nncNum4 > 0){
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("1");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setUnit("南宁处政治处宣传教育室（民警训练基地）");
                examAutoEvaluation.setUnitId("29");
                examAutoEvaluation.setEvaluationId("a4e40825e3b34c37895ee2ed168f24a0");
                examAutoEvaluation.setFromSys("智慧政工");

                examAutoEvaluation.setDetails(nncdetails4 + ",");
                examAutoEvaluation.setModel("2020年月度公安局对公安处绩效考评公共加分标准");
                examAutoEvaluation.setModelId("a20967b72dca4e6e9915fa43c46e153a");
                examAutoEvaluation.setOption("新闻稿件，每篇（条），央视《新闻联播》");
                examAutoEvaluation.setOptionId("fe4a55eb153f4eb2bce4b834d70d58cf");
                examAutoEvaluation.setScore("2.5");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_新闻稿件，每篇（条），央视《新闻联播》");
            this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
        if (nncNum5 > 0){
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("1");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setUnit("南宁处政治处宣传教育室（民警训练基地）");
                examAutoEvaluation.setUnitId("29");
                examAutoEvaluation.setEvaluationId("a4e40825e3b34c37895ee2ed168f24a0");
                examAutoEvaluation.setFromSys("智慧政工");

                examAutoEvaluation.setDetails(nncdetails5 + ",");
                examAutoEvaluation.setModel("2020年月度公安局对公安处绩效考评公共加分标准");
                examAutoEvaluation.setModelId("a20967b72dca4e6e9915fa43c46e153a");
                examAutoEvaluation.setOption("新闻稿件，每篇（条），中央人民广播电台《新闻联播》");
                examAutoEvaluation.setOptionId("2870b92ac014418181e7b82fdf9d0335");
                examAutoEvaluation.setScore("1.5");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_新闻稿件，每篇（条），中央人民广播电台《新闻联播》");

            this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
        if (nncNum6 > 0){

                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("1");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setUnit("南宁处政治处宣传教育室（民警训练基地）");
                examAutoEvaluation.setUnitId("29");
                examAutoEvaluation.setEvaluationId("a4e40825e3b34c37895ee2ed168f24a0");
                examAutoEvaluation.setFromSys("智慧政工");

                examAutoEvaluation.setDetails(nncdetails6 + ",");
                examAutoEvaluation.setModel("2020年月度公安局对公安处绩效考评公共加分标准");
                examAutoEvaluation.setModelId("a20967b72dca4e6e9915fa43c46e153a");
                examAutoEvaluation.setOption("新闻稿件，每篇（条），中央级报纸头版头条");
                examAutoEvaluation.setOptionId("6941759a8d48484b854270edc1cfc807");
                examAutoEvaluation.setScore("1.5");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_新闻稿件，每篇（条），中央级报纸头版头条");
            this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
        if (nncNum7 > 0){
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("1");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setUnit("南宁处政治处宣传教育室（民警训练基地）");
                examAutoEvaluation.setUnitId("29");
                examAutoEvaluation.setEvaluationId("a4e40825e3b34c37895ee2ed168f24a0");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setDetails(nncdetails7 + ",");
                examAutoEvaluation.setModel("2020年月度公安局对公安处绩效考评公共加分标准");
                examAutoEvaluation.setModelId("a20967b72dca4e6e9915fa43c46e153a");
                examAutoEvaluation.setOption("新闻稿件，每篇（条），中央级报纸头版非头条");
                examAutoEvaluation.setOptionId("e456a03bd07a4a2ba2f3517f53e656e4");
                examAutoEvaluation.setScore("0.5");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_新闻稿件，每篇（条），中央级报纸头版非头条");
            this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }


        for (int o = 0; o < lzcPartyList.size(); o++) {
            Office office = lzcPartyList.get(o);
            //公安处名称
            String unit = office.getName();
            //公安处id
            String unitId = office.getId();

            List<AffairNews> affairNewsList = affairNewsDao.selectAllKg(yearL,yearT,unitId);
            int adopt1Num = affairNewsDao.selectNumber(yearL,yearT,unitId,adopt1);
            if (adopt1Num > 0){
                lzcNum1++;
                lzcdetails1.append(unit).append(year).append("年").append(month).append("月").append("电视专题片被中央电视台采用");
            }
            int adopt2Num = affairNewsDao.selectNumber(yearL,yearT,unitId,adopt2);
            if (adopt2Num > 0){
                lzcNum2++;
                lzcdetails2.append(unit).append(year).append("年").append(month).append("月").append("中央级报纸头条采纳");
            }
            int adopt3Num = affairNewsDao.selectNumber(yearL,yearT,unitId,adopt3);
            if (adopt3Num > 0){
                lzcNum3++;
                lzcdetails3.append(unit).append(year).append("年").append(month).append("月").append("中央级报纸采纳");
            }
            int adopt4Num = affairNewsDao.selectNumber(yearL,yearT,unitId,adopt4);
            if (adopt4Num > 0){
                lzcNum4++;
                lzcdetails4.append(unit).append(year).append("年").append(month).append("月").append("央视新闻联播采用");
            }
            int adopt5Num = affairNewsDao.selectNumber(yearL,yearT,unitId,adopt5);
            if (adopt5Num > 0){
                lzcNum5++;
                lzcdetails5.append(unit).append(year).append("年").append(month).append("月").append("中央人民广播电台采用");
            }
            int adopt6Num = affairNewsDao.selectNumber(yearL,yearT,unitId,adopt6);
            if (adopt6Num > 0){
                lzcNum6++;
                lzcdetails6.append(unit).append(year).append("年").append(month).append("月").append("中央级报纸头版头条采用");
            }
            int adopt7Num = affairNewsDao.selectNumber(yearL,yearT,unitId,adopt7);
            if (adopt7Num > 0){
                lzcNum7++;
                lzcdetails7.append(unit).append(year).append("年").append(month).append("月").append("中央级报纸头版非头条采用");
            }
        }
        if (lzcNum1 > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setUnit("柳州处政治处宣传教育室（民警训练基地）");
            examAutoEvaluation.setUnitId("144");
            examAutoEvaluation.setEvaluationId("94ccb0bdb21441f997c72268b4d882db");
            examAutoEvaluation.setFromSys("智慧政工");
            examAutoEvaluation.setDetails(lzcdetails1 + ",");
            examAutoEvaluation.setModel("2020年月度公安局对公安处绩效考评公共加分标准");
            examAutoEvaluation.setModelId("a20967b72dca4e6e9915fa43c46e153a");
            examAutoEvaluation.setOption("电视专题片被中央电视台采用，每部");
            examAutoEvaluation.setOptionId("606a20697c774000a716925873606bd3");
            examAutoEvaluation.setScore("1");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_电视专题片被中央电视台采用，每部");
            this.deleteInfoByMore(examAutoEvaluation);
            this.save(examAutoEvaluation);
        }
        if (lzcNum2 > 0){

            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setUnit("柳州处政治处宣传教育室（民警训练基地）");
            examAutoEvaluation.setUnitId("144");
            examAutoEvaluation.setEvaluationId("94ccb0bdb21441f997c72268b4d882db");
            examAutoEvaluation.setFromSys("智慧政工");

            examAutoEvaluation.setDetails(lzcdetails2 + ",");
            examAutoEvaluation.setModel("2020年月度公安局对公安处绩效考评公共加分标准");
            examAutoEvaluation.setModelId("a20967b72dca4e6e9915fa43c46e153a");
            examAutoEvaluation.setOption("长篇通讯，中央级报纸头条每篇");
            examAutoEvaluation.setOptionId("a2139d2f014f438fa671e1b5f5aa1701");
            examAutoEvaluation.setScore("1.5");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_长篇通讯，中央级报纸头条每篇");
            this.deleteInfoByMore(examAutoEvaluation);
            this.save(examAutoEvaluation);
        }
        if (lzcNum3 > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setUnit("柳州处政治处宣传教育室（民警训练基地）");
            examAutoEvaluation.setUnitId("144");
            examAutoEvaluation.setEvaluationId("94ccb0bdb21441f997c72268b4d882db");
            examAutoEvaluation.setFromSys("智慧政工");

            examAutoEvaluation.setDetails(lzcdetails3 + ",");
            examAutoEvaluation.setModel("2020年月度公安局对公安处绩效考评公共加分标准");
            examAutoEvaluation.setModelId("a20967b72dca4e6e9915fa43c46e153a");
            examAutoEvaluation.setOption("长篇通讯，中央级报纸每篇");
            examAutoEvaluation.setOptionId("9b60d024badc42c08d700f2ab5e80c9d");
            examAutoEvaluation.setScore("0.5");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_长篇通讯，中央级报纸每篇");
            this.deleteInfoByMore(examAutoEvaluation);
            this.save(examAutoEvaluation);
        }
        if (lzcNum4 > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setUnit("柳州处政治处宣传教育室（民警训练基地）");
            examAutoEvaluation.setUnitId("144");
            examAutoEvaluation.setEvaluationId("94ccb0bdb21441f997c72268b4d882db");
            examAutoEvaluation.setFromSys("智慧政工");

            examAutoEvaluation.setDetails(lzcdetails4 + ",");
            examAutoEvaluation.setModel("2020年月度公安局对公安处绩效考评公共加分标准");
            examAutoEvaluation.setModelId("a20967b72dca4e6e9915fa43c46e153a");
            examAutoEvaluation.setOption("新闻稿件，每篇（条），央视《新闻联播》");
            examAutoEvaluation.setOptionId("fe4a55eb153f4eb2bce4b834d70d58cf");
            examAutoEvaluation.setScore("2.5");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_新闻稿件，每篇（条），央视《新闻联播》");
            this.deleteInfoByMore(examAutoEvaluation);
            this.save(examAutoEvaluation);
        }
        if (lzcNum5 > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setUnit("柳州处政治处宣传教育室（民警训练基地）");
            examAutoEvaluation.setUnitId("144");
            examAutoEvaluation.setEvaluationId("94ccb0bdb21441f997c72268b4d882db");
            examAutoEvaluation.setFromSys("智慧政工");

            examAutoEvaluation.setDetails(lzcdetails5 + ",");
            examAutoEvaluation.setModel("2020年月度公安局对公安处绩效考评公共加分标准");
            examAutoEvaluation.setModelId("a20967b72dca4e6e9915fa43c46e153a");
            examAutoEvaluation.setOption("新闻稿件，每篇（条），中央人民广播电台《新闻联播》");
            examAutoEvaluation.setOptionId("2870b92ac014418181e7b82fdf9d0335");
            examAutoEvaluation.setScore("1.5");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_新闻稿件，每篇（条），中央人民广播电台《新闻联播》");

            this.deleteInfoByMore(examAutoEvaluation);
            this.save(examAutoEvaluation);
        }
        if (lzcNum6 > 0){

            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setUnit("柳州处政治处宣传教育室（民警训练基地）");
            examAutoEvaluation.setUnitId("144");
            examAutoEvaluation.setEvaluationId("94ccb0bdb21441f997c72268b4d882db");
            examAutoEvaluation.setFromSys("智慧政工");

            examAutoEvaluation.setDetails(lzcdetails6 + ",");
            examAutoEvaluation.setModel("2020年月度公安局对公安处绩效考评公共加分标准");
            examAutoEvaluation.setModelId("a20967b72dca4e6e9915fa43c46e153a");
            examAutoEvaluation.setOption("新闻稿件，每篇（条），中央级报纸头版头条");
            examAutoEvaluation.setOptionId("6941759a8d48484b854270edc1cfc807");
            examAutoEvaluation.setScore("1.5");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_新闻稿件，每篇（条），中央级报纸头版头条");
            this.deleteInfoByMore(examAutoEvaluation);
            this.save(examAutoEvaluation);
        }
        if (lzcNum7 > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setUnit("柳州处政治处宣传教育室（民警训练基地）");
            examAutoEvaluation.setUnitId("144");
            examAutoEvaluation.setEvaluationId("94ccb0bdb21441f997c72268b4d882db");
            examAutoEvaluation.setFromSys("智慧政工");
            examAutoEvaluation.setDetails(lzcdetails7 + ",");
            examAutoEvaluation.setModel("2020年月度公安局对公安处绩效考评公共加分标准");
            examAutoEvaluation.setModelId("a20967b72dca4e6e9915fa43c46e153a");
            examAutoEvaluation.setOption("新闻稿件，每篇（条），中央级报纸头版非头条");
            examAutoEvaluation.setOptionId("e456a03bd07a4a2ba2f3517f53e656e4");
            examAutoEvaluation.setScore("0.5");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_新闻稿件，每篇（条），中央级报纸头版非头条");
            this.deleteInfoByMore(examAutoEvaluation);
            this.save(examAutoEvaluation);
        }


        for (int o = 0; o < bhcPartyList.size(); o++) {
            Office office = bhcPartyList.get(o);
            //公安处名称
            String unit = office.getName();
            //公安处id
            String unitId = office.getId();

            List<AffairNews> affairNewsList = affairNewsDao.selectAllKg(yearL,yearT,unitId);
            int adopt1Num = affairNewsDao.selectNumber(yearL,yearT,unitId,adopt1);
            if (adopt1Num > 0){
                bhcNum1++;
                bhcdetails1.append(unit).append(year).append("年").append(month).append("月").append("电视专题片被中央电视台采用");
            }
            int adopt2Num = affairNewsDao.selectNumber(yearL,yearT,unitId,adopt2);
            if (adopt2Num > 0){
                bhcNum2++;
                bhcdetails2.append(unit).append(year).append("年").append(month).append("月").append("中央级报纸头条采纳");
            }
            int adopt3Num = affairNewsDao.selectNumber(yearL,yearT,unitId,adopt3);
            if (adopt3Num > 0){
                bhcNum3++;
                bhcdetails3.append(unit).append(year).append("年").append(month).append("月").append("中央级报纸采纳");
            }
            int adopt4Num = affairNewsDao.selectNumber(yearL,yearT,unitId,adopt4);
            if (adopt4Num > 0){
                bhcNum4++;
                bhcdetails4.append(unit).append(year).append("年").append(month).append("月").append("央视新闻联播采用");
            }
            int adopt5Num = affairNewsDao.selectNumber(yearL,yearT,unitId,adopt5);
            if (adopt5Num > 0){
                bhcNum5++;
                bhcdetails5.append(unit).append(year).append("年").append(month).append("月").append("中央人民广播电台采用");
            }
            int adopt6Num = affairNewsDao.selectNumber(yearL,yearT,unitId,adopt6);
            if (adopt6Num > 0){
                bhcNum6++;
                bhcdetails6.append(unit).append(year).append("年").append(month).append("月").append("中央级报纸头版头条采用");
            }
            int adopt7Num = affairNewsDao.selectNumber(yearL,yearT,unitId,adopt7);
            if (adopt7Num > 0){
                bhcNum7++;
                bhcdetails7.append(unit).append(year).append("年").append(month).append("月").append("中央级报纸头版非头条采用");
            }
        }
        if (bhcNum1 > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setUnit("北海处政治处宣传教育室（民警训练基地）");
            examAutoEvaluation.setUnitId("265");
            examAutoEvaluation.setEvaluationId("82f8e9ba1cd7446b99c084d5b4b5c038");
            examAutoEvaluation.setFromSys("智慧政工");
            examAutoEvaluation.setDetails(bhcdetails1 + ",");
            examAutoEvaluation.setModel("2020年月度公安局对公安处绩效考评公共加分标准");
            examAutoEvaluation.setModelId("a20967b72dca4e6e9915fa43c46e153a");
            examAutoEvaluation.setOption("电视专题片被中央电视台采用，每部");
            examAutoEvaluation.setOptionId("606a20697c774000a716925873606bd3");
            examAutoEvaluation.setScore("1");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_电视专题片被中央电视台采用，每部");
            this.deleteInfoByMore(examAutoEvaluation);
            this.save(examAutoEvaluation);
        }
        if (bhcNum2 > 0){

            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setUnit("北海处政治处宣传教育室（民警训练基地）");
            examAutoEvaluation.setUnitId("265");
            examAutoEvaluation.setEvaluationId("82f8e9ba1cd7446b99c084d5b4b5c038");
            examAutoEvaluation.setFromSys("智慧政工");

            examAutoEvaluation.setDetails(bhcdetails2 + ",");
            examAutoEvaluation.setModel("2020年月度公安局对公安处绩效考评公共加分标准");
            examAutoEvaluation.setModelId("a20967b72dca4e6e9915fa43c46e153a");
            examAutoEvaluation.setOption("长篇通讯，中央级报纸头条每篇");
            examAutoEvaluation.setOptionId("a2139d2f014f438fa671e1b5f5aa1701");
            examAutoEvaluation.setScore("1.5");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_长篇通讯，中央级报纸头条每篇");
            this.deleteInfoByMore(examAutoEvaluation);
            this.save(examAutoEvaluation);
        }
        if (bhcNum3 > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setUnit("北海处政治处宣传教育室（民警训练基地）");
            examAutoEvaluation.setUnitId("265");
            examAutoEvaluation.setEvaluationId("82f8e9ba1cd7446b99c084d5b4b5c038");
            examAutoEvaluation.setFromSys("智慧政工");

            examAutoEvaluation.setDetails(bhcdetails3 + ",");
            examAutoEvaluation.setModel("2020年月度公安局对公安处绩效考评公共加分标准");
            examAutoEvaluation.setModelId("a20967b72dca4e6e9915fa43c46e153a");
            examAutoEvaluation.setOption("长篇通讯，中央级报纸每篇");
            examAutoEvaluation.setOptionId("9b60d024badc42c08d700f2ab5e80c9d");
            examAutoEvaluation.setScore("0.5");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_长篇通讯，中央级报纸每篇");
            this.deleteInfoByMore(examAutoEvaluation);
            this.save(examAutoEvaluation);
        }
        if (bhcNum4 > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setUnit("北海处政治处宣传教育室（民警训练基地）");
            examAutoEvaluation.setUnitId("265");
            examAutoEvaluation.setEvaluationId("82f8e9ba1cd7446b99c084d5b4b5c038");
            examAutoEvaluation.setFromSys("智慧政工");

            examAutoEvaluation.setDetails(bhcdetails4 + ",");
            examAutoEvaluation.setModel("2020年月度公安局对公安处绩效考评公共加分标准");
            examAutoEvaluation.setModelId("a20967b72dca4e6e9915fa43c46e153a");
            examAutoEvaluation.setOption("新闻稿件，每篇（条），央视《新闻联播》");
            examAutoEvaluation.setOptionId("fe4a55eb153f4eb2bce4b834d70d58cf");
            examAutoEvaluation.setScore("2.5");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_新闻稿件，每篇（条），央视《新闻联播》");
            this.deleteInfoByMore(examAutoEvaluation);
            this.save(examAutoEvaluation);
        }
        if (bhcNum5 > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setUnit("北海处政治处宣传教育室（民警训练基地）");
            examAutoEvaluation.setUnitId("265");
            examAutoEvaluation.setEvaluationId("82f8e9ba1cd7446b99c084d5b4b5c038");
            examAutoEvaluation.setFromSys("智慧政工");

            examAutoEvaluation.setDetails(bhcdetails5 + ",");
            examAutoEvaluation.setModel("2020年月度公安局对公安处绩效考评公共加分标准");
            examAutoEvaluation.setModelId("a20967b72dca4e6e9915fa43c46e153a");
            examAutoEvaluation.setOption("新闻稿件，每篇（条），中央人民广播电台《新闻联播》");
            examAutoEvaluation.setOptionId("2870b92ac014418181e7b82fdf9d0335");
            examAutoEvaluation.setScore("1.5");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_新闻稿件，每篇（条），中央人民广播电台《新闻联播》");
            this.deleteInfoByMore(examAutoEvaluation);
            this.save(examAutoEvaluation);
        }
        if (bhcNum6 > 0){

            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setUnit("北海处政治处宣传教育室（民警训练基地）");
            examAutoEvaluation.setUnitId("265");
            examAutoEvaluation.setEvaluationId("82f8e9ba1cd7446b99c084d5b4b5c038");
            examAutoEvaluation.setFromSys("智慧政工");

            examAutoEvaluation.setDetails(bhcdetails6 + ",");
            examAutoEvaluation.setModel("2020年月度公安局对公安处绩效考评公共加分标准");
            examAutoEvaluation.setModelId("a20967b72dca4e6e9915fa43c46e153a");
            examAutoEvaluation.setOption("新闻稿件，每篇（条），中央级报纸头版头条");
            examAutoEvaluation.setOptionId("6941759a8d48484b854270edc1cfc807");
            examAutoEvaluation.setScore("1.5");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_新闻稿件，每篇（条），中央级报纸头版头条");
            this.deleteInfoByMore(examAutoEvaluation);
            this.save(examAutoEvaluation);
        }
        if (bhcNum7 > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setUnit("北海处政治处宣传教育室（民警训练基地）");
            examAutoEvaluation.setUnitId("265");
            examAutoEvaluation.setEvaluationId("82f8e9ba1cd7446b99c084d5b4b5c038");
            examAutoEvaluation.setFromSys("智慧政工");
            examAutoEvaluation.setDetails(bhcdetails7 + ",");
            examAutoEvaluation.setModel("2020年月度公安局对公安处绩效考评公共加分标准");
            examAutoEvaluation.setModelId("a20967b72dca4e6e9915fa43c46e153a");
            examAutoEvaluation.setOption("新闻稿件，每篇（条），中央级报纸头版非头条");
            examAutoEvaluation.setOptionId("e456a03bd07a4a2ba2f3517f53e656e4");
            examAutoEvaluation.setScore("0.5");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_新闻稿件，每篇（条），中央级报纸头版非头条");
            this.deleteInfoByMore(examAutoEvaluation);
            this.save(examAutoEvaluation);
        }
    }



    /*
     * 局考处
     *
     * 宣传思想-新闻宣传-稿件汇总-刊稿排名(在中央电视台至少播发1部专题片，完不成的扣3分)
     *
     * 年度
     *
     * */
    @Transactional(readOnly = false)
    public void jkcKgpmYear(String year){

        String lastYear = String.valueOf(Integer.valueOf(year) - 1);
        Map<String, String> map = this.yearTime(year);
        String yearL = map.get("yearL");
        String yearT = map.get("yearT");

        //公安处
        List<Office> nncPartyList = officeDao.selectChuUnitList("34");
        List<Office> lzcPartyList = officeDao.selectChuUnitList("95");
        List<Office> bhcPartyList = officeDao.selectChuUnitList("156");

        String adopt1 = "1";
        String adopt2 = "9";
        String adopt3 = "10";
        String adopt4 = "12";
        String adopt5 = "13";

        String isYear = "1";

        int nncnumber1 = 0;
        int nncnumber2 = 0;
        int nncnumber3 = 0;
        int nncnumber4 = 0;
        int nncnumber5 = 0;

        StringBuilder nncDetails1 = new StringBuilder();
        StringBuilder nncDetails2 = new StringBuilder();
        StringBuilder nncDetails3 = new StringBuilder();
        StringBuilder nncDetails4 = new StringBuilder();
        StringBuilder nncDetails5 = new StringBuilder();

        StringBuilder lzcDetails1 = new StringBuilder();
        StringBuilder lzcDetails2 = new StringBuilder();
        StringBuilder lzcDetails3 = new StringBuilder();
        StringBuilder lzcDetails4 = new StringBuilder();
        StringBuilder lzcDetails5 = new StringBuilder();

        StringBuilder bhcDetails1 = new StringBuilder();
        StringBuilder bhcDetails2 = new StringBuilder();
        StringBuilder bhcDetails3 = new StringBuilder();
        StringBuilder bhcDetails4 = new StringBuilder();
        StringBuilder bhcDetails5 = new StringBuilder();

        int nncSum1 = 0;
        int nncSum2 = 0;
        int nncSum3 = 0;
        int nncSum4 = 0;
        int nncSum5 = 0;

        int lzcSum1 = 0;
        int lzcSum2 = 0;
        int lzcSum3 = 0;
        int lzcSum4 = 0;
        int lzcSum5 = 0;

        int bhcSum1 = 0;
        int bhcSum2 = 0;
        int bhcSum3 = 0;
        int bhcSum4 = 0;
        int bhcSum5 = 0;

        for (int o = 0; o < nncPartyList.size(); o++) {
            Office office = nncPartyList.get(o);

            //公安处名称
            String unit = office.getName();

            //公安处id
            String unitId = office.getId();

            nncnumber1 = affairNewsDao.selectNumberInYear(yearL, yearT, unitId, adopt1,isYear);
            if (nncnumber1 < 1){
                nncSum1++;
                nncDetails1.append(unit).append(year).append("年");
            }
            nncnumber2 = affairNewsDao.selectNumberInYear(yearL, yearT, unitId, adopt4,isYear);
            if (nncnumber2 < 24){
                nncSum2++;
                nncDetails2.append(unit).append(year).append("年");
            }
            nncnumber3 = affairNewsDao.selectNumberInYear(yearL, yearT, unitId, adopt5,isYear);
            if (nncnumber3 < 4){
                nncSum3++;
                nncDetails3.append(unit).append(year).append("年");
            }
            nncnumber4 = affairNewsDao.selectNumber(yearL, yearT, unitId, adopt2);
            if (nncnumber4 < 3){
                nncSum4++;
                nncDetails4.append(unit).append(year).append("年");
            }
            nncnumber5 = affairNewsDao.selectNumber(yearL, yearT, unitId, adopt3);
            if (nncnumber5 < 1){
                nncSum5++;
                nncDetails5.append(unit).append(year).append("年");
            }

        }
        if (nncSum1 > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("2");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setUnit("南宁处政治处宣传教育室（民警训练基地）");
            examAutoEvaluation.setUnitId("29");
            examAutoEvaluation.setEvaluationId("a4e40825e3b34c37895ee2ed168f24a0");
            examAutoEvaluation.setFromSys("智慧政工");
            examAutoEvaluation.setDetails("南宁处播发专题片任务未完成");
            examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考核扣分标准(业务部分26项)");
            examAutoEvaluation.setModelId("a959d8865ea74bf68cf818adc710c75c");
            examAutoEvaluation.setOption("春运期间南宁、柳州处要在中央电视台至少播发1部专题片，完不成任务的");
            examAutoEvaluation.setOptionId("401c7d1331814ed294fac8d80ccb76f4");
            examAutoEvaluation.setScore("3");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_春运期间南宁、柳州处要在中央电视台至少播发1部专题片，完不成任务的");
            this.deleteInfoByMore(examAutoEvaluation);
            this.save(examAutoEvaluation);
        }
        if (nncSum4 > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("2");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setUnit("南宁处政治处宣传教育室（民警训练基地）");
            examAutoEvaluation.setUnitId("29");
            examAutoEvaluation.setEvaluationId("a4e40825e3b34c37895ee2ed168f24a0");
            examAutoEvaluation.setFromSys("智慧政工");
            examAutoEvaluation.setDetails("南宁处" + year + "年" + "春运期间在中央级报纸上至少推出不同类型的典型人物3名,未完成任务");
            examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考核扣分标准(业务部分26项)");
            examAutoEvaluation.setModelId("a959d8865ea74bf68cf818adc710c75c");
            examAutoEvaluation.setOption("春运期间南宁、柳州处在中央级报纸上至少推出不同类型的典型人物3名，北海处1名，完不成任务的");
            examAutoEvaluation.setOptionId("a9b47fddaf1c40f299f8e0675ede7307");
            examAutoEvaluation.setScore("3");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_春运期间南宁、柳州处在中央级报纸上至少推出不同类型的典型人物3名，北海处1名，完不成任务的");
            this.deleteInfoByMore(examAutoEvaluation);
            this.save(examAutoEvaluation);
        }
        if (nncSum5 > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("2");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setUnit("南宁处政治处宣传教育室（民警训练基地）");
            examAutoEvaluation.setUnitId("29");
            examAutoEvaluation.setEvaluationId("a4e40825e3b34c37895ee2ed168f24a0");
            examAutoEvaluation.setFromSys("智慧政工");
            examAutoEvaluation.setDetails("南宁处" + year + "年" + "春运期间各公安处要在省部级以上媒体（央视、卫视、网络）推出至少一部反映铁路公安工作和铁路民警工作生活的微电影，任务未完成");
            examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考核扣分标准(业务部分26项)");
            examAutoEvaluation.setModelId("a959d8865ea74bf68cf818adc710c75c");
            examAutoEvaluation.setOption("省部级以上媒体推出反映公安工作和生活的微电影");
            examAutoEvaluation.setOptionId("7d4508228a7540b88bb037b9c84c3236");
            examAutoEvaluation.setScore("3");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_春运期间各公安处要在省部级以上媒体（央视、卫视、网络）推出至少一部反映铁路公安工作和铁路民警工作生活的微电影，完不成任务的");
            this.deleteInfoByMore(examAutoEvaluation);
            this.save(examAutoEvaluation);
        }
        if (nncSum2 > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("2");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setUnit("南宁处政治处宣传教育室（民警训练基地）");
            examAutoEvaluation.setUnitId("29");
            examAutoEvaluation.setEvaluationId("a4e40825e3b34c37895ee2ed168f24a0");
            examAutoEvaluation.setFromSys("智慧政工");
            examAutoEvaluation.setDetails("南宁处"  + year + "年" + "各公安处对工作重点、重大安保任务、案件破获情况、先进人物、好人好事等进行随警拍摄,南宁、柳州处每年各在地市级以上媒体刊播资讯24条（时长半分钟以上,重播按一条计算）；北海处每年在地市级以上媒体刊播资讯6条（时长半分钟以上,重播按一条计算）；未完成");
            examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考核扣分标准(业务部分26项)");
            examAutoEvaluation.setModelId("a959d8865ea74bf68cf818adc710c75c");
            examAutoEvaluation.setOption("各公安处对工作重点、重大安保任务、案件破获情况、先进人物、好人好事等进行随警拍摄,南宁、柳州处每年各在地市级以上媒体刊播资讯24条（时长半分钟以上,重播按一条计算）；北海处每年在地市级以上媒体刊播资讯6条（时长半分钟以上,重播按一条计算）；未完成的");
            examAutoEvaluation.setOptionId("78eec849d9e8424b9cf02912924fa4f6");
            examAutoEvaluation.setScore("2");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_各公安处对工作重点、重大安保任务、案件破获情况、先进人物、好人好事等进行随警拍摄,南宁、柳州处每年各在地市级以上媒体刊播资讯24条（时长半分钟以上,重播按一条计算）；北海处每年在地市级以上媒体刊播资讯6条（时长半分钟以上,重播按一条计算）；未完成的");
            this.deleteInfoByMore(examAutoEvaluation);
            this.save(examAutoEvaluation);
        }
        if (nncSum3 > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("2");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setUnit("南宁处政治处宣传教育室（民警训练基地）");
            examAutoEvaluation.setUnitId("29");
            examAutoEvaluation.setEvaluationId("a4e40825e3b34c37895ee2ed168f24a0");
            examAutoEvaluation.setFromSys("智慧政工");
            examAutoEvaluation.setDetails("南宁处"  + year + "年" + "南宁、柳州处每年各在省级以上媒体刊播专题4部（时长5分钟以上,重播按一条计算），北海处每年在省级以上媒体刊播专题1部（时长5分钟以上,重播按一条计算），未完成的每部扣3分；铁道公安报全年平均每期用稿数不得少于0.5篇（北海处全年不少于4篇），未完成任务的每项扣2分。");
            examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考核扣分标准(业务部分26项)");
            examAutoEvaluation.setModelId("a959d8865ea74bf68cf818adc710c75c");
            examAutoEvaluation.setOption("南宁、柳州处每年各在省级以上媒体刊播专题4部（时长5分钟以上,重播按一条计算），北海处每年在省级以上媒体刊播专题1部（时长5分钟以上,重播按一条计算），未完成的");
            examAutoEvaluation.setOptionId("84f3ad7c8cee49e29b06e03ea2fcf578");
            examAutoEvaluation.setScore("2");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_南宁、柳州处每年各在省级以上媒体刊播专题4部（时长5分钟以上,重播按一条计算），北海处每年在省级以上媒体刊播专题1部（时长5分钟以上,重播按一条计算），未完成的");
            this.deleteInfoByMore(examAutoEvaluation);
            this.save(examAutoEvaluation);
        }
        for (int o = 0; o < lzcPartyList.size(); o++) {
            Office office = lzcPartyList.get(o);

            //公安处名称
            String unit = office.getName();

            //公安处id
            String unitId = office.getId();

            int number1 = affairNewsDao.selectNumberInYear(yearL, yearT, unitId, adopt1,isYear);
            if (number1 < 1){
                lzcSum1++;
                lzcDetails1.append(unit).append(year).append("年");
            }
            int number2 = affairNewsDao.selectNumberInYear(yearL, yearT, unitId, adopt4,isYear);
            if (number2 < 24){
                lzcSum2++;
                lzcDetails2.append(unit).append(year).append("年");
            }
            int number3 = affairNewsDao.selectNumberInYear(yearL, yearT, unitId, adopt5,isYear);
            if (number3 < 4){
                lzcSum3++;
                lzcDetails3.append(unit).append(year).append("年");
            }
            int number4 = affairNewsDao.selectNumber(yearL, yearT, unitId, adopt2);
            if (number4 < 3){
                lzcSum4++;
                lzcDetails4.append(unit).append(year).append("年");
            }
            int number5 = affairNewsDao.selectNumber(yearL, yearT, unitId, adopt3);
            if (number5 < 1){
                lzcSum5++;
                lzcDetails5.append(unit).append(year).append("年");
            }
        }
        if (lzcSum1 > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("2");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setUnit("柳州处政治处宣传教育室（民警训练基地）");
            examAutoEvaluation.setUnitId("144");
            examAutoEvaluation.setEvaluationId("94ccb0bdb21441f997c72268b4d882db");
            examAutoEvaluation.setFromSys("智慧政工");
            examAutoEvaluation.setDetails("柳州处"  + year + "年" + "春运期间要在中央电视台至少播发1部专题片，完不成任务的扣3分；");
            examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考核扣分标准(业务部分26项)");
            examAutoEvaluation.setModelId("a959d8865ea74bf68cf818adc710c75c");
            examAutoEvaluation.setOption("春运期间南宁、柳州处要在中央电视台至少播发1部专题片，完不成任务的");
            examAutoEvaluation.setOptionId("401c7d1331814ed294fac8d80ccb76f4");
            examAutoEvaluation.setScore("3");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_春运期间南宁、柳州处要在中央电视台至少播发1部专题片，完不成任务的");
            this.deleteInfoByMore(examAutoEvaluation);
            this.save(examAutoEvaluation);
        }
        if (lzcSum4 > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("2");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setUnit("柳州处政治处宣传教育室（民警训练基地）");
            examAutoEvaluation.setUnitId("144");
            examAutoEvaluation.setEvaluationId("94ccb0bdb21441f997c72268b4d882db");
            examAutoEvaluation.setFromSys("智慧政工");
            examAutoEvaluation.setDetails("柳州处" + year + "年" + "春运期间在中央级报纸上至少推出不同类型的典型人物3名,完不成任务的扣3分；");
            examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考核扣分标准(业务部分26项)");
            examAutoEvaluation.setModelId("a959d8865ea74bf68cf818adc710c75c");
            examAutoEvaluation.setOption("春运期间南宁、柳州处在中央级报纸上至少推出不同类型的典型人物3名，北海处1名，完不成任务的");
            examAutoEvaluation.setOptionId("a9b47fddaf1c40f299f8e0675ede7307");
            examAutoEvaluation.setScore("3");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_春运期间南宁、柳州处在中央级报纸上至少推出不同类型的典型人物3名，北海处1名，完不成任务的");
            this.deleteInfoByMore(examAutoEvaluation);
            this.save(examAutoEvaluation);
        }
        if (lzcSum5 > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("2");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setUnit("柳州处政治处宣传教育室（民警训练基地）");
            examAutoEvaluation.setUnitId("144");
            examAutoEvaluation.setEvaluationId("94ccb0bdb21441f997c72268b4d882db");
            examAutoEvaluation.setFromSys("智慧政工");
            examAutoEvaluation.setDetails("柳州处" + year + "年" + "春运期间各公安处要在省部级以上媒体（央视、卫视、网络）推出至少一部反映铁路公安工作和铁路民警工作生活的微电影，完不成任务的扣3分；");
            examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考核扣分标准(业务部分26项)");
            examAutoEvaluation.setModelId("a959d8865ea74bf68cf818adc710c75c");
            examAutoEvaluation.setOption("省部级以上媒体推出反映公安工作和生活的微电影");
            examAutoEvaluation.setOptionId("7d4508228a7540b88bb037b9c84c3236");
            examAutoEvaluation.setScore("3");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_春运期间各公安处要在省部级以上媒体（央视、卫视、网络）推出至少一部反映铁路公安工作和铁路民警工作生活的微电影，完不成任务的");
            this.deleteInfoByMore(examAutoEvaluation);
            this.save(examAutoEvaluation);
        }
        if (lzcSum2 > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("2");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setUnit("柳州处政治处宣传教育室（民警训练基地）");
            examAutoEvaluation.setUnitId("144");
            examAutoEvaluation.setEvaluationId("94ccb0bdb21441f997c72268b4d882db");
            examAutoEvaluation.setFromSys("智慧政工");
            examAutoEvaluation.setDetails("柳州处" + year + "年" + "各公安处对工作重点、重大安保任务、案件破获情况、先进人物、好人好事等进行随警拍摄,南宁、柳州处每年各在地市级以上媒体刊播资讯24条（时长半分钟以上,重播按一条计算）；北海处每年在地市级以上媒体刊播资讯6条（时长半分钟以上,重播按一条计算）；未完成的");
            examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考核扣分标准(业务部分26项)");
            examAutoEvaluation.setModelId("a959d8865ea74bf68cf818adc710c75c");
            examAutoEvaluation.setOption("各公安处对工作重点、重大安保任务、案件破获情况、先进人物、好人好事等进行随警拍摄,南宁、柳州处每年各在地市级以上媒体刊播资讯24条（时长半分钟以上,重播按一条计算）；北海处每年在地市级以上媒体刊播资讯6条（时长半分钟以上,重播按一条计算）；未完成的");
            examAutoEvaluation.setOptionId("78eec849d9e8424b9cf02912924fa4f6");
            examAutoEvaluation.setScore("2");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_各公安处对工作重点、重大安保任务、案件破获情况、先进人物、好人好事等进行随警拍摄,南宁、柳州处每年各在地市级以上媒体刊播资讯24条（时长半分钟以上,重播按一条计算）；北海处每年在地市级以上媒体刊播资讯6条（时长半分钟以上,重播按一条计算）；未完成的");
            this.deleteInfoByMore(examAutoEvaluation);
            this.save(examAutoEvaluation);
        }
        if (lzcSum3 > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("2");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setUnit("柳州处政治处宣传教育室（民警训练基地）");
            examAutoEvaluation.setUnitId("144");
            examAutoEvaluation.setEvaluationId("94ccb0bdb21441f997c72268b4d882db");
            examAutoEvaluation.setFromSys("智慧政工");
            examAutoEvaluation.setDetails("柳州处" + year + "年" + "南宁、柳州处每年各在省级以上媒体刊播专题4部（时长5分钟以上,重播按一条计算），北海处每年在省级以上媒体刊播专题1部（时长5分钟以上,重播按一条计算），未完成的每部扣3分；铁道公安报全年平均每期用稿数不得少于0.5篇（北海处全年不少于4篇），未完成任务的每项扣2分。");
            examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考核扣分标准(业务部分26项)");
            examAutoEvaluation.setModelId("a959d8865ea74bf68cf818adc710c75c");
            examAutoEvaluation.setOption("南宁、柳州处每年各在省级以上媒体刊播专题4部（时长5分钟以上,重播按一条计算），北海处每年在省级以上媒体刊播专题1部（时长5分钟以上,重播按一条计算），未完成的");
            examAutoEvaluation.setOptionId("84f3ad7c8cee49e29b06e03ea2fcf578");
            examAutoEvaluation.setScore("2");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_南宁、柳州处每年各在省级以上媒体刊播专题4部（时长5分钟以上,重播按一条计算），北海处每年在省级以上媒体刊播专题1部（时长5分钟以上,重播按一条计算），未完成的");
            this.deleteInfoByMore(examAutoEvaluation);
            this.save(examAutoEvaluation);
        }
        for (int o = 0; o < bhcPartyList.size(); o++) {
            Office office = nncPartyList.get(o);

            //公安处名称
            String unit = office.getName();

            //公安处id
            String unitId = office.getId();

            int number3 = affairNewsDao.selectNumberInYear(yearL, yearT, unitId, adopt5,isYear);
            if (number3 < 4){
                bhcSum3++;
                bhcDetails3.append(unit).append(year).append("年");
            }
            int number4 = affairNewsDao.selectNumber(yearL, yearT, unitId, adopt2);
            if (number4 < 3){
                bhcSum4++;
                bhcDetails4.append(unit).append(year).append("年");
            }
            int number2 = affairNewsDao.selectNumberInYear(yearL, yearT, unitId, adopt4,isYear);
            if (number2 < 6){
                bhcSum2++;
                bhcDetails2.append(unit).append(year).append("年");
            }
            int number5 = affairNewsDao.selectNumber(yearL, yearT, unitId, adopt3);
            if (number5 < 1){
                bhcSum5++;
                bhcDetails5.append(unit).append(year).append("年");
            }
        }
        if (bhcSum4 > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("2");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setUnit("北海处政治处宣传教育室（民警训练基地）");
            examAutoEvaluation.setUnitId("265");
            examAutoEvaluation.setEvaluationId("82f8e9ba1cd7446b99c084d5b4b5c038");
            examAutoEvaluation.setFromSys("智慧政工");
            examAutoEvaluation.setDetails("北海处" + year + "年" + "春运期间在中央级报纸上至少推出不同类型的典型人物3名,未完成任务");
            examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考核扣分标准(业务部分26项)");
            examAutoEvaluation.setModelId("a959d8865ea74bf68cf818adc710c75c");
            examAutoEvaluation.setOption("春运期间南宁、柳州处在中央级报纸上至少推出不同类型的典型人物3名，北海处1名，完不成任务的");
            examAutoEvaluation.setOptionId("a9b47fddaf1c40f299f8e0675ede7307");
            examAutoEvaluation.setScore("3");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_春运期间南宁、柳州处在中央级报纸上至少推出不同类型的典型人物3名，北海处1名，完不成任务的");
            this.deleteInfoByMore(examAutoEvaluation);
            this.save(examAutoEvaluation);
        }
        if (bhcSum5 > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("2");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setUnit("北海处政治处宣传教育室（民警训练基地）");
            examAutoEvaluation.setUnitId("265");
            examAutoEvaluation.setEvaluationId("82f8e9ba1cd7446b99c084d5b4b5c038");
            examAutoEvaluation.setFromSys("智慧政工");
            examAutoEvaluation.setDetails("北海处"  + year + "年" + "春运期间各公安处要在省部级以上媒体（央视、卫视、网络）推出至少一部反映铁路公安工作和铁路民警工作生活的微电影，任务未完成");
            examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考核扣分标准(业务部分26项)");
            examAutoEvaluation.setModelId("a959d8865ea74bf68cf818adc710c75c");
            examAutoEvaluation.setOption("省部级以上媒体推出反映公安工作和生活的微电影");
            examAutoEvaluation.setOptionId("7d4508228a7540b88bb037b9c84c3236");
            examAutoEvaluation.setScore("3");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_春运期间各公安处要在省部级以上媒体（央视、卫视、网络）推出至少一部反映铁路公安工作和铁路民警工作生活的微电影，完不成任务的");

            this.deleteInfoByMore(examAutoEvaluation);
            this.save(examAutoEvaluation);
        }
        if (bhcSum3 > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("2");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setUnit("北海处政治处宣传教育室（民警训练基地）");
            examAutoEvaluation.setUnitId("265");
            examAutoEvaluation.setEvaluationId("82f8e9ba1cd7446b99c084d5b4b5c038");
            examAutoEvaluation.setFromSys("智慧政工");
            examAutoEvaluation.setDetails("北海处"  + year + "年" + "南宁、柳州处每年各在省级以上媒体刊播专题4部（时长5分钟以上,重播按一条计算），北海处每年在省级以上媒体刊播专题1部（时长5分钟以上,重播按一条计算），未完成的每部扣3分；铁道公安报全年平均每期用稿数不得少于0.5篇（北海处全年不少于4篇），未完成任务的每项扣2分。");
            examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考核扣分标准(业务部分26项)");
            examAutoEvaluation.setModelId("a959d8865ea74bf68cf818adc710c75c");
            examAutoEvaluation.setOption("南宁、柳州处每年各在省级以上媒体刊播专题4部（时长5分钟以上,重播按一条计算），北海处每年在省级以上媒体刊播专题1部（时长5分钟以上,重播按一条计算），未完成的");
            examAutoEvaluation.setOptionId("84f3ad7c8cee49e29b06e03ea2fcf578");
            examAutoEvaluation.setScore("2");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_南宁、柳州处每年各在省级以上媒体刊播专题4部（时长5分钟以上,重播按一条计算），北海处每年在省级以上媒体刊播专题1部（时长5分钟以上,重播按一条计算），未完成的");
            this.deleteInfoByMore(examAutoEvaluation);
            this.save(examAutoEvaluation);
        }
        if (bhcSum2 > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("2");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setUnit("北海处政治处宣传教育室（民警训练基地）");
            examAutoEvaluation.setUnitId("265");
            examAutoEvaluation.setEvaluationId("82f8e9ba1cd7446b99c084d5b4b5c038");
            examAutoEvaluation.setFromSys("智慧政工");
            examAutoEvaluation.setDetails("北海处" + year + "年" + "各公安处对工作重点、重大安保任务、案件破获情况、先进人物、好人好事等进行随警拍摄,南宁、柳州处每年各在地市级以上媒体刊播资讯24条（时长半分钟以上,重播按一条计算）；北海处每年在地市级以上媒体刊播资讯6条（时长半分钟以上,重播按一条计算）；未完成的");
            examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考核扣分标准(业务部分26项)");
            examAutoEvaluation.setModelId("a959d8865ea74bf68cf818adc710c75c");
            examAutoEvaluation.setOption("各公安处对工作重点、重大安保任务、案件破获情况、先进人物、好人好事等进行随警拍摄,南宁、柳州处每年各在地市级以上媒体刊播资讯24条（时长半分钟以上,重播按一条计算）；北海处每年在地市级以上媒体刊播资讯6条（时长半分钟以上,重播按一条计算）；未完成的");
            examAutoEvaluation.setOptionId("78eec849d9e8424b9cf02912924fa4f6");
            examAutoEvaluation.setScore("2");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_各公安处对工作重点、重大安保任务、案件破获情况、先进人物、好人好事等进行随警拍摄,南宁、柳州处每年各在地市级以上媒体刊播资讯24条（时长半分钟以上,重播按一条计算）；北海处每年在地市级以上媒体刊播资讯6条（时长半分钟以上,重播按一条计算）；未完成的");
            this.deleteInfoByMore(examAutoEvaluation);
            this.save(examAutoEvaluation);
        }
    }



    /*
     * 处考处
     *
     * 宣传思想-新闻宣传-稿件汇总-刊稿排名
     *
     * 月度
     * */
    @Transactional(readOnly = false)
    public void ckcKgpm(String checkTime){

        String year = checkTime.substring(0, 4);
        Integer y = Integer.valueOf(year);
        String month = checkTime.substring(checkTime.length() - 2);
        Integer m = Integer.valueOf(month);
        Integer lastMonth = m - 1;
        Integer lastYear = y - 1;
        Map<String, String> map = this.monthTime(checkTime);
        String yearL = map.get("yearL");
        String yearT = map.get("yearT");

        List<Office> nncPartyList = officeDao.getChuUnit("34", "1");
        List<Office> lzcPartyList = officeDao.getChuUnit("95", "1");
        List<Office> bhcPartyList = officeDao.getChuUnit("156", "1");

        StringBuilder nncdetails1 = new StringBuilder();
        StringBuilder nncdetails2 = new StringBuilder();
        StringBuilder nncdetails3 = new StringBuilder();
        StringBuilder nncdetails4 = new StringBuilder();
        StringBuilder nncdetails5 = new StringBuilder();
        StringBuilder nncdetails6 = new StringBuilder();
        StringBuilder nncdetails7 = new StringBuilder();

        StringBuilder lzcdetails1 = new StringBuilder();
        StringBuilder lzcdetails2 = new StringBuilder();
        StringBuilder lzcdetails3 = new StringBuilder();
        StringBuilder lzcdetails4 = new StringBuilder();
        StringBuilder lzcdetails5 = new StringBuilder();
        StringBuilder lzcdetails6 = new StringBuilder();
        StringBuilder lzcdetails7 = new StringBuilder();

        StringBuilder bhcdetails1 = new StringBuilder();
        StringBuilder bhcdetails2 = new StringBuilder();
        StringBuilder bhcdetails3 = new StringBuilder();
        StringBuilder bhcdetails4 = new StringBuilder();
        StringBuilder bhcdetails5 = new StringBuilder();
        StringBuilder bhcdetails6 = new StringBuilder();
        StringBuilder bhcdetails7 = new StringBuilder();

        int nncNum1 = 0;
        int nncNum2 = 0;
        int nncNum3 = 0;
        int nncNum4 = 0;
        int nncNum5 = 0;
        int nncNum6 = 0;
        int nncNum7 = 0;

        int lzcNum1 = 0;
        int lzcNum2 = 0;
        int lzcNum3 = 0;
        int lzcNum4 = 0;
        int lzcNum5 = 0;
        int lzcNum6 = 0;
        int lzcNum7 = 0;

        int bhcNum1 = 0;
        int bhcNum2 = 0;
        int bhcNum3 = 0;
        int bhcNum4 = 0;
        int bhcNum5 = 0;
        int bhcNum6 = 0;
        int bhcNum7 = 0;

        String adopt1 = "1";
        String adopt2 = "2";
        String adopt3 = "3";
        String adopt4 = "4";
        String adopt5 = "5";
        String adopt6 = "6";
        String adopt7 = "7";

        for (int i = 0; i < nncPartyList.size(); i++) {
            Office office = nncPartyList.get(i);
            String id = office.getId();
            String unit = office.getName();

            int Num1 = affairNewsDao.selectNumber(yearL,yearT,id,adopt1);
            if (Num1 > 0) {
                nncNum1++;
                nncdetails1.append(unit);
            }
            int Num2 = affairNewsDao.selectNumber(yearL,yearT,id,adopt2);
            if (Num2 > 0) {
                nncNum2++;
                nncdetails2.append(unit);
            }
            int Num3 = affairNewsDao.selectNumber(yearL,yearT,id,adopt3);
            if (Num3 > 0) {
                nncNum3++;
                nncdetails3.append(unit);
            }
            int Num4 = affairNewsDao.selectNumber(yearL,yearT,id,adopt4);
            if (Num4 > 0) {
                nncNum4++;
                nncdetails4.append(unit);
            }
            int Num5 = affairNewsDao.selectNumber(yearL,yearT,id,adopt5);
            if (Num5 > 0) {
                nncNum5++;
                nncdetails5.append(unit);
            }
            int Num6 = affairNewsDao.selectNumber(yearL,yearT,id,adopt6);
            if (Num6 > 0) {
                nncNum6++;
                nncdetails6.append(unit);
            }
            int Num7 = affairNewsDao.selectNumber(yearL,yearT,id,adopt7);
            if (Num7 > 0) {
                nncNum7++;
                nncdetails7.append(unit);
            }
            if (nncNum1 > 0){
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("4");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setUnit(unit);
                examAutoEvaluation.setUnitId(id);
                examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(office.getCode()));
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队绩效考评公共加分标准");
                examAutoEvaluation.setModelId("1f2bbad95514488db2e93ebd7a4352dd");
                examAutoEvaluation.setDetails(nncdetails1 + year + "年" + month + "月,电视专题片被中央电视台采用每部加1分");
                examAutoEvaluation.setOption("电视专题片被中央电视台采用，每部");
                examAutoEvaluation.setOptionId("14f74974e9754b25a2aa58bc91a5740e");
                examAutoEvaluation.setScore("1");
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","刊稿排名_电视专题片被中央电视台采用，每部");

                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (nncNum2 > 0){
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("4");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setUnit(unit);
                examAutoEvaluation.setUnitId(id);
                examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(office.getCode()));
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队绩效考评公共加分标准");
                examAutoEvaluation.setModelId("1f2bbad95514488db2e93ebd7a4352dd");
                examAutoEvaluation.setDetails(nncdetails2 + year + "年" + month + "月,长篇通讯，中央级报纸头条每篇加1.5分");
                examAutoEvaluation.setOption("长篇通讯，中央级报纸头条每篇");
                examAutoEvaluation.setOptionId("701f07bfbda045e39cf8ac79b7551e74");
                examAutoEvaluation.setScore("1.5");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","刊稿排名_长篇通讯，中央级报纸头条每篇");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (nncNum3 > 0){
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("4");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setUnit(unit);
                examAutoEvaluation.setUnitId(id);
                examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(office.getCode()));
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队绩效考评公共加分标准");
                examAutoEvaluation.setModelId("1f2bbad95514488db2e93ebd7a4352dd");
                examAutoEvaluation.setDetails(nncdetails3 + year + "年" + month + "月,中央级报纸每篇加0.5分");
                examAutoEvaluation.setOption("长篇通讯，中央级报纸每篇");
                examAutoEvaluation.setOptionId("4eb2c033d1f64aa1b73c4754cd01ae4c");
                examAutoEvaluation.setScore("0.5");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","刊稿排名_长篇通讯，中央级报纸每篇");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (nncNum4 > 0){
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("4");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setUnit(unit);
                examAutoEvaluation.setUnitId(id);
                examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(office.getCode()));
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队绩效考评公共加分标准");
                examAutoEvaluation.setModelId("1f2bbad95514488db2e93ebd7a4352dd");
                examAutoEvaluation.setDetails(nncdetails4 + year + "年" + month + "月,新闻稿件，央视《新闻联播》每篇加2.5分");
                examAutoEvaluation.setOption("新闻稿件，每篇（条），央视《新闻联播》");
                examAutoEvaluation.setOptionId("4f3f8ca81e2b43adb28b8970da8bc61a");
                examAutoEvaluation.setScore("2.5");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","刊稿排名_新闻稿件，每篇（条），央视《新闻联播》");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (nncNum5 > 0){
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("4");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setUnit(unit);
                examAutoEvaluation.setUnitId(id);
                examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(office.getCode()));
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队绩效考评公共加分标准");
                examAutoEvaluation.setModelId("1f2bbad95514488db2e93ebd7a4352dd");
                examAutoEvaluation.setDetails(nncdetails5 + year + "年" + month + "月,中央人民广播电台《新闻联播》每篇加1.5分");
                examAutoEvaluation.setOption("新闻稿件，每篇（条），中央人民广播电台《新闻联播》");
                examAutoEvaluation.setOptionId("28275512047d4f4083327dbe417fa59c");
                examAutoEvaluation.setScore("1.5");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","刊稿排名_新闻稿件，每篇（条），中央人民广播电台《新闻联播》");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (nncNum6 > 0){
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("4");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setUnit(unit);
                examAutoEvaluation.setUnitId(id);
                examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(office.getCode()));
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队绩效考评公共加分标准");
                examAutoEvaluation.setModelId("1f2bbad95514488db2e93ebd7a4352dd");
                examAutoEvaluation.setDetails(nncdetails6 + year + "年" + month + "月,中央级报纸头版头条每篇加1分");
                examAutoEvaluation.setOption("长篇通讯，中央级报纸头条每篇");
                examAutoEvaluation.setOptionId("701f07bfbda045e39cf8ac79b7551e74");
                examAutoEvaluation.setScore("1");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","刊稿排名_新闻稿件，每篇（条），中央级报纸头版头条");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
            if (nncNum7 > 0){
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("4");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setUnit(unit);
                examAutoEvaluation.setUnitId(id);
                examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(office.getCode()));
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队绩效考评公共加分标准");
                examAutoEvaluation.setModelId("1f2bbad95514488db2e93ebd7a4352dd");
                examAutoEvaluation.setDetails(nncdetails7 + year + "年" + month + "月,中央级报纸头版非头条每篇加0.5分。");
                examAutoEvaluation.setOption("长篇通讯，中央级报纸每篇");
                examAutoEvaluation.setOptionId("4eb2c033d1f64aa1b73c4754cd01ae4c");
                examAutoEvaluation.setScore("0.5");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","刊稿排名_新闻稿件，每篇（条），中央级报纸头版非头条");
                this.deleteInfoByMore(examAutoEvaluation);
                this.save(examAutoEvaluation);
            }
        }
        for (int i = 0; i < lzcPartyList.size(); i++) {
            Office office = lzcPartyList.get(i);
            String id = office.getId();
            String unit = office.getName();

            int Num1 = affairNewsDao.selectNumber(yearL,yearT,id,adopt1);
            if (Num1 > 0) {
                lzcNum1++;
                lzcdetails1.append(unit);
            }
            int Num2 = affairNewsDao.selectNumber(yearL,yearT,id,adopt2);
            if (Num2 > 0) {
                lzcNum2++;
                lzcdetails2.append(unit);
            }
            int Num3 = affairNewsDao.selectNumber(yearL,yearT,id,adopt3);
            if (Num3 > 0) {
                lzcNum3++;
                lzcdetails3.append(unit);
            }
            int Num4 = affairNewsDao.selectNumber(yearL,yearT,id,adopt4);
            if (Num4 > 0) {
                lzcNum4++;
                lzcdetails4.append(unit);
            }
            int Num5 = affairNewsDao.selectNumber(yearL,yearT,id,adopt5);
            if (Num5 > 0) {
                lzcNum5++;
                lzcdetails5.append(unit);
            }
            int Num6 = affairNewsDao.selectNumber(yearL,yearT,id,adopt6);
            if (Num6 > 0) {
                lzcNum6++;
                lzcdetails6.append(unit);
            }
            int Num7 = affairNewsDao.selectNumber(yearL,yearT,id,adopt7);
            if (Num7 > 0) {
                lzcNum7++;
                lzcdetails7.append(unit);
            }


                if (lzcNum1 > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(id);
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(office.getCode()));
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setModel("2020年月度柳州处对单位（部门）绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("4eaa281381b742adbbc9b8540d7bf822");
                    examAutoEvaluation.setDetails(lzcdetails1 + year + "年" + month + "月,电视专题片被中央电视台采用每部加1分");
                    examAutoEvaluation.setOption("电视专题片被中央电视台采用，每部");
                    examAutoEvaluation.setOptionId("1c7bce33c7ad43b1a42a0dc9d45a0830");
                    examAutoEvaluation.setScore("1");

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","刊稿排名_电视专题片被中央电视台采用，每部");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if (lzcNum2 > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(id);
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(office.getCode()));
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setModel("2020年月度柳州处对单位（部门）绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("4eaa281381b742adbbc9b8540d7bf822");
                    examAutoEvaluation.setDetails(lzcdetails2 + year + "年" + month + "月,长篇通讯，中央级报纸头条每篇加1.5分");
                    examAutoEvaluation.setOption("长篇通讯，中央级报纸头条每篇");
                    examAutoEvaluation.setOptionId("5994698443c3490b933a336abc27d144");
                    examAutoEvaluation.setScore("1.5");

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","刊稿排名_长篇通讯，中央级报纸头条每篇");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if (lzcNum3 > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(id);
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(office.getCode()));
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setModel("2020年月度柳州处对单位（部门）绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("4eaa281381b742adbbc9b8540d7bf822");
                    examAutoEvaluation.setDetails(lzcdetails3 + year + "年" + month + "月,中央级报纸每篇加0.5分");
                    examAutoEvaluation.setOption("长篇通讯，中央级报纸每篇");
                    examAutoEvaluation.setOptionId("bb6e05973977413e8a58c097e3638fae");
                    examAutoEvaluation.setScore("0.5");

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","刊稿排名_长篇通讯，中央级报纸每篇");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if (lzcNum4 > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(id);
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(office.getCode()));
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setModel("2020年月度柳州处对单位（部门）绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("4eaa281381b742adbbc9b8540d7bf822");
                    examAutoEvaluation.setDetails(lzcdetails4 + year + "年" + month + "月,新闻稿件，央视《新闻联播》每篇加2.5分");
                    examAutoEvaluation.setOption("新闻稿件，每篇（条），央视《新闻联播》");
                    examAutoEvaluation.setOptionId("85da5718e4c04780b815a0fbd5c6926c");
                    examAutoEvaluation.setScore("2.5");

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","刊稿排名_新闻稿件，每篇（条），央视《新闻联播》");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if (lzcNum5 > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(id);
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(office.getCode()));
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setModel("2020年月度柳州处对单位（部门）绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("4eaa281381b742adbbc9b8540d7bf822");
                    examAutoEvaluation.setDetails(lzcdetails5 + year + "年" + month + "月,中央人民广播电台《新闻联播》每篇加1.5分");
                    examAutoEvaluation.setOption("新闻稿件，每篇（条），中央人民广播电台《新闻联播》");
                    examAutoEvaluation.setOptionId("0d3e8a969b5f43c3bd92bda3a15ef79c");
                    examAutoEvaluation.setScore("1.5");

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","刊稿排名_新闻稿件，每篇（条），中央人民广播电台《新闻联播》");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if (lzcNum6 > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(id);
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(office.getCode()));
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setModel("2020年月度柳州处对单位（部门）绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("4eaa281381b742adbbc9b8540d7bf822");
                    examAutoEvaluation.setDetails(lzcdetails6 + year + "年" + month + "月,中央级报纸头版头条每篇加1分");
                    examAutoEvaluation.setOption("长篇通讯，中央级报纸头条每篇");
                    examAutoEvaluation.setOptionId("5994698443c3490b933a336abc27d144");
                    examAutoEvaluation.setScore("1");

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","刊稿排名_新闻稿件，每篇（条），中央级报纸头版头条");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if (lzcNum7 > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(id);
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(office.getCode()));
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setModel("2020年月度柳州处对单位（部门）绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("4eaa281381b742adbbc9b8540d7bf822");
                    examAutoEvaluation.setDetails(lzcdetails7 + year + "年" + month + "月,中央级报纸头版非头条每篇加0.5分。");
                    examAutoEvaluation.setOption("长篇通讯，中央级报纸每篇");
                    examAutoEvaluation.setOptionId("bb6e05973977413e8a58c097e3638fae");
                    examAutoEvaluation.setScore("0.5");

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","刊稿排名_长篇通讯，中央级报纸每篇");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
        }
        for (int i = 0; i < bhcPartyList.size(); i++) {
            Office office = bhcPartyList.get(i);
            String id = office.getId();
            String unit = office.getName();

            int Num1 = affairNewsDao.selectNumber(yearL,yearT,id,adopt1);
            if (Num1 > 0) {
                bhcNum1++;
                bhcdetails1.append(unit);
            }
            int Num2 = affairNewsDao.selectNumber(yearL,yearT,id,adopt2);
            if (Num2 > 0) {
                bhcNum2++;
                bhcdetails2.append(unit);
            }
            int Num3 = affairNewsDao.selectNumber(yearL,yearT,id,adopt3);
            if (Num3 > 0) {
                bhcNum3++;
                bhcdetails3.append(unit);
            }
            int Num4 = affairNewsDao.selectNumber(yearL,yearT,id,adopt4);
            if (Num4 > 0) {
                bhcNum4++;
                bhcdetails4.append(unit);
            }
            int Num5 = affairNewsDao.selectNumber(yearL,yearT,id,adopt5);
            if (Num5 > 0) {
                bhcNum5++;
                bhcdetails5.append(unit);
            }
            int Num6 = affairNewsDao.selectNumber(yearL,yearT,id,adopt6);
            if (Num6 > 0) {
                bhcNum6++;
                bhcdetails6.append(unit);
            }
            int Num7 = affairNewsDao.selectNumber(yearL,yearT,id,adopt7);
            if (Num7 > 0) {
                bhcNum7++;
                bhcdetails7.append(unit);
            }
                if (bhcNum1 > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(id);
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(office.getCode()));
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("87edef047b9a47d086f5b7e0ebc06e8f");
                    examAutoEvaluation.setDetails(bhcdetails1 + year + "年" + month + "月,电视专题片被中央电视台采用每部加1分");
                    examAutoEvaluation.setOption("电视专题片被中央电视台采用，每部");
                    examAutoEvaluation.setOptionId("f00109ad78c4488f8c0016ac197841ac");
                    examAutoEvaluation.setScore("1");

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","刊稿排名_电视专题片被中央电视台采用，每部");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if (bhcNum2 > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(id);
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(office.getCode()));
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("87edef047b9a47d086f5b7e0ebc06e8f");
                    examAutoEvaluation.setDetails(bhcdetails2 + year + "年" + month + "月,长篇通讯，中央级报纸头条每篇加1.5分");
                    examAutoEvaluation.setOption("长篇通讯，中央级报纸头条每篇");
                    examAutoEvaluation.setOptionId("98fafe24bc4f4364b7f26a647531503b");
                    examAutoEvaluation.setScore("1.5");

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","刊稿排名_长篇通讯，中央级报纸头条每篇");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if (bhcNum3 > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(id);
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(office.getCode()));
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("87edef047b9a47d086f5b7e0ebc06e8f");
                    examAutoEvaluation.setDetails(bhcdetails3 + year + "年" + month + "月,中央级报纸每篇加0.5分");
                    examAutoEvaluation.setOption("长篇通讯，中央级报纸每篇");
                    examAutoEvaluation.setOptionId("f24ff90d1ec04ef3b5ce9fdbef1e9dfc");
                    examAutoEvaluation.setScore("0.5");

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","刊稿排名_长篇通讯，中央级报纸每篇");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if (bhcNum4 > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(id);
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(office.getCode()));
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("87edef047b9a47d086f5b7e0ebc06e8f");
                    examAutoEvaluation.setDetails(bhcdetails4 + year + "年" + month + "月,新闻稿件，央视《新闻联播》每篇加2.5分");
                    examAutoEvaluation.setOption("新闻稿件，每篇（条），央视《新闻联播》");
                    examAutoEvaluation.setOptionId("814bc57296d54c3a882095cb918dac67");
                    examAutoEvaluation.setScore("2.5");

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","刊稿排名_新闻稿件，每篇（条），央视《新闻联播》");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if (bhcNum5 > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(id);
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(office.getCode()));
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("87edef047b9a47d086f5b7e0ebc06e8f");
                    examAutoEvaluation.setDetails(bhcdetails5 + year + "年" + month + "月,中央人民广播电台《新闻联播》每篇加1.5分");
                    examAutoEvaluation.setOption("新闻稿件，每篇（条），中央人民广播电台《新闻联播》");
                    examAutoEvaluation.setOptionId("f5895db7ec7a456696a8796cf37efa98");
                    examAutoEvaluation.setScore("1.5");

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","刊稿排名_新闻稿件，每篇（条），中央人民广播电台《新闻联播》");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if (bhcNum6 > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(id);
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(office.getCode()));
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("87edef047b9a47d086f5b7e0ebc06e8f");
                    examAutoEvaluation.setDetails(bhcdetails6 + year + "年" + month + "月,中央级报纸头版头条每篇加1分");
                    examAutoEvaluation.setOption("长篇通讯，中央级报纸头条每篇");
                    examAutoEvaluation.setOptionId("98fafe24bc4f4364b7f26a647531503b");
                    examAutoEvaluation.setScore("1");

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","刊稿排名_新闻稿件，每篇（条），中央级报纸头版头条");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if (bhcNum7 > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(id);
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(office.getCode()));
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("87edef047b9a47d086f5b7e0ebc06e8f");
                    examAutoEvaluation.setDetails(bhcdetails7 + year + "年" + month + "月,中央级报纸头版非头条每篇加0.5分。");
                    examAutoEvaluation.setOption("长篇通讯，中央级报纸每篇");
                    examAutoEvaluation.setOptionId("f24ff90d1ec04ef3b5ce9fdbef1e9dfc");
                    examAutoEvaluation.setScore("0.5");

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","刊稿排名_长篇通讯，中央级报纸每篇");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }

        }

    }



    /*
     * 处考派出所
     *
     * 宣传思想-新闻宣传-稿件汇总-刊稿排名
     *
     * 月度
     * */
    @Transactional(readOnly = false)
    public void ckpcsKgpm(String checkTime){

        String year = checkTime.substring(0, 4);
        Integer y = Integer.valueOf(year);
        String month = checkTime.substring(checkTime.length() - 2);
        Integer m = Integer.valueOf(month);
        Integer lastMonth = m - 1;
        Integer lastYear = y - 1;
        Map<String, String> map = this.monthTime(checkTime);
        String yearL = map.get("yearL");
        String yearT = map.get("yearT");

        List<Office> nncPartyList = officeDao.getChuUnit("34", "2");
        List<Office> lzcPartyList = officeDao.getChuUnit("95", "2");
        List<Office> bhcPartyList = officeDao.getChuUnit("156", "2");


        StringBuilder nncdetails1 = new StringBuilder();
        StringBuilder nncdetails2 = new StringBuilder();
        StringBuilder nncdetails3 = new StringBuilder();
        StringBuilder nncdetails4 = new StringBuilder();
        StringBuilder nncdetails5 = new StringBuilder();
        StringBuilder nncdetails6 = new StringBuilder();
        StringBuilder nncdetails7 = new StringBuilder();

        StringBuilder lzcdetails1 = new StringBuilder();
        StringBuilder lzcdetails2 = new StringBuilder();
        StringBuilder lzcdetails3 = new StringBuilder();
        StringBuilder lzcdetails4 = new StringBuilder();
        StringBuilder lzcdetails5 = new StringBuilder();
        StringBuilder lzcdetails6 = new StringBuilder();
        StringBuilder lzcdetails7 = new StringBuilder();

        StringBuilder bhcdetails1 = new StringBuilder();
        StringBuilder bhcdetails2 = new StringBuilder();
        StringBuilder bhcdetails3 = new StringBuilder();
        StringBuilder bhcdetails4 = new StringBuilder();
        StringBuilder bhcdetails5 = new StringBuilder();
        StringBuilder bhcdetails6 = new StringBuilder();
        StringBuilder bhcdetails7 = new StringBuilder();

        int nncNum1 = 0;
        int nncNum2 = 0;
        int nncNum3 = 0;
        int nncNum4 = 0;
        int nncNum5 = 0;
        int nncNum6 = 0;
        int nncNum7 = 0;

        int lzcNum1 = 0;
        int lzcNum2 = 0;
        int lzcNum3 = 0;
        int lzcNum4 = 0;
        int lzcNum5 = 0;
        int lzcNum6 = 0;
        int lzcNum7 = 0;

        int bhcNum1 = 0;
        int bhcNum2 = 0;
        int bhcNum3 = 0;
        int bhcNum4 = 0;
        int bhcNum5 = 0;
        int bhcNum6 = 0;
        int bhcNum7 = 0;

        String adopt1 = "1";
        String adopt2 = "2";
        String adopt3 = "3";
        String adopt4 = "4";
        String adopt5 = "5";
        String adopt6 = "6";
        String adopt7 = "7";

        for (int n = 0; n < nncPartyList.size(); n++) {
            Office office = nncPartyList.get(n);
            String id = office.getId();
            String unit = office.getName();



            int Num1 = affairNewsDao.selectNumber(yearL,yearT,id,adopt1);
            if (Num1 > 0) {
                nncNum1++;
                nncdetails1.append(unit);
            }
            int Num2 = affairNewsDao.selectNumber(yearL,yearT,id,adopt2);
            if (Num2 > 0) {
                nncNum2++;
                nncdetails2.append(unit);
            }
            int Num3 = affairNewsDao.selectNumber(yearL,yearT,id,adopt3);
            if (Num3 > 0) {
                nncNum3++;
                nncdetails3.append(unit);
            }
            int Num4 = affairNewsDao.selectNumber(yearL,yearT,id,adopt4);
            if (Num4 > 0) {
                nncNum4++;
                nncdetails4.append(unit);
            }
            int Num5 = affairNewsDao.selectNumber(yearL,yearT,id,adopt5);
            if (Num5 > 0) {
                nncNum5++;
                nncdetails5.append(unit);
            }
            int Num6 = affairNewsDao.selectNumber(yearL,yearT,id,adopt6);
            if (Num6 > 0) {
                nncNum6++;
                nncdetails6.append(unit);
            }
            int Num7 = affairNewsDao.selectNumber(yearL,yearT,id,adopt7);
            if (Num7 > 0) {
                nncNum7++;
                nncdetails7.append(unit);
            }


                    if (nncNum1 > 0){
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setUnit(unit);
                        examAutoEvaluation.setUnitId(id);
                        examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectUserId(id));
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setModelId("");
                        examAutoEvaluation.setDetails(nncdetails1 + year + "年" + month + "月,电视专题片被中央电视台采用每部加1分");
                        examAutoEvaluation.setOption("");
                        examAutoEvaluation.setOptionId("");
                        examAutoEvaluation.setScore("1");

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","刊稿排名_电视专题片被中央电视台采用，每部");
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    if (nncNum2 > 0){
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setUnit(unit);
                        examAutoEvaluation.setUnitId(id);
                        examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectUserId(id));
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setModelId("");
                        examAutoEvaluation.setDetails(nncdetails2 + year + "年" + month + "月,长篇通讯，中央级报纸头条每篇加1.5分");
                        examAutoEvaluation.setOption("");
                        examAutoEvaluation.setOptionId("");
                        examAutoEvaluation.setScore("1.5");

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","刊稿排名_长篇通讯，中央级报纸头条每篇");
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    if (nncNum3 > 0){
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setUnit(unit);
                        examAutoEvaluation.setUnitId(id);
                        examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectUserId(id));
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setModelId("");
                        examAutoEvaluation.setDetails(nncdetails3 + year + "年" + month + "月,中央级报纸每篇加0.5分");
                        examAutoEvaluation.setOption("");
                        examAutoEvaluation.setOptionId("");
                        examAutoEvaluation.setScore("0.5");

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","刊稿排名_长篇通讯，中央级报纸每篇");
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    if (nncNum4 > 0){
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setUnit(unit);
                        examAutoEvaluation.setUnitId(id);
                        examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectUserId(id));
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setModelId("");
                        examAutoEvaluation.setDetails(nncdetails4 + year + "年" + month + "月,新闻稿件，央视《新闻联播》每篇加2.5分");
                        examAutoEvaluation.setOption("");
                        examAutoEvaluation.setOptionId("");
                        examAutoEvaluation.setScore("2.5");

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","刊稿排名_新闻稿件，每篇（条），央视《新闻联播》");
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    if (nncNum5 > 0){
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setUnit(unit);
                        examAutoEvaluation.setUnitId(id);
                        examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectUserId(id));
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setModelId("");
                        examAutoEvaluation.setDetails(nncdetails5 + year + "年" + month + "月,中央人民广播电台《新闻联播》每篇加1.5分");
                        examAutoEvaluation.setOption("");
                        examAutoEvaluation.setOptionId("");
                        examAutoEvaluation.setScore("1.5");

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","刊稿排名_新闻稿件，每篇（条），中央人民广播电台《新闻联播》");
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    if (nncNum6 > 0){
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setUnit(unit);
                        examAutoEvaluation.setUnitId(id);
                        examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectUserId(id));
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setModelId("");
                        examAutoEvaluation.setDetails(nncdetails6 + year + "年" + month + "月,中央级报纸头版头条每篇加1分");
                        examAutoEvaluation.setOption("");
                        examAutoEvaluation.setOptionId("");
                        examAutoEvaluation.setScore("1");

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","刊稿排名_新闻稿件，每篇（条），中央级报纸头版头条");
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);
                    }
                    if (nncNum7 > 0){
                        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                        examAutoEvaluation.setType("1");
                        examAutoEvaluation.setEvalType("3");
                        examAutoEvaluation.setPeriod("1");
                        examAutoEvaluation.setYear(year);
                        examAutoEvaluation.setMonth(month);
                        examAutoEvaluation.setUnit(unit);
                        examAutoEvaluation.setUnitId(id);
                        examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectUserId(id));
                        examAutoEvaluation.setFromSys("智慧政工");
                        examAutoEvaluation.setModel("");
                        examAutoEvaluation.setModelId("");
                        examAutoEvaluation.setDetails(nncdetails7 + year + "年" + month + "月,中央级报纸头版非头条每篇加0.5分。");
                        examAutoEvaluation.setOption("");
                        examAutoEvaluation.setOptionId("");
                        examAutoEvaluation.setScore("0.5");

                        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","刊稿排名_新闻稿件，每篇（条），中央级报纸头版非头条");
                        this.deleteInfoByMore(examAutoEvaluation);
                        this.save(examAutoEvaluation);

                }

        }
        for (int n = 0; n < lzcPartyList.size(); n++) {
            Office office = lzcPartyList.get(n);
            String id = office.getId();
            String unit = office.getName();

            int Num1 = affairNewsDao.selectNumber(yearL,yearT,id,adopt1);
            if (Num1 > 0) {
                lzcNum1++;
                lzcdetails1.append(unit);
            }
            int Num2 = affairNewsDao.selectNumber(yearL,yearT,id,adopt2);
            if (Num2 > 0) {
                lzcNum2++;
                lzcdetails2.append(unit);
            }
            int Num3 = affairNewsDao.selectNumber(yearL,yearT,id,adopt3);
            if (Num3 > 0) {
                lzcNum3++;
                lzcdetails3.append(unit);
            }
            int Num4 = affairNewsDao.selectNumber(yearL,yearT,id,adopt4);
            if (Num4 > 0) {
                lzcNum4++;
                lzcdetails4.append(unit);
            }
            int Num5 = affairNewsDao.selectNumber(yearL,yearT,id,adopt5);
            if (Num5 > 0) {
                lzcNum5++;
                lzcdetails5.append(unit);
            }
            int Num6 = affairNewsDao.selectNumber(yearL,yearT,id,adopt6);
            if (Num6 > 0) {
                lzcNum6++;
                lzcdetails6.append(unit);
            }
            int Num7 = affairNewsDao.selectNumber(yearL,yearT,id,adopt7);
            if (Num7 > 0) {
                lzcNum7++;
                lzcdetails7.append(unit);
            }

            if (lzcNum1 > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(id);
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectUserId(id));
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setModel("2020年月度柳州处对派出所绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("547546c3d76144afa2a4433dd350afda");
                    examAutoEvaluation.setDetails(unit + year + "年" + month + "月,电视专题片被中央电视台采用每部加1分");
                    examAutoEvaluation.setOption("电视专题片被中央电视台采用，每部");
                    examAutoEvaluation.setOptionId("aa45992483464249afefff53510a283d");
                    examAutoEvaluation.setScore("1");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","刊稿排名_电视专题片被中央电视台采用，每部");
                this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            if (lzcNum2 > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(id);
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectUserId(id));
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setModel("2020年月度柳州处对派出所绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("547546c3d76144afa2a4433dd350afda");
                    examAutoEvaluation.setDetails(unit + year + "年" + month + "月,长篇通讯，中央级报纸头条每篇加1.5分");
                    examAutoEvaluation.setOption("长篇通讯，中央级报纸头条每篇");
                    examAutoEvaluation.setOptionId("5ae24b1d0036477094f3e444fd4c11b8");
                    examAutoEvaluation.setScore("1.5");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","刊稿排名_长篇通讯，中央级报纸头条每篇");
                this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            if (lzcNum3 > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(id);
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectUserId(id));
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setModel("2020年月度柳州处对派出所绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("547546c3d76144afa2a4433dd350afda");
                    examAutoEvaluation.setDetails(unit + year + "年" + month + "月,中央级报纸每篇加0.5分");
                    examAutoEvaluation.setOption("长篇通讯，中央级报纸每篇");
                    examAutoEvaluation.setOptionId("c72be1ef43f74c4894447d898213c99d");
                    examAutoEvaluation.setScore("0.5");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","刊稿排名_长篇通讯，中央级报纸每篇");
                this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            if (lzcNum4 > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(id);
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectUserId(id));
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setModel("2020年月度柳州处对派出所绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("547546c3d76144afa2a4433dd350afda");
                    examAutoEvaluation.setDetails(unit + year + "年" + month + "月,新闻稿件，央视《新闻联播》每篇加2.5分");
                    examAutoEvaluation.setOption("新闻稿件，每篇（条），央视《新闻联播》");
                    examAutoEvaluation.setOptionId("39232a90ab7a4ae99c4987bec9c1d115");
                    examAutoEvaluation.setScore("2.5");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","刊稿排名_新闻稿件，每篇（条），央视《新闻联播》");
                this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            if (lzcNum5 > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(id);
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectUserId(id));
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setModel("2020年月度柳州处对派出所绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("547546c3d76144afa2a4433dd350afda");
                    examAutoEvaluation.setDetails(unit + year + "年" + month + "月,中央人民广播电台《新闻联播》每篇加1.5分");
                    examAutoEvaluation.setOption("新闻稿件，每篇（条），中央人民广播电台《新闻联播》");
                    examAutoEvaluation.setOptionId("9fceb6f33eae476788792129ef00594f");
                    examAutoEvaluation.setScore("1.5");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","刊稿排名_新闻稿件，每篇（条），中央人民广播电台《新闻联播》");
                this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            if (lzcNum6 > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setUnit(unit);

                    examAutoEvaluation.setUnitId(id);
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectUserId(id));
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setModel("2020年月度柳州处对派出所绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("547546c3d76144afa2a4433dd350afda");
                    examAutoEvaluation.setDetails(unit + year + "年" + month + "月,中央级报纸头版头条每篇加1分");
                    examAutoEvaluation.setOption("新闻稿件，每篇（条），中央级报纸头版头条");
                    examAutoEvaluation.setOptionId("03fad9a905924ef08d0f47f40b0d20a6");
                    examAutoEvaluation.setScore("1");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","刊稿排名_新闻稿件，每篇（条），中央级报纸头版头条");
                this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            if (lzcNum7 > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setUnit(unit);

                    examAutoEvaluation.setUnitId(id);
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectUserId(id));
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setModel("2020年月度柳州处对派出所绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("547546c3d76144afa2a4433dd350afda");
                    examAutoEvaluation.setDetails(unit + year + "年" + month + "月,中央级报纸头版非头条每篇加0.5分。");
                    examAutoEvaluation.setOption("新闻稿件，每篇（条），中央级报纸头版非头条");
                    examAutoEvaluation.setOptionId("2fff7ddb7e6b43b1b8c557fcba3d0866");
                    examAutoEvaluation.setScore("0.5");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","刊稿排名_新闻稿件，每篇（条），中央级报纸头版非头条");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
            }
        }
        for (int n = 0; n < bhcPartyList.size(); n++) {
            Office office = bhcPartyList.get(n);
            String id = office.getId();
            String unit = office.getName();

            int Num1 = affairNewsDao.selectNumber(yearL,yearT,id,adopt1);
            if (Num1 > 0) {
                lzcNum1++;
                bhcdetails1.append(unit);
            }
            int Num2 = affairNewsDao.selectNumber(yearL,yearT,id,adopt2);
            if (Num2 > 0) {
                bhcNum2++;
                bhcdetails2.append(unit);
            }
            int Num3 = affairNewsDao.selectNumber(yearL,yearT,id,adopt3);
            if (Num3 > 0) {
                bhcNum3++;
                bhcdetails3.append(unit);
            }
            int Num4 = affairNewsDao.selectNumber(yearL,yearT,id,adopt4);
            if (Num4 > 0) {
                bhcNum4++;
                bhcdetails4.append(unit);
            }
            int Num5 = affairNewsDao.selectNumber(yearL,yearT,id,adopt5);
            if (Num5 > 0) {
                bhcNum5++;
                bhcdetails5.append(unit);
            }
            int Num6 = affairNewsDao.selectNumber(yearL,yearT,id,adopt6);
            if (Num6 > 0) {
                bhcNum6++;
                bhcdetails6.append(unit);
            }
            int Num7 = affairNewsDao.selectNumber(yearL,yearT,id,adopt7);
            if (Num7 > 0) {
                bhcNum7++;
                bhcdetails7.append(unit);
            }

            if (bhcNum1 > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(id);
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectUserId(id));
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setModel("2020年月度北海处对派出所、大队绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("3cd29fab3ef043c2908ad83c56b7fc9b");
                    examAutoEvaluation.setDetails(unit + year + "年" + month + "月,电视专题片被中央电视台采用每部加1分");
                    examAutoEvaluation.setOption("电视专题片被中央电视台采用，每部");
                    examAutoEvaluation.setOptionId("f147a18ab79a4cd480d5e676581ccb7d");
                    examAutoEvaluation.setScore("1");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","刊稿排名_电视专题片被中央电视台采用，每部");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            if (bhcNum2 > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(id);
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectUserId(id));
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setModel("2020年月度北海处对派出所、大队绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("3cd29fab3ef043c2908ad83c56b7fc9b");
                    examAutoEvaluation.setDetails(unit + year + "年" + month + "月,长篇通讯，中央级报纸头条每篇加1.5分");
                    examAutoEvaluation.setOption("长篇通讯，中央级报纸头条每篇");
                    examAutoEvaluation.setOptionId("70ac6d44f1574cc0ab53716e72591b95");
                    examAutoEvaluation.setScore("1.5");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","刊稿排名_长篇通讯，中央级报纸头条每篇");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            if (bhcNum3 > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(id);
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectUserId(id));
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setModel("2020年月度北海处对派出所、大队绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("3cd29fab3ef043c2908ad83c56b7fc9b");
                    examAutoEvaluation.setDetails(unit + year + "年" + month + "月,中央级报纸每篇加0.5分");
                    examAutoEvaluation.setOption("长篇通讯，中央级报纸每篇");
                    examAutoEvaluation.setOptionId("d2df6afbf97e4ae5b0774290e7518ca4");
                    examAutoEvaluation.setScore("0.5");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","刊稿排名_长篇通讯，中央级报纸每篇");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            if (bhcNum4 > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(id);
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectUserId(id));
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setModel("2020年月度北海处对派出所、大队绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("3cd29fab3ef043c2908ad83c56b7fc9b");
                    examAutoEvaluation.setDetails(unit + year + "年" + month + "月,新闻稿件，央视《新闻联播》每篇加2.5分");
                    examAutoEvaluation.setOption("新闻稿件，每篇（条），央视《新闻联播》");
                    examAutoEvaluation.setOptionId("76251b9e23df495e8c6956a052b80453");
                    examAutoEvaluation.setScore("2.5");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","刊稿排名_新闻稿件，每篇（条），央视《新闻联播》");
                this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            if (bhcNum5 > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(id);
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectUserId(id));
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setModel("2020年月度北海处对派出所、大队绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("3cd29fab3ef043c2908ad83c56b7fc9b");
                    examAutoEvaluation.setDetails(unit + year + "年" + month + "月,中央人民广播电台《新闻联播》每篇加1.5分");
                    examAutoEvaluation.setOption("新闻稿件，每篇（条），中央人民广播电台《新闻联播》");
                    examAutoEvaluation.setOptionId("93b8012a7bc44175834103411edde5df");
                    examAutoEvaluation.setScore("1.5");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","刊稿排名_新闻稿件，每篇（条），中央人民广播电台《新闻联播》");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            if (bhcNum6 > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(id);
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectUserId(id));
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setModel("2020年月度北海处对派出所、大队绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("3cd29fab3ef043c2908ad83c56b7fc9b");
                    examAutoEvaluation.setDetails(unit + year + "年" + month + "月,中央级报纸头版头条每篇加1分");
                    examAutoEvaluation.setOption("新闻稿件，每篇（条），中央级报纸头版头条");
                    examAutoEvaluation.setOptionId("cc71effab96f442198d0c2a726f585ca");
                    examAutoEvaluation.setScore("1");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","刊稿排名_新闻稿件，每篇（条），中央级报纸头版头条");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            if (bhcNum7 > 0){
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setUnit(unit);
                    examAutoEvaluation.setUnitId(id);
                    examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectUserId(id));
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setModel("2020年月度北海处对派出所、大队绩效考评公共加分标准");
                    examAutoEvaluation.setModelId("3cd29fab3ef043c2908ad83c56b7fc9b");
                    examAutoEvaluation.setDetails(unit + year + "年" + month + "月,中央级报纸头版非头条每篇加0.5分。");
                    examAutoEvaluation.setOption("新闻稿件，每篇（条），中央级报纸头版非头条");
                    examAutoEvaluation.setOptionId("06d660915b274034b5ca4621f7c0f84d");
                    examAutoEvaluation.setScore("0.5");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","刊稿排名_新闻稿件，每篇（条），中央级报纸头版非头条");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);


            }
        }
    }


    /*
     * 公安处领导
     *
     * 宣传思想-新闻宣传-稿件汇总-刊稿排名
     *
     * 月度
     *
     * */
    @Transactional(readOnly = false)
    public void gacKgpm(String checkTime){
        //年份
        String year = checkTime.substring(0, 4);
        //月份
        String month = checkTime.substring(checkTime.length() - 2);
        Integer m = Integer.valueOf(month);
        Integer lastMonth = m - 1;

        Map<String, String> map = monthTime(checkTime);
        String yearL = map.get("yearL");
        String yearT = map.get("yearT");

        //所有的公安处领导身份证

        String chuRoleId = "230e916609a349e68f7186f784e11419";

        ExamWorkflowDefine define = new ExamWorkflowDefine();
        define.setName(chuRoleId);
        List<User> chuList = examWorkflowSegmentsDefineService.queryPoliceDatas(define);
        List<String> chuIdList = new ArrayList<>();
        for (int c = 0; c < chuList.size(); c++) {
            User user = chuList.get(c);
            String idN = user.getNo();
            chuIdList.add(idN);
        }

        for (int i = 0; i < chuIdList.size(); i++) {
            String idN = chuIdList.get(i);
            String name = userDao.selectName(idN);
            List<AffairNews> affairNewsList = affairNewsDao.selectAllKgPeople(yearL,yearT,idN);
            for (int a = 0; a < affairNewsList.size(); a++){
                AffairNews affairNews = affairNewsList.get(a);
                String adopt = affairNews.getAdopt();
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("2");
                examAutoEvaluation.setEvalType("5");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setName(name);
                examAutoEvaluation.setIdNumber(idN);
                examAutoEvaluation.setModel("2020年月度对公安处领导班子成员绩效考核加分标准");
                examAutoEvaluation.setModelId("1b2068b9ecd14f4d8e2c5dbb9b25e96a");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idN));
                if ("4".equals(adopt)){
                    examAutoEvaluation.setDetails(name+year+"年"+month+"月，在完成任务的基础上,在央视《新闻联播》上稿每篇（条）加8分；");
                    examAutoEvaluation.setOption("在完成基本任务的基础上,新闻稿件每篇（条），央视《新闻联播》");
                    examAutoEvaluation.setOptionId("93fcf4ad300f4afeb333ab2bd1c75e76");
                    examAutoEvaluation.setScore("8");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_在完成基本任务的基础上,新闻稿件每篇（条），央视《新闻联播》");

                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if ("5".equals(adopt)){
                    examAutoEvaluation.setDetails(name+year+"年"+month+"月，在完成任务的基础上,在中央人民广播电台《新闻联播》上稿每篇（条）加5分；");
                    examAutoEvaluation.setOption("在完成基本任务的基础上,新闻稿件每篇（条），中央人民广播电台《新闻联播》");
                    examAutoEvaluation.setOptionId("b856b6df41fd452e9fce5f543eac8e69");
                    examAutoEvaluation.setScore("5");

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_在完成基本任务的基础上,新闻稿件每篇（条），中央人民广播电台《新闻联播》");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if ("6".equals(adopt)){
                    examAutoEvaluation.setDetails(name+year+"年"+month+"月，在完成任务的基础上,在中央级报纸头版头条上稿每篇（条）加5分；");
                    examAutoEvaluation.setOption("在完成基本任务的基础上,新闻稿件每篇（条），中央级报纸头版头条");
                    examAutoEvaluation.setOptionId("b4c016a61b4442ce9ff2a69faf076503");
                    examAutoEvaluation.setScore("5");

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_在完成基本任务的基础上,新闻稿件每篇（条），中央级报纸头版头条");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if ("6".equals(adopt)){
                    examAutoEvaluation.setDetails(name+year+"年"+month+"月，在完成任务的基础上,在中央级报纸非头版头条上稿每篇（条）加4分。（\t已有，注：同一稿件在多个媒体、频道刊用的，按加分最高的给予加分，不重复加分，最高加分不能超过10分。（通讯员以署名为准，两人及以上取平均分））");
                    examAutoEvaluation.setOption("在完成基本任务的基础上,新闻稿件每篇（条），中央级报纸头版非头条");
                    examAutoEvaluation.setOptionId("1b6b394eb7b44681905d6a284cac8feb");
                    examAutoEvaluation.setScore("10");

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_在完成基本任务的基础上,新闻稿件每篇（条），中央级报纸头版非头条");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
        }
    }



    /*
     * 公安处领导
     *
     * 宣传思想-新闻宣传-稿件汇总-刊稿排名
     *
     * 年度
     *
     * */
    @Transactional(readOnly = false)
    public void gacKgpmYear(String year) {

        Integer y = Integer.valueOf(year);
        Integer yl = y - 1;
        String lastYear = String.valueOf(yl);

        Map<String, String> map = this.yearTime(year);
        String yearL = map.get("yearL");
        String yearT = map.get("yearT");

        //所有的公安处领导身份证

        String chuRoleId = "230e916609a349e68f7186f784e11419";

        ExamWorkflowDefine define = new ExamWorkflowDefine();
        define.setName(chuRoleId);
        List<User> chuList = examWorkflowSegmentsDefineService.queryPoliceDatas(define);
        List<String> chuIdList = new ArrayList<>();
        for (int c = 0; c < chuList.size(); c++) {
            User user = chuList.get(c);
            String idN = user.getNo();
            chuIdList.add(idN);
        }

        for (int i = 0; i < chuIdList.size(); i++) {
            String idN = chuIdList.get(i);
            String name = userDao.selectName(idN);
            List<AffairNews> affairNewsList = affairNewsDao.selectAllKgPeople(yearL, yearT, idN);
            for (int a = 0; a < affairNewsList.size(); a++) {
                AffairNews affairNews = affairNewsList.get(a);
                String adopt = affairNews.getAdopt();

                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("2");
                examAutoEvaluation.setEvalType("5");
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setName(name);
                examAutoEvaluation.setIdNumber(idN);
                examAutoEvaluation.setModel("2020年年度对公安处领导班子成员绩效考核加分标准");
                examAutoEvaluation.setModelId("0bee7919f52944a0bf29719a573b8a25");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idN));
                if ("4".equals(adopt)) {
                    examAutoEvaluation.setDetails(name + year + "年" + "在完成任务的基础上,在央视《新闻联播》上稿每篇（条）加3分；");
                    examAutoEvaluation.setOption("在完成基本任务的基础上,新闻稿件每篇（条），央视《新闻联播》");
                    examAutoEvaluation.setOptionId("a960145898114121b4964972ddd6ee83");
                    examAutoEvaluation.setScore("3");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_在完成基本任务的基础上,新闻稿件每篇（条），央视《新闻联播》");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if ("5".equals(adopt)) {
                    examAutoEvaluation.setDetails(name + year + "年" + "在完成任务的基础上,在中央人民广播电台《新闻联播》上稿每篇（条）加2分；");
                    examAutoEvaluation.setOption("在完成基本任务的基础上,新闻稿件每篇（条），中央人民广播电台《新闻联播》");
                    examAutoEvaluation.setOptionId("4b007790dc914a9d92f817da5c01fa12");
                    examAutoEvaluation.setScore("2");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_在完成基本任务的基础上,新闻稿件每篇（条），中央人民广播电台《新闻联播》");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if ("6".equals(adopt)) {
                    examAutoEvaluation.setDetails(name + year + "年" + "在完成任务的基础上,在中央级报纸头版头条上稿每篇（条）加2分；");
                    examAutoEvaluation.setOption("在完成基本任务的基础上,新闻稿件每篇（条），中央级报纸头版头条");
                    examAutoEvaluation.setOptionId("15844ee3c5ef48ad9f23d294a036e00d");
                    examAutoEvaluation.setScore("2");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_在完成基本任务的基础上,新闻稿件每篇（条），中央级报纸头版头条");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if ("6".equals(adopt)) {
                    examAutoEvaluation.setDetails(name + year + "年" + "在完成任务的基础上,在中央级报纸非头版头条上稿每篇（条）加1分。");
                    examAutoEvaluation.setOption("在完成基本任务的基础上,新闻稿件每篇（条），中央级报纸头版非头条");
                    examAutoEvaluation.setOptionId("5a6ac38f0daf4c2fbebebde703651d9f");
                    examAutoEvaluation.setScore("1");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_在完成基本任务的基础上,新闻稿件每篇（条），中央级报纸头版非头条");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
        }
    }


    /*
     * 中基层
     *
     * 宣传思想-新闻宣传-稿件汇总-刊稿排名
     *
     * 月度
     * */
    @Transactional(readOnly = false)
    public void zjcKgpm(String checkTime){

        String year = checkTime.substring(0, 4);
        Integer y = Integer.valueOf(year);
        String month = checkTime.substring(checkTime.length() - 2);
        Integer m = Integer.valueOf(month);
        Integer lastMonth = m - 1;
        Integer lastYear = y - 1;

        Map<String, String> map = this.monthTime(checkTime);
        String yearL = map.get("yearL");
        String yearT = map.get("yearT");

        /*中基层*/
        String juJiGuanRoleId = "13bac520ae4d4160b595384691b443fd";
        String chuJiGuanRoleId = "230e916609a349e68f7186f784e11419";
        String suoduiJiGuanRoleId = "ff24c3288860447d867d08d462a2a2b9";

        String[] zhongJiCeng = new String[3];
        zhongJiCeng[0] = chuJiGuanRoleId;
        zhongJiCeng[1] = juJiGuanRoleId;
        zhongJiCeng[2] = suoduiJiGuanRoleId;
        String companyId = "156";
        List<User> temzhongJiCengList = new ArrayList<>();
        Arrays.stream(zhongJiCeng).forEach(s -> {
            ExamWorkflowDefine zhongDefine = new ExamWorkflowDefine();
            zhongDefine.setName(s);
            if (companyId.equals("1")) {
                zhongDefine.getSqlMap().put("dsf", "and u.company_id = '" + companyId + "' and u.office_id not in ('34','95','156')");
            } else {
                zhongDefine.getSqlMap().put("dsf", "and u.company_id = '" + companyId + "'");
            }
            temzhongJiCengList.addAll(examWorkflowSegmentsDefineService.queryPoliceDatas(zhongDefine));
        });
        for (int z = 0; z < temzhongJiCengList.size(); z++) {
            User user = temzhongJiCengList.get(z);
            String idN = user.getNo();
            String name = user.getName();

            List<AffairNews> affairNewsList = affairNewsDao.selectAllKgPeople(yearL, yearT, idN);

            for (int a = 0; a < affairNewsList.size(); a++){
                AffairNews affairNews = affairNewsList.get(a);
                String adopt = affairNews.getAdopt();
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("2");
                examAutoEvaluation.setEvalType("6");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setName(name);
                examAutoEvaluation.setIdNumber(idN);
                examAutoEvaluation.setModel("2020年月度对中、基层领导干部(公安处领导除外)绩效考核加分标准");
                examAutoEvaluation.setModelId("8c649c304296427c95c85ec150054694");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idN));
                if ("11".equals(adopt)){
                    examAutoEvaluation.setDetails(name+year+"年"+month+"月,制作电视专题片（5分钟以上）被中央电视台采用，每部加5分；");
                    examAutoEvaluation.setOption("制作电视专题片（5分钟以上）被中央电视台采用，每部");
                    examAutoEvaluation.setOptionId("944c2f7ce0dd4743a917c29f4fdb6aeb");
                    examAutoEvaluation.setScore("5");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_制作电视专题片（5分钟以上）被中央电视台采用，每部");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if ("4".equals(adopt)){
                    examAutoEvaluation.setDetails(name+year+"年"+month+"月,在完成任务的基础上,在央视《新闻联播》上稿每篇（条）加8分；");
                    examAutoEvaluation.setOption("在完成基本任务的基础上,新闻稿件每篇（条），央视《新闻联播》");
                    examAutoEvaluation.setOptionId("11d8e9ebf555452d9e3e0a9b75e7d81a");
                    examAutoEvaluation.setScore("8");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_在完成基本任务的基础上,新闻稿件每篇（条），央视《新闻联播》");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                /*if ("4".equals(adopt)){
                    examAutoEvaluation.setDetails(name+year+"年"+month+"月,在完成任务的基础上,在央视《新闻联播》上稿每篇（条）加8分；");
                    examAutoEvaluation.setOption("在完成基本任务的基础上,新闻稿件每篇（条），央视《新闻联播》");
                    examAutoEvaluation.setOptionId("11d8e9ebf555452d9e3e0a9b75e7d81a");
                    examAutoEvaluation.setScore("8");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_在完成基本任务的基础上,新闻稿件每篇（条），央视《新闻联播》");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }*/
                if ("5".equals(adopt)){
                    examAutoEvaluation.setDetails(name+year+"年"+month+"月,在完成任务的基础上,在中央人民广播电台《新闻联播》上稿每篇（条）加5分；");
                    examAutoEvaluation.setOption("在完成基本任务的基础上,新闻稿件每篇（条），中央人民广播电台《新闻联播》");
                    examAutoEvaluation.setOptionId("f3c5ca5d9d6b4bcdbf3cf6aa7b23fb96");
                    examAutoEvaluation.setScore("5");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_在完成基本任务的基础上,新闻稿件每篇（条），中央人民广播电台《新闻联播》");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if ("6".equals(adopt)){
                    examAutoEvaluation.setDetails(name+year+"年"+month+"月,在完成任务的基础上,在中央级报纸头版头条上稿每篇（条）加5分；");
                    examAutoEvaluation.setOption("在完成基本任务的基础上,新闻稿件每篇（条），中央级报纸头版头条");
                    examAutoEvaluation.setOptionId("3cfc9d96c08a434ca5876dc80a9d5f0f");
                    examAutoEvaluation.setScore("5");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_在完成基本任务的基础上,新闻稿件每篇（条），中央级报纸头版头条");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if ("7".equals(adopt)){
                    examAutoEvaluation.setDetails(name+year+"年"+month+"月,在完成任务的基础上,在中央级报纸非头版头条上稿每篇（条）加4分。");
                    examAutoEvaluation.setOption("在完成基本任务的基础上,新闻稿件每篇（条），中央级报纸头版非头条");
                    examAutoEvaluation.setOptionId("605f80cbefb74d4880c814813e2b9211");
                    examAutoEvaluation.setScore("4");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_在完成基本任务的基础上,新闻稿件每篇（条），中央级报纸头版非头条");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
        }
    }


    /*
     * 中基层
     *
     *  宣传思想-新闻宣传-稿件汇总-刊稿排名
     *
     * 年度
     * */
    @Transactional(readOnly = false)
    public void zjcKgpmYear(String year){

        Integer y = Integer.valueOf(year);
        Integer yl = y - 1;
        String lastYear = String.valueOf(yl);

        Map<String, String> map = this.yearTime(year);
        String yearL = map.get("yearL");
        String yearT = map.get("yearT");

        /*中基层*/
        String juJiGuanRoleId = "13bac520ae4d4160b595384691b443fd";
        String chuJiGuanRoleId = "230e916609a349e68f7186f784e11419";
        String suoduiJiGuanRoleId = "ff24c3288860447d867d08d462a2a2b9";

        String[] zhongJiCeng = new String[3];
        zhongJiCeng[0] = chuJiGuanRoleId;
        zhongJiCeng[1] = juJiGuanRoleId;
        zhongJiCeng[2] = suoduiJiGuanRoleId;
        String companyId = "156";
        List<User> temzhongJiCengList = new ArrayList<>();
        Arrays.stream(zhongJiCeng).forEach(s -> {
            ExamWorkflowDefine zhongDefine = new ExamWorkflowDefine();
            zhongDefine.setName(s);
            if (companyId.equals("1")) {
                zhongDefine.getSqlMap().put("dsf", "and u.company_id = '" + companyId + "' and u.office_id not in ('34','95','156')");
            } else {
                zhongDefine.getSqlMap().put("dsf", "and u.company_id = '" + companyId + "'");
            }
            temzhongJiCengList.addAll(examWorkflowSegmentsDefineService.queryPoliceDatas(zhongDefine));
        });

        for (int z = 0; z < temzhongJiCengList.size(); z++) {
            User user = temzhongJiCengList.get(z);
            String idN = user.getNo();
            String name = user.getName();

            List<AffairNews> affairNewsList = affairNewsDao.selectAllKgPeople(yearL, yearT, idN);

            for (int a = 0; a < affairNewsList.size(); a++) {
                AffairNews affairNews = affairNewsList.get(a);
                String adopt = affairNews.getAdopt();
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("2");
                examAutoEvaluation.setEvalType("6");
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setName(name);
                examAutoEvaluation.setIdNumber(idN);
                examAutoEvaluation.setModel("2020年年度对中、基层领导干部(公安处领导除外)绩效考核加分标准");
                examAutoEvaluation.setModelId("6921ad30851d4f0f96bd3db80c8505c0");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idN));
                if ("11".equals(adopt)){
                    examAutoEvaluation.setDetails(name+year+"年"+"制作电视专题片（5分钟以上）被中央电视台采用，每部加2分；");
                    examAutoEvaluation.setOption("制作电视专题片（5分钟以上）被中央电视台采用，每部");
                    examAutoEvaluation.setOptionId("89f78a95a8584cfcbff7cbf4382b3508");
                    examAutoEvaluation.setScore("2");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_制作电视专题片（5分钟以上）被中央电视台采用，每部");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if ("4".equals(adopt)){
                    examAutoEvaluation.setDetails(name+year+"年"+"在完成任务的基础上,在央视《新闻联播》上稿每篇（条）加3分；");
                    examAutoEvaluation.setOption("在完成基本任务的基础上,新闻稿件每篇（条），央视《新闻联播》");
                    examAutoEvaluation.setOptionId("f4dc601709e940edb450158213dce977");
                    examAutoEvaluation.setScore("3");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_在完成基本任务的基础上,新闻稿件每篇（条），央视《新闻联播》");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if ("5".equals(adopt)){
                    examAutoEvaluation.setDetails(name+year+"年"+"在完成任务的基础上,在中央人民广播电台《新闻联播》上稿每篇（条）加2分；");
                    examAutoEvaluation.setOption("在完成基本任务的基础上,新闻稿件每篇（条），中央人民广播电台《新闻联播》");
                    examAutoEvaluation.setOptionId("6765cb231b04467c9bd7fedf079beabd");
                    examAutoEvaluation.setScore("2");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_在完成基本任务的基础上,新闻稿件每篇（条），中央人民广播电台《新闻联播》");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if ("6".equals(adopt)){
                    examAutoEvaluation.setDetails(name+year+"年"+"在完成任务的基础上,在中央级报纸头版头条上稿每篇（条）加2分；");
                    examAutoEvaluation.setOption("在完成基本任务的基础上,新闻稿件每篇（条），中央级报纸头版头条");
                    examAutoEvaluation.setOptionId("a469c36b2a5849f0b8b39f8f0f509d35");
                    examAutoEvaluation.setScore("2");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_在完成基本任务的基础上,新闻稿件每篇（条），中央级报纸头版头条");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if ("7".equals(adopt)){
                    examAutoEvaluation.setDetails(name+year+"年"+"在完成任务的基础上,在中央级报纸非头版头条上稿每篇（条）加1分。");
                    examAutoEvaluation.setOption("在完成基本任务的基础上,新闻稿件每篇（条），中央级报纸头版非头条");
                    examAutoEvaluation.setOptionId("dead8ce9c2124a2c99a84fea98aa493f");
                    examAutoEvaluation.setScore("1");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_在完成基本任务的基础上,新闻稿件每篇（条），中央级报纸头版非头条");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
        }
    }

    /*
     * 民警
     *
     * 宣传思想-新闻宣传-稿件汇总-刊稿排名
     *
     * 月度
     * */
    @Transactional(readOnly = false)
    public void mjKgpm(String checkTime){


        String year = checkTime.substring(0, 4);
        Integer y = Integer.valueOf(year);
        String month = checkTime.substring(checkTime.length() - 2);
        Integer m = Integer.valueOf(month);
        Integer lastMonth = m - 1;
        Integer lastYear = y - 1;

        Map<String, String> map = this.monthTime(checkTime);
        String yearL = map.get("yearL");
        String yearT = map.get("yearT");

        //所有的民警身份证
        String policeRoleId = "2a7ea380b14f4870b6c44be21d2443c3";

        StringBuffer policeIds = new StringBuffer();
        StringBuffer policePersonNames = new StringBuffer();
        ExamWorkflowDefine policeDefine = new ExamWorkflowDefine();
        policeDefine.setName(policeRoleId);

        List<User> idNumberList = examWorkflowSegmentsDefineService.queryPoliceDatas(policeDefine);

        for (int i = 0; i < idNumberList.size(); i++) {

            User user = idNumberList.get(i);
            String idNumber = user.getNo();

            String name = user.getName();

            List<AffairNews> affairNewsList = affairNewsDao.selectAllKgPeople(yearL,yearT,idNumber);
            for (int a = 0; a < affairNewsList.size(); a++){
                AffairNews affairNews = affairNewsList.get(a);
                String adopt = affairNews.getAdopt();
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("2");
                examAutoEvaluation.setEvalType("7");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setName(name);
                examAutoEvaluation.setIdNumber(idNumber);
                examAutoEvaluation.setModel("2020年月度南宁铁路公安局民警绩效考核公共加分标准");
                examAutoEvaluation.setModelId("f1bd374dc4de469dbf9dc924c19ae413");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));
                if ("11".equals(adopt)){
                    examAutoEvaluation.setDetails(name+year+"年"+month+"月,制作电视专题片（5分钟以上）被中央电视台采用，每部加5分；");
                    examAutoEvaluation.setOption("制作电视专题片（5分钟以上）被中央电视台采用，每部");
                    examAutoEvaluation.setOptionId("2860548ef16f4b84bf70d30be6a2000d");
                    examAutoEvaluation.setScore("5");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_制作电视专题片（5分钟以上）被中央电视台采用，每部");

                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if ("4".equals(adopt)){
                    examAutoEvaluation.setDetails(name+year+"年"+month+"月,在完成任务的基础上,在央视《新闻联播》上稿每篇（条）加8分；");
                    examAutoEvaluation.setOption("在完成基本任务的基础上,新闻稿件每篇（条），央视《新闻联播》");
                    examAutoEvaluation.setOptionId("4f86ec6101eb4f28bbbaa02f4860654f");
                    examAutoEvaluation.setScore("8");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_在完成任务的基础上,新闻稿件每篇（条），央视《新闻联播》");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if ("5".equals(adopt)){
                    examAutoEvaluation.setDetails(name+year+"年"+month+"月,在完成任务的基础上,在中央人民广播电台《新闻联播》上稿每篇（条）加5分；");
                    examAutoEvaluation.setOption("在完成基本任务的基础上,新闻稿件每篇（条），中央人民广播电台《新闻联播》");
                    examAutoEvaluation.setOptionId("260221a4a7474aa38e618b58204ccf8a");
                    examAutoEvaluation.setScore("5");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_在完成任务的基础上,新闻稿件每篇（条），中央人民广播电台《新闻联播》");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if ("6".equals(adopt)){
                    examAutoEvaluation.setDetails(name+year+"年"+month+"月,在完成任务的基础上,在中央级报纸头版头条上稿每篇（条）加5分；");
                    examAutoEvaluation.setOption("在完成基本任务的基础上,新闻稿件每篇（条），中央级报纸头版头条");
                    examAutoEvaluation.setOptionId("54d420d8374b413e993f3f09715aad6c");
                    examAutoEvaluation.setScore("5");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_在完成任务的基础上,新闻稿件每篇（条），中央级报纸头版头条");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if ("7".equals(adopt)){
                    examAutoEvaluation.setDetails(name+year+"年"+month+"月,在完成任务的基础上,在中央级报纸非头版头条上稿每篇（条）加4分。");
                    examAutoEvaluation.setOption("在完成基本任务的基础上,新闻稿件每篇（条），中央级报纸头版非头条");
                    examAutoEvaluation.setOptionId("778f21c909784059848234631f573a5b");
                    examAutoEvaluation.setScore("4");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_在完成任务的基础上,新闻稿件每篇（条），中央级报纸头版非头条");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
        }
    }

    /*
     * 民警
     *
     * 宣传思想-新闻宣传-稿件汇总-刊稿排名
     *
     * 年度
     * */
    @Transactional(readOnly = false)
    public void mjKgpmYear(String year){

        Integer y = Integer.valueOf(year);
        Integer yl = y - 1;
        String lastYear = String.valueOf(yl);

        Map<String, String> map = this.yearTime(year);
        String yearL = map.get("yearL");
        String yearT = map.get("yearT");

        //所有的民警身份证
        String policeRoleId = "2a7ea380b14f4870b6c44be21d2443c3";

        StringBuffer policeIds = new StringBuffer();
        StringBuffer policePersonNames = new StringBuffer();
        ExamWorkflowDefine policeDefine = new ExamWorkflowDefine();
        policeDefine.setName(policeRoleId);

        List<User> idNumberList = examWorkflowSegmentsDefineService.queryPoliceDatas(policeDefine);

        for (int i = 0; i < idNumberList.size(); i++) {

            User user = idNumberList.get(i);
            String idNumber = user.getNo();

            String name = userDao.selectName(idNumber);

            List<AffairNews> affairNewsList = affairNewsDao.selectAllKgPeople(yearL,yearT,idNumber);
            for (int a = 0; a < affairNewsList.size(); a++){
                AffairNews affairNews = affairNewsList.get(a);
                String adopt = affairNews.getAdopt();
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("2");
                examAutoEvaluation.setEvalType("7");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setName(name);
                examAutoEvaluation.setIdNumber(idNumber);
                examAutoEvaluation.setModel("2020年年度南宁铁路公安局民警绩效考核公共加分标准");
                examAutoEvaluation.setModelId("59c90866a1484aec97cbf82578b457a2");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));
                if ("11".equals(adopt)){
                    examAutoEvaluation.setDetails(name + year + "年"+ "制作电视专题片（5分钟以上）被中央电视台采用，每部加2分");
                    examAutoEvaluation.setOption("制作电视专题片（5分钟以上）被中央电视台采用，每部");
                    examAutoEvaluation.setOptionId("d558a711c6694e6fbe4bb894fa0e0558");
                    examAutoEvaluation.setScore("2");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_制作电视专题片（5分钟以上）被中央电视台采用，每部");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if ("4".equals(adopt)){
                    examAutoEvaluation.setDetails(name + year + "年"+ "在完成任务的基础上,在央视《新闻联播》上稿每篇（条）加3分；");
                    examAutoEvaluation.setOption("在完成任务的基础上,新闻稿件每篇（条），央视《新闻联播》");
                    examAutoEvaluation.setOptionId("fab5393f6ec3422eacc130a1e23cba47");
                    examAutoEvaluation.setScore("3");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_在完成任务的基础上,新闻稿件每篇（条），央视《新闻联播》");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if ("5".equals(adopt)){
                    examAutoEvaluation.setDetails(name + year + "年"+ "在完成任务的基础上,在中央人民广播电台《新闻联播》上稿每篇（条）加2分；");
                    examAutoEvaluation.setOption("在完成任务的基础上,新闻稿件每篇（条），中央人民广播电台《新闻联播》");
                    examAutoEvaluation.setOptionId("af13df02ebd4442ba0063016051cc7c7");
                    examAutoEvaluation.setScore("2");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_在完成任务的基础上,新闻稿件每篇（条），中央人民广播电台《新闻联播》");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if ("6".equals(adopt)){
                    examAutoEvaluation.setDetails(name + year + "年"+ "在完成任务的基础上,在中央级报纸头版头条上稿每篇（条）加2分；");
                    examAutoEvaluation.setOption("在完成任务的基础上,新闻稿件每篇（条），中央级报纸头版头条");
                    examAutoEvaluation.setOptionId("320f0e24127f4641804644904da80f90");
                    examAutoEvaluation.setScore("2");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_在完成任务的基础上,新闻稿件每篇（条），中央级报纸头版头条");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
                if ("7".equals(adopt)) {
                    examAutoEvaluation.setDetails(name + year + "年"+ "在完成任务的基础上,在中央级报纸非头版头条上稿每篇（条）加1分。");
                    examAutoEvaluation.setOption("在完成任务的基础上,新闻稿件每篇（条），中央级报纸头版非头条");
                    examAutoEvaluation.setOptionId("aac2c8d2fca94bbd91622d4ba494f86c");
                    examAutoEvaluation.setScore("1");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刊稿排名_在完成任务的基础上,新闻稿件每篇（条），中央级报纸头版非头条");
                    this.deleteInfoByMore(examAutoEvaluation);
                    this.save(examAutoEvaluation);
                }
            }
        }
    }


    /*
     * 三会一课
     *
     * 局考处
     *
     * 月度
     * */
    public void jkcShyk(String checkTime){

        String year = checkTime.substring(0, 4);
        Integer y = Integer.valueOf(year);
        String lastYear = String.valueOf(y - 1);
        String month = checkTime.substring(checkTime.length() - 2);
        Integer m = Integer.valueOf(month);

        List<AffairGeneralSituation> nncPartyList = affairGeneralSituationService.selectChuParty("34");
        List<AffairGeneralSituation> lzcPartyList = affairGeneralSituationService.selectChuParty("95");
        List<AffairGeneralSituation> bhcPartyList = affairGeneralSituationService.selectChuParty("156");

        //会议类型
        String type = null;
        //南宁处数量
        Integer nncNum = 0;
        //南宁处详情
        StringBuilder details = new StringBuilder();
        //柳州处数量
        Integer lzcNum = 0;
        //柳州处详情
        StringBuilder lzcdetails = new StringBuilder();
        //北海处数量
        Integer bhcNum = 0;
        //北海处详情
        StringBuilder bhcdetails = new StringBuilder();

        for (int n = 0; n < nncPartyList.size(); n++){

            AffairGeneralSituation affairGeneralSituation = nncPartyList.get(n);
            String name = affairGeneralSituation.getPartyOrganization();
            String id = affairGeneralSituation.getId();
            int partyNum = affairPartyMemberService.getNumByPartyId(id);//党组织人数
            //半年  党总支党员大会、党总支党课
            if ((m == 6 || m == 12) && name.contains("党总支")){

                Map<String, String> map = this.halfTime2(checkTime);
                String yearL = map.get("yearL");
                String yearT = map.get("yearT");

                //党员大会
                type = "1";
                Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if (dydhNumber < 1){
                    nncNum++;
                    details.append(",").append(name).append(year).append("年").append("上半年，党员大会未按时进行");
                }

                //党课
                type = "5";
                Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if (dkNumber < 1){
                    nncNum++;
                    details.append(",").append(name).append(year).append("年").append("上半年，党课未按时进行");

                }
            }
            /*if (m == 1 && name.contains("党总支")){

                Map<String, String> map = this.halfTime(checkTime);
                String yearL = map.get("yearL");
                String yearT = map.get("yearT");

                //党员大会
                type = "1";
                Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if (dydhNumber < 1){
                    nncNum++;
                    details.append(",").append(name).append(lastYear).append("年").append("下半年，党员大会未按时进行");

                }

                //党课
                type = "5";
                Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if (dkNumber < 1){
                    nncNum++;
                    details.append(",").append(name).append(lastYear).append("年").append("下半年，党课未按时进行");

                }
            }*/
            //6.11  ~  7.5王峻宇提出六人及以下的党支部取消支委会，党员大会调整为每月一次
            if(name.contains("党支部")) {
                if (partyNum > 6) {
                    //每季度   党支部党员大会、党支部党课
                    if ((m==3 || m == 6 || m == 9 || m == 12) && name.contains("党支部")) {
                        Map<String, String> time = jdTime2(checkTime);
                        String yearL = time.get("yearL");
                        String yearT = time.get("yearT");
                        String jd = time.get("jd");

                        //党员大会
                        type = "1";
                        Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(id, yearL, yearT, type);
                        if (dydhNumber < 1) {
                            nncNum++;
                            details.append(",").append(name).append(year).append("年").append(jd).append("季度，党员大会未按时进行");
                        }

                        //党课
                        type = "5";
                        Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id, yearL, yearT, type);
                        if (dkNumber < 1) {
                            nncNum++;
                            details.append(",").append(name).append(year).append("年").append(jd).append("季度，党课未按时进行");
                        }
                    }

                    //每季度   党支部党员大会、党支部党课
                  /*  if ((m == 1) && name.contains("党支部")) {
                        Map<String, String> time = jdTime(checkTime);
                        String yearL = time.get("yearL");
                        String yearT = time.get("yearT");
                        String jd = time.get("jd");

                        //党员大会
                        type = "1";
                        Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(id, yearL, yearT, type);
                        if (dydhNumber < 1) {
                            nncNum++;
                            details.append(",").append(name).append(lastYear).append("年").append(jd).append("季度，党员大会未按时进行");
                        }

                        //党课
                        type = "5";
                        Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id, yearL, yearT, type);
                        if (dkNumber < 1) {
                            nncNum++;
                            details.append(",").append(name).append(lastYear).append("年").append(jd).append("季度，党课未按时进行");
                        }
                    }*/
                } else {
                    //每季度   党支部党课
                    if ((m==3 ||m == 6 || m == 9 || m == 12) && name.contains("党支部")) {
                        Map<String, String> time = jdTime2(checkTime);
                        String yearL = time.get("yearL");
                        String yearT = time.get("yearT");
                        String jd = time.get("jd");

                        //党课
                        type = "5";
                        Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id, yearL, yearT, type);
                        if (dkNumber < 1) {
                            nncNum++;
                            details.append(",").append(name).append(year).append("年").append(jd).append("季度，党课未按时进行");
                        }
                    }

                    //每季度   党支部党课
                    /*if ((m == 1) && name.contains("党支部")) {
                        Map<String, String> time = jdTime(checkTime);
                        String yearL = time.get("yearL");
                        String yearT = time.get("yearT");
                        String jd = time.get("jd");


                        //党课
                        type = "5";
                        Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id, yearL, yearT, type);
                        if (dkNumber < 1) {
                            nncNum++;
                            details.append(",").append(name).append(lastYear).append("年").append(jd).append("季度，党课未按时进行");
                        }
                    }*/

                    Map<String, String> time = monthTime(checkTime);
                    String yearL = time.get("yearL");
                    String yearT = time.get("yearT");
                    //党员大会 - 每月
                    type = "1";
                    Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(id, yearL, yearT, type);
                    if (dydhNumber < 1) {
                        nncNum++;
                        details.append(",").append(name).append(lastYear).append("年").append(month).append("月，党员大会未按时进行");
                    }

                }
            }
            //每月    党支部（总支）委员会、党小组会

            Map<String, String> time = monthTime(checkTime);
            String yearL = time.get("yearL");
            String yearT = time.get("yearT");
            //6.11  ~  7.5王峻宇提出六人及以下的党支部取消支委会，党员大会调整为每月一次
            if(name.contains("党总支") || partyNum > 6){
                //委员会
                type = "3";

                Integer wyhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if (wyhNumber < 1){
                    nncNum++;
                    details.append(",").append(name).append(year).append("年").append(month).append("月,委员会未按时进行");
                }
            }

            //党小组会
            /*type = "4";
            Integer dxzhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
            if (dxzhNumber < 1){
                nncNum++;
                details.append(",").append(year).append("年").append(month).append("月,党小组会未按时进行");
            }*/

        }
        if (nncNum > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setDetails(details+",");

            examAutoEvaluation.setUnit("南宁处政治处组织干部室");
            examAutoEvaluation.setUnitId("27");
            examAutoEvaluation.setAssess("");
            examAutoEvaluation.setModel("2020年月度公安局对公安处扣分标准(业务部分26项)");
            examAutoEvaluation.setModelId("aef99f1b42054342ba71c25634d0f9fc");
            examAutoEvaluation.setOption("公安处及管内单位党建活动组织不力，被上级检查发现的");
            examAutoEvaluation.setOptionId("69040de171b64154a3026ab7f48c05be");
            examAutoEvaluation.setFromSys("智慧政工");
            examAutoEvaluation.setScore(String.valueOf(nncNum * 3));
            examAutoEvaluation.setEvaluationId("34e8d855cf6b4b1ab5e7e23e7aaba658");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"组干三会一课");
            /*处理考评标准一样，汇总*/
            ExamAutoEvaluation old = this.getInfoByMore(examAutoEvaluation);
            if(old!=null){
                String oldDetails = old.getDetails();
                Double oldScore;
                try {
                    oldScore = Double.valueOf(old.getScore());
                }catch (Exception e){
                    e.printStackTrace();
                    oldScore = 0.0;
                }
                this.deleteInfoByMore(old);
                examAutoEvaluation.setScore(String.valueOf(oldScore+(nncNum * 3)));
                examAutoEvaluation.setDetails(oldDetails+"<br>"+details);
            }

            this.save(examAutoEvaluation);

        }
        for (int n = 0; n < lzcPartyList.size(); n++){

            AffairGeneralSituation affairGeneralSituation = lzcPartyList.get(n);
            String name = affairGeneralSituation.getPartyOrganization();
            String id = affairGeneralSituation.getId();
            int partyNum = affairPartyMemberService.getNumByPartyId(id);//党组织人数
            //半年  党总支党员大会、党总支党课
            if ((m==6 || m==12) && name.contains("党总支")){


                Map<String, String> map = this.halfTime2(checkTime);
                String yearL = map.get("yearL");
                String yearT = map.get("yearT");

                //党员大会
                type = "1";
                Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if (dydhNumber < 1){
                    lzcNum++;
                    lzcdetails.append(",").append(name).append(year).append("年").append("上半年，党员大会未按时进行");
                }

                //党课
                type = "5";
                Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if (dkNumber < 1){
                    lzcNum++;
                    lzcdetails.append(",").append(name).append(year).append("年").append("上半年，党课未按时进行");
                }
            }
            /*if (m == 1 && name.contains("党总支")){


                Map<String, String> map = this.halfTime(checkTime);
                String yearL = map.get("yearL");
                String yearT = map.get("yearT");

                //党员大会
                type = "1";
                Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if (dydhNumber < 1){
                    lzcNum++;
                    lzcdetails.append(",").append(name).append(year).append("年").append("下半年，党员大会未按时进行");
                }

                //党课
                type = "5";
                Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if (dkNumber < 1){
                    lzcNum++;
                    lzcdetails.append(",").append(name).append(year).append("年").append("下半年，党课未按时进行");
                }
            }*/
            //6.11  ~  7.5王峻宇提出六人及以下的党支部取消支委会，党员大会调整为每月一次
            if(name.contains("党支部")) {
                if (partyNum > 6) {
                    //每季度   党支部党员大会、党支部党课
                    if ((m == 3 || m == 6 || m == 9 || m == 12) && name.contains("党支部")) {
                        Map<String, String> time = jdTime2(checkTime);
                        String yearL = time.get("yearL");
                        String yearT = time.get("yearT");
                        String jd = time.get("jd");

                        //党员大会
                        type = "1";
                        Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(id, yearL, yearT, type);
                        if (dydhNumber < 1) {
                            lzcNum++;
                            lzcdetails.append(",").append(name).append(year).append("年").append(jd).append("季度，党员大会未按时进行");
                        }

                        //党课
                        type = "5";
                        Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id, yearL, yearT, type);
                        if (dkNumber < 1) {
                            lzcNum++;
                            lzcdetails.append(",").append(name).append(year).append("年").append(jd).append("季度，党课未按时进行");
                        }
                    }
                    /*if (m == 1 && name.contains("党支部")) {
                        Map<String, String> time = jdTime(checkTime);
                        String yearL = time.get("yearL");
                        String yearT = time.get("yearT");
                        String jd = time.get("jd");

                        //党员大会
                        type = "1";
                        Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(id, yearL, yearT, type);
                        if (dydhNumber < 1) {
                            lzcNum++;
                            lzcdetails.append(",").append(name).append(lastYear).append("年").append(jd).append("季度，党员大会未按时进行");
                        }

                        //党课
                        type = "5";
                        Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id, yearL, yearT, type);
                        if (dkNumber < 1) {
                            lzcNum++;
                            lzcdetails.append(",").append(name).append(lastYear).append("年").append(jd).append("季度，党课未按时进行");
                        }
                    }*/
                } else {
                    //每季度  党支部党课
                    if ((m == 3 || m == 6 || m == 9 || m == 12) && name.contains("党支部")) {
                        Map<String, String> time = jdTime2(checkTime);
                        String yearL = time.get("yearL");
                        String yearT = time.get("yearT");
                        String jd = time.get("jd");
                        //党课
                        type = "5";
                        Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id, yearL, yearT, type);
                        if (dkNumber < 1) {
                            lzcNum++;
                            lzcdetails.append(",").append(name).append(year).append("年").append(jd).append("季度，党课未按时进行");
                        }
                    }
                    /*if (m == 1 && name.contains("党支部")) {
                        Map<String, String> time = jdTime(checkTime);
                        String yearL = time.get("yearL");
                        String yearT = time.get("yearT");
                        String jd = time.get("jd");
                        //党课
                        type = "5";
                        Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id, yearL, yearT, type);
                        if (dkNumber < 1) {
                            lzcNum++;
                            lzcdetails.append(",").append(name).append(lastYear).append("年").append(jd).append("季度，党课未按时进行");
                        }
                    }*/
                    Map<String, String> time = monthTime(checkTime);
                    String yearL = time.get("yearL");
                    String yearT = time.get("yearT");
                    //党员大会 - 每月
                    type = "1";
                    Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(id, yearL, yearT, type);
                    if (dydhNumber < 1) {
                        lzcNum++;
                        lzcdetails.append(",").append(name).append(lastYear).append("年").append(month).append("月，党员大会未按时进行");
                    }

                }
            }
            //每月    党支部（总支）委员会、党小组会

            Map<String, String> time = monthTime(checkTime);
            String yearL = time.get("yearL");
            String yearT = time.get("yearT");

            //6.11  ~  7.5王峻宇提出六人及以下的党支部取消支委会，党员大会调整为每月一次
            if(name.contains("党总支") || partyNum > 6){
                //委员会
                type = "3";

                Integer wyhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if (wyhNumber < 1){
                    lzcNum++;
                    lzcdetails.append(",").append(name).append(year).append("年").append(month).append("月,委员会未按时进行");
                }
            }

            /*//党小组会
            type = "4";
            Integer dxzhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
            if (dxzhNumber < 1){
                lzcNum++;
                lzcdetails.append(",").append(name).append(year).append("年").append(month).append("月,党小组会未按时进行");
            }*/

        }
        if (lzcNum > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setDetails(lzcdetails+",");

            examAutoEvaluation.setUnit("柳州处政治处组织干部室");
            examAutoEvaluation.setUnitId("142");
            examAutoEvaluation.setAssess("");
            examAutoEvaluation.setModel("2020年月度公安局对公安处扣分标准(业务部分26项)");
            examAutoEvaluation.setModelId("aef99f1b42054342ba71c25634d0f9fc");
            examAutoEvaluation.setOption("公安处及管内单位党建活动组织不力，被上级检查发现的");
            examAutoEvaluation.setOptionId("69040de171b64154a3026ab7f48c05be");
            examAutoEvaluation.setFromSys("智慧政工");
            examAutoEvaluation.setScore(String.valueOf(lzcNum * 3));
            examAutoEvaluation.setEvaluationId("ec3ba2efdd404f2faa520f6e8a71ec4c");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"组干三会一课");
            /*处理考评标准一样，汇总*/
            ExamAutoEvaluation old = this.getInfoByMore(examAutoEvaluation);
            if(old!=null){
                String oldDetails = old.getDetails();
                Double oldScore;
                try {
                    oldScore = Double.valueOf(old.getScore());
                }catch (Exception e){
                    e.printStackTrace();
                    oldScore = 0.0;
                }
                this.deleteInfoByMore(old);
                examAutoEvaluation.setScore(String.valueOf(oldScore+(lzcNum * 3)));
                examAutoEvaluation.setDetails(oldDetails+"<br>"+lzcdetails);
            }
            this.save(examAutoEvaluation);

        }
        for (int n = 0; n < bhcPartyList.size(); n++){

            AffairGeneralSituation affairGeneralSituation = bhcPartyList.get(n);
            String name = affairGeneralSituation.getPartyOrganization();
            String id = affairGeneralSituation.getId();
            int partyNum = affairPartyMemberService.getNumByPartyId(id);//党组织人数
            //半年  党总支党员大会、党总支党课
            if ((m == 6 || m == 12) && name.contains("党总支")){

                Map<String, String> time = halfTime2(checkTime);
                String yearL = time.get("yearL");
                String yearT = time.get("yearT");
                String jd = time.get("jd");
                Integer lastY = y - 1;

                //党员大会
                type = "1";
                Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if (dydhNumber < 1){
                    bhcNum++;
                    bhcdetails.append(",").append(name).append(year).append("年").append("上半年，党员大会未按时进行");

                }

                //党课
                type = "5";
                Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if (dkNumber < 1){
                    bhcNum++;
                    bhcdetails.append(",").append(name).append(year).append("年").append("上半年，党课未按时进行");

                }
            }
           /* if (m == 1 && name.contains("党总支")){

                Map<String, String> time = jdTime(checkTime);
                String yearL = time.get("yearL");
                String yearT = time.get("yearT");
                String jd = time.get("jd");

                //党员大会
                type = "1";
                Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if (dydhNumber < 1){
                    bhcNum++;
                    bhcdetails.append(",").append(name).append(lastYear).append("年").append("下半年，党员大会未按时进行");
                }

                //党课
                type = "5";
                Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if (dkNumber < 1){
                    bhcNum++;
                    bhcdetails.append(",").append(name).append(lastYear).append("年").append("下半年，党课未按时进行");
                }
            }*/
            //6.11  ~  7.5王峻宇提出六人及以下的党支部取消支委会，党员大会调整为每月一次
            if(name.contains("党支部")) {
                if (partyNum > 6) {
                    //每季度   党支部党员大会、党支部党课
                    if ((m==3 || m == 6 || m == 9 || m == 12) && name.contains("党支部")) {
                        Map<String, String> time = jdTime2(checkTime);
                        String yearL = time.get("yearL");
                        String yearT = time.get("yearT");
                        String jd = time.get("jd");

                        //党员大会
                        type = "1";
                        Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(id, yearL, yearT, type);
                        if (dydhNumber < 1) {
                            bhcNum++;
                            bhcdetails.append(",").append(name).append(year).append("年").append(jd).append("季度，党员大会未按时进行");
                        }

                        //党课
                        type = "5";
                        Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id, yearL, yearT, type);
                        if (dkNumber < 1) {
                            bhcNum++;
                            bhcdetails.append(",").append(name).append(year).append("年").append(jd).append("季度，党课未按时进行");
                        }
                    }

                    /*if (m == 1 && name.contains("党支部")) {
                        Map<String, String> time = jdTime(checkTime);
                        String yearL = time.get("yearL");
                        String yearT = time.get("yearT");
                        String jd = time.get("jd");

                        //党员大会
                        type = "1";
                        Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(id, yearL, yearT, type);
                        if (dydhNumber < 1) {
                            bhcNum++;
                            bhcdetails.append(",").append(name).append(lastYear).append("年").append(jd).append("季度，党员大会未按时进行");
                        }

                        //党课
                        type = "5";
                        Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id, yearL, yearT, type);
                        if (dkNumber < 1) {
                            bhcNum++;
                            bhcdetails.append(",").append(name).append(lastYear).append("年").append(jd).append("季度，党课未按时进行");
                        }
                    }*/
                } else {
                    //每季度   党支部党员大会、党支部党课
                    if ((m == 3 || m == 6 || m == 9 || m == 12) && name.contains("党支部")) {
                        Map<String, String> time = jdTime2(checkTime);
                        String yearL = time.get("yearL");
                        String yearT = time.get("yearT");
                        String jd = time.get("jd");
                        //党课
                        type = "5";
                        Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id, yearL, yearT, type);
                        if (dkNumber < 1) {
                            bhcNum++;
                            bhcdetails.append(",").append(name).append(year).append("年").append(jd).append("季度，党课未按时进行");
                        }
                    }

                   /* if (m == 1 && name.contains("党支部")) {
                        Map<String, String> time = jdTime(checkTime);
                        String yearL = time.get("yearL");
                        String yearT = time.get("yearT");
                        String jd = time.get("jd");
                        //党课
                        type = "5";
                        Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id, yearL, yearT, type);
                        if (dkNumber < 1) {
                            bhcNum++;
                            bhcdetails.append(",").append(name).append(lastYear).append("年").append(jd).append("季度，党课未按时进行");
                        }
                    }*/
                    //每月    党员大会

                    Map<String, String> time = monthTime(checkTime);
                    String yearL = time.get("yearL");
                    String yearT = time.get("yearT");
                    //党员大会
                    type = "1";
                    Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(id, yearL, yearT, type);
                    if (dydhNumber < 1) {
                        bhcNum++;
                        bhcdetails.append(",").append(name).append(lastYear).append("年").append(month).append("月，党员大会未按时进行");
                    }
                }
            }

            //每月    党支部（总支）委员会、党小组会

            Map<String, String> time = monthTime(checkTime);
            String yearL = time.get("yearL");
            String yearT = time.get("yearT");
            //6.11  ~  7.5王峻宇提出六人及以下的党支部取消党支部委员会，党员大会调整为每月一次
            if(name.contains("党总支") || partyNum > 6){
                //委员会
                type = "3";

                Integer wyhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if (wyhNumber < 1){
                    bhcNum++;
                    bhcdetails.append(",").append(name).append(year).append("年").append(month).append("月,委员会未按时进行");
                }
            }
           /* //党小组会
            type = "4";
            Integer dxzhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
            if (dxzhNumber < 1){
                bhcNum++;
                bhcdetails.append(",").append(name).append(year).append("年").append(month).append("月,党小组会未按时进行");
            }*/

        }
        if (bhcNum > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setDetails(bhcdetails+",");

            examAutoEvaluation.setUnit("北海处政治处组织干部室");
            examAutoEvaluation.setUnitId("264");
            examAutoEvaluation.setAssess("");
            examAutoEvaluation.setModel("2020年月度公安局对公安处扣分标准(业务部分26项)");
            examAutoEvaluation.setModelId("aef99f1b42054342ba71c25634d0f9fc");
            examAutoEvaluation.setOption("公安处及管内单位党建活动组织不力，被上级检查发现的");
            examAutoEvaluation.setOptionId("69040de171b64154a3026ab7f48c05be");
            examAutoEvaluation.setFromSys("智慧政工");
            examAutoEvaluation.setScore(String.valueOf(bhcNum * 3));
            examAutoEvaluation.setEvaluationId("c90918faf2614baa8fa85230482bd43e");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"组干三会一课");
            /*处理考评标准一样，汇总*/
            ExamAutoEvaluation old = this.getInfoByMore(examAutoEvaluation);
            if(old!=null){
                String oldDetails = old.getDetails();
                Double oldScore;
                try {
                    oldScore = Double.valueOf(old.getScore());
                }catch (Exception e){
                    e.printStackTrace();
                    oldScore = 0.0;
                }
                this.deleteInfoByMore(old);
                examAutoEvaluation.setScore(String.valueOf(oldScore+(bhcNum * 3)));
                examAutoEvaluation.setDetails(oldDetails+"<br>"+bhcdetails);
            }
            this.save(examAutoEvaluation);

        }
    }

    /*
     * 三会一课
     *
     * 局考处
     *
     * 年度
     * */
    public void jkcShykYear(String year){

        Map<String, String> map = yearTime(year);
        String yearL = map.get("yearL");
        String yearT = map.get("yearT");

        List<AffairGeneralSituation> nncPartyList = affairGeneralSituationService.selectChuParty("34");
        List<AffairGeneralSituation> lzcPartyList = affairGeneralSituationService.selectChuParty("95");
        List<AffairGeneralSituation> bhcPartyList = affairGeneralSituationService.selectChuParty("156");

        //会议类型
        String type = null;
        //南宁处数量
        Integer nncNum = 0;
        //南宁处详情
        StringBuilder details = new StringBuilder();
        //柳州处数量
        Integer lzcNum = 0;
        //柳州处详情
        StringBuilder lzcdetails = new StringBuilder();
        //北海处数量
        Integer bhcNum = 0;
        //北海处详情
        StringBuilder bhcdetails = new StringBuilder();

        for (int n = 0; n < nncPartyList.size(); n++){

            AffairGeneralSituation affairGeneralSituation = nncPartyList.get(n);
            String name = affairGeneralSituation.getPartyOrganization();
            String id = affairGeneralSituation.getId();
            int partyNum = affairPartyMemberService.getNumByPartyId(id);//党组织人数
            //   党总支党员大会、党总支党课
            if (name.contains("党总支")){

                //党员大会
                type = "1";
                Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if (dydhNumber < 2){
                    nncNum++;
                    details.append(",").append(name).append(year).append("年").append("党员大会未按时进行");
                }

                //党课
                type = "5";
                Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if (dkNumber < 2){
                    nncNum++;
                    details.append(",").append(name).append(year).append("年").append("下半年，党课未按时进行");
                }
            }
            //    党支部党员大会、党支部党课
            if (name.contains("党支部")){

                //党员大会
                type = "1";
                Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                //6.11  ~  7.5王峻宇提出六人及以下的党支部取消支委会，党员大会调整为每月一次
                if(partyNum > 6){
                    if (dydhNumber < 4){
                        nncNum++;
                        details.append(",").append(name).append(year).append("年").append("党员大会未按时进行");
                    }
                }else{
                    //不含有支委会每月一次
                    if (dydhNumber < 12){
                        nncNum++;
                        details.append(",").append(name).append(year).append("年").append("党员大会未按时进行");
                    }
                }

                //党课
                type = "5";
                Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                //含有支委会，每季度一次
                if (dkNumber < 4){
                    nncNum++;
                    details.append(",").append(name).append(year).append("年").append("党课未按时进行");
                }

            }
            //    党支部（总支）委员会、党小组会
            //6.11  ~  7.5王峻宇提出六人及以下的党支部取消支委会，党员大会调整为每月一次
            if(name.contains("党总支") || partyNum > 6){
                //委员会
                type = "3";
                Integer wyhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if (wyhNumber < 12){
                    nncNum++;
                    details.append(",").append(name).append(year).append("年").append("委员会未按时进行");
                }
            }

           /* //党小组会
            type = "4";
            Integer dxzhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
            if (dxzhNumber < 12){
                nncNum++;
                details.append(",").append(name).append(year).append("年").append("党小组会未按时进行");
            }*/
        }
        if (nncNum > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("2");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setDetails(details+",");

            examAutoEvaluation.setUnit("南宁处政治处组织干部室");
            examAutoEvaluation.setUnitId("27");
            examAutoEvaluation.setAssess("");
            examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考核扣分标准(业务部分26项)");
            examAutoEvaluation.setModelId("a959d8865ea74bf68cf818adc710c75c");
            examAutoEvaluation.setOption("公安处及管内单位党建活动组织不力，被上级检查发现的");
            examAutoEvaluation.setOptionId("924dd81816a34620915683d19cc749c1");
            examAutoEvaluation.setFromSys("智慧政工");
            examAutoEvaluation.setScore(String.valueOf(nncNum * 2));
            examAutoEvaluation.setEvaluationId("34e8d855cf6b4b1ab5e7e23e7aaba658");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"组干三会一课");
            /*处理考评标准一样，汇总*/
            ExamAutoEvaluation old = this.getInfoByMore(examAutoEvaluation);
            if(old!=null){
                String oldDetails = old.getDetails();
                Double oldScore;
                try {
                    oldScore = Double.valueOf(old.getScore());
                }catch (Exception e){
                    e.printStackTrace();
                    oldScore = 0.0;
                }
                this.deleteInfoByMore(old);
                examAutoEvaluation.setScore(String.valueOf(oldScore+(nncNum * 2)));
                examAutoEvaluation.setDetails(oldDetails+"<br>"+details);
            }
            this.save(examAutoEvaluation);
        }
        for (int n = 0; n < lzcPartyList.size(); n++){

            AffairGeneralSituation affairGeneralSituation = lzcPartyList.get(n);
            String name = affairGeneralSituation.getPartyOrganization();
            String id = affairGeneralSituation.getId();
            int partyNum = affairPartyMemberService.getNumByPartyId(id);//党组织人数
            //   党总支党员大会、党总支党课
            if (name.contains("党总支")){

                //党员大会
                type = "1";
                Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if (dydhNumber < 2){
                    lzcNum++;
                    lzcdetails.append(",").append(name).append(year).append("年").append("党员大会未按时进行");
                }

                //党课
                type = "5";
                Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if (dkNumber < 2){
                    lzcNum++;
                    lzcdetails.append(",").append(name).append(year).append("年").append("下半年，党课未按时进行");
                }
            }
            //    党支部党员大会、党支部党课
            if (name.contains("党支部")){

                //党员大会
                type = "1";
                Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                //6.11  ~  7.5王峻宇提出六人及以下的党支部取消支委会，党员大会调整为每月一次
                if(partyNum > 6){
                    if (dydhNumber < 4){
                        lzcNum++;
                        lzcdetails.append(",").append(name).append(year).append("年").append("党员大会未按时进行");
                    }
                }else{
                    if (dydhNumber < 12){
                        lzcNum++;
                        lzcdetails.append(",").append(name).append(year).append("年").append("党员大会未按时进行");
                    }
                }

                //党课
                type = "5";
                Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if (dkNumber < 4){
                    lzcNum++;
                    lzcdetails.append(",").append(name).append(year).append("年").append("党课未按时进行");
                }
            }
            //    党支部（总支）委员会、党小组会
            //6.11  ~  7.5王峻宇提出六人及以下的党支部取消支委会，党员大会调整为每月一次
            if(name.contains("党总支") || partyNum > 6) {
                //委员会
                type = "3";
                Integer wyhNumber = affairYearThreeOneService.selectHuiyiNumber(id, yearL, yearT, type);
                if (wyhNumber < 12) {
                    lzcNum++;
                    lzcdetails.append(",").append(name).append(year).append("年").append("委员会未按时进行");
                }
            }
            /*//党小组会
            type = "4";
            Integer dxzhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
            if (dxzhNumber < 12){
                lzcNum++;
                lzcdetails.append(",").append(name).append(year).append("年").append("党小组会未按时进行");
            }*/
        }
        if (lzcNum > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("2");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setDetails(lzcdetails+",");

            examAutoEvaluation.setUnit("柳州处政治处组织干部室");
            examAutoEvaluation.setUnitId("142");
            examAutoEvaluation.setAssess("");
            examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考核扣分标准(业务部分26项)");
            examAutoEvaluation.setModelId("a959d8865ea74bf68cf818adc710c75c");
            examAutoEvaluation.setOption("公安处及管内单位党建活动组织不力，被上级检查发现的");
            examAutoEvaluation.setOptionId("924dd81816a34620915683d19cc749c1");
            examAutoEvaluation.setFromSys("智慧政工");
            examAutoEvaluation.setScore(String.valueOf(lzcNum * 2));
            examAutoEvaluation.setEvaluationId("ec3ba2efdd404f2faa520f6e8a71ec4c");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"组干三会一课");
            /*处理考评标准一样，汇总*/
            ExamAutoEvaluation old = this.getInfoByMore(examAutoEvaluation);
            if(old!=null){
                String oldDetails = old.getDetails();
                Double oldScore;
                try {
                    oldScore = Double.valueOf(old.getScore());
                }catch (Exception e){
                    e.printStackTrace();
                    oldScore = 0.0;
                }
                this.deleteInfoByMore(old);
                examAutoEvaluation.setScore(String.valueOf(oldScore+(lzcNum * 2)));
                examAutoEvaluation.setDetails(oldDetails+"<br>"+lzcdetails);
            }
            this.save(examAutoEvaluation);
        }
        for (int n = 0; n < bhcPartyList.size(); n++){

            AffairGeneralSituation affairGeneralSituation = bhcPartyList.get(n);
            String name = affairGeneralSituation.getPartyOrganization();
            String id = affairGeneralSituation.getId();
            int partyNum = affairPartyMemberService.getNumByPartyId(id);//党组织人数
            //   党总支党员大会、党总支党课
            if (name.contains("党总支")){

                //党员大会
                type = "1";
                Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if (dydhNumber < 2){
                    bhcNum++;
                    bhcdetails.append(",").append(name).append(year).append("年").append("党员大会未按时进行");
                }

                //党课
                type = "5";
                Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if (dkNumber < 2){
                    bhcNum++;
                    bhcdetails.append(",").append(name).append(year).append("年").append("下半年，党课未按时进行");
                }
            }
            //    党支部党员大会、党支部党课
            if (name.contains("党支部")){

                //党员大会
                type = "1";
                Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                //6.11  ~  7.5王峻宇提出六人及以下的党支部取消支委会，党员大会调整为每月一次
                if(partyNum>6){
                    if (dydhNumber < 4){
                        bhcNum++;
                        bhcdetails.append(",").append(name).append(year).append("年").append("党员大会未按时进行");
                    }
                }else{
                    if (dydhNumber < 12){
                        bhcNum++;
                        bhcdetails.append(",").append(name).append(year).append("年").append("党员大会未按时进行");
                    }
                }
                //党课
                type = "5";
                Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if (dkNumber < 4){
                    bhcNum++;
                    bhcdetails.append(",").append(name).append(year).append("年").append("党课未按时进行");
                }
            }
            //    党支部（总支）委员会、党小组会
            //6.11  ~  7.5王峻宇提出六人及以下的党支部取消支委会，党员大会调整为每月一次
            if(name.contains("党总支") || partyNum > 6) {
                //委员会
                type = "3";
                Integer wyhNumber = affairYearThreeOneService.selectHuiyiNumber(id, yearL, yearT, type);
                if (wyhNumber < 12) {
                    bhcNum++;
                    bhcdetails.append(",").append(name).append(year).append("年").append("委员会未按时进行");
                }
            }
            /*//党小组会
            type = "4";
            Integer dxzhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
            if (dxzhNumber < 12){
                bhcNum++;
                bhcdetails.append(",").append(name).append(year).append("年").append("党小组会未按时进行");
            }*/
        }
        if (bhcNum > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("2");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setDetails(bhcdetails+",");

            examAutoEvaluation.setUnit("北海处政治处组织干部室");
            examAutoEvaluation.setUnitId("264");
            examAutoEvaluation.setAssess("");
            examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考核扣分标准(业务部分26项)");
            examAutoEvaluation.setModelId("a959d8865ea74bf68cf818adc710c75c");
            examAutoEvaluation.setOption("公安处及管内单位党建活动组织不力，被上级检查发现的");
            examAutoEvaluation.setOptionId("924dd81816a34620915683d19cc749c1");
            examAutoEvaluation.setFromSys("智慧政工");
            examAutoEvaluation.setScore(String.valueOf(bhcNum * 2));
            examAutoEvaluation.setEvaluationId("c90918faf2614baa8fa85230482bd43e");

            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"组干三会一课");
            /*处理考评标准一样，汇总*/
            ExamAutoEvaluation old = this.getInfoByMore(examAutoEvaluation);
            if(old!=null){
                String oldDetails = old.getDetails();
                Double oldScore;
                try {
                    oldScore = Double.valueOf(old.getScore());
                }catch (Exception e){
                    e.printStackTrace();
                    oldScore = 0.0;
                }
                this.deleteInfoByMore(old);
                examAutoEvaluation.setScore(String.valueOf(oldScore+(bhcNum * 2)));
                examAutoEvaluation.setDetails(oldDetails+"<br>"+bhcdetails);
            }
            this.save(examAutoEvaluation);
        }
    }

    /*
     * 三会一课
     *
     * 局考局
     *
     * 月度
     * */
    public void jkjShyk(String checkTime){

        String year = checkTime.substring(0, 4);
        Integer y = Integer.valueOf(year);
        String lastYear = String.valueOf(y - 1);
        String month = checkTime.substring(checkTime.length() - 2);
        Integer m = Integer.valueOf(month);

        List<AffairGeneralSituation> PartyList = affairGeneralSituationService.getJJGPartyBranch();

        //会议类型
        String type = null;


        for (int n = 0; n < PartyList.size(); n++){

            AffairGeneralSituation affairGeneralSituation = PartyList.get(n);
            String name = affairGeneralSituation.getPartyOrganization();
            String id = affairGeneralSituation.getId();
            int partyNum = affairPartyMemberService.getNumByPartyId(id);//党组织人数
            StringBuilder details = new StringBuilder();

            Integer Num = 0;
            //半年  党总支党员大会、党总支党课
            if ((m == 6 || m == 12) && name.contains("党总支")){
                Map<String, String> map = this.halfTime2(checkTime);
                String yearL = map.get("yearL");
                String yearT = map.get("yearT");
                Integer lastY  = y - 1;
               /* String yearL = null;
                String yearT = null;
                if (m == 6){
                    yearL = lastY + "-12-26";
                    yearT = year + "-06-25";
                }if (m == 12){
                    yearT = year + "-12-25";
                    yearL = year + "-06-26";
                }*/
                //党员大会
                type = "1";
                Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if (dydhNumber < 1){
                    Num++;
                    if (m == 6){
                        details.append(",").append(name).append(year).append("年").append("上半年，党员大会未按时进行");
                    }
                    if (m == 12){
                        details.append(",").append(name).append(year).append("年").append("下半年，党员大会未按时进行");
                    }
                }

                //党课
                type = "5";
                Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if (dkNumber < 1){
                    Num++;
                    if (m == 6){
                        details.append(",").append(name).append(year).append("年").append("上半年，党课未按时进行");
                    }
                    if (m == 12){
                        details.append(",").append(name).append(year).append("年").append("下半年，党课未按时进行");
                    }
                }
            }
            //6.11  ~  7.5王峻宇提出六人及以下的党支部取消支委会，党员大会调整为每月一次
            if(name.contains("党支部")) {
                if (partyNum > 6) {
                    //每季度   党支部党员大会、党支部党课
                    if ((m == 3 || m == 6 || m == 9 || m == 12) && name.contains("党支部")) {
                        Map<String, String> time = jdTime2(checkTime);
                        String yearL = time.get("yearL");
                        String yearT = time.get("yearT");
                        String jd = time.get("jd");

                        //党员大会
                        type = "1";
                        Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(id, yearL, yearT, type);
                        if (dydhNumber < 1) {
                            Num++;
                            details.append(",").append(name).append(year).append("年").append(jd).append("季度，党员大会未按时进行");
                        }

                        //党课
                        type = "5";
                        Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id, yearL, yearT, type);
                        if (dkNumber < 1) {
                            Num++;
                            details.append(",").append(name).append(year).append("年").append(jd).append("季度，党课未按时进行");
                        }
                    }

                    /*if (m == 1 && name.contains("党支部")) {
                        Map<String, String> time = jdTime(checkTime);
                        String yearL = time.get("yearL");
                        String yearT = time.get("yearT");
                        String jd = time.get("jd");

                        //党员大会
                        type = "1";
                        Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(id, yearL, yearT, type);
                        if (dydhNumber < 1) {
                            Num++;
                            details.append(",").append(name).append(lastYear).append("年").append(jd).append("季度，党员大会未按时进行");
                        }

                        //党课
                        type = "5";
                        Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id, yearL, yearT, type);
                        if (dkNumber < 1) {
                            Num++;
                            details.append(",").append(name).append(lastYear).append("年").append(jd).append("季度，党课未按时进行");
                        }
                    }*/
                } else {
                    //每季度   党支部党员大会、党支部党课
                    if ((m == 3 || m == 6 || m == 9 || m == 12) && name.contains("党支部")) {
                        Map<String, String> time = jdTime2(checkTime);
                        String yearL = time.get("yearL");
                        String yearT = time.get("yearT");
                        String jd = time.get("jd");
                        //党课
                        type = "5";
                        Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id, yearL, yearT, type);
                        if (dkNumber < 1) {
                            Num++;
                            details.append(",").append(name).append(year).append("年").append(jd).append("季度，党课未按时进行");
                        }
                    }

                   /* if (m == 1 && name.contains("党支部")) {
                        Map<String, String> time = jdTime(checkTime);
                        String yearL = time.get("yearL");
                        String yearT = time.get("yearT");
                        String jd = time.get("jd");


                        //党课
                        type = "5";
                        Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id, yearL, yearT, type);
                        if (dkNumber < 1) {
                            Num++;
                            details.append(",").append(name).append(lastYear).append("年").append(jd).append("季度，党课未按时进行");
                        }
                    }*/
                    //党员大会
                    Map<String, String> time = monthTime(checkTime);
                    String yearL = time.get("yearL");
                    String yearT = time.get("yearT");
                    type = "1";
                    Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(id, yearL, yearT, type);
                    if (dydhNumber < 1) {
                        Num++;
                        details.append(",").append(name).append(lastYear).append("年").append(month).append("月，党员大会未按时进行");
                    }
                }
            }
            //每月    党支部（总支）委员会、党小组会

            Map<String, String> time = monthTime(checkTime);
            String yearL = time.get("yearL");
            String yearT = time.get("yearT");
            //6.11  ~  7.5王峻宇提出六人及以下的党支部取消支委会，党员大会调整为每月一次
            if(name.contains("党总支") || partyNum > 6) {
                //委员会
                type = "3";

                Integer wyhNumber = affairYearThreeOneService.selectHuiyiNumber(id, yearL, yearT, type);
                if (wyhNumber < 1) {
                    Num++;
                    details.append(",").append(name).append(year).append("年").append(month).append("月,委员会未按时进行");
                }
            }
           /* //党小组会
            type = "4";
            Integer dxzhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
            if (dxzhNumber < 1){
                Num++;
                details.append(",").append(name).append(year).append("年").append(month).append("月,党小组会未按时进行");
            }*/
            List<String> evId = examAutoEvaluationDao.selectEvId(id);
            for (int e = 0; e < evId.size(); e++) {
                String evI = evId.get(e);
                if (Num > 0) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("2");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(details.toString());

                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(id);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队月度绩效考核公共扣分标准");
                    examAutoEvaluation.setModelId("e8aa72ffe54a4118aeae9077ff7898ec");
                    examAutoEvaluation.setOption("“三会一课”未达到规定要求，每缺一会或一课的");
                    examAutoEvaluation.setOptionId("0858a666bf7c41a6b629cd575a8e1b48");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setScore(String.valueOf(Num * 2));
                    examAutoEvaluation.setEvaluationId(evI);

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"组干三会一课");
                    /*处理考评标准一样，汇总*/
                    ExamAutoEvaluation old = this.getInfoByMore(examAutoEvaluation);
                    if(old!=null){
                        String oldDetails = old.getDetails();
                        Double oldScore;
                        try {
                            oldScore = Double.valueOf(old.getScore());
                        }catch (Exception e2){
                            e2.printStackTrace();
                            oldScore = 0.0;
                        }
                        this.deleteInfoByMore(old);
                        examAutoEvaluation.setScore(String.valueOf(oldScore+(Num * 2)));
                        examAutoEvaluation.setDetails(oldDetails+"<br>"+details);
                    }
                    this.save(examAutoEvaluation);

                }
            }
        }
    }

    /*
     * 三会一课
     *
     * 局考局
     *
     * 年度
     * */
    public void jkjShykYear(String year){

        Map<String, String> map = yearTime(year);
        String yearL = map.get("yearL");
        String yearT = map.get("yearT");

        List<AffairGeneralSituation> PartyList = affairGeneralSituationService.getJJGPartyBranch();

        //会议类型
        String type = null;
        //南宁处数量
        //南宁处详情
        String name = null;
        String id = null;
        for (int n = 0; n < PartyList.size(); n++){

            AffairGeneralSituation affairGeneralSituation = PartyList.get(n);
            name = affairGeneralSituation.getPartyOrganization();
            id = affairGeneralSituation.getId();
            StringBuilder details = new StringBuilder();
            //6.11  ~  7.5王峻宇提出六人及以下的党支部取消支委会，党员大会调整为每月一次
            int partyNum = affairPartyMemberService.getNumByPartyId(id);//党组织人数
            Integer nncNum = 0;
            //   党总支党员大会、党总支党课
            if (name.contains("党总支")){

                //党员大会
                type = "1";
                Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if (dydhNumber < 2){
                    nncNum++;
                    details.append(",").append(name).append(year).append("年").append("党员大会未按时进行");
                }

                //党课
                type = "5";
                Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if (dkNumber < 2){
                    nncNum++;
                    details.append(",").append(name).append(year).append("年").append("下半年，党课未按时进行");
                }
            }
            //    党支部党员大会、党支部党课
            if (name.contains("党支部")){

                //党员大会
                type = "1";
                Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if(partyNum>6){
                    if (dydhNumber < 4){
                        nncNum++;
                        details.append(",").append(name).append(year).append("年").append("党员大会未按时进行");
                    }
                }else{
                    if (dydhNumber < 12){
                        nncNum++;
                        details.append(",").append(name).append(year).append("年").append("党员大会未按时进行");
                    }
                }
                //党课
                type = "5";
                Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if (dkNumber < 4){
                    nncNum++;
                    details.append(",").append(name).append(year).append("年").append("党课未按时进行");
                }
            }
            //    党支部（总支）委员会、党小组会
            if(name.contains("党总支") || partyNum>6){
                //委员会
                type = "3";

                Integer wyhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if (wyhNumber < 12){
                    nncNum++;
                    details.append(",").append(name).append(year).append("年").append("委员会未按时进行");
                }
            }

           /* //党小组会
            type = "4";
            Integer dxzhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
            if (dxzhNumber < 12){
                nncNum++;
                details.append(",").append(name).append(year).append("年").append("党小组会未按时进行");
            }*/
            List<String> evId = examAutoEvaluationDao.selectEvId(id);
            for (int e = 0; e < evId.size(); e++) {
                String evI = evId.get(e);
                if (nncNum > 0) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("2");
                    examAutoEvaluation.setPeriod("2");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setDetails(details + ",");

                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(id);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setModel("2020年公安局对局机关各处室及直属支队年度绩效考核公共扣分标准");
                    examAutoEvaluation.setModelId("653c088f3e754adcaa659a3706d304b9");
                    examAutoEvaluation.setOption("“三会一课”未达到规定要求，每缺一会或一课的");
                    examAutoEvaluation.setOptionId("cf91bc7ae6144488bbf7653fc3032273");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setScore(String.valueOf(nncNum));
                    examAutoEvaluation.setEvaluationId(evI);

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"组干三会一课");
                    /*处理考评标准一样，汇总*/
                    ExamAutoEvaluation old = this.getInfoByMore(examAutoEvaluation);
                    if(old!=null){
                        String oldDetails = old.getDetails();
                        Double oldScore;
                        try {
                            oldScore = Double.valueOf(old.getScore());
                        }catch (Exception e2){
                            e2.printStackTrace();
                            oldScore = 0.0;
                        }
                        this.deleteInfoByMore(old);
                        examAutoEvaluation.setScore(String.valueOf(oldScore+nncNum));
                        examAutoEvaluation.setDetails(oldDetails+"<br>"+details);
                    }
                    this.save(examAutoEvaluation);
                }
            }
        }
    }
    /*
     * 三会一课
     *
     * 处考处
     *
     * 月度
     * */
    public void ckcShyk(String checkTime){

        String year = checkTime.substring(0, 4);
        Integer y = Integer.valueOf(year);
        String lastYear = String.valueOf(y - 1);
        String month = checkTime.substring(checkTime.length() - 2);
        Integer m = Integer.valueOf(month);

        List<AffairGeneralSituation> nncPartyList = affairGeneralSituationService.getChuPartyBranch("34", "1");
        List<AffairGeneralSituation> lzcPartyList = affairGeneralSituationService.getChuPartyBranch("95", "1");
        List<AffairGeneralSituation> bhcPartyList = affairGeneralSituationService.getChuPartyBranch("156", "1");

        //会议类型
        String type = null;
        //南宁处数量
        Integer nncNum = 0;
        //南宁处详情
        StringBuilder details = new StringBuilder();
        //柳州处数量
        Integer lzcNum = 0;
        //柳州处详情
        StringBuilder lzcdetails = new StringBuilder();
        //北海处数量
        Integer bhcNum = 0;
        //北海处详情
        StringBuilder bhcdetails = new StringBuilder();

        String name = null;
        String id = null;
        String lzcname = null;
        String lzcid = null;
        String bhcname = null;
        String bhcid = null;

            for (int n = 0; n < nncPartyList.size(); n++) {
                AffairGeneralSituation affairGeneralSituation = nncPartyList.get(n);
                name = affairGeneralSituation.getPartyOrganization();
                id = affairGeneralSituation.getId();
                //6.11  ~  7.5王峻宇提出六人及以下的党支部取消支委会，党员大会调整为每月一次
                int partyNum = affairPartyMemberService.getNumByPartyId(id);//党组织人数
                List<String> evId = examAutoEvaluationDao.selectEvId(id);
                for (int e = 0; e < evId.size(); e++) {
                    String evI = evId.get(e);
                    details = new StringBuilder();
                    nncNum = 0;
                //半年  党总支党员大会、党总支党课
                if ((m == 6 || m == 12) && name.contains("党总支")) {
                    Map<String, String> map = this.halfTime2(checkTime);
                    String yearL = map.get("yearL");
                    String yearT = map.get("yearT");
                    Integer lastY = y - 1;
                    /*String yearL = null;
                    String yearT = null;
                    if (m == 6) {
                        yearL = lastYear + "-12-26";
                        yearT = year + "-06-25";
                    }
                    if (m == 12) {
                        yearT = year + "-12-25";
                        yearL = year + "-06-26";
                    }*/
                    //党员大会
                    type = "1";
                    Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(id, yearL, yearT, type);
                    if (dydhNumber < 1) {
                        nncNum++;
                        if (m == 6) {
                            details.append(",").append(name).append(year).append("年").append("上半年，党员大会未按时进行");
                        }
                        if (m == 12) {
                            details.append(",").append(name).append(year).append("年").append("下半年，党员大会未按时进行");
                        }
                    }

                    //党课
                    type = "5";
                    Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id, yearL, yearT, type);
                    if (dkNumber < 1) {
                        nncNum++;
                        if (m == 6) {
                            details.append(",").append(name).append(year).append("年").append("上半年，党课未按时进行");
                        }
                        if (m == 12) {
                            details.append(",").append(name).append(year).append("年").append("下半年，党课未按时进行");
                        }
                    }
                }
                if(name.contains("党支部")) {
                    if (partyNum > 6) {
                        //每季度   党支部党员大会、党支部党课
                        if ((m==3 || m == 6 || m == 9 || m == 12) && name.contains("党支部")) {
                            Map<String, String> time = jdTime2(checkTime);
                            String yearL = time.get("yearL");
                            String yearT = time.get("yearT");
                            String jd = time.get("jd");

                            //党员大会
                            type = "1";
                            Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(id, yearL, yearT, type);
                            if (dydhNumber < 1) {
                                nncNum++;
                                details.append(",").append(name).append(year).append("年").append(jd).append("季度，党员大会未按时进行");
                            }

                            //党课
                            type = "5";
                            Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id, yearL, yearT, type);
                            if (dkNumber < 1) {
                                nncNum++;
                                details.append(",").append(name).append(year).append("年").append(jd).append("季度，党课未按时进行");
                            }
                        }
                       /* if (m == 1 && name.contains("党支部")) {
                            Map<String, String> time = jdTime(checkTime);
                            String yearL = time.get("yearL");
                            String yearT = time.get("yearT");
                            String jd = time.get("jd");

                            //党员大会
                            type = "1";
                            Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(id, yearL, yearT, type);
                            if (dydhNumber < 1) {
                                nncNum++;
                                details.append(",").append(name).append(lastYear).append("年").append(jd).append("季度，党员大会未按时进行");
                            }

                            //党课
                            type = "5";
                            Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id, yearL, yearT, type);
                            if (dkNumber < 1) {
                                nncNum++;
                                details.append(",").append(name).append(lastYear).append("年").append(jd).append("季度，党课未按时进行");
                            }
                        }*/
                    } else {
                        //每季度   党支部党课
                        if ((m == 3 || m == 6 || m == 9 || m == 12) && name.contains("党支部")) {
                            Map<String, String> time = jdTime(checkTime);
                            String yearL = time.get("yearL");
                            String yearT = time.get("yearT");
                            String jd = time.get("jd");
                            //党课
                            type = "5";
                            Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id, yearL, yearT, type);
                            if (dkNumber < 1) {
                                nncNum++;
                                details.append(",").append(name).append(year).append("年").append(jd).append("季度，党课未按时进行");
                            }
                        }
                       /* if (m == 1 && name.contains("党支部")) {
                            Map<String, String> time = jdTime(checkTime);
                            String yearL = time.get("yearL");
                            String yearT = time.get("yearT");
                            String jd = time.get("jd");
                            //党课
                            type = "5";
                            Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id, yearL, yearT, type);
                            if (dkNumber < 1) {
                                nncNum++;
                                details.append(",").append(name).append(lastYear).append("年").append(jd).append("季度，党课未按时进行");
                            }
                        }*/
                        //每月-党员大会
                        Map<String, String> time = monthTime(checkTime);
                        String yearL = time.get("yearL");
                        String yearT = time.get("yearT");
                        type = "1";
                        Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(id, yearL, yearT, type);
                        if (dydhNumber < 1) {
                            nncNum++;
                            details.append(",").append(name).append(year).append("年").append(month).append("月，党员大会未按时进行");
                        }
                    }
                }

                //每月    党支部（总支）委员会、党小组会
                Map<String, String> time = monthTime(checkTime);
                String yearL = time.get("yearL");
                String yearT = time.get("yearT");

                //委员会
                if(name.contains("党总支") || partyNum > 6){
                    type = "3";
                    Integer wyhNumber = affairYearThreeOneService.selectHuiyiNumber(id, yearL, yearT, type);
                    if (wyhNumber < 1) {
                        nncNum++;
                        details.append(",").append(name).append(year).append("年").append(month).append("月,委员会未按时进行");
                    }
                }

                /*//党小组会
                type = "4";
                Integer dxzhNumber = affairYearThreeOneService.selectHuiyiNumber(id, yearL, yearT, type);
                if (dxzhNumber < 1) {
                    nncNum++;
                    details.append(",").append(name).append(year).append("年").append(month).append("月,党小组会未按时进行");
                }*/

                if (nncNum > 0) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(details + ",");

                    examAutoEvaluation.setUnit(name);
                    examAutoEvaluation.setUnitId(id);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setModel("南宁公安处月度对各单位（部门）2020年度绩效考核评分标准（队伍建设）");
                    examAutoEvaluation.setModelId("5d9645f6da694060a2f6cbbdf388343f");
                    examAutoEvaluation.setOption("支委会、支部党员大会、党小组会、党课等未未按规定召开的，每少一次");
                    examAutoEvaluation.setOptionId("42a5ec872bec4b6db44bd39e124194ef");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setScore(String.valueOf(nncNum * 0.6));
                    examAutoEvaluation.setEvaluationId(evI);

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","组干三会一课");
                    this.summaryStandard(examAutoEvaluation,Double.valueOf(nncNum * 0.6),details.toString());
                    this.save(examAutoEvaluation);
                }
                }
            }
            for (int n = 0; n < lzcPartyList.size(); n++) {
                AffairGeneralSituation affairGeneralSituation = lzcPartyList.get(n);
                lzcname = affairGeneralSituation.getPartyOrganization();
                lzcid = affairGeneralSituation.getId();
                List<String> evId = examAutoEvaluationDao.selectEvId(lzcid);
                //6.11  ~  7.5王峻宇提出六人及以下的党支部取消支委会，党员大会调整为每月一次
                int partyNum = affairPartyMemberService.getNumByPartyId(lzcid);//党组织人数
                for (int e = 0; e < evId.size(); e++) {
                    lzcdetails = new StringBuilder();
                    lzcNum = 0;
                    String evI = evId.get(e);
                //半年  党总支党员大会、党总支党课
                if ((m == 6 || m == 12) && lzcname.contains("党总支")) {
                    Map<String, String> map = this.halfTime2(checkTime);
                    String yearL = map.get("yearL");
                    String yearT = map.get("yearT");
                    Integer lastY = y - 1;
                    /*String yearL = null;
                    String yearT = null;
                    if (m == 6) {
                        yearL = lastY + "-12-26";
                        yearT = year + "-06-25";
                    }
                    if (m == 12) {
                        yearT = year + "-12-25";
                        yearL = year + "-06-26";
                    }*/
                    //党员大会
                    type = "1";
                    Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(lzcid, yearL, yearT, type);
                    if (dydhNumber < 1) {
                        lzcNum++;
                        if (m == 6) {
                            lzcdetails.append(",").append(lzcname).append(year).append("年").append("上半年，党员大会未按时进行");
                        }
                        if (m == 12) {
                            lzcdetails.append(",").append(lzcname).append(year).append("年").append("下半年，党员大会未按时进行");
                        }
                    }

                    //党课
                    type = "5";
                    Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(lzcid, yearL, yearT, type);
                    if (dkNumber < 1) {
                        lzcNum++;
                        if (m == 6) {
                            lzcdetails.append(",").append(lzcname).append(year).append("年").append("上半年，党课未按时进行");
                        }
                        if (m == 12) {
                            lzcdetails.append(",").append(lzcname).append(year).append("年").append("下半年，党课未按时进行");
                        }
                    }
                }
                if(lzcname.contains("党支部")) {
                    if (partyNum > 6) {
                        //每季度   党支部党员大会、党支部党课
                        if (m == 3 || m == 6 || m == 9 || m == 12 && lzcname.contains("党支部")) {
                            Map<String, String> time = jdTime2(checkTime);
                            String yearL = time.get("yearL");
                            String yearT = time.get("yearT");
                            String jd = time.get("jd");

                            //党员大会
                            type = "1";
                            Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(lzcid, yearL, yearT, type);
                            if (dydhNumber < 1) {
                                lzcNum++;
                                lzcdetails.append(",").append(lzcname).append(year).append("年").append(jd).append("季度，党员大会未按时进行");
                            }

                            //党课
                            type = "5";
                            Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(lzcid, yearL, yearT, type);
                            if (dkNumber < 1) {
                                lzcNum++;
                                lzcdetails.append(",").append(lzcname).append(year).append("年").append(jd).append("季度，党课未按时进行");
                            }
                        }
                    } else {
                        //每季度  党支部党课
                        if ((m == 3 || m == 6 || m == 9 || m == 12) && lzcname.contains("党支部")) {
                            Map<String, String> time = jdTime2(checkTime);
                            String yearL = time.get("yearL");
                            String yearT = time.get("yearT");
                            String jd = time.get("jd");
                            //党课
                            type = "5";
                            Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(lzcid, yearL, yearT, type);
                            if (dkNumber < 1) {
                                lzcNum++;
                                lzcdetails.append(",").append(lzcname).append(year).append("年").append(jd).append("季度，党课未按时进行");
                            }
                        }
                        //党员大会
                        Map<String, String> time = monthTime(checkTime);
                        String yearL = time.get("yearL");
                        String yearT = time.get("yearT");
                        type = "1";
                        Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(lzcid, yearL, yearT, type);
                        if (dydhNumber < 1) {
                            lzcNum++;
                            lzcdetails.append(",").append(lzcname).append(year).append("年").append(month).append("月，党员大会未按时进行");
                        }
                    }
                }
                //每月    党支部（总支）委员会、党小组会

                Map<String, String> time = monthTime(checkTime);
                String yearL = time.get("yearL");
                String yearT = time.get("yearT");

                if(lzcname.contains("党总支") || partyNum>6){
                    //委员会
                    type = "3";
                    Integer wyhNumber = affairYearThreeOneService.selectHuiyiNumber(lzcid, yearL, yearT, type);
                    if (wyhNumber < 1) {
                        lzcNum++;
                        lzcdetails.append(",").append(lzcname).append(year).append("年").append(month).append("月,委员会未按时进行");
                    }
                }

                //党小组会
                /*type = "4";
                Integer dxzhNumber = affairYearThreeOneService.selectHuiyiNumber(lzcid, yearL, yearT, type);
                if (dxzhNumber < 1) {
                    lzcNum++;
                    lzcdetails.append(",").append(lzcname).append(year).append("年").append(month).append("月,党小组会未按时进行");
                }*/
                if (lzcNum > 0) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(lzcdetails + ",");

                    examAutoEvaluation.setUnit(lzcname);
                    examAutoEvaluation.setUnitId(lzcid);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setModel("柳州处对单位（部门）2020年月度队伍建设绩效考核评分标准");
                    examAutoEvaluation.setModelId("e2297d3f891a4ebca507d3ff34b158bc");
                    examAutoEvaluation.setOption("支委会、支部党员大会、党小组会、党课等未未按规定召开的");
                    examAutoEvaluation.setOptionId("d7d8e70787a34eb39b0e4d47230e1cd0");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setScore(String.valueOf(lzcNum * 0.6));
                    examAutoEvaluation.setEvaluationId(evI);

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation, "95", "组干三会一课");
                    this.summaryStandard(examAutoEvaluation, Double.valueOf(lzcNum * 0.6), lzcdetails.toString());
                    this.save(examAutoEvaluation);
                }
                }
            }
            for (int n = 0; n < bhcPartyList.size(); n++) {
                AffairGeneralSituation affairGeneralSituation = bhcPartyList.get(n);
                bhcname = affairGeneralSituation.getPartyOrganization();
                bhcid = affairGeneralSituation.getId();
                //6.11  ~  7.5王峻宇提出六人及以下的党支部取消支委会，党员大会调整为每月一次
                int partyNum = affairPartyMemberService.getNumByPartyId(bhcid);//党组织人数
                List<String> evId = examAutoEvaluationDao.selectEvId(bhcid);
                for (int e = 0; e < evId.size(); e++) {
                    bhcdetails = new StringBuilder();
                    bhcNum = 0;
                    String evI = evId.get(e);
                //半年  党总支党员大会、党总支党课
                if ((m == 6 || m == 12) && bhcname.contains("党总支")) {
                    Map<String, String> map = this.halfTime2(checkTime);
                    String yearL = map.get("yearL");
                    String yearT = map.get("yearT");
                    Integer lastY = y - 1;
                  /*  String yearL = null;
                    String yearT = null;
                    if (m == 6) {
                        yearL = lastY + "-12-26";
                        yearT = year + "-06-25";
                    }
                    if (m == 12) {
                        yearT = year + "-12-25";
                        yearL = year + "-06-26";
                    }*/
                    //党员大会
                    type = "1";
                    Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(bhcid, yearL, yearT, type);
                    if (dydhNumber < 1) {
                        bhcNum++;
                        if (m == 6) {
                            bhcdetails.append(",").append(bhcname).append(year).append("年").append("上半年，党员大会未按时进行");
                        }
                        if (m == 12) {
                            bhcdetails.append(",").append(bhcname).append(year).append("年").append("下半年，党员大会未按时进行");
                        }
                    }

                    //党课
                    type = "5";
                    Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(bhcid, yearL, yearT, type);
                    if (dkNumber < 1) {
                        bhcNum++;
                        if (m == 6) {
                            bhcdetails.append(",").append(bhcname).append(year).append("年").append("上半年，党课未按时进行");
                        }
                        if (m == 12) {
                            bhcdetails.append(",").append(bhcname).append(year).append("年").append("下半年，党课未按时进行");
                        }
                    }
                }
                if(bhcname.contains("党支部")){
                    if(partyNum > 6){
                        //每季度   党支部党员大会、党支部党课
                        if ((m == 3 || m == 6 || m == 9 || m == 12) && bhcname.contains("党支部")) {
                            Map<String, String> time = jdTime2(checkTime);
                            String yearL = time.get("yearL");
                            String yearT = time.get("yearT");
                            String jd = time.get("jd");

                            //党员大会
                            type = "1";
                            Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(bhcid, yearL, yearT, type);
                            if (dydhNumber < 1) {
                                bhcNum++;
                                bhcdetails.append(",").append(bhcname).append(year).append("年").append(jd).append("季度，党员大会未按时进行");
                            }

                            //党课
                            type = "5";
                            Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(bhcid, yearL, yearT, type);
                            if (dkNumber < 1) {
                                bhcNum++;
                                bhcdetails.append(",").append(bhcname).append(year).append("年").append(jd).append("季度，党课未按时进行");
                            }
                        }
                    }
                    else{
                        //每季度   党支部党员大会、党支部党课
                        if ((m == 3 || m == 6 || m == 9 || m == 12) && bhcname.contains("党支部")) {
                            Map<String, String> time = jdTime2(checkTime);
                            String yearL = time.get("yearL");
                            String yearT = time.get("yearT");
                            String jd = time.get("jd");
                            //党课
                            type = "5";
                            Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(bhcid, yearL, yearT, type);
                            if (dkNumber < 1) {
                                bhcNum++;
                                bhcdetails.append(",").append(bhcname).append(year).append("年").append(jd).append("季度，党课未按时进行");
                            }
                        }

                        //每月-党员大会
                        Map<String, String> time = monthTime(checkTime);
                        String yearL = time.get("yearL");
                        String yearT = time.get("yearT");
                        type = "1";
                        Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(bhcid, yearL, yearT, type);
                        if (dydhNumber < 1) {
                            bhcNum++;
                            bhcdetails.append(",").append(bhcname).append(year).append("年").append(month).append("月，党员大会未按时进行");
                        }

                    }
                }
                //每月    党支部（总支）委员会、党小组会

                Map<String, String> time = monthTime(checkTime);
                String yearL = time.get("yearL");
                String yearT = time.get("yearT");

                if(bhcname.contains("党总支") || partyNum > 6){
                    //委员会
                    type = "3";
                    Integer wyhNumber = affairYearThreeOneService.selectHuiyiNumber(bhcid, yearL, yearT, type);
                    if (wyhNumber < 1) {
                        bhcNum++;
                        bhcdetails.append(",").append(bhcname).append(year).append("年").append(month).append("月,委员会未按时进行");
                    }
                }
                //党小组会
                /*type = "4";
                Integer dxzhNumber = affairYearThreeOneService.selectHuiyiNumber(bhcid, yearL, yearT, type);
                if (dxzhNumber < 1) {
                    bhcNum++;
                    bhcdetails.append(",").append(bhcname).append(year).append("年").append(month).append("月,党小组会未按时进行");
                }*/
                if (bhcNum > 0) {
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("4");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(bhcdetails + ",");

                    examAutoEvaluation.setUnit(bhcname);
                    examAutoEvaluation.setUnitId(bhcid);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队扣分标准（队伍建设）");
                    examAutoEvaluation.setModelId("2b66a87941c44ebaab013c8472f59bae");
                    examAutoEvaluation.setOption("支委会、支部党员大会、党课等未未按规定召开的");
                    examAutoEvaluation.setOptionId("bf77bbedab354f14a1f6ee0fea6b331d");
                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setScore(String.valueOf(bhcNum * 0.6));
                    examAutoEvaluation.setEvaluationId(evI);
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation, "156", "组干三会一课");
                    this.summaryStandard(examAutoEvaluation, Double.valueOf(bhcNum * 0.6), bhcdetails.toString());
                    this.save(examAutoEvaluation);
                }
                }
            }
        }


    /*
     * 三会一课
     *
     * 处考处
     *
     * 年度
     * */
    public void ckcShykYear(String year){

        Map<String, String> map = yearTime(year);
        String yearL = map.get("yearL");
        String yearT = map.get("yearT");

        List<AffairGeneralSituation> nncPartyList = affairGeneralSituationService.getChuPartyBranch("34", "1");
        List<AffairGeneralSituation> lzcPartyList = affairGeneralSituationService.getChuPartyBranch("95", "1");
        List<AffairGeneralSituation> bhcPartyList = affairGeneralSituationService.getChuPartyBranch("156", "1");

        //会议类型
        String type = null;
        //南宁处数量
        Integer nncNum = 0;
        //南宁处详情
        StringBuilder details = new StringBuilder();
        //柳州处数量
        Integer lzcNum = 0;
        //柳州处详情
        StringBuilder lzcdetails = new StringBuilder();
        //北海处数量
        Integer bhcNum = 0;
        //北海处详情
        StringBuilder bhcdetails = new StringBuilder();

        String name = null;
        String id = null;
        String lzcname = null;
        String lzcid = null;
        String bhcname = null;
        String bhcid = null;
        for (int n = 0; n < nncPartyList.size(); n++){
            //南宁处数量
            nncNum = 0;
            //南宁处详情
            details = new StringBuilder();
            AffairGeneralSituation affairGeneralSituation = nncPartyList.get(n);
            name = affairGeneralSituation.getPartyOrganization();
            id = affairGeneralSituation.getId();
            //6.11  ~  7.5王峻宇提出六人及以下的党支部取消支委会，党员大会调整为每月一次
            int partyNum = affairPartyMemberService.getNumByPartyId(id);//党组织人数
            //   党总支党员大会、党总支党课
            if (name.contains("党总支")){

                //党员大会
                type = "1";
                Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if (dydhNumber < 2){
                    nncNum++;
                    details.append(",").append(name).append(year).append("年").append("党员大会未按时进行");
                }

                //党课
                type = "5";
                Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if (dkNumber < 2){
                    nncNum++;
                    details.append(",").append(name).append(year).append("年").append("下半年，党课未按时进行");
                }
            }
            //    党支部党员大会、党支部党课
            if (name.contains("党支部")){

                //党员大会
                type = "1";
                Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if(partyNum > 6){
                    if (dydhNumber < 4){
                        nncNum++;
                        details.append(",").append(name).append(year).append("年").append("党员大会未按时进行");
                    }

                }else{
                    if (dydhNumber < 12){
                        nncNum++;
                        details.append(",").append(name).append(year).append("年").append("党员大会未按时进行");
                    }
                }

                //党课
                type = "5";
                Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if (dkNumber < 4){
                    nncNum++;
                    details.append(",").append(name).append(year).append("年").append("党课未按时进行");
                }
            }
            //    党支部（总支）委员会、党小组会
            if(name.contains("党总支") || partyNum>6){
                //委员会
                type = "3";
                Integer wyhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if (wyhNumber < 12){
                    nncNum++;
                    details.append(",").append(year).append("年").append("委员会未按时进行");
                }
            }

            //党小组会
            /*type = "4";
            Integer dxzhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
            if (dxzhNumber < 12){
                nncNum++;
                details.append(",").append(year).append("年").append("党小组会未按时进行");
            }*/
            if (nncNum > 0){
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("4");
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setDetails(details+",");

                examAutoEvaluation.setUnit(name);
                examAutoEvaluation.setUnitId(id);
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setModel("");
                examAutoEvaluation.setModelId("");
                examAutoEvaluation.setOption("");
                examAutoEvaluation.setOptionId("");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setScore(String.valueOf(nncNum));
                List<String> evId = examAutoEvaluationDao.selectEvId(id);
                for (int e = 0; e < evId.size(); e++) {
                    examAutoEvaluation.setEvaluationId(evId.get(e));
                    examAutoEvaluation.setScore(String.valueOf(nncNum * 0.2));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","组干三会一课");
                    this.summaryStandard(examAutoEvaluation,Double.valueOf(nncNum * 0.2),details.toString());
                    this.save(examAutoEvaluation);
                }
            }
        }
        for (int n = 0; n < lzcPartyList.size(); n++){
            //柳州处数量
            lzcNum = 0;
            //柳州处详情
            lzcdetails = new StringBuilder();
            AffairGeneralSituation affairGeneralSituation = lzcPartyList.get(n);
            lzcname = affairGeneralSituation.getPartyOrganization();
            lzcid = affairGeneralSituation.getId();
            //6.11  ~  7.5王峻宇提出六人及以下的党支部取消支委会，党员大会调整为每月一次
            int partyNum = affairPartyMemberService.getNumByPartyId(lzcid);//党组织人数
            //   党总支党员大会、党总支党课
            if (lzcname.contains("党总支")){

                //党员大会
                type = "1";
                Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(lzcid,yearL,yearT,type);
                if (dydhNumber < 2){
                    lzcNum++;
                    lzcdetails.append(",").append(lzcname).append(year).append("年").append("党员大会未按时进行");
                }

                //党课
                type = "5";
                Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(lzcid,yearL,yearT,type);
                if (dkNumber < 2){
                    lzcNum++;
                    lzcdetails.append(",").append(lzcname).append(year).append("年").append("下半年，党课未按时进行");
                }
            }
            //    党支部党员大会、党支部党课
            if (lzcname.contains("党支部")){

                //党员大会
                type = "1";
                Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(lzcid,yearL,yearT,type);
                if(partyNum>6){
                    if (dydhNumber < 4){
                        lzcNum++;
                        lzcdetails.append(",").append(lzcname).append(year).append("年").append("党员大会未按时进行");
                    }
                }else{
                    if (dydhNumber < 12){
                        lzcNum++;
                        lzcdetails.append(",").append(lzcname).append(year).append("年").append("党员大会未按时进行");
                    }
                }


                //党课
                type = "5";
                Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(lzcid,yearL,yearT,type);
                if (dkNumber < 4){
                    lzcNum++;
                    lzcdetails.append(",").append(lzcname).append(year).append("年").append("党课未按时进行");
                }
            }
            //    党支部（总支）委员会、党小组会

            if(lzcname.contains("党总支") || partyNum > 6){
                //委员会
                type = "3";
                Integer wyhNumber = affairYearThreeOneService.selectHuiyiNumber(lzcid,yearL,yearT,type);
                if (wyhNumber < 12){
                    lzcNum++;
                    lzcdetails.append(",").append(year).append("年").append("委员会未按时进行");
                }
            }

            //党小组会
            /*type = "4";
            Integer dxzhNumber = affairYearThreeOneService.selectHuiyiNumber(lzcid,yearL,yearT,type);
            if (dxzhNumber < 12){
                lzcNum++;
                lzcdetails.append(",").append(year).append("年").append("党小组会未按时进行");
            }*/
            if (lzcNum > 0){
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("4");
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setDetails(lzcdetails+",");
                examAutoEvaluation.setScore("1.0");
                examAutoEvaluation.setUnit(lzcname);
                examAutoEvaluation.setUnitId(lzcid);
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setModel("柳州处对单位（部门）2020年年度队伍建设绩效考核评分标准");
                examAutoEvaluation.setModelId("da8bc710a7da4c50b32c0409f720e372");
                examAutoEvaluation.setOption("支委会、支部党员大会、党小组会、党课等未未按规定召开的");
                examAutoEvaluation.setOptionId("b4d018f743c44fa9b43b5f0e3790b38a");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setScore(String.valueOf(lzcNum * 0.2));
                List<String> evId = examAutoEvaluationDao.selectEvId(lzcid);
                for (int e = 0; e < evId.size(); e++) {
                    examAutoEvaluation.setEvaluationId(evId.get(e));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","组干三会一课");
                    this.summaryStandard(examAutoEvaluation,Double.valueOf(lzcNum * 0.2),lzcdetails.toString());
                    this.save(examAutoEvaluation);
                }

            }
        }
        for (int n = 0; n < bhcPartyList.size(); n++){
            //北海处数量
            bhcNum = 0;
            //北海处详情
            bhcdetails = new StringBuilder();
            AffairGeneralSituation affairGeneralSituation = bhcPartyList.get(n);
            bhcname = affairGeneralSituation.getPartyOrganization();
            bhcid = affairGeneralSituation.getId();
            //6.11  ~  7.5王峻宇提出六人及以下的党支部取消支委会，党员大会调整为每月一次
            int partyNum = affairPartyMemberService.getNumByPartyId(bhcid);//党组织人数
            //   党总支党员大会、党总支党课
            if (bhcname.contains("党总支")){

                //党员大会
                type = "1";
                Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(bhcid,yearL,yearT,type);
                if (dydhNumber < 2){
                    bhcNum++;
                    bhcdetails.append(",").append(bhcname).append(year).append("年").append("党员大会未按时进行");
                }

                //党课
                type = "5";
                Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(bhcid,yearL,yearT,type);
                if (dkNumber < 2){
                    bhcNum++;
                    bhcdetails.append(",").append(bhcname).append(year).append("年").append("下半年，党课未按时进行");
                }
            }
            //    党支部党员大会、党支部党课
            if (bhcname.contains("党支部")){

                //党员大会
                type = "1";
                Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(bhcid,yearL,yearT,type);
                if(partyNum>6){
                    if (dydhNumber < 4){
                        bhcNum++;
                        bhcdetails.append(",").append(bhcname).append(year).append("年").append("党员大会未按时进行");
                    }
                }else{
                    if (dydhNumber < 12){
                        bhcNum++;
                        bhcdetails.append(",").append(bhcname).append(year).append("年").append("党员大会未按时进行");
                    }
                }

                //党课
                type = "5";
                Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(bhcid,yearL,yearT,type);
                if (dkNumber < 4){
                    bhcNum++;
                    bhcdetails.append(",").append(bhcname).append(year).append("年").append("党课未按时进行");
                }
            }
            //    党支部（总支）委员会、党小组会
            if(bhcname.contains("党总支")||partyNum>6){
                //委员会
                type = "3";
                Integer wyhNumber = affairYearThreeOneService.selectHuiyiNumber(bhcid,yearL,yearT,type);
                if (wyhNumber < 12){
                    bhcNum++;
                    bhcdetails.append(",").append(year).append("年").append("委员会未按时进行");
                }
            }
            //党小组会
            /*type = "4";
            Integer dxzhNumber = affairYearThreeOneService.selectHuiyiNumber(bhcid,yearL,yearT,type);
            if (dxzhNumber < 12){
                bhcNum++;
                bhcdetails.append(",").append(year).append("年").append("党小组会未按时进行");
            }*/
            if (bhcNum > 0){
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("4");
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setDetails(bhcdetails+",");

                examAutoEvaluation.setUnit(bhcname);
                examAutoEvaluation.setUnitId(bhcid);
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setModel("2020年年度北海处对机关科室、支队扣分标准（队伍建设部分）");
                examAutoEvaluation.setModelId("4b203557ee6945999bb642b74367fad6");
                examAutoEvaluation.setOption("支委会、支部党员大会、党课等未未按规定召开的");
                examAutoEvaluation.setOptionId("1bd668e2f9e54756899893adde15828a");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setScore(String.valueOf(bhcNum * 0.2));
                List<String> evId = examAutoEvaluationDao.selectEvId(bhcid);
                for (int e = 0; e < evId.size(); e++) {
                    examAutoEvaluation.setEvaluationId(evId.get(e));
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","组干三会一课");
                    this.summaryStandard(examAutoEvaluation,Double.valueOf(bhcNum * 0.2),bhcdetails.toString());
                    this.save(examAutoEvaluation);
                }
            }
        }
    }

    /*
     * 三会一课
     *
     * 初考队所
     *
     * 月度
     * */
    public void ckpcsShyk(String checkTime){

        String year = checkTime.substring(0, 4);
        Integer y = Integer.valueOf(year);
        String lastYear = String.valueOf(y - 1);
        String month = checkTime.substring(checkTime.length() - 2);
        Integer m = Integer.valueOf(month);

        List<AffairGeneralSituation> nncPartyList = affairGeneralSituationService.getChuPartyBranch("34", "2");
        List<AffairGeneralSituation> lzcPartyList = affairGeneralSituationService.getChuPartyBranch("95", "2");
        List<AffairGeneralSituation> bhcPartyList = affairGeneralSituationService.getChuPartyBranch("156", "2");

        //会议类型
        String type = null;




        String name = null;
        String id = null;
        String lzcname = null;
        String lzcid = null;
        String bhcname = null;
        String bhcid = null;
        for (int n = 0; n < nncPartyList.size(); n++){
            //南宁处数量
            Integer nncNum = 0;
            //南宁处详情
            StringBuilder details = new StringBuilder();
            AffairGeneralSituation affairGeneralSituation = nncPartyList.get(n);
            name = affairGeneralSituation.getPartyOrganization();
            id = affairGeneralSituation.getId();
            //6.11  ~  7.5王峻宇提出六人及以下的党支部取消支委会，党员大会调整为每月一次
            int partyNum = affairPartyMemberService.getNumByPartyId(id);//党组织人数
            //半年  党总支党员大会、党总支党课
            if ((m == 6 || m == 12) && name.contains("党总支")){
                Map<String, String> map = this.halfTime2(checkTime);
                String yearL = map.get("yearL");
                String yearT = map.get("yearT");
                Integer lastY = y - 1;
                /*String yearL = null;
                String yearT = null;
                if (m == 6){
                    yearL = lastY + "-12-26";
                    yearT = year + "-06-25";
                }if (m == 12){
                    yearT = year + "-12-25";
                    yearL = year + "-06-26";
                }*/
                //党员大会
                type = "1";
                Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if (dydhNumber < 1){
                    nncNum++;
                    if (m == 6){
                        details.append(",").append(name).append(year).append("年").append("上半年，党员大会未按时进行");
                    }
                    if (m == 12){
                        details.append(",").append(name).append(year).append("年").append("下半年，党员大会未按时进行");
                    }
                }

                //党课
                type = "5";
                Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if (dkNumber < 1){
                    nncNum++;
                    if (m == 6){
                        details.append(",").append(name).append(year).append("年").append("上半年，党课未按时进行");
                    }
                    if (m == 12){
                        details.append(",").append(name).append(year).append("年").append("下半年，党课未按时进行");
                    }
                }
            }
            if(name.contains("党支部")){
                if(partyNum>6){
                    //每季度   党支部党员大会、党支部党课
                    if ((m == 3 || m == 6 || m == 9 || m == 12 ) && name.contains("党支部")){
                        Map<String, String> time = jdTime2(checkTime);
                        String yearL = time.get("yearL");
                        String yearT = time.get("yearT");
                        String jd = time.get("jd");

                        //党员大会
                        type = "1";
                        Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                        if (dydhNumber < 1){
                            nncNum++;
                            details.append(",").append(name).append(year).append("年").append(jd).append("季度，党员大会未按时进行");
                        }

                        //党课
                        type = "5";
                        Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                        if (dkNumber < 1){
                            nncNum++;
                            details.append(",").append(name).append(year).append("年").append(jd).append("季度，党课未按时进行");
                        }
                    }
                    /*if ( m == 1 && name.contains("党支部")){
                        Map<String, String> time = jdTime(checkTime);
                        String yearL = time.get("yearL");
                        String yearT = time.get("yearT");
                        String jd = time.get("jd");

                        //党员大会
                        type = "1";
                        Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                        if (dydhNumber < 1){
                            nncNum++;
                            details.append(",").append(name).append(lastYear).append("年").append(jd).append("季度，党员大会未按时进行");
                        }

                        //党课
                        type = "5";
                        Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                        if (dkNumber < 1){
                            nncNum++;
                            details.append(",").append(name).append(lastYear).append("年").append(jd).append("季度，党课未按时进行");
                        }
                    }*/
                }
                else{
                    //每季度  党支部党课
                    if ((m == 3 || m == 6 || m == 9 || m == 12 ) && name.contains("党支部")){
                        Map<String, String> time = jdTime2(checkTime);
                        String yearL = time.get("yearL");
                        String yearT = time.get("yearT");
                        String jd = time.get("jd");
                        //党课
                        type = "5";
                        Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                        if (dkNumber < 1){
                            nncNum++;
                            details.append(",").append(name).append(year).append("年").append(jd).append("季度，党课未按时进行");
                        }
                    }
                    /*if ( m == 1 && name.contains("党支部")){
                        Map<String, String> time = jdTime(checkTime);
                        String yearL = time.get("yearL");
                        String yearT = time.get("yearT");
                        String jd = time.get("jd");
                        //党课
                        type = "5";
                        Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                        if (dkNumber < 1){
                            nncNum++;
                            details.append(",").append(name).append(lastYear).append("年").append(jd).append("季度，党课未按时进行");
                        }
                    }*/
                    Map<String, String> time = monthTime(checkTime);
                    String yearL = time.get("yearL");
                    String yearT = time.get("yearT");
                    //党员大会
                    type = "1";
                    Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                    if (dydhNumber < 1){
                        nncNum++;
                        details.append(",").append(name).append(year).append("年").append(month).append("月，党员大会未按时进行");
                    }

                }
            }
            //每月    党支部（总支）委员会、党小组会

            Map<String, String> time = monthTime(checkTime);
            String yearL = time.get("yearL");
            String yearT = time.get("yearT");

            if(name.contains("党总支") || partyNum>6){
                //委员会
                type = "3";
                Integer wyhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if (wyhNumber < 1){
                    nncNum++;
                    details.append(",").append(name).append(year).append("年").append(month).append("月,委员会未按时进行");
                }
            }

            //党小组会
            /*type = "4";
            Integer dxzhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
            if (dxzhNumber < 1){
                nncNum++;
                details.append(",").append(name).append(year).append("年").append(month).append("月,党小组会未按时进行");
            }*/
            if (nncNum > 0){
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("3");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setDetails(details+",");

//                examAutoEvaluation.setUnit(name);
//                examAutoEvaluation.setUnitId(id);
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setModel("2020年月度南宁公安处对派出所绩效考核评分标准（队伍建设）");
                examAutoEvaluation.setModelId("ddc6d6dd210e4f428b3a5361f27389fa");
                examAutoEvaluation.setOption("支委会、支部党员大会、党小组会、党课等未未按规定召开的，每少一次");
                examAutoEvaluation.setOptionId("1c80704620b849b7a5fa4c19813c5e53");
                examAutoEvaluation.setFromSys("智慧政工");
                //examAutoEvaluation.setScore(String.valueOf(nncNum * 2));
                //每缺一会或一课的，扣公共2分
                examAutoEvaluation.setScore("5.0");
                //examAutoEvaluation.setEvaluationId("34e8d855cf6b4b1ab5e7e23e7aaba658");
                List<User> userList = this.getUserByPartyId(id);
                for (User user : userList) {
                    if (user.getOffice().getName().contains("派出所")) {
                        examAutoEvaluation.setUnit(user.getOffice().getName());
                        examAutoEvaluation.setUnitId(user.getOffice().getId());
                        examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                    }
                }
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","组干三会一课");
                this.summaryStandard(examAutoEvaluation,5.0,details.toString());
                this.save(examAutoEvaluation);

            }
        }
        for (int n = 0; n < lzcPartyList.size(); n++){
            //柳州处数量
            Integer lzcNum = 0;
            //柳州处详情
            StringBuilder lzcdetails = new StringBuilder();
            AffairGeneralSituation affairGeneralSituation = lzcPartyList.get(n);
            lzcname = affairGeneralSituation.getPartyOrganization();
            lzcid = affairGeneralSituation.getId();
            //6.11  ~  7.5王峻宇提出六人及以下的党支部取消支委会，党员大会调整为每月一次
            int partyNum = affairPartyMemberService.getNumByPartyId(lzcid);//党组织人数
            //半年  党总支党员大会、党总支党课
            if ((m == 6 || m == 12) && lzcname.contains("党总支")){
                Map<String, String> map = this.halfTime2(checkTime);
                String yearL = map.get("yearL");
                String yearT = map.get("yearT");
                Integer lastY = y - 1;
                /*String yearL = null;
                String yearT = null;
                if (m == 6){
                    yearL = lastY + "-12-26";
                    yearT = year + "-06-25";
                }if (m == 12){
                    yearT = year + "-12-25";
                    yearL = year + "-06-26";
                }*/
                //党员大会
                type = "1";
                Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(lzcid,yearL,yearT,type);
                if (dydhNumber < 1){
                    lzcNum++;
                    if (m == 6){
                        lzcdetails.append(",").append(lzcname).append(year).append("年").append("上半年，党员大会未按时进行");
                    }
                    if (m == 12){
                        lzcdetails.append(",").append(lzcname).append(year).append("年").append("下半年，党员大会未按时进行");
                    }
                }

                //党课
                type = "5";
                Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(lzcid,yearL,yearT,type);
                if (dkNumber < 1){
                    lzcNum++;
                    if (m == 6){
                        lzcdetails.append(",").append(lzcname).append(year).append("年").append("上半年，党课未按时进行");
                    }
                    if (m == 12){
                        lzcdetails.append(",").append(lzcname).append(year).append("年").append("下半年，党课未按时进行");
                    }
                }
            }
            if(lzcname.contains("党支部")){
                if(partyNum>6){
                    //每季度   党支部党员大会、党支部党课
                    if ((m == 3 || m == 6 || m == 9 || m == 12)&& lzcname.contains("党支部")){
                        Map<String, String> time = jdTime2(checkTime);
                        String yearL = time.get("yearL");
                        String yearT = time.get("yearT");
                        String jd = time.get("jd");

                        //党员大会
                        type = "1";
                        Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(lzcid,yearL,yearT,type);
                        if (dydhNumber < 1){
                            lzcNum++;
                            lzcdetails.append(",").append(lzcname).append(year).append("年").append(jd).append("季度，党员大会未按时进行");
                        }

                        //党课
                        type = "5";
                        Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(lzcid,yearL,yearT,type);
                        if (dkNumber < 1){
                            lzcNum++;
                            lzcdetails.append(",").append(lzcname).append(year).append("年").append(jd).append("季度，党课未按时进行");
                        }
                    }
                   /* if ( m == 1 && lzcname.contains("党支部")){
                        Map<String, String> time = jdTime(checkTime);
                        String yearL = time.get("yearL");
                        String yearT = time.get("yearT");
                        String jd = time.get("jd");

                        //党员大会
                        type = "1";
                        Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(lzcid,yearL,yearT,type);
                        if (dydhNumber < 1){
                            lzcNum++;
                            lzcdetails.append(",").append(lzcname).append(lastYear).append("年").append(jd).append("季度，党员大会未按时进行");
                        }

                        //党课
                        type = "5";
                        Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(lzcid,yearL,yearT,type);
                        if (dkNumber < 1){
                            lzcNum++;
                            lzcdetails.append(",").append(lzcname).append(lastYear).append("年").append(jd).append("季度，党课未按时进行");
                        }
                    }*/
                }
                else{
                    //每季度   党支部党课
                    if ((m == 3 || m == 6 || m == 9 || m == 12)&& lzcname.contains("党支部")){
                        Map<String, String> time = jdTime2(checkTime);
                        String yearL = time.get("yearL");
                        String yearT = time.get("yearT");
                        String jd = time.get("jd");
                        //党课
                        type = "5";
                        Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(lzcid,yearL,yearT,type);
                        if (dkNumber < 1){
                            lzcNum++;
                            lzcdetails.append(",").append(lzcname).append(year).append("年").append(jd).append("季度，党课未按时进行");
                        }
                    }
                  /*  if ( m == 1 && lzcname.contains("党支部")){
                        Map<String, String> time = jdTime(checkTime);
                        String yearL = time.get("yearL");
                        String yearT = time.get("yearT");
                        String jd = time.get("jd");

                        //党课
                        type = "5";
                        Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(lzcid,yearL,yearT,type);
                        if (dkNumber < 1){
                            lzcNum++;
                            lzcdetails.append(",").append(lzcname).append(lastYear).append("年").append(jd).append("季度，党课未按时进行");
                        }
                    }*/

                    //每月-党员大会

                    Map<String, String> time = monthTime(checkTime);
                    String yearL = time.get("yearL");
                    String yearT = time.get("yearT");
                    type = "1";
                    Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(lzcid,yearL,yearT,type);
                    if (dydhNumber < 1){
                        lzcNum++;
                        lzcdetails.append(",").append(lzcname).append(year).append("年").append(month).append("月，党员大会未按时进行");
                    }
                }
            }
            //每月    党支部（总支）委员会、党小组会

            Map<String, String> time = monthTime(checkTime);
            String yearL = time.get("yearL");
            String yearT = time.get("yearT");
            if(lzcname.contains("党总支") || partyNum>6){
                //委员会
                type = "3";

                Integer wyhNumber = affairYearThreeOneService.selectHuiyiNumber(lzcid,yearL,yearT,type);
                if (wyhNumber < 1){
                    lzcNum++;
                    lzcdetails.append(",").append(lzcname).append(year).append("年").append(month).append("月,委员会未按时进行");
                }
            }

            //党小组会
           /* type = "4";
            Integer dxzhNumber = affairYearThreeOneService.selectHuiyiNumber(lzcid,yearL,yearT,type);
            if (dxzhNumber < 1){
                lzcNum++;
                lzcdetails.append(",").append(lzcname).append(year).append("年").append(month).append("月,党小组会未按时进行");
            }*/
            if (lzcNum > 0){
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("3");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setDetails(lzcdetails+",");

                /*examAutoEvaluation.setUnit(lzcname);
                examAutoEvaluation.setUnitId(lzcid);*/
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setModel("柳州处对派出所2020年月度队伍建设绩效考核扣分标准");
                examAutoEvaluation.setModelId("f38535fc63a2418b8ed37c2e18f75ad6");
                examAutoEvaluation.setOption("支委会、支部党员大会、党小组会、党课等未未按规定召开的");
                examAutoEvaluation.setOptionId("c44937616eb04e179fa6684f2f6922b8");
                examAutoEvaluation.setFromSys("智慧政工");
                //examAutoEvaluation.setScore(String.valueOf(nncNum * 2));
                //每缺一会或一课的，扣公共2分
                examAutoEvaluation.setScore("5.0");
                //examAutoEvaluation.setEvaluationId("34e8d855cf6b4b1ab5e7e23e7aaba658");
                List<User> userList = this.getUserByPartyId(lzcid);
                for (User user : userList) {
                    if (user.getOffice().getName().contains("派出所")) {
                        examAutoEvaluation.setUnit(user.getOffice().getName());
                        examAutoEvaluation.setUnitId(user.getOffice().getId());
                        examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                    }
                }

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","组干三会一课");
                this.summaryStandard(examAutoEvaluation,5.0,lzcdetails.toString());
                this.save(examAutoEvaluation);

            }
        }
        for (int n = 0; n < bhcPartyList.size(); n++){
            //北海处数量
            Integer bhcNum = 0;
            //北海处详情
            StringBuilder bhcdetails = new StringBuilder();
            AffairGeneralSituation affairGeneralSituation = bhcPartyList.get(n);
            bhcname = affairGeneralSituation.getPartyOrganization();
            bhcid = affairGeneralSituation.getId();
            //6.11  ~  7.5王峻宇提出六人及以下的党支部取消支委会，党员大会调整为每月一次
            int partyNum = affairPartyMemberService.getNumByPartyId(bhcid);//党组织人数
            //半年  党总支党员大会、党总支党课
            if ((m == 6 || m == 12) && bhcname.contains("党总支")){
                Map<String, String> map = this.halfTime2(checkTime);
                String yearL = map.get("yearL");
                String yearT = map.get("yearT");
                Integer lastY = y - 1;
                /*String yearL = null;
                String yearT = null;
                if (m == 6){
                    yearL = lastY + "-12-26";
                    yearT = year + "-06-25";
                }if (m == 12){
                    yearT = year + "-12-25";
                    yearL = year + "-06-26";
                }*/
                //党员大会
                type = "1";
                Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(bhcid,yearL,yearT,type);
                if (dydhNumber < 1){
                    bhcNum++;
                    if (m == 6){
                        bhcdetails.append(",").append(bhcname).append(year).append("年").append("上半年，党员大会未按时进行");
                    }
                    if (m == 12){
                        bhcdetails.append(",").append(bhcname).append(year).append("年").append("下半年，党员大会未按时进行");
                    }
                }

                //党课
                type = "5";
                Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(bhcid,yearL,yearT,type);
                if (dkNumber < 1){
                    bhcNum++;
                    if (m == 6){
                        bhcdetails.append(",").append(bhcname).append(year).append("年").append("上半年，党课未按时进行");
                    }
                    if (m == 12){
                        bhcdetails.append(",").append(bhcname).append(year).append("年").append("下半年，党课未按时进行");
                    }
                }
            }
            if(bhcname.contains("党支部")){
                if(partyNum>6){
                    //每季度   党支部党员大会、党支部党课
                    if ((m==3 || m == 6 || m == 9 || m == 12 ) && bhcname.contains("党支部")){
                        Map<String, String> time = jdTime2(checkTime);
                        String yearL = time.get("yearL");
                        String yearT = time.get("yearT");
                        String jd = time.get("jd");

                        //党员大会
                        type = "1";
                        Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(bhcid,yearL,yearT,type);
                        if (dydhNumber < 1){
                            bhcNum++;
                            bhcdetails.append(",").append(bhcname).append(year).append("年").append(jd).append("季度，党员大会未按时进行");
                        }

                        //党课
                        type = "5";
                        Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(bhcid,yearL,yearT,type);
                        if (dkNumber < 1){
                            bhcNum++;
                            bhcdetails.append(",").append(bhcname).append(year).append("年").append(jd).append("季度，党课未按时进行");
                        }
                    }
                   /* if (m == 1 && bhcname.contains("党支部")){
                        Map<String, String> time = jdTime(checkTime);
                        String yearL = time.get("yearL");
                        String yearT = time.get("yearT");
                        String jd = time.get("jd");

                        //党员大会
                        type = "1";
                        Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(bhcid,yearL,yearT,type);
                        if (dydhNumber < 1){
                            bhcNum++;
                            bhcdetails.append(",").append(bhcname).append(lastYear).append("年").append(jd).append("季度，党员大会未按时进行");
                        }

                        //党课
                        type = "5";
                        Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(bhcid,yearL,yearT,type);
                        if (dkNumber < 1){
                            bhcNum++;
                            bhcdetails.append(",").append(bhcname).append(lastYear).append("年").append(jd).append("季度，党课未按时进行");
                        }
                    }*/
                }
                else{
                    //每季度   、党支部党课
                    if ((m == 3 || m == 6 || m == 9 || m == 12 ) && bhcname.contains("党支部")){
                        Map<String, String> time = jdTime2(checkTime);
                        String yearL = time.get("yearL");
                        String yearT = time.get("yearT");
                        String jd = time.get("jd");
                        //党课
                        type = "5";
                        Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(bhcid,yearL,yearT,type);
                        if (dkNumber < 1){
                            bhcNum++;
                            bhcdetails.append(",").append(bhcname).append(year).append("年").append(jd).append("季度，党课未按时进行");
                        }
                    }
                    /*if (m == 1 && bhcname.contains("党支部")){
                        Map<String, String> time = jdTime(checkTime);
                        String yearL = time.get("yearL");
                        String yearT = time.get("yearT");
                        String jd = time.get("jd");
                        //党课
                        type = "5";
                        Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(bhcid,yearL,yearT,type);
                        if (dkNumber < 1){
                            bhcNum++;
                            bhcdetails.append(",").append(bhcname).append(lastYear).append("年").append(jd).append("季度，党课未按时进行");
                        }
                    }*/
                    //每月 党员大会
                    Map<String, String> time = monthTime(checkTime);
                    String yearL = time.get("yearL");
                    String yearT = time.get("yearT");
                    type = "1";
                    Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(bhcid,yearL,yearT,type);
                    if (dydhNumber < 1){
                        bhcNum++;
                        bhcdetails.append(",").append(bhcname).append(year).append("年").append(month).append("月，党员大会未按时进行");
                    }
                }
            }
            //每月    党支部（总支）委员会、党小组会

            Map<String, String> time = monthTime(checkTime);
            String yearL = time.get("yearL");
            String yearT = time.get("yearT");

            if(bhcname.contains("党总支") || partyNum>6){
                //委员会
                type = "3";

                Integer wyhNumber = affairYearThreeOneService.selectHuiyiNumber(bhcid,yearL,yearT,type);
                if (wyhNumber < 1){
                    bhcNum++;
                    bhcdetails.append(",").append(bhcname).append(year).append("年").append(month).append("月,委员会未按时进行");
                }
            }
            //党小组会
           /* type = "4";
            Integer dxzhNumber = affairYearThreeOneService.selectHuiyiNumber(bhcid,yearL,yearT,type);
            if (dxzhNumber < 1){
                bhcNum++;
                bhcdetails.append(",").append(bhcname).append(year).append("年").append(month).append("月,党小组会未按时进行");
            }*/
            if (bhcNum > 0){
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("3");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setDetails(bhcdetails+",");

                /*examAutoEvaluation.setUnit(bhcname);
                examAutoEvaluation.setUnitId(bhcid);*/
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setModel("2020年月度北海处对机关科室、支队扣分标准（队伍建设部分）");
                examAutoEvaluation.setModelId("82aa3bc55a7d42c79f8e2d50ad8b0927");
                examAutoEvaluation.setOption("支委会、支部党员大会、党课等未未按规定召开的");
                examAutoEvaluation.setOptionId("a2b7a8a915e54565ab29d3f40effe883");
                examAutoEvaluation.setFromSys("智慧政工");
                //examAutoEvaluation.setScore(String.valueOf(nncNum * 2));
                //每缺一会或一课的，扣公共2分
                examAutoEvaluation.setScore("5.0");
                //examAutoEvaluation.setEvaluationId("34e8d855cf6b4b1ab5e7e23e7aaba658");
                List<User> userList = this.getUserByPartyId(bhcid);
                for (User user : userList) {
                    if (user.getOffice().getName().contains("派出所")) {
                        examAutoEvaluation.setUnit(user.getOffice().getName());
                        examAutoEvaluation.setUnitId(user.getOffice().getId());
                        examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                    }
                }

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","组干三会一课");
                this.summaryStandard(examAutoEvaluation,5.0,bhcdetails.toString());
                this.save(examAutoEvaluation);

            }
        }
    }

    /*
     * 三会一课
     *
     * 处考队所
     *
     * 年度
     * */
    public void ckpcsShykYear(String year){

        Map<String, String> map = yearTime(year);
        String yearL = map.get("yearL");
        String yearT = map.get("yearT");

        List<AffairGeneralSituation> nncPartyList = affairGeneralSituationService.getChuPartyBranch("34", "2");
        List<AffairGeneralSituation> lzcPartyList = affairGeneralSituationService.getChuPartyBranch("95", "2");
        List<AffairGeneralSituation> bhcPartyList = affairGeneralSituationService.getChuPartyBranch("156", "2");

        //会议类型
        String type = null;

        String name = null;
        String id = null;
        String lzcname = null;
        String lzcid = null;
        String bhcname = null;
        String bhcid = null;
        for (int n = 0; n < nncPartyList.size(); n++){
            //南宁处数量
            Integer nncNum = 0;
            //南宁处详情
            StringBuilder details = new StringBuilder();
            AffairGeneralSituation affairGeneralSituation = nncPartyList.get(n);
            name = affairGeneralSituation.getPartyOrganization();
            id = affairGeneralSituation.getId();
            //6.11  ~  7.5王峻宇提出六人及以下的党支部取消支委会，党员大会调整为每月一次
            int partyNum = affairPartyMemberService.getNumByPartyId(id);//党组织人数
            //   党总支党员大会、党总支党课
            if (name.contains("党总支")){

                //党员大会
                type = "1";
                Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if (dydhNumber < 2){
                    nncNum++;
                    details.append(",").append(name).append(year).append("年").append("党员大会未按时进行");

                }

                //党课
                type = "5";
                Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if (dkNumber < 2){
                    nncNum++;
                    details.append(",").append(name).append(year).append("年").append("下半年，党课未按时进行");

                }
            }
            //    党支部党员大会、党支部党课
            if (name.contains("党支部")){

                //党员大会
                type = "1";
                Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if(partyNum>6){
                    if (dydhNumber < 4){
                        nncNum++;
                        details.append(",").append(name).append(year).append("年").append("党员大会未按时进行");

                    }
                }else{
                    if (dydhNumber < 12){
                        nncNum++;
                        details.append(",").append(name).append(year).append("年").append("党员大会未按时进行");

                    }
                }


                //党课
                type = "5";
                Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if (dkNumber < 4){
                    nncNum++;
                    details.append(",").append(name).append(year).append("年").append("党课未按时进行");
                }
            }
            //    党支部（总支）委员会、党小组会
            if(name.contains("党总支") || partyNum>6){
                //委员会
                type = "3";
                Integer wyhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if (wyhNumber < 12){
                    nncNum++;
                    details.append(",").append(year).append("年").append("委员会未按时进行");
                }
            }
            //党小组会
            /*type = "4";
            Integer dxzhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
            if (dxzhNumber < 12){
                nncNum++;
                details.append(",").append(year).append("年").append("党小组会未按时进行");
            }*/
            if (nncNum > 0){
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("3");
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setDetails(details+",");

                /*examAutoEvaluation.setUnit(name);
                examAutoEvaluation.setUnitId(id);*/
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setModel("2020年年度南宁公安处对派出所重点工作考核扣分标准（直接扣大分）");
                examAutoEvaluation.setModelId("825da0762357481a846a56230a316f3b");
                examAutoEvaluation.setOption("支委会、党员大会、党小组会、组织生活会和民主评议党员工作不按规定程序召开，以及会后相关工作落实不好的");
                examAutoEvaluation.setOptionId("3c8ebff84e8e4b94bed986066af29a7a");
                examAutoEvaluation.setFromSys("智慧政工");
                //每缺一会或一课的，扣公共1分
                examAutoEvaluation.setScore("0.4");
                //examAutoEvaluation.setScore(String.valueOf(nncNum));
                //examAutoEvaluation.setEvaluationId("34e8d855cf6b4b1ab5e7e23e7aaba658");
                List<User> userList = this.getUserByPartyId(id);
                for (User user : userList) {
                    if (user.getOffice().getName().contains("派出所")) {
                        examAutoEvaluation.setUnit(user.getOffice().getName());
                        examAutoEvaluation.setUnitId(user.getOffice().getId());
                        examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                    }
                }
                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","组干三会一课");
                this.summaryStandard(examAutoEvaluation,0.4,details.toString());
                this.save(examAutoEvaluation);
            }
        }

        for (int n = 0; n < lzcPartyList.size(); n++){
            //柳州处数量
            Integer lzcNum = 0;
            //柳州处详情
            StringBuilder lzcdetails = new StringBuilder();
            AffairGeneralSituation affairGeneralSituation = lzcPartyList.get(n);
            lzcname = affairGeneralSituation.getPartyOrganization();
            lzcid = affairGeneralSituation.getId();
            //6.11  ~  7.5王峻宇提出六人及以下的党支部取消支委会，党员大会调整为每月一次
            int partyNum = affairPartyMemberService.getNumByPartyId(lzcid);//党组织人数
            //   党总支党员大会、党总支党课
            if (lzcname.contains("党总支")){

                //党员大会
                type = "1";
                Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(lzcid,yearL,yearT,type);
                if (dydhNumber < 2){
                    lzcNum++;
                    lzcdetails.append(",").append(lzcname).append(year).append("年").append("党员大会未按时进行");
                }

                //党课
                type = "5";
                Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(lzcid,yearL,yearT,type);
                if (dkNumber < 2){
                    lzcNum++;
                    lzcdetails.append(",").append(lzcname).append(year).append("年").append("下半年，党课未按时进行");
                }
            }
            //    党支部党员大会、党支部党课
            if (lzcname.contains("党支部")){

                //党员大会
                type = "1";
                Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(lzcid,yearL,yearT,type);
                if(partyNum>6){
                    if (dydhNumber < 4){
                        lzcNum++;
                        lzcdetails.append(",").append(lzcname).append(year).append("年").append("党员大会未按时进行");
                    }
                }else{
                    if (dydhNumber < 12){
                        lzcNum++;
                        lzcdetails.append(",").append(lzcname).append(year).append("年").append("党员大会未按时进行");
                    }
                }

                //党课
                type = "5";
                Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(lzcid,yearL,yearT,type);
                if (dkNumber < 4){
                    lzcNum++;
                    lzcdetails.append(",").append(lzcname).append(year).append("年").append("党课未按时进行");
                }

            }
            //    党支部（总支）委员会、党小组会
            if(lzcname.contains("党总支") || partyNum>6){
                //委员会
                type = "3";

                Integer wyhNumber = affairYearThreeOneService.selectHuiyiNumber(lzcid,yearL,yearT,type);
                if (wyhNumber < 12){
                    lzcNum++;
                    lzcdetails.append(",").append(year).append("年").append("委员会未按时进行");
                }
            }
            //党小组会
            /*type = "4";
            Integer dxzhNumber = affairYearThreeOneService.selectHuiyiNumber(lzcid,yearL,yearT,type);
            if (dxzhNumber < 12){
                lzcNum++;
                lzcdetails.append(",").append(year).append("年").append("党小组会未按时进行");
            }*/
            if (lzcNum > 0){
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("3");
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setDetails(lzcdetails+",");

                /*examAutoEvaluation.setUnit(lzcname);
                examAutoEvaluation.setUnitId(lzcid);*/
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setModel("柳州处对派出所2020年年度队伍建设绩效考核扣分标准");
                examAutoEvaluation.setModelId("1ccfeca0f49543d49f8833feb21735e3");
                examAutoEvaluation.setOption("支委会、支部党员大会、党小组会、党课等未未按规定召开的");
                examAutoEvaluation.setOptionId("8e2b81b24c0748eb8ea369d1874a6d56");
                examAutoEvaluation.setFromSys("智慧政工");
                //每缺一会或一课的，扣公共1分
                examAutoEvaluation.setScore("0.4");                                //examAutoEvaluation.setScore(String.valueOf(nncNum));
                //examAutoEvaluation.setEvaluationId("ec3ba2efdd404f2faa520f6e8a71ec4c");
                List<User> userList = this.getUserByPartyId(lzcid);
                for (User user : userList) {
                    if (user.getOffice().getName().contains("派出所")) {
                        examAutoEvaluation.setUnit(user.getOffice().getName());
                        examAutoEvaluation.setUnitId(user.getOffice().getId());
                        examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                    }
                }

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","组干三会一课");
                this.summaryStandard(examAutoEvaluation,0.4,lzcdetails.toString());
                this.save(examAutoEvaluation);
            }
        }

        for (int n = 0; n < bhcPartyList.size(); n++){
            //北海处数量
            Integer bhcNum = 0;
            //北海处详情
            StringBuilder bhcdetails = new StringBuilder();
            AffairGeneralSituation affairGeneralSituation = bhcPartyList.get(n);
            bhcname = affairGeneralSituation.getPartyOrganization();
            bhcid = affairGeneralSituation.getId();
            //6.11  ~  7.5王峻宇提出六人及以下的党支部取消支委会，党员大会调整为每月一次
            int partyNum = affairPartyMemberService.getNumByPartyId(bhcid);//党组织人数
            //   党总支党员大会、党总支党课
            if (bhcname.contains("党总支")){

                //党员大会
                type = "1";
                Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(bhcid,yearL,yearT,type);
                if (dydhNumber < 2){
                    bhcNum++;
                    bhcdetails.append(",").append(bhcname).append(year).append("年").append("党员大会未按时进行");
                }

                //党课
                type = "5";
                Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(bhcid,yearL,yearT,type);
                if (dkNumber < 2){
                    bhcNum++;
                    bhcdetails.append(",").append(bhcname).append(year).append("年").append("下半年，党课未按时进行");
                }
            }
            //    党支部党员大会、党支部党课
            if (bhcname.contains("党支部")){

                //党员大会
                type = "1";
                Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(bhcid,yearL,yearT,type);
                if(partyNum>6){
                    if (dydhNumber < 4){
                        bhcNum++;
                        bhcdetails.append(",").append(bhcname).append(year).append("年").append("党员大会未按时进行");
                    }
                }else{
                    if (dydhNumber < 12){
                        bhcNum++;
                        bhcdetails.append(",").append(bhcname).append(year).append("年").append("党员大会未按时进行");
                    }
                }


                //党课
                type = "5";
                Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(bhcid,yearL,yearT,type);
                if (dkNumber < 4){
                    bhcNum++;
                    bhcdetails.append(",").append(bhcname).append(year).append("年").append("党课未按时进行");
                }
            }
            //    党支部（总支）委员会、党小组会
            if(bhcname.contains("党总支") || partyNum>6){
                //委员会
                type = "3";

                Integer wyhNumber = affairYearThreeOneService.selectHuiyiNumber(bhcid,yearL,yearT,type);
                if (wyhNumber < 12){
                    bhcNum++;
                    bhcdetails.append(",").append(year).append("年").append("委员会未按时进行");
                }
            }
            //党小组会
            /*type = "4";
            Integer dxzhNumber = affairYearThreeOneService.selectHuiyiNumber(bhcid,yearL,yearT,type);
            if (dxzhNumber < 12){
                bhcNum++;
                bhcdetails.append(",").append(year).append("年").append("党小组会未按时进行");
            }*/
            if (bhcNum > 0){
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("1");
                examAutoEvaluation.setEvalType("3");
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setDetails(bhcdetails+",");

                examAutoEvaluation.setUnit(bhcname);
                examAutoEvaluation.setUnitId(bhcid);
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setModel("2020年年度北海处对派出所、刑警三大队绩效考核扣分标准(队伍建设部分)");
                examAutoEvaluation.setModelId("9844385c36c246f1aaceda6d0611e5d3");
                examAutoEvaluation.setOption("管内单位党建活动组织不力，被上级检查发现的");
                examAutoEvaluation.setOptionId("dd26ac0fd27a4c778d00f96aacda2be3");
                examAutoEvaluation.setFromSys("智慧政工");
                //每缺一会或一课的，扣公共1分
                examAutoEvaluation.setScore("0.4");
                //examAutoEvaluation.setScore(String.valueOf(nncNum));
                //examAutoEvaluation.setEvaluationId("c90918faf2614baa8fa85230482bd43e");
                List<User> userList = this.getUserByPartyId(bhcid);
                for (User user : userList) {
                    if (user.getOffice().getName().contains("派出所")) {
                        examAutoEvaluation.setUnit(user.getOffice().getName());
                        examAutoEvaluation.setUnitId(user.getOffice().getId());
                        examAutoEvaluation.setEvaluationId(user.getId());//被考评对象id
                    }
                }

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","组干三会一课");
                this.summaryStandard(examAutoEvaluation,0.4,bhcdetails.toString());
                this.save(examAutoEvaluation);
            }
        }
    }

    /*
     * 三会一课
     *
     * 中基层
     *
     * 月度
     *
     * */
    public void zjcShyk(String checkTime){

        String year = checkTime.substring(0, 4);
        Integer y = Integer.valueOf(year);
        String lastYear = String.valueOf(y - 1);
        String month = checkTime.substring(checkTime.length() - 2);
        Integer m = Integer.valueOf(month);

        //所有党组织
        List<AffairGeneralSituation> affairGeneralSituationList = affairGeneralSituationDao.selectAllParty();

        for (int a = 0; a < affairGeneralSituationList.size(); a++){
            AffairGeneralSituation affairGeneralSituation = affairGeneralSituationList.get(a);
            String id = affairGeneralSituation.getId();
            String name = affairGeneralSituation.getPartyOrganization();
            String shuji = affairGeneralSituation.getShuji();
            String idNumber = userDao.selectUserIdNumberByNameAndPartyId(shuji,id);
            //6.11  ~  7.5王峻宇提出六人及以下的党支部取消支委会，党员大会调整为每月一次
            int partyNum = affairPartyMemberService.getNumByPartyId(id);//党组织人数
            //缺少的数量
            int Num = 0;

            String type = null;
            StringBuilder details = new StringBuilder();


            //半年  党总支党员大会、党总支党课
            if ((m == 6 || m == 12) && name.contains("党总支")){
                Map<String, String> map = this.halfTime2(checkTime);
                String yearL = map.get("yearL");
                String yearT = map.get("yearT");
                Integer lastY = y - 1;
              /*  String yearL = null;
                String yearT = null;
                if (m == 6){
                    yearL = lastY + "-12-26";
                    yearT = year + "-06-25";
                }if (m == 12){
                    yearT = year + "-12-25";
                    yearL = year + "-06-26";
                }*/
                //党员大会
                type = "1";
                Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if (dydhNumber < 1){
                    Num++;
                    if (m == 6){
                        details.append(",").append(name).append(year).append("年").append("上半年，党员大会未按时进行");
                    }
                    if (m == 12){
                        details.append(",").append(name).append(year).append("年").append("下半年，党员大会未按时进行");
                    }
                }

                //党课
                type = "5";
                Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if (dkNumber < 1){
                    Num++;
                    if (m == 6){
                        details.append(",").append(name).append(year).append("年").append("上半年，党课未按时进行");
                    }
                    if (m == 12){
                        details.append(",").append(name).append(year).append("年").append("下半年，党课未按时进行");
                    }
                }
            }
            if(name.contains("党支部")){
                if(partyNum>6){
                    //每季度   党支部党员大会、党支部党课
                    if ((m==3 || m == 6 || m == 9 || m == 12 ) && name.contains("党支部")){
                        Map<String, String> time = jdTime2(checkTime);
                        String yearL = time.get("yearL");
                        String yearT = time.get("yearT");
                        String jd = time.get("jd");

                        //党员大会
                        type = "1";
                        Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                        if (dydhNumber < 1){
                            Num++;
                            details.append(",").append(name).append(year).append("年").append(jd).append("季度，党员大会未按时进行");
                        }

                        //党课
                        type = "5";
                        Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                        if (dkNumber < 1){
                            Num++;
                            details.append(",").append(name).append(year).append("年").append(jd).append("季度，党课未按时进行");
                        }
                    }
                   /* if ( m == 1 && name.contains("党支部")){
                        Map<String, String> time = jdTime(checkTime);
                        String yearL = time.get("yearL");
                        String yearT = time.get("yearT");
                        String jd = time.get("jd");

                        //党员大会
                        type = "1";
                        Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                        if (dydhNumber < 1){
                            Num++;
                            details.append(",").append(name).append(lastYear).append("年").append(jd).append("季度，党员大会未按时进行");
                        }

                        //党课
                        type = "5";
                        Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                        if (dkNumber < 1){
                            Num++;
                            details.append(",").append(name).append(lastYear).append("年").append(jd).append("季度，党课未按时进行");
                        }
                    }*/
                }
                else{
                    if ((m == 3 || m == 6 || m == 9 || m == 12 ) && name.contains("党支部")){
                        Map<String, String> time = jdTime2(checkTime);
                        String yearL = time.get("yearL");
                        String yearT = time.get("yearT");
                        String jd = time.get("jd");
                        //党课
                        type = "5";
                        Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                        if (dkNumber < 1){
                            Num++;
                            details.append(",").append(name).append(year).append("年").append(jd).append("季度，党课未按时进行");
                        }
                    }
                   /* if ( m == 1 && name.contains("党支部")){
                        Map<String, String> time = jdTime(checkTime);
                        String yearL = time.get("yearL");
                        String yearT = time.get("yearT");
                        String jd = time.get("jd");
                        //党课
                        type = "5";
                        Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                        if (dkNumber < 1){
                            Num++;
                            details.append(",").append(name).append(lastYear).append("年").append(jd).append("季度，党课未按时进行");
                        }
                    }*/
                    //每月党员大会
                    Map<String, String> time = monthTime(checkTime);
                    String yearL = time.get("yearL");
                    String yearT = time.get("yearT");
                    type = "1";
                    Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                    if (dydhNumber < 1){
                        Num++;
                        details.append(",").append(name).append(lastYear).append("年").append(month).append("月，党员大会未按时进行");
                    }
                }
            }



            //每月    党支部（总支）委员会、党小组会
            Map<String, String> time = monthTime(checkTime);
            String yearL = time.get("yearL");
            String yearT = time.get("yearT");
            if(name.contains("党总支") || partyNum>6){
                //委员会
                type = "3";

                Integer wyhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if (wyhNumber < 1){
                    Num++;
                    details.append(",").append(year).append("年").append(month).append("月,委员会未按时进行");
                }
            }
            //党小组会
            /*type = "4";
            Integer dxzhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
            if (dxzhNumber < 1){
                Num++;
                details.append(",").append(year).append("年").append(month).append("月,党小组会未按时进行");
            }*/

            //党日活动
            Integer drhdNumber = affairPartyDayActivitiesService.selectNumber(id,yearL,yearT);
            if (drhdNumber < 1){
                Num++;
                details.append(",").append(year).append("年").append(month).append("月,党日活动未按时进行");
            }

            //组织生活会
/*            Integer zzshhNumber = affairLifeMeetDao.selectNumber(id,yearL,yearT);
            if (zzshhNumber < 1){
                Num++;
                details.append(",").append(year).append("年").append(month).append("月,组织生活会未按时进行");
            }

            //民主评议
            Integer mzpyNumber = affairCommentDao.selectNumber(id,yearL,yearT);
            if (mzpyNumber < 1){
                Num++;
                details.append(",").append(year).append("年").append(month).append("月,民主评议会未按时进行");
        }*/
            if (Num > 0){
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("2");
                examAutoEvaluation.setEvalType("6");
                examAutoEvaluation.setPeriod("1");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setMonth(month);
                examAutoEvaluation.setDetails(details + ",");
                examAutoEvaluation.setName(name);
                examAutoEvaluation.setIdNumber(idNumber);
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));
                examAutoEvaluation.setModel("2020年月度对全局中层和基层领导干部考核公共扣分标准 (公安处领导班子成员除外)");
                examAutoEvaluation.setModelId("d498bf52ce334e3da66851fc57143639");
                examAutoEvaluation.setOption("支部“三会一课”、组织生活会、民主评议党员、两学一做、党日活动等制度未按规定落实的,每缺一项次");
                examAutoEvaluation.setOptionId("bca583d38c29442fa7c73749b1848aa5");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"组干三会一课");
                examAutoEvaluation.setScore(String.valueOf(Num * 5));
                this.summaryStandard(examAutoEvaluation,Double.valueOf(Num * 5),details.toString());
                this.save(examAutoEvaluation);
            }
        }
    }

    /*
     * 三会一课
     *
     * 中基层
     *
     * 年度
     *
     * */
    public void zjcShykYear(String year){

        Map<String, String> map = yearTime(year);
        String yearL = map.get("yearL");
        String yearT = map.get("yearT");

        //所有党组织
        List<AffairGeneralSituation> affairGeneralSituationList = affairGeneralSituationDao.selectAllParty();

        for (int a = 0; a < affairGeneralSituationList.size(); a++){
            AffairGeneralSituation affairGeneralSituation = affairGeneralSituationList.get(a);
            String id = affairGeneralSituation.getId();
            String name = affairGeneralSituation.getPartyOrganization();
            String shuji = affairGeneralSituation.getShuji();
            String idNumber = userDao.selectUserIdNumberByNameAndPartyId(shuji,id);
            //6.11  ~  7.5王峻宇提出六人及以下的党支部取消支委会，党员大会调整为每月一次
            int partyNum = affairPartyMemberService.getNumByPartyId(id);//党组织人数
            //缺少的数量
            int Num = 0;

            String type = null;
            StringBuilder details = new StringBuilder();


            //半年  党总支党员大会、党总支党课
            if (name.contains("党总支")){

                //党员大会
                type = "1";
                Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if (dydhNumber < 2){
                    Num++;
                    details.append(",").append(name).append(year).append("年").append("党员大会未按时进行");

                }

                //党课
                type = "5";
                Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if (dkNumber < 2){
                    Num++;
                    details.append(",").append(name).append(year).append("年").append("下半年，党课未按时进行");
                }
            }
            //每季度   党支部党员大会、党支部党课
            if (name.contains("党支部")){

                //党员大会
                type = "1";
                Integer dydhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if(partyNum>6){
                    if (dydhNumber < 4){
                        Num++;
                        details.append(",").append(name).append(year).append("年"). append("党员大会未按时进行");
                    }
                }else{
                    if (dydhNumber < 12){
                        Num++;
                        details.append(",").append(name).append(year).append("年"). append("党员大会未按时进行");
                    }
                }


                //党课
                type = "5";
                Integer dkNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if (dkNumber < 4){
                    Num++;
                    details.append(",").append(name).append(year).append("年").append("党课未按时进行");
                }
            }

            if(name.contains("党总支") || partyNum>6){
                //委员会
                type = "3";

                Integer wyhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
                if (wyhNumber < 12){
                    Num++;
                    details.append(",").append(year).append("年").append("委员会未按时进行");
                }
            }

            //党小组会
            /*type = "4";
            Integer dxzhNumber = affairYearThreeOneService.selectHuiyiNumber(id,yearL,yearT,type);
            if (dxzhNumber < 12){
                Num++;
                details.append(",").append(year).append("年").append("党小组会未按时进行");
            }*/

            //党日活动
            Integer drhdNumber = affairPartyDayActivitiesService.selectNumber(id,yearL,yearT);
            if (drhdNumber < 12){
                Num++;
                details.append(",").append(year).append("年").append("党日活动未按时进行");
            }

            //组织生活会
            Integer zzshhNumber = affairLifeMeetDao.selectNumber(id,yearL,yearT);
            if (zzshhNumber < 12){
                Num++;
                details.append(",").append(year).append("年").append("组织生活会未按时进行");
            }

            //民主评议
            Integer mzpyNumber = affairCommentDao.selectNumber(id,yearL,yearT);
            if (mzpyNumber < 12){
                Num++;
                details.append(",").append(year).append("年").append("月,民主评议会未按时进行");
            }
            if (Num > 0){
                ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                examAutoEvaluation.setType("2");
                examAutoEvaluation.setEvalType("6");
                examAutoEvaluation.setPeriod("2");
                examAutoEvaluation.setYear(year);
                examAutoEvaluation.setDetails(details + ",");
                examAutoEvaluation.setName(name);
                examAutoEvaluation.setIdNumber(idNumber);
                examAutoEvaluation.setAssess("");
                examAutoEvaluation.setFromSys("智慧政工");
                examAutoEvaluation.setAssessId("");
                examAutoEvaluation.setEvaluationId(examAutoEvaluationDao.selectNoUserid(idNumber));
                examAutoEvaluation.setModel("2020年年度全局中层和基层领导干部考核公共扣分标准(公安处领导班子成员除外)");
                examAutoEvaluation.setModelId("c00cebbbc62c48d888316206d38e02c7");
                examAutoEvaluation.setOption("支部“三会一课”、组织生活会、民主评议党员、两学一做、党日活动等制度未按规定落实的,每缺一项次");
                examAutoEvaluation.setOptionId("5a27b0e8434f4e91ba40071685399a3f");

                examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"组干三会一课");
                examAutoEvaluation.setScore(String.valueOf(Num * 2));
                this.summaryStandard(examAutoEvaluation,Double.valueOf(Num * 2),details.toString());
                this.save(examAutoEvaluation);
            }
        }
    }

    /*
     * 团支部三会一课
     *
     * 处考派出所
     *
     * 月度
     * */
    public void tyShyk(String checkTime) {

        List<AffairTwBase> nncPartyList = affairTwBaseService.getChuPartyBranch("34", "2");
        List<AffairTwBase> lzcPartyList = affairTwBaseService.getChuPartyBranch("95", "2");
        List<AffairTwBase> bhcPartyList = affairTwBaseService.getChuPartyBranch("156", "2");

        String year = checkTime.substring(0, 4);
        Integer y = Integer.valueOf(year);
        Integer lastYear = y - 1;
        String month = checkTime.substring(checkTime.length() - 2);
        Integer m = Integer.valueOf(month);

        Map<String, String> map = monthTime(checkTime);
        String yearL = map.get("yearL");
        String yearT = map.get("yearT");

        //支委会
        String zwh = DictUtils.getDictValue("团支委会","affair_huiyi","2");

        //团员大会
        String tydh = DictUtils.getDictValue("团员大会","affair_huiyi","3");

        //团课
        String tk = DictUtils.getDictValue("团课","affair_huiyi","6");

        for (int p = 0; p < nncPartyList.size(); p++) {
            AffairTwBase affairTwBase = nncPartyList.get(p);

            //团委名称
            String twName = affairTwBase.getName();
            //团委id
            String twId = affairTwBase.getId();
            //团委下设角色数量
            Integer number = affairTwBaseSignService.selectNumber(twId);
            StringBuilder details = new StringBuilder();
            int numSum = 0;
            if (number < 3) {
                //角色数量小于3是不设支委的团支部
                Integer tydhNumber = affairThreeOneService.selectTydhNum(yearL, yearT, twId, tydh);
                if (tydhNumber < 1) {
                    numSum++;
                    details.append(",").append(twName).append(year).append("年").append(month).append("月").append("团员大会未按时进行");
                }
            }else {
                Integer tydhNumber = affairThreeOneService.selectTydhNum(yearL, yearT, twId, tydh);
                Integer zwhNumber = affairThreeOneService.selectTydhNum(yearL, yearT, twId, zwh);
                //2021-2-4 修改为支委会或团员大会有其中一个进行过就不扣分
                if (zwhNumber < 1 && tydhNumber < 1) {
                    numSum++;
                    details.append(",").append(twName).append(year).append("年").append(month).append("月").append("支委会,团员大会未按时进行");

                }
                /*if (tydhNumber < 1) {
                    numSum++;
                    details.append(",").append(twName).append(year).append("年").append(month).append("月").append("团员大会未按时进行");
                }*/
            }
            if ("03".equals(month) || "06".equals(month) || "09".equals(month) || "12".equals(month)){
                Map<String, String> time = jdTime2(checkTime);
                String jd_yearL = time.get("yearL");
                String jd_yearT = time.get("yearT");
                String jd = time.get("jd");
               /* String jd = null;
                if ("12".equals(month)){
                    jd = "4";
                    yearL = year + "-10-01";
                    yearT = year + "-12-31";
                }
                if ("03".equals(month)){
                    jd = "1";
                    yearL = year + "-01-01";
                    yearT = year + "-03-31";
                }
                if ("06".equals(month)){
                    jd = "2";
                    yearL = year + "-04-01";
                    yearT = year + "-06-31";
                }
                if ("09".equals(month)){
                    jd = "3";
                    yearL = year + "-07-01";
                    yearT = year + "-09-31";
                }*/
                Integer tkNumber = affairThreeOneService.selectTydhNum(jd_yearL, jd_yearT, twId, tk);
                if ( tkNumber < 1) {
                    numSum++;
                    details.append(",").append(twName).append(year).append("年").append(jd).append("季度").append("团课未按时进行");
                }
            }
            if (numSum > 0){
                List<String> evId = examAutoEvaluationDao.selectTwEvId(twId);
                for (int e = 0; e < evId.size(); e++) {
                    String evI = evId.get(e);
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(details + ",");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setUnit(twName);
                    examAutoEvaluation.setUnitId(twId);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("南宁公安处月度对派出所2020年度绩效考核评分标准（队伍建设）");
                    examAutoEvaluation.setModelId("ddc6d6dd210e4f428b3a5361f27389fa");
                    examAutoEvaluation.setEvaluationId(evI);//被考评对象id
                    examAutoEvaluation.setOption("共青团各类月度基础数据信息在智慧政工平台上未按时维护上报或录入出现错误、不及时的");
                    examAutoEvaluation.setOptionId("aed2fe8308484dc493b88c9cd34a42d7");
                    examAutoEvaluation.setScore("2");

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation, "34", "团委三会一课");
                    this.save(examAutoEvaluation);
                }
            }
        }
        for (int p = 0; p < lzcPartyList.size(); p++) {
            AffairTwBase affairTwBase = lzcPartyList.get(p);

            //团委名称
            String twName = affairTwBase.getName();
            //团委id
            String twId = affairTwBaseService.selectId(twName);
            //团委下设角色数量
            Integer number = affairTwBaseSignService.selectNumber(twId);
            StringBuilder details = new StringBuilder();
            int numSum = 0;
            if (number < 3) {
                //角色数量小于3是不设支委的团支部
                Integer tydhNumber = affairThreeOneService.selectTydhNum(yearL, yearT, twId, tydh);
                if (tydhNumber < 1) {
                    numSum++;
                    details.append(",").append(twName).append(year).append("年").append(month).append("月").append("团员大会未按时进行");
                }
            }else {
                Integer zwhNumber = affairThreeOneService.selectTydhNum(yearL, yearT, twId, zwh);
                Integer tydhNumber = affairThreeOneService.selectTydhNum(yearL, yearT, twId, tydh);
                if (zwhNumber < 1 && tydhNumber < 1) {
                    numSum++;
                    details.append(",").append(twName).append(year).append("年").append(month).append("月").append("支委会，团员大会未按时进行");

                }
                /*if (tydhNumber < 1) {
                    numSum++;
                    details.append(",").append(twName).append(year).append("年").append(month).append("月").append("团员大会未按时进行");
                }*/
            }
            if ("03".equals(month) || "06".equals(month) || "09".equals(month) || "12".equals(month)){
                Map<String, String> time = jdTime2(checkTime);
                String jd_yearL = time.get("yearL");
                String jd_yearT = time.get("yearT");
                String jd = time.get("jd");
                /*String jd = null;
                if ("01".equals(month)) {
                    jd = "4";
                    yearL = lastYear + "-10-01";
                    yearT = lastYear + "-12-31";
                }
                if ("04".equals(month)) {
                    jd = "1";
                    yearL = year + "-01-01";
                    yearT = year + "-03-31";
                }
                if ("07".equals(month)) {
                    jd = "2";
                    yearL = year + "-04-01";
                    yearT = year + "-06-31";
                }
                if ("10".equals(month)) {
                    jd = "3";
                    yearL = year + "-07-01";
                    yearT = year + "-09-31";
                }*/

                Integer tkNumber = affairThreeOneService.selectTydhNum(jd_yearL, jd_yearT, twId, tk);
                if (tkNumber < 1) {
                    numSum++;
                    details.append(",").append(twName).append(year).append("年").append(jd).append("季度").append("团课未按时进行");
                }
            }
            if (numSum > 0){

                List<String> evId = examAutoEvaluationDao.selectTwEvId(twId);
                for (int e = 0; e < evId.size(); e++) {
                    String evI = evId.get(e);
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(details + ",");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setUnit(twName);
                    examAutoEvaluation.setUnitId(twId);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("南宁公安处月度对派出所2020年度绩效考核评分标准（队伍建设）");
                    examAutoEvaluation.setModelId("ddc6d6dd210e4f428b3a5361f27389fa");
                    examAutoEvaluation.setEvaluationId(evI);//被考评对象id
                    examAutoEvaluation.setOption("共青团各类月度基础数据信息在智慧政工平台上未按时维护上报或录入出现错误、不及时的");
                    examAutoEvaluation.setOptionId("aed2fe8308484dc493b88c9cd34a42d7");
                    examAutoEvaluation.setScore("2");

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation, "95", "团委三会一课");
                    this.save(examAutoEvaluation);
                }
            }
        }
        for (int p = 0; p < bhcPartyList.size(); p++) {
            AffairTwBase affairTwBase = bhcPartyList.get(p);

            //团委名称
            String twName = affairTwBase.getName();
            //团委id
            String twId = affairTwBaseService.selectId(twName);
            //团委下设角色数量
            Integer number = affairTwBaseSignService.selectNumber(twId);
            StringBuilder details = new StringBuilder();
            int numSum = 0;
            if (number < 3) {
                //角色数量小于3是不设支委的团支部
                Integer tydhNumber = affairThreeOneService.selectTydhNum(yearL, yearT, twId, tydh);
                if (tydhNumber < 1) {
                    numSum++;
                    details.append(",").append(twName).append(year).append("年").append(month).append("月").append("团员大会未按时进行");
                }

            }else {
                Integer zwhNumber = affairThreeOneService.selectTydhNum(yearL, yearT, twId, zwh);
                Integer tydhNumber = affairThreeOneService.selectTydhNum(yearL, yearT, twId, tydh);
                if (zwhNumber < 1 && tydhNumber < 1) {
                    numSum++;
                    details.append(",").append(twName).append(year).append("年").append(month).append("月").append("支委会,团员大会未按时进行");

                }
                /*if (tydhNumber < 1) {
                    numSum++;
                    details.append(",").append(twName).append(year).append("年").append(month).append("月").append("团员大会未按时进行");
                }*/
            }
            if ("03".equals(month) || "06".equals(month) || "09".equals(month) || "12".equals(month)){
                Map<String, String> time = jdTime2(checkTime);
                String jd_yearL = time.get("yearL");
                String jd_yearT = time.get("yearT");
                String jd = time.get("jd");
                /*String jd = null;
                if ("01".equals(month)){
                    jd = "4";
                    yearL = lastYear + "-10-01";
                    yearT = lastYear + "-12-31";
                }
                if ("04".equals(month)){
                    jd = "1";
                    yearL = year + "-01-01";
                    yearT = year + "-03-31";
                }
                if ("07".equals(month)){
                    jd = "2";
                    yearL = year + "-04-01";
                    yearT = year + "-06-31";
                }
                if ("10".equals(month)){
                    jd = "3";
                    yearL = year + "-07-01";
                    yearT = year + "-09-31";
                }*/
                Integer tkNumber = affairThreeOneService.selectTydhNum(jd_yearL, jd_yearT, twId, tk);
                if (tkNumber < 1) {
                    numSum++;
                    details.append(",").append(twName).append(year).append("年").append(jd).append("季度").append("团课未按时进行");
                }
            }
            if (numSum > 0) {

                List<String> evId = examAutoEvaluationDao.selectTwEvId(twId);
                for (int e = 0; e < evId.size(); e++) {
                    String evI = evId.get(e);
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");
                    examAutoEvaluation.setEvalType("3");
                    examAutoEvaluation.setPeriod("1");
                    examAutoEvaluation.setYear(year);
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setDetails(details + ",");

                    examAutoEvaluation.setFromSys("智慧政工");
                    examAutoEvaluation.setUnit(twName);
                    examAutoEvaluation.setUnitId(twId);
                    examAutoEvaluation.setAssess("");
                    examAutoEvaluation.setAssessId("");
                    examAutoEvaluation.setModel("南宁公安处月度对派出所2020年度绩效考核评分标准（队伍建设）");
                    examAutoEvaluation.setModelId("ddc6d6dd210e4f428b3a5361f27389fa");
                    examAutoEvaluation.setEvaluationId(evI);//被考评对象id
                    examAutoEvaluation.setOption("共青团各类月度基础数据信息在智慧政工平台上未按时维护上报或录入出现错误、不及时的");
                    examAutoEvaluation.setOptionId("aed2fe8308484dc493b88c9cd34a42d7");
                    examAutoEvaluation.setScore("2");

                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation, "156", "团委三会一课");
                    this.save(examAutoEvaluation);
                }
            }
        }
    }



    /*2021-2-2 月度考评时间修改为自然月*/
    public Map<String,String> monthTime(String checkTime){

        String year = checkTime.substring(0, 4);
        String month = checkTime.substring(checkTime.length() - 2);

        String yearL = year + "-" +  month + "-01";
        String yearT = year + "-" +  month + "-31";

        Map<String,String> map = new HashMap<>();
        map.put("yearL",yearL);
        map.put("yearT",yearT);
        return map;
    }

    /*学习强国月度特殊处理  - 只有年月,不包含天*/
    public Map<String,String> xxqgTime(String checkTime){

        String year = checkTime.substring(0, 4);
        String month = checkTime.substring(checkTime.length() - 2);

        String yearL = year + "-" +  month;

        Map<String,String> map = new HashMap<>();
        map.put("time",yearL);
        return map;
    }

    /*学习强国年度特殊处理  - 只有年*/
    public Map<String,String> xxqgTimeY(String checkTime){

        String year = checkTime.substring(0, 4);

        Map<String,String> map = new HashMap<>();
        map.put("time",year);
        return map;
    }

    /*2021-2-2 季度考评时间修改为自然月*/
    public Map<String,String> jdTime(String checkTime){

        String year = checkTime.substring(0, 4);
        int y = Integer.valueOf(year);
        String lastYear = String.valueOf(y - 1);
        String month = checkTime.substring(checkTime.length() - 2);

        String yearL = null;
        String yearT = null;
        String jd = null;

        if ("04".equals(month)) {
            yearL = year + "-01-01";
            yearT = year + "-03-31";
            jd = "01";
        } else if ("07".equals(month)) {
            yearL = year + "-04-01";
            yearT = year + "-06-30";
            jd = "02";
        } else if ("10".equals(month)) {
            yearL = year + "-07-01";
            yearT = year + "-09-30";
            jd = "03";
        } else if ("01".equals(month)) {
            yearL = lastYear + "-10-01";
            yearT = lastYear + "-12-31";
            jd = "04";
        }
        Map<String,String> map = new HashMap<>();
        map.put("yearL",yearL);
        map.put("yearT",yearT);
        map.put("jd",jd);
        return map;
    }
    //因定时任务时间往前推一个月处理，因此对 3，6，9，12月处理
    public Map<String,String> jdTime2(String checkTime){

        String year = checkTime.substring(0, 4);
        int y = Integer.valueOf(year);
        String lastYear = String.valueOf(y - 1);
        String month = checkTime.substring(checkTime.length() - 2);

        String yearL = null;
        String yearT = null;
        String jd = null;

        if ("03".equals(month)) {
            yearL = year + "-01-01";
            yearT = year + "-03-31";
            jd = "01";
        } else if ("06".equals(month)) {
            yearL = year + "-04-01";
            yearT = year + "-06-30";
            jd = "02";
        } else if ("09".equals(month)) {
            yearL = year + "-07-01";
            yearT = year + "-09-30";
            jd = "03";
        } else if ("12".equals(month)) {
            yearL = year + "-10-01";
            yearT = year + "-12-31";
            jd = "04";
        }
        Map<String,String> map = new HashMap<>();
        map.put("yearL",yearL);
        map.put("yearT",yearT);
        map.put("jd",jd);
        return map;
    }
    /*2021-2-2 半年考评时间修改为自然月*/
    public Map<String,String> halfTime(String checkTime){

        String year = checkTime.substring(0, 4);
        int y = Integer.valueOf(year);
        String lastYear = String.valueOf(y - 1);
        String month = checkTime.substring(checkTime.length() - 2);
        Map<String,String> map = new HashMap<>();

        String yearL = null;
        String yearT = null;

        if ("07".equals(month)){
            yearL = year + "-01-01";
            yearT = year + "-06-30";

            map.put("yearL",yearL);
            map.put("yearT",yearT);
        }if ("01".equals(month)){
            yearL = lastYear + "-07-01";
            yearT = lastYear + "-12-31";

            map.put("yearL",yearL);
            map.put("yearT",yearT);
        }

        return map;
    }

    public Map<String,String> halfTime2(String checkTime){

        String year = checkTime.substring(0, 4);
        int y = Integer.valueOf(year);
        String lastYear = String.valueOf(y - 1);
        String month = checkTime.substring(checkTime.length() - 2);
        Map<String,String> map = new HashMap<>();

        String yearL = null;
        String yearT = null;

        if ("06".equals(month)){
            yearL = year + "-01-01";
            yearT = year + "-06-30";

            map.put("yearL",yearL);
            map.put("yearT",yearT);
        }if ("12".equals(month)){
            yearL = year + "-07-01";
            yearT = year + "-12-31";

            map.put("yearL",yearL);
            map.put("yearT",yearT);
        }

        return map;
    }
    /*2021-2-2 年度考评时间修改为上一年的12月11日到本年度12月10日*/
    public Map<String,String> yearTime(String year){

        Integer y = Integer.valueOf(year);
        Integer lastYear = y - 1;
        String yearL = lastYear + "-" + "12-11";
        String yearT = year + "-" + "12-10";

        Map<String,String>map = new HashMap<>();
        map.put("yearL",yearL);
        map.put("yearT",yearT);
        return map;
    }




    /*查询自动考评有问题数据*/
    /*主要为自动考评全局数据，但是模板只针对局机关等类型情况*/
    /**
     *
     * @param page
     * @param examAutoEvaluation
     * @return
     */
    public Page<ExamAutoEvaluation> findProblemPage(Page<ExamAutoEvaluation> page, ExamAutoEvaluation examAutoEvaluation) {
        examAutoEvaluation.setPage(page);
        page.setList(dao.findProblemList(examAutoEvaluation));
        return page;
    }
    /**
     * 考评标准，周期，年月，被考评对象一样汇总 建议save之前，其他字段设置完成后使用
     * @param examAutoEvaluation   其中模板id，选择项id，周期，考评类型，被考评对象id不能为空
     * @param score    分值
     * @param details  详情
     */
    @Transactional(readOnly = false)
    public ExamAutoEvaluation summaryStandard(ExamAutoEvaluation examAutoEvaluation,Double score,String details){
        /*处理考评标准一样，汇总*/
        try {
            ExamAutoEvaluation old = this.getInfoByMore(examAutoEvaluation);
            if(old!=null){
                String oldDetails = old.getDetails();
                Double oldScore;
                try {
                    oldScore = Double.valueOf(old.getScore());
                }catch (Exception e2){
                    e2.printStackTrace();
                    oldScore = 0.0;
                }
                this.deleteInfoByMore(old);
                examAutoEvaluation.setScore(String.valueOf(oldScore+score));
                examAutoEvaluation.setDetails(oldDetails+"<br>"+details);
            }
        }catch (Exception e){
            logger.error(getExceptionInfo(e));
            e.printStackTrace();
        }
        return examAutoEvaluation;
    }

    /**
     * 百名民警查缉案件数未完成（每月）
     * 局考处，月度
     * 南宁、柳州处每月8起，北海处每月2起。（每少1起扣0.2分）（包含下属单位）
     */
    @Transactional(readOnly = false)
    public void jkcBMMJJCAJ(String year ,String month){
        DecimalFormat df = new DecimalFormat("0.00");
        Map<String,String> map = this.monthTime(year+"-"+month);
        String yearL = map.get("yearL");
        String yearT = map.get("yearT");
        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
        examAutoEvaluation.setType("1");//考评对象
        examAutoEvaluation.setEvalType("1");//考评类别
        examAutoEvaluation.setPeriod("1");//月度
        examAutoEvaluation.setYear(year);
        examAutoEvaluation.setMonth(month);
        examAutoEvaluation.setAssess("");
        examAutoEvaluation.setAssessId("");
        examAutoEvaluation.setModel("2020年月度公安局对公安处扣分标准(业务部分26项)");
        examAutoEvaluation.setModelId("aef99f1b42054342ba71c25634d0f9fc");
        examAutoEvaluation.setOption("未按要求完成百名民警查缉案件");
        examAutoEvaluation.setOptionId("41a8b9f28e3b4395b21a6b9932b8a026");
        examAutoEvaluation.setFromSys("警综平台");
        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"百名民警缉查案件");
        List<Map<String,Object>> nncList = examAutoEvaluationDao.selCountjkcBMMJByTime("34",yearL,yearT);
        if(nncList!=null && nncList.size()>0){
            StringBuffer nncDetail = null;
            int i = 0;
            double score = 0.0;
            for(Map<String,Object> tempMap : nncList){
                int num = (int)((long) tempMap.get("num"));
                if(num<8){
                    i++;
                    score += 0.2*(8-num);
                    String officeName = (String)tempMap.get("officeName");
                    if(nncDetail==null){
                        nncDetail = new StringBuffer(i+"."+officeName+"与"+yearL+"至"+yearT+"百名民警查缉案件数未完成,已完成"+num);
                    }else{
                        nncDetail.append(" "+i+"."+officeName+"与"+yearL+"至"+yearT+"百名民警查缉案件数未完成,已完成"+num);
                    }
                }
            }
            if(i>0){
                examAutoEvaluation.setScore(String.valueOf(df.format(score)));//f分值
                examAutoEvaluation.setDetails(nncDetail.toString());//详情
                examAutoEvaluation.setUnitId("52");
                examAutoEvaluation.setUnit("南宁处刑警支队");
                examAutoEvaluation.setEvaluationId("e4902c84680a4870bb4d27010ab9bd1d");
                this.summaryStandard(examAutoEvaluation,score,nncDetail.toString());
                examAutoEvaluation.setId("");
                examAutoEvaluation.setIsNewRecord(false);
                this.save(examAutoEvaluation);
            }
        }
        List<Map<String,Object>> lzcList = examAutoEvaluationDao.selCountjkcBMMJByTime("95",yearL,yearT);
        if(lzcList!=null && lzcList.size()>0){
            StringBuffer detail = null;
            int i = 0;
            double score = 0.0;
            for(Map<String,Object> tempMap : lzcList){
                int num = (int)((long) tempMap.get("num"));
                if(num<8){
                    i++;
                    score += 0.2*(8-num);
                    String officeName = (String)tempMap.get("officeName");
                    if(detail==null){
                        detail = new StringBuffer(i+"."+officeName+"与"+yearL+"至"+yearT+"百名民警查缉案件数未完成,已完成"+num);
                    }else{
                        detail.append(" "+i+"."+officeName+"与"+yearL+"至"+yearT+"百名民警查缉案件数未完成,已完成"+num);
                    }
                }
            }
            if(i>0){
                examAutoEvaluation.setScore(String.valueOf(df.format(score)));//f分值
                examAutoEvaluation.setDetails(detail.toString());//详情
                examAutoEvaluation.setUnitId("167");
                examAutoEvaluation.setUnit("柳州处刑警支队");
                examAutoEvaluation.setEvaluationId("940f25fb26da4d5cad150bc875c0f1db");
                this.summaryStandard(examAutoEvaluation,score,detail.toString());
                examAutoEvaluation.setId("");
                examAutoEvaluation.setIsNewRecord(false);
                this.save(examAutoEvaluation);
            }
        }
        List<Map<String,Object>> bhcList = examAutoEvaluationDao.selCountjkcBMMJByTime("156",yearL,yearT);
        if(bhcList!=null && bhcList.size()>0){
            StringBuffer detail = null;
            int i = 0;
            double score = 0.0;
            for(Map<String,Object> tempMap : bhcList){
                int num = (int)((long) tempMap.get("num"));
                if(num<2){
                    i++;
                    score += 0.2*(2-num);
                    String officeName = (String)tempMap.get("officeName");
                    if(detail==null){
                        detail = new StringBuffer(i+"."+officeName+"与"+yearL+"至"+yearT+"百名民警查缉案件数未完成,已完成"+num);
                    }else{
                        detail.append(" "+i+"."+officeName+"与"+yearL+"至"+yearT+"百名民警查缉案件数未完成,已完成"+num);
                    }
                }
            }
            if(i>0){

                examAutoEvaluation.setScore(String.valueOf(df.format(score)));//f分值
                examAutoEvaluation.setDetails(detail.toString());//详情
                examAutoEvaluation.setUnitId("277");
                examAutoEvaluation.setUnit("北海处刑警支队");
                examAutoEvaluation.setEvaluationId("5caeea9690fc42ac846d785cf3418309");
                this.summaryStandard(examAutoEvaluation,score,detail.toString());
                examAutoEvaluation.setId("");
                examAutoEvaluation.setIsNewRecord(false);
                this.save(examAutoEvaluation);
            }
        }
    }


    /**
     * 百名民警查缉案件数未完成（每月）
     * 局考处，年度
     * 百名民警10起。根据人数定指标（总分5分，按百分比扣）（包含下属单位） 如目标10起，完成1起，扣90%*5
     */
    @Transactional(readOnly = false)
    public void jkcBMMJJCAJYear(String year){
        int nncBaseNum = (personnelBaseDao.selCountByUnirId("34")/100)*10;
        int lzcBaseNum = (personnelBaseDao.selCountByUnirId("95")/100)*10;
        int bhcBaseNum = (personnelBaseDao.selCountByUnirId("156")/100)*10;
        DecimalFormat df = new DecimalFormat("0.00");
        Map<String,String> map = this.yearTime(year);
        String yearL = map.get("yearL");
        String yearT = map.get("yearT");
        ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
        examAutoEvaluation.setType("1");//考评对象
        examAutoEvaluation.setEvalType("1");//考评类别
        examAutoEvaluation.setPeriod("2");//年度
        examAutoEvaluation.setYear(year);
        examAutoEvaluation.setAssess("");
        examAutoEvaluation.setAssessId("");
        examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考核扣分标准(业务部分26项)");
        examAutoEvaluation.setModelId("a959d8865ea74bf68cf818adc710c75c");
        examAutoEvaluation.setOption("未完成百名民警缉逃数预期工作目标的");
        examAutoEvaluation.setOptionId("83e2387bf6bf4878a163f6fa481e32aa");
        examAutoEvaluation.setFromSys("警综平台");
        examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"百名民警缉查案件");
        List<Map<String,Object>> nncList = examAutoEvaluationDao.selCountjkcBMMJByTime("34",yearL,yearT);
        if(nncList!=null && nncList.size()>0){
            StringBuffer nncDetail = null;
            int i = 0;
            double score = 0.0;
            for(Map<String,Object> tempMap : nncList){
                int num = (int)((long) tempMap.get("num"));
                if(num<nncBaseNum){
                    i++;
                    score += ((float)(nncBaseNum-num)/nncBaseNum)*5;
                    String officeName = (String)tempMap.get("officeName");
                    if(nncDetail==null){
                        nncDetail = new StringBuffer(i+"."+officeName+"与"+yearL+"至"+yearT+"百名民警查缉案件数未完成,已完成"+num);
                    }else{
                        nncDetail.append(" "+i+"."+officeName+"与"+yearL+"至"+yearT+"百名民警查缉案件数未完成,已完成"+num);
                    }
                }
            }
            if(i>0){
                examAutoEvaluation.setScore(String.valueOf(df.format(score)));//f分值
                examAutoEvaluation.setDetails(nncDetail.toString());//详情
                examAutoEvaluation.setUnitId("52");
                examAutoEvaluation.setUnit("南宁处刑警支队");
                examAutoEvaluation.setEvaluationId("e4902c84680a4870bb4d27010ab9bd1d");
                this.summaryStandard(examAutoEvaluation,score,nncDetail.toString());
                examAutoEvaluation.setId("");
                examAutoEvaluation.setIsNewRecord(false);
                this.save(examAutoEvaluation);
            }
        }
        List<Map<String,Object>> lzcList = examAutoEvaluationDao.selCountjkcBMMJByTime("95",yearL,yearT);
        if(lzcList!=null && lzcList.size()>0){
            StringBuffer detail = null;
            int i = 0;
            double score = 0.0;
            for(Map<String,Object> tempMap : lzcList){
                int num = (int)((long) tempMap.get("num"));
                if(num<lzcBaseNum){
                    i++;
                    score += ((float)(lzcBaseNum-num)/lzcBaseNum)*5;
                    String officeName = (String)tempMap.get("officeName");
                    if(detail==null){
                        detail = new StringBuffer(i+"."+officeName+"与"+yearL+"至"+yearT+"百名民警查缉案件数未完成,已完成"+num);
                    }else{
                        detail.append(" "+i+"."+officeName+"与"+yearL+"至"+yearT+"百名民警查缉案件数未完成,已完成"+num);
                    }
                }
            }
            if(i>0){
                examAutoEvaluation.setScore(String.valueOf(df.format(score)));//f分值
                examAutoEvaluation.setDetails(detail.toString());//详情
                examAutoEvaluation.setUnitId("167");
                examAutoEvaluation.setUnit("柳州处刑警支队");
                examAutoEvaluation.setEvaluationId("940f25fb26da4d5cad150bc875c0f1db");
                this.summaryStandard(examAutoEvaluation,score,detail.toString());
                examAutoEvaluation.setId("");
                examAutoEvaluation.setIsNewRecord(false);
                this.save(examAutoEvaluation);
            }
        }
        List<Map<String,Object>> bhcList = examAutoEvaluationDao.selCountjkcBMMJByTime("156",yearL,yearT);
        if(bhcList!=null && bhcList.size()>0){
            StringBuffer detail = null;
            int i = 0;
            double score = 0.0;
            for(Map<String,Object> tempMap : bhcList){
                int num = (int)((long) tempMap.get("num"));
                if(num<bhcBaseNum){
                    i++;
                    score += ((float)(bhcBaseNum-num)/bhcBaseNum)*5;
                    String officeName = (String)tempMap.get("officeName");
                    if(detail==null){
                        detail = new StringBuffer(i+"."+officeName+"与"+yearL+"至"+yearT+"百名民警查缉案件数未完成,已完成"+num);
                    }else{
                        detail.append(" "+i+"."+officeName+"与"+yearL+"至"+yearT+"百名民警查缉案件数未完成,已完成"+num);
                    }
                }
            }
            if(i>0){

                examAutoEvaluation.setScore(String.valueOf(df.format(score)));//f分值
                examAutoEvaluation.setDetails(detail.toString());//详情
                examAutoEvaluation.setUnitId("277");
                examAutoEvaluation.setUnit("北海处刑警支队");
                examAutoEvaluation.setEvaluationId("5caeea9690fc42ac846d785cf3418309");
                this.summaryStandard(examAutoEvaluation,score,detail.toString());
                examAutoEvaluation.setId("");
                examAutoEvaluation.setIsNewRecord(false);
                this.save(examAutoEvaluation);
            }
        }
    }



    //异常信息打印到日志
    public static String getExceptionInfo(Exception e){
        try {
            ByteArrayOutputStream baos = new ByteArrayOutputStream();
            e.printStackTrace(new PrintStream(baos));
            return baos.toString();
        }catch (Exception e2){
            return e.toString();
        }

    }


    /**
     * 危及行车刑事案件
     *
     * 因防范工作不到位，线路上发生危及行车安全刑事案件的，扣6分。（包含下属单位）
     *
     * 月度   局考处
     * @param checkTime
     */
    @Transactional(readOnly = false)
    public void jkcWxxsajMonth(String checkTime){
        String year = checkTime.substring(0, 4);
        String month = checkTime.substring(checkTime.length() - 2);

        Map<String, String> time = monthTime(checkTime);
        String yearL = time.get("yearL");
        String yearT = time.get("yearT");

        //获取单位
        List<Office> nncPartyList = officeDao.selectChuUnitList("34");
        List<Office> lzcPartyList = officeDao.selectChuUnitList("95");
        List<Office> bhcPartyList = officeDao.selectChuUnitList("156");

        int nncSum = 0;
        int lzcSum = 0;
        int bhcSum = 0;

        int nncdetailSum = 0;
        int lzcdetailSum = 0;
        int bhcdetailSum = 0;


        StringBuilder nncDetails = new StringBuilder();
        StringBuilder lzcDetails = new StringBuilder();
        StringBuilder bhcDetails = new StringBuilder();

        List<String> nncdetail = new ArrayList<>();
        List<String> lzcdetail = new ArrayList<>();
        List<String> bhcdetail = new ArrayList<>();

        for (int o = 0; o < nncPartyList.size(); o++) {
            Office office = nncPartyList.get(o);
            //公安处名称
            String name = office.getName();
            //公安处code
            String code = office.getCode();

            Integer number = examAutoEvaluationDao.selectWxxsaj(yearL,yearT, code);
            if (number > 0){
                nncSum++;
                nncDetails.append(name).append(",具体案情如下：");
                nncdetail = examAutoEvaluationDao.selectDetails(yearL,yearT,code);
                if(nncdetail.size() > 0 && nncdetail != null){
                    nncdetailSum++;
                    for (String s : nncdetail) {
                        nncDetails.append(s+";");
                    }
                }
            }
        }
        if (nncSum > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setDetails(nncDetails.toString());
            examAutoEvaluation.setUnit("南宁处刑警支队");
            examAutoEvaluation.setUnitId("52");
            examAutoEvaluation.setFromSys("警综平台");
            examAutoEvaluation.setModel("2020年月度公安局对公安处扣分标准(业务部分26项)");
            examAutoEvaluation.setModelId("aef99f1b42054342ba71c25634d0f9fc");
            examAutoEvaluation.setOption("因防范工作不到位，线路上发生危及行车安全刑事案件的");
            examAutoEvaluation.setOptionId("f85e9fc7e2d24cb1a1c8a8b181a06e5d");
            examAutoEvaluation.setScore("6");
            examAutoEvaluation.setEvaluationId("e4902c84680a4870bb4d27010ab9bd1d");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刑侦危及行车");
            this.summaryStandard(examAutoEvaluation,6.0,nncDetails.toString());
            this.save(examAutoEvaluation);
        }

        for (int o = 0; o < lzcPartyList.size(); o++) {
            Office office = lzcPartyList.get(o);
            //公安处名称
            String name = office.getName();
            //公安处code
            String code = office.getCode();

            Integer number = examAutoEvaluationDao.selectWxxsaj(yearL,yearT, code);
            if (number > 0){
                lzcSum++;
                lzcDetails.append(name).append(",具体案情如下：");
                lzcdetail = examAutoEvaluationDao.selectDetails(yearL,yearT,code);
                if(lzcdetail.size() > 0 && lzcdetail != null){
                    lzcdetailSum++;
                    for (String s : lzcdetail) {
                        lzcDetails.append(s+";");
                    }
                }
            }
        }
        if (lzcSum > 0) {
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setDetails(lzcDetails.toString());
            examAutoEvaluation.setUnit("柳州处刑警支队");
            examAutoEvaluation.setUnitId("167");
            examAutoEvaluation.setFromSys("警综平台");
            examAutoEvaluation.setModel("2020年月度公安局对公安处扣分标准(业务部分26项)");
            examAutoEvaluation.setModelId("aef99f1b42054342ba71c25634d0f9fc");
            examAutoEvaluation.setOption("因防范工作不到位，线路上发生危及行车安全刑事案件的");
            examAutoEvaluation.setOptionId("f85e9fc7e2d24cb1a1c8a8b181a06e5d");
            examAutoEvaluation.setScore("6");
            examAutoEvaluation.setEvaluationId("940f25fb26da4d5cad150bc875c0f1db");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刑侦危及行车");
            this.summaryStandard(examAutoEvaluation,6.0,lzcDetails.toString());
            this.save(examAutoEvaluation);

        }

        for (int o = 0; o < bhcPartyList.size(); o++) {
            Office office = bhcPartyList.get(o);
            //公安处名称
            String name = office.getName();
            //公安处code
            String code = office.getCode();

            Integer number = examAutoEvaluationDao.selectWxxsaj(yearL,yearT, code);
            if (number > 0){
                bhcSum++;
                bhcDetails.append(name).append(",具体案情如下：");
                bhcdetail = examAutoEvaluationDao.selectDetails(yearL,yearT,code);
                if(bhcdetail.size() > 0 && bhcdetail != null){
                    bhcdetailSum++;
                    for (String s : bhcdetail) {
                        bhcDetails.append(s+ ";");
                    }
                }
            }
        }
        if(bhcSum > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("1");
            examAutoEvaluation.setMonth(month);
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setDetails(bhcDetails.toString());
            examAutoEvaluation.setUnit("北海处刑警支队");
            examAutoEvaluation.setUnitId("277");
            examAutoEvaluation.setFromSys("警综平台");
            examAutoEvaluation.setModel("2020年月度公安局对公安处扣分标准(业务部分26项)");
            examAutoEvaluation.setModelId("aef99f1b42054342ba71c25634d0f9fc");
            examAutoEvaluation.setOption("因防范工作不到位，线路上发生危及行车安全刑事案件的");
            examAutoEvaluation.setOptionId("f85e9fc7e2d24cb1a1c8a8b181a06e5d");
            examAutoEvaluation.setScore("6");
            examAutoEvaluation.setEvaluationId("5caeea9690fc42ac846d785cf3418309");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刑侦危及行车");
            this.summaryStandard(examAutoEvaluation,6.0,bhcDetails.toString());
            this.save(examAutoEvaluation);

        }

    }


    /**
     * 危及行车刑事案件
     *
     * 因防范工作不到位，线路上发生危及行车安全刑事案件的，扣3分。（包含下属单位）
     *
     * 年度   局考处
     * @param year
     */
    @Transactional(readOnly = false)
    public void jkcWxxsajYear(String year){

        Map<String,Object> monthMap = this.getTimeQuantumByYear(year);

        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        Date nowTime = (Date) monthMap.get("nowYear");
        String yearT = formatter.format(nowTime);
        Date lastTime = (Date) monthMap.get("lastYear");
        String yearL = formatter.format(lastTime);

        year = (String) monthMap.get("year");

        //获取单位
        List<Office> nncPartyList = officeDao.selectChuUnitList("34");
        List<Office> lzcPartyList = officeDao.selectChuUnitList("95");
        List<Office> bhcPartyList = officeDao.selectChuUnitList("156");

        int nncSum = 0;
        int lzcSum = 0;
        int bhcSum = 0;

        int nncdetailSum = 0;
        int lzcdetailSum = 0;
        int bhcdetailSum = 0;

        StringBuilder nncDetails = new StringBuilder();
        StringBuilder lzcDetails = new StringBuilder();
        StringBuilder bhcDetails = new StringBuilder();

        List<String> nncdetail = new ArrayList<>();
        List<String> lzcdetail = new ArrayList<>();
        List<String> bhcdetail = new ArrayList<>();

        for (int o = 0; o < nncPartyList.size(); o++) {
            Office office = nncPartyList.get(o);
            //公安处名称
            String name = office.getName();
            //公安处code
            String code = office.getCode();

            Integer number = examAutoEvaluationDao.selectWxxsajYear(yearL,yearT, code);
            if (number > 0){
                nncSum++;
                nncDetails.append(name).append(",具体案情如下：");
                nncdetail = examAutoEvaluationDao.selectDetails(yearL,yearT,code);
                if(nncdetail.size() > 0 && nncdetail != null){
                    nncdetailSum++;
                    for (String s : nncdetail) {
                        nncDetails.append(s+";");
                    }
                }
            }
        }
        if (nncSum > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("2");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setDetails(nncDetails.toString());
            examAutoEvaluation.setUnit("南宁处刑警支队");
            examAutoEvaluation.setUnitId("52");
            examAutoEvaluation.setFromSys("警综平台");
            examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考核扣分标准(业务部分26项)");
            examAutoEvaluation.setModelId("a959d8865ea74bf68cf818adc710c75c");
            examAutoEvaluation.setOption("沿线治安动态情况掌握不及时，导致危及行车安全案事件发生的");
            examAutoEvaluation.setOptionId("b7cf965253b949959486cd731c44a0fb");
            examAutoEvaluation.setScore("3");
            examAutoEvaluation.setEvaluationId("e4902c84680a4870bb4d27010ab9bd1d");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刑侦危及行车");
            this.summaryStandard(examAutoEvaluation,3.0,nncDetails.toString());
            this.save(examAutoEvaluation);
        }

        for (int o = 0; o < lzcPartyList.size(); o++) {
            Office office = lzcPartyList.get(o);
            //公安处名称
            String name = office.getName();
            //公安处code
            String code = office.getCode();

            Integer number = examAutoEvaluationDao.selectWxxsajYear(yearL,yearT, code);
            if (number > 0){
                lzcSum++;
                lzcDetails.append(name).append(",具体案情如下：");
                lzcdetail = examAutoEvaluationDao.selectDetails(yearL,yearT,code);
                if(lzcdetail.size() > 0 && lzcdetail != null){
                    lzcdetailSum++;
                    for (String s : lzcdetail) {
                        lzcDetails.append(s+";");
                    }
                }
            }
        }
        if (lzcSum > 0) {
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("2");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setDetails(lzcDetails.toString());
            examAutoEvaluation.setUnit("柳州处刑警支队");
            examAutoEvaluation.setUnitId("167");
            examAutoEvaluation.setFromSys("警综平台");
            examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考核扣分标准(业务部分26项)");
            examAutoEvaluation.setModelId("a959d8865ea74bf68cf818adc710c75c");
            examAutoEvaluation.setOption("沿线治安动态情况掌握不及时，导致危及行车安全案事件发生的");
            examAutoEvaluation.setOptionId("b7cf965253b949959486cd731c44a0fb");
            examAutoEvaluation.setScore("3");
            examAutoEvaluation.setEvaluationId("940f25fb26da4d5cad150bc875c0f1db");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刑侦危及行车");
            this.summaryStandard(examAutoEvaluation,3.0,lzcDetails.toString());
            this.save(examAutoEvaluation);

        }

        for (int o = 0; o < bhcPartyList.size(); o++) {
            Office office = bhcPartyList.get(o);
            //公安处名称
            String name = office.getName();
            //公安处code
            String code = office.getCode();

            Integer number = examAutoEvaluationDao.selectWxxsajYear(yearL,yearT, code);
            if (number > 0){
                bhcSum++;
                bhcDetails.append(name).append(",具体案情如下：");
                bhcdetail = examAutoEvaluationDao.selectDetails(yearL,yearT,code);
                if(bhcdetail.size() > 0 && bhcdetail != null){
                    bhcdetailSum++;
                    for (String s : bhcdetail) {
                        bhcDetails.append(s+ ";");
                    }
                }
            }
        }
        if(bhcSum > 0){
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("1");
            examAutoEvaluation.setEvalType("1");
            examAutoEvaluation.setPeriod("2");
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setDetails(bhcDetails.toString());
            examAutoEvaluation.setUnit("北海处刑警支队");
            examAutoEvaluation.setUnitId("277");
            examAutoEvaluation.setFromSys("警综平台");
            examAutoEvaluation.setModel("2020年年度公安局对公安处绩效考核扣分标准(业务部分26项)");
            examAutoEvaluation.setModelId("a959d8865ea74bf68cf818adc710c75c");
            examAutoEvaluation.setOption("沿线治安动态情况掌握不及时，导致危及行车安全案事件发生的");
            examAutoEvaluation.setOptionId("b7cf965253b949959486cd731c44a0fb");
            examAutoEvaluation.setScore("3");
            examAutoEvaluation.setEvaluationId("5caeea9690fc42ac846d785cf3418309");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刑侦危及行车");
            this.summaryStandard(examAutoEvaluation,3.0,bhcDetails.toString());
            this.save(examAutoEvaluation);

        }

    }



    /**
     * 危及行车刑事案件
     *
     * 派出所管辖内因防范工作不到位，线路上发生危及行车安全刑事案件的，扣2分。
     *
     * 年度  处考队所
     * @param year
     */
    @Transactional(readOnly = false)
    public void ckpcsWxxsajYear(String year){
        Map<String,Object> yearMap = this.getTimeQuantumByYear(year);

        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");

        Date nowYearDate = (Date) yearMap.get("nowYear");
        String yearT = formatter.format(nowYearDate);
        Date lastYearDate = (Date) yearMap.get("lastYear");
        String yearL = formatter.format(lastYearDate);

        year = (String) yearMap.get("year");

        List<Map<String,Object>> mapList = examAutoEvaluationDao.selectAllpcs();
        for (Map<String, Object> stringObjectMap : mapList) {
            String parentId = (String) stringObjectMap.get("parentId");
            String unitId = (String) stringObjectMap.get("unitId");
            String unitName = (String) stringObjectMap.get("unit");
            String parentIds = (String) stringObjectMap.get("parentIds");
            if ("34".equals(parentId) || "34".equals(unitId) || parentIds.contains(",34,")) {
                String unitCode = (String) stringObjectMap.get("unitCode");
                String userId = (String) stringObjectMap.get("userId");
                Integer number = examAutoEvaluationDao.selectWxxsajYear(yearL,yearT, unitCode);
                if(number != null && number != 0){
                    List<String> detail = examAutoEvaluationDao.selectDetails(yearL,yearT,unitCode);
                    StringBuilder nncDetails = new StringBuilder();
                    //南宁处
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");//考评对象 1 单位  2民警
                    examAutoEvaluation.setEvalType("3");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
                    examAutoEvaluation.setPeriod("2");//考评周期  1 月  2 年
                    examAutoEvaluation.setYear(year);//年份
                    examAutoEvaluation.setUnit(unitName);//单位名称
                    examAutoEvaluation.setUnitId(unitId);//单位id
                    examAutoEvaluation.setEvaluationId(userId);//被考评对象id
                    if(detail.size() > 0 && detail != null){
                        nncDetails.append(unitName).append(",具体案情如下：");
                        for (String s : detail) {
                            if(!"".equals(s) && s != null) {
                                nncDetails.append(s);
                            }else {
                                nncDetails.append(year).append("年").append(unitName).append("管辖内因防范工作不到位，线路上发生危及行车安全刑事案件");
                            }
                        }
                    }else {
                        nncDetails.append(year).append("年").append(unitName).append("管辖内因防范工作不到位，线路上发生危及行车安全刑事案件");
                    }
                    examAutoEvaluation.setDetails(nncDetails.toString());
                    examAutoEvaluation.setFromSys("警综平台");
                    examAutoEvaluation.setModel("2020年年度南宁公安处对派出所绩效考核扣分标准(业务部分)");//使用模板
                    examAutoEvaluation.setModelId("42882051f7214a7486258dfcb92a8d4d");//使用模板id
                    examAutoEvaluation.setOption("沿线治安动态情况掌握不及时，导致危及行车安全案事件发生的");//选择项
                    examAutoEvaluation.setOptionId("957f05c9a5e04884888d58524e9a8831");//选择项id
                    examAutoEvaluation.setScore("2");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","刑侦危及行车");
                    this.summaryStandard(examAutoEvaluation,2.0,nncDetails.toString());
                    this.save(examAutoEvaluation);
                }
            }

            if ("95".equals(parentId) || "95".equals(unitId) || parentIds.contains(",95,")) {
                String unitCode = (String) stringObjectMap.get("unitCode");
                String userId = (String) stringObjectMap.get("userId");
                Integer number = examAutoEvaluationDao.selectWxxsajYear(yearL,yearT, unitCode);
                if(number != null && number != 0){
                    List<String> detail = examAutoEvaluationDao.selectDetails(yearL,yearT,unitCode);
                    StringBuilder lzcDetails = new StringBuilder();
                    //南宁处
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");//考评对象 1 单位  2民警
                    examAutoEvaluation.setEvalType("3");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
                    examAutoEvaluation.setPeriod("2");//考评周期  1 月  2 年
                    examAutoEvaluation.setYear(year);//年份
                    examAutoEvaluation.setUnit(unitName);//单位名称
                    examAutoEvaluation.setUnitId(unitId);//单位id
                    examAutoEvaluation.setEvaluationId(userId);//被考评对象id
                    examAutoEvaluation.setFromSys("警综平台");
                    if(detail.size() > 0 && detail != null){
                        lzcDetails.append(unitName).append(",具体案情如下：");
                        for (String s : detail) {
                            if(!"".equals(s) && s != null) {
                                lzcDetails.append(s);
                            }else {
                                lzcDetails.append(year).append("年").append(unitName).append("管辖内因防范工作不到位，线路上发生危及行车安全刑事案件");
                            }
                        }
                    }else {
                        lzcDetails.append(year).append("年").append(unitName).append("管辖内因防范工作不到位，线路上发生危及行车安全刑事案件");
                    }
                    examAutoEvaluation.setDetails(lzcDetails.toString());
                    examAutoEvaluation.setModel("柳州处对派出所2020年年度绩效考核扣分标准（业务扣分项目）");//使用模板
                    examAutoEvaluation.setModelId("879292d1da7d4b3e9d33c8079aec8721");//使用模板id
                    examAutoEvaluation.setOption("因侦查打击措施或防范工作不到位，线路上发生危及行车安全刑事案件的");//选择项
                    examAutoEvaluation.setOptionId("3821e118b9b548a1a5909a42ecf7f47f");//选择项id
                    examAutoEvaluation.setScore("2");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","刑侦危及行车");
                    this.summaryStandard(examAutoEvaluation,2.0,lzcDetails.toString());
                    this.save(examAutoEvaluation);
                }
            }

            if ("156".equals(parentId) || "156".equals(unitId) || parentIds.contains(",156,")) {
                String unitCode = (String) stringObjectMap.get("unitCode");
                String userId = (String) stringObjectMap.get("userId");
                Integer number = examAutoEvaluationDao.selectWxxsajYear(yearL,yearT, unitCode);
                if(number != null && number != 0){
                    List<String> detail = examAutoEvaluationDao.selectDetails(yearL,yearT,unitCode);
                    StringBuilder bhcDetails = new StringBuilder();
                    //南宁处
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");//考评对象 1 单位  2民警
                    examAutoEvaluation.setEvalType("3");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
                    examAutoEvaluation.setPeriod("2");//考评周期  1 月  2 年
                    examAutoEvaluation.setYear(year);//年份
                    examAutoEvaluation.setUnit(unitName);//单位名称
                    examAutoEvaluation.setUnitId(unitId);//单位id
                    examAutoEvaluation.setEvaluationId(userId);//被考评对象id
                    examAutoEvaluation.setFromSys("警综平台");
                    examAutoEvaluation.setAssess("南宁处治安支队");//考核部门
                    examAutoEvaluation.setAssessId("aab30465f28547a4bdc69fd652ff8a4c");//考核部门id
                    examAutoEvaluation.setModel("2020年年度北海处对派出所、刑警三大队绩效考核扣分标准(业务部分)");//使用模板
                    examAutoEvaluation.setModelId("ebbe5612a316481586636fef3fb8840d");//使用模板id
                    examAutoEvaluation.setOption("沿线治安动态情况掌握不及时，导致危及行车安全案事件发生的");//选择项
                    examAutoEvaluation.setOptionId("397efc12d7164d988eb249f1770c230e");//选择项id
                    if(detail.size() > 0 && detail != null){
                        bhcDetails.append(unitName).append(",具体案情如下：");
                        for (String s : detail) {
                            if(!"".equals(s) && s != null) {
                                bhcDetails.append(s);
                            }else {
                                bhcDetails.append(year).append("年").append(unitName).append("管辖内因防范工作不到位，线路上发生危及行车安全刑事案件");
                            }
                        }
                    }else {
                        bhcDetails.append(year).append("年").append(unitName).append("管辖内因防范工作不到位，线路上发生危及行车安全刑事案件");
                    }
                    examAutoEvaluation.setDetails(bhcDetails.toString());
                    examAutoEvaluation.setScore("2");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","刑侦危及行车");
                    this.summaryStandard(examAutoEvaluation,2.0,bhcDetails.toString());
                    this.save(examAutoEvaluation);
                }
            }

        }

    }


    /**
     * 危及行车刑事案件
     *
     * 派出所管辖内因防范工作不到位，线路上发生危及行车安全刑事案件的，扣3分。
     *
     * 月度   处考队所
     * @param checkTime
     */
    @Transactional(readOnly = false)
    public void ckpcsWxxsajMonth(String checkTime){
        String year = checkTime.substring(0, 4);
        String month = checkTime.substring(checkTime.length() - 2);

        Map<String, String> time = monthTime(checkTime);
        String yearL = time.get("yearL");
        String yearT = time.get("yearT");


        List<Map<String,Object>> mapList = examAutoEvaluationDao.selectAllpcs();
        for (Map<String, Object> stringObjectMap : mapList) {
            String parentId = (String) stringObjectMap.get("parentId");
            String unitId = (String) stringObjectMap.get("unitId");
            String unitName = (String) stringObjectMap.get("unit");
            String parentIds = (String) stringObjectMap.get("parentIds");
            if ("34".equals(parentId) || "34".equals(unitId) || parentIds.contains(",34,")) {
                String unitCode = (String) stringObjectMap.get("unitCode");
                String userId = (String) stringObjectMap.get("userId");
                Integer number = examAutoEvaluationDao.selectWxxsajYear(yearL,yearT, unitCode);
                if(number != null && number != 0){
                    List<String> detail = examAutoEvaluationDao.selectDetails(yearL,yearT,unitCode);
                    StringBuilder nncDetails = new StringBuilder();
                    //南宁处
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");//考评对象 1 单位  2民警
                    examAutoEvaluation.setEvalType("3");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
                    examAutoEvaluation.setPeriod("1");//考评周期  1 月  2 年
                    examAutoEvaluation.setYear(year);//年份
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setUnit(unitName);//单位名称
                    examAutoEvaluation.setUnitId(unitId);//单位id
                    examAutoEvaluation.setEvaluationId(userId);//被考评对象id
                    if(detail.size() > 0 && detail != null){
                        nncDetails.append(unitName).append(",具体案情如下：");
                        for (String s : detail) {
                            if(!"".equals(s) && s != null) {
                                nncDetails.append(s);
                            }else {
                                nncDetails.append(year).append("年").append(month).append("月").append(unitName).append("管辖内因防范工作不到位，线路上发生危及行车安全刑事案件");
                            }
                        }
                    }else {
                        nncDetails.append(year).append("年").append(month).append("月").append(unitName).append("管辖内因防范工作不到位，线路上发生危及行车安全刑事案件");
                    }
                    examAutoEvaluation.setDetails(nncDetails.toString());
                    examAutoEvaluation.setFromSys("警综平台");
                    examAutoEvaluation.setModel("2020年月度南宁公安处对派出所绩效考核扣分标准(业务部分)");//使用模板
                    examAutoEvaluation.setModelId("aa392539a5bd4404b3fda4425c404c26");//使用模板id
                    examAutoEvaluation.setOption("因防范工作不到位，线路上发生危及行车安全刑事案件的");//选择项
                    examAutoEvaluation.setOptionId("bc162bf4c9c644e8bd8fbd5c644e4fcb");//选择项id
                    examAutoEvaluation.setScore("3");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"34","刑侦危及行车");
                    this.summaryStandard(examAutoEvaluation,3.0,nncDetails.toString());
                    this.save(examAutoEvaluation);
                }
            }

            if ("95".equals(parentId) || "95".equals(unitId) || parentIds.contains(",95,")) {
                String unitCode = (String) stringObjectMap.get("unitCode");
                String userId = (String) stringObjectMap.get("userId");
                Integer number = examAutoEvaluationDao.selectWxxsajYear(yearL,yearT, unitCode);
                if(number != null && number != 0){
                    List<String> detail = examAutoEvaluationDao.selectDetails(yearL,yearT,unitCode);
                    StringBuilder lzcDetails = new StringBuilder();
                    //南宁处
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");//考评对象 1 单位  2民警
                    examAutoEvaluation.setEvalType("3");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
                    examAutoEvaluation.setPeriod("1");//考评周期  1 月  2 年
                    examAutoEvaluation.setYear(year);//年份
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setUnit(unitName);//单位名称
                    examAutoEvaluation.setUnitId(unitId);//单位id
                    examAutoEvaluation.setEvaluationId(userId);//被考评对象id
                    if(detail.size() > 0 && detail != null){
                        lzcDetails.append(unitName).append(",具体案情如下：");
                        for (String s : detail) {
                            if(!"".equals(s) && s != null) {
                                lzcDetails.append(s);
                            }else {
                                lzcDetails.append(year).append("年").append(month).append("月").append(unitName).append("管辖内因防范工作不到位，线路上发生危及行车安全刑事案件");
                            }
                        }
                    }else {
                        lzcDetails.append(year).append("年").append(month).append("月").append(unitName).append("管辖内因防范工作不到位，线路上发生危及行车安全刑事案件");
                    }
                    examAutoEvaluation.setDetails(lzcDetails.toString());
                    examAutoEvaluation.setFromSys("警综平台");
                    examAutoEvaluation.setModel("柳州处对派出所2020年月度绩效考核扣分标准（业务扣分项目）");//使用模板
                    examAutoEvaluation.setModelId("5ce30118b21549d2a7d4628f72f7f3c6");//使用模板id
                    examAutoEvaluation.setOption("专项行动中，因侦查打击措施因防范工作不到位，线路上发生危及行车安全刑事案件的");//选择项
                    examAutoEvaluation.setOptionId("2b5619957d1442c4a84c982167e433e5");//选择项id
                    examAutoEvaluation.setScore("3");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"95","刑侦危及行车");
                    this.summaryStandard(examAutoEvaluation,3.0,lzcDetails.toString());
                    this.save(examAutoEvaluation);
                }
            }

            if ("156".equals(parentId) || "156".equals(unitId) || parentIds.contains(",156,")) {
                String unitCode = (String) stringObjectMap.get("unitCode");
                String userId = (String) stringObjectMap.get("userId");
                Integer number = examAutoEvaluationDao.selectWxxsajYear(yearL,yearT, unitCode);
                if(number != null && number != 0){
                    List<String> detail = examAutoEvaluationDao.selectDetails(yearL,yearT,unitCode);
                    StringBuilder bhcDetails = new StringBuilder();
                    //南宁处
                    ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
                    examAutoEvaluation.setType("1");//考评对象 1 单位  2民警
                    examAutoEvaluation.setEvalType("3");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
                    examAutoEvaluation.setPeriod("1");//考评周期  1 月  2 年
                    examAutoEvaluation.setYear(year);//年份
                    examAutoEvaluation.setMonth(month);
                    examAutoEvaluation.setUnit(unitName);//单位名称
                    examAutoEvaluation.setUnitId(unitId);//单位id
                    examAutoEvaluation.setEvaluationId(userId);//被考评对象id
                    if(detail.size() > 0 && detail != null){
                        bhcDetails.append(unitName).append(",具体案情如下：");
                        for (String s : detail) {
                            if(!"".equals(s) && s != null) {
                                bhcDetails.append(s);
                            }else {
                                bhcDetails.append(year).append("年").append(month).append("月").append(unitName).append("管辖内因防范工作不到位，线路上发生危及行车安全刑事案件");
                            }
                        }
                    }else {
                        bhcDetails.append(year).append("年").append(month).append("月").append(unitName).append("管辖内因防范工作不到位，线路上发生危及行车安全刑事案件");
                    }
                    examAutoEvaluation.setDetails(bhcDetails.toString());
                    examAutoEvaluation.setFromSys("警综平台");
                    examAutoEvaluation.setModel("2020年月度北海处对派出所、刑警三大队扣分标准(业务部分)");//使用模板
                    examAutoEvaluation.setModelId("a9e6fbb8773d470d897319cd6f17fa2b");//使用模板id
                    examAutoEvaluation.setOption("因防范工作不到位，线路上发生危及行车安全刑事案件的");//选择项
                    examAutoEvaluation.setOptionId("abf48cab8fb349d18db81d6f6e4263bd");//选择项id
                    examAutoEvaluation.setScore("3");
                    examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,"156","刑侦危及行车");
                    this.summaryStandard(examAutoEvaluation,3.0,bhcDetails.toString());
                    this.save(examAutoEvaluation);
                }
            }

        }

    }

    /**
     *  沿线治安动态情况掌握不及时，导致危及行车安全案事件发生的，扣副处长3分。(处绩效办推)
     *
     *  月度  公安处领导
     */
    @Transactional(readOnly = false)
    public void gacldWxxsajMonth(String checkTime){
        String chuRoleId = "230e916609a349e68f7186f784e11419";

        ExamWorkflowDefine define = new ExamWorkflowDefine();
        define.setName(chuRoleId);
        List<User> chuList = examWorkflowSegmentsDefineService.queryPoliceDatas(define);

        String year = checkTime.substring(0, 4);
        String month = checkTime.substring(checkTime.length() - 2);

        Map<String, String> timeMap = this.monthTime(checkTime);
        String yearL = timeMap.get("yearL");
        String yearT = timeMap.get("yearT");


        List<String> nnclistCode = examAutoEvaluationDao.selectChuUnit("34");

        Integer nncnumber = examAutoEvaluationDao.selectWxxsajListYear(yearL,yearT, nnclistCode);
        List<String> nncdetail = examAutoEvaluationDao.selectDetailsList(yearL,yearT,nnclistCode);
        if(nncnumber > 0){
            StringBuilder details = new StringBuilder();
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("2");//考评对象 1 单位  2民警
            examAutoEvaluation.setEvalType("5");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
            examAutoEvaluation.setPeriod("1");//考评周期  1 月  2 年
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setMonth(month);
            for (String s : nncdetail) {
                details.append(s);
            }
            examAutoEvaluation.setDetails(details.toString());
            examAutoEvaluation.setFromSys("警综平台");
            examAutoEvaluation.setModel("2020年月度对公安处副处长岗位绩效考核扣分标准");
            examAutoEvaluation.setModelId("12d8d2d08e9648e481050622aa364a90");
            examAutoEvaluation.setOption("沿线治安动态情况掌握不及时，导致危及行车安全案事件发生的");
            examAutoEvaluation.setOptionId("fd73f1f7fc9d48c0814583e729771a88");
            examAutoEvaluation.setScore("3");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刑侦危及行车");
            //所有处领导  相应处
            for (User user : chuList) {
                if("34".equals(user.getOffice().getId())){
                    examAutoEvaluation.setId("");
                    examAutoEvaluation.setIsNewRecord(false);
                    examAutoEvaluation.setName(user.getName());
                    examAutoEvaluation.setIdNumber(user.getNo());
                    examAutoEvaluation.setEvaluationId(user.getId());
                    this.summaryStandard(examAutoEvaluation,3.0,details.toString());
                    this.save(examAutoEvaluation);
                }
            }
        }

        List<String> lzclistCode = examAutoEvaluationDao.selectChuUnit("95");

        Integer lzcnumber = examAutoEvaluationDao.selectWxxsajListYear(yearL,yearT, lzclistCode);
        List<String> lzcdetail = examAutoEvaluationDao.selectDetailsList(yearL,yearT,lzclistCode);
        if(lzcnumber > 0){
            StringBuilder details = new StringBuilder();
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("2");//考评对象 1 单位  2民警
            examAutoEvaluation.setEvalType("5");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
            examAutoEvaluation.setPeriod("1");//考评周期  1 月  2 年
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setMonth(month);
            for (String s : lzcdetail) {
                details.append(s);
            }
            examAutoEvaluation.setDetails(details.toString());
            examAutoEvaluation.setFromSys("警综平台");
            examAutoEvaluation.setModel("2020年月度对公安处副处长岗位绩效考核扣分标准");
            examAutoEvaluation.setModelId("12d8d2d08e9648e481050622aa364a90");
            examAutoEvaluation.setOption("沿线治安动态情况掌握不及时，导致危及行车安全案事件发生的");
            examAutoEvaluation.setOptionId("fd73f1f7fc9d48c0814583e729771a88");
            examAutoEvaluation.setScore("3");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刑侦危及行车");
            //所有处领导  相应处
            for (User user : chuList) {
                if("95".equals(user.getOffice().getId())){
                    examAutoEvaluation.setId("");
                    examAutoEvaluation.setIsNewRecord(false);
                    examAutoEvaluation.setName(user.getName());
                    examAutoEvaluation.setIdNumber(user.getNo());
                    examAutoEvaluation.setEvaluationId(user.getId());
                    this.summaryStandard(examAutoEvaluation,3.0,details.toString());
                    this.save(examAutoEvaluation);
                }
            }
        }


        List<String> bhclistCode = examAutoEvaluationDao.selectChuUnit("156");

        Integer bhcnumber = examAutoEvaluationDao.selectWxxsajListYear(yearL,yearT, bhclistCode);
        List<String> bhcdetail = examAutoEvaluationDao.selectDetailsList(yearL,yearT,bhclistCode);
        if(bhcnumber > 0){
            StringBuilder details = new StringBuilder();
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("2");//考评对象 1 单位  2民警
            examAutoEvaluation.setEvalType("5");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
            examAutoEvaluation.setPeriod("1");//考评周期  1 月  2 年
            examAutoEvaluation.setYear(year);
            examAutoEvaluation.setMonth(month);
            for (String s : bhcdetail) {
                details.append(s);
            }
            examAutoEvaluation.setDetails(details.toString());
            examAutoEvaluation.setFromSys("警综平台");
            examAutoEvaluation.setModel("2020年月度对公安处副处长岗位绩效考核扣分标准");
            examAutoEvaluation.setModelId("12d8d2d08e9648e481050622aa364a90");
            examAutoEvaluation.setOption("沿线治安动态情况掌握不及时，导致危及行车安全案事件发生的");
            examAutoEvaluation.setOptionId("fd73f1f7fc9d48c0814583e729771a88");
            examAutoEvaluation.setScore("3");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刑侦危及行车");
            //所有处领导  相应处
            for (User user : chuList) {
                if("156".equals(user.getOffice().getId())){
                    examAutoEvaluation.setId("");
                    examAutoEvaluation.setIsNewRecord(false);
                    examAutoEvaluation.setName(user.getName());
                    examAutoEvaluation.setIdNumber(user.getNo());
                    examAutoEvaluation.setEvaluationId(user.getId());
                    this.summaryStandard(examAutoEvaluation,3.0,details.toString());
                    this.save(examAutoEvaluation);
                }
            }
        }


    }


    /**
     *  沿线治安动态情况掌握不及时，导致危及行车安全案事件发生的，扣副处长3分。(处绩效办推)
     *
     *  年度  公安处领导
*/
    @Transactional(readOnly = false)
    public void gacldWxxsajYear(String year) {
        String chuRoleId = "230e916609a349e68f7186f784e11419";

        ExamWorkflowDefine define = new ExamWorkflowDefine();
        define.setName(chuRoleId);
        List<User> chuList = examWorkflowSegmentsDefineService.queryPoliceDatas(define);

        Map<String,Object> yearMap = this.getTimeQuantumByYear(year);
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");

        Date nowYearDate = (Date) yearMap.get("nowYear");
        String yearT = formatter.format(nowYearDate);
        Date lastYearDate = (Date) yearMap.get("lastYear");
        String yearL = formatter.format(lastYearDate);

        year = (String) yearMap.get("year");

        List<String> nnclistCode = examAutoEvaluationDao.selectChuUnit("34");

        Integer nncnumber = examAutoEvaluationDao.selectWxxsajListYear(yearL,yearT, nnclistCode);
        List<String> nncdetail = examAutoEvaluationDao.selectDetailsList(yearL,yearT,nnclistCode);
        if(nncnumber > 0){
            StringBuilder details = new StringBuilder();
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("2");//考评对象 1 单位  2民警
            examAutoEvaluation.setEvalType("5");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
            examAutoEvaluation.setPeriod("2");//考评周期  1 月  2 年
            examAutoEvaluation.setYear(year);
            for (String s : nncdetail) {
                details.append(s);
            }
            examAutoEvaluation.setDetails(details.toString());
            examAutoEvaluation.setFromSys("警综平台");
            examAutoEvaluation.setModel("2020年年度对公安处副处长岗位绩效考核扣分标准");
            examAutoEvaluation.setModelId("8a960a6f293d433aba9b5785b06b451a");
            examAutoEvaluation.setOption("沿线治安动态情况掌握不及时，导致危及行车安全案事件发生的");
            examAutoEvaluation.setOptionId("a66c0ea4cf3a4546aeb40b829cdabc43");
            examAutoEvaluation.setScore("3");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刑侦危及行车");
            //所有处领导  相应处
            for (User user : chuList) {
                if("34".equals(user.getOffice().getId())){
                    examAutoEvaluation.setId("");
                    examAutoEvaluation.setIsNewRecord(false);
                    examAutoEvaluation.setName(user.getName());
                    examAutoEvaluation.setIdNumber(user.getNo());
                    examAutoEvaluation.setEvaluationId(user.getId());
                    this.summaryStandard(examAutoEvaluation,3.0,details.toString());
                    this.save(examAutoEvaluation);
                }
            }
        }

        List<String> lzclistCode = examAutoEvaluationDao.selectChuUnit("95");

        Integer lzcnumber = examAutoEvaluationDao.selectWxxsajListYear(yearL,yearT, lzclistCode);
        List<String> lzcdetail = examAutoEvaluationDao.selectDetailsList(yearL,yearT,lzclistCode);
        if(lzcnumber > 0){
            StringBuilder details = new StringBuilder();
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("2");//考评对象 1 单位  2民警
            examAutoEvaluation.setEvalType("5");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
            examAutoEvaluation.setPeriod("2");//考评周期  1 月  2 年
            examAutoEvaluation.setYear(year);
            for (String s : lzcdetail) {
                details.append(s);
            }
            examAutoEvaluation.setDetails(details.toString());
            examAutoEvaluation.setFromSys("警综平台");
            examAutoEvaluation.setModel("2020年年度对公安处副处长岗位绩效考核扣分标准");
            examAutoEvaluation.setModelId("8a960a6f293d433aba9b5785b06b451a");
            examAutoEvaluation.setOption("沿线治安动态情况掌握不及时，导致危及行车安全案事件发生的");
            examAutoEvaluation.setOptionId("a66c0ea4cf3a4546aeb40b829cdabc43");
            examAutoEvaluation.setScore("3");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刑侦危及行车");
            //所有处领导  相应处
            for (User user : chuList) {
                if("95".equals(user.getOffice().getId())){
                    examAutoEvaluation.setId("");
                    examAutoEvaluation.setIsNewRecord(false);
                    examAutoEvaluation.setName(user.getName());
                    examAutoEvaluation.setIdNumber(user.getNo());
                    examAutoEvaluation.setEvaluationId(user.getId());
                    this.summaryStandard(examAutoEvaluation,3.0,details.toString());
                    this.save(examAutoEvaluation);
                }
            }
        }


        List<String> bhclistCode = examAutoEvaluationDao.selectChuUnit("156");

        Integer bhcnumber = examAutoEvaluationDao.selectWxxsajListYear(yearL,yearT, bhclistCode);
        List<String> bhcdetail = examAutoEvaluationDao.selectDetailsList(yearL,yearT,bhclistCode);
        if(bhcnumber > 0){
            StringBuilder details = new StringBuilder();
            ExamAutoEvaluation examAutoEvaluation = new ExamAutoEvaluation();
            examAutoEvaluation.setType("2");//考评对象 1 单位  2民警
            examAutoEvaluation.setEvalType("5");//考评类别 1 局考处  2 局考局机关  3 处考队所  4处考处机关 5 处领导考评 6中基层领导  7 民警
            examAutoEvaluation.setPeriod("2");//考评周期  1 月  2 年
            examAutoEvaluation.setYear(year);
            for (String s : bhcdetail) {
                details.append(s);
            }
            examAutoEvaluation.setDetails(details.toString());
            examAutoEvaluation.setFromSys("警综平台");
            examAutoEvaluation.setModel("2020年年度对公安处副处长岗位绩效考核扣分标准");
            examAutoEvaluation.setModelId("8a960a6f293d433aba9b5785b06b451a");
            examAutoEvaluation.setOption("沿线治安动态情况掌握不及时，导致危及行车安全案事件发生的");
            examAutoEvaluation.setOptionId("a66c0ea4cf3a4546aeb40b829cdabc43");
            examAutoEvaluation.setScore("3");
            examAutoStandardRelevanceService.setExamAutoModelOption(examAutoEvaluation,null,"刑侦危及行车");
            //所有处领导  相应处
            for (User user : chuList) {
                if("156".equals(user.getOffice().getId())){
                    examAutoEvaluation.setId("");
                    examAutoEvaluation.setIsNewRecord(false);
                    examAutoEvaluation.setName(user.getName());
                    examAutoEvaluation.setIdNumber(user.getNo());
                    examAutoEvaluation.setEvaluationId(user.getId());
                    this.summaryStandard(examAutoEvaluation,3.0,details.toString());
                    this.save(examAutoEvaluation);
                }
            }
        }


    }





}